
LoRa-T.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006f90  08000110  08000110  00001110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000780  080070a0  080070a0  000080a0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08007820  08007820  000091d0  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08007820  08007820  00008820  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08007828  08007828  000091d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08007828  08007828  00008828  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800782c  0800782c  0000882c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001d0  20000000  08007830  00009000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000380  200001d0  08007a00  000091d0  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000550  08007a00  00009550  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000091d0  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002d39  00000000  00000000  000091f9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000eed  00000000  00000000  0000bf32  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000400  00000000  00000000  0000ce20  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000002d6  00000000  00000000  0000d220  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00017696  00000000  00000000  0000d4f6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000057bf  00000000  00000000  00024b8c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00081a42  00000000  00000000  0002a34b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000abd8d  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002474  00000000  00000000  000abdd0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004e  00000000  00000000  000ae244  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	@ (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	@ (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200001d0 	.word	0x200001d0
 800012c:	00000000 	.word	0x00000000
 8000130:	08007088 	.word	0x08007088

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	@ (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	@ (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	@ (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200001d4 	.word	0x200001d4
 800014c:	08007088 	.word	0x08007088

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <__aeabi_drsub>:
 8000160:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000164:	e002      	b.n	800016c <__adddf3>
 8000166:	bf00      	nop

08000168 <__aeabi_dsub>:
 8000168:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800016c <__adddf3>:
 800016c:	b530      	push	{r4, r5, lr}
 800016e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000172:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000176:	ea94 0f05 	teq	r4, r5
 800017a:	bf08      	it	eq
 800017c:	ea90 0f02 	teqeq	r0, r2
 8000180:	bf1f      	itttt	ne
 8000182:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000186:	ea55 0c02 	orrsne.w	ip, r5, r2
 800018a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800018e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000192:	f000 80e2 	beq.w	800035a <__adddf3+0x1ee>
 8000196:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800019a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800019e:	bfb8      	it	lt
 80001a0:	426d      	neglt	r5, r5
 80001a2:	dd0c      	ble.n	80001be <__adddf3+0x52>
 80001a4:	442c      	add	r4, r5
 80001a6:	ea80 0202 	eor.w	r2, r0, r2
 80001aa:	ea81 0303 	eor.w	r3, r1, r3
 80001ae:	ea82 0000 	eor.w	r0, r2, r0
 80001b2:	ea83 0101 	eor.w	r1, r3, r1
 80001b6:	ea80 0202 	eor.w	r2, r0, r2
 80001ba:	ea81 0303 	eor.w	r3, r1, r3
 80001be:	2d36      	cmp	r5, #54	@ 0x36
 80001c0:	bf88      	it	hi
 80001c2:	bd30      	pophi	{r4, r5, pc}
 80001c4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80001c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001cc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80001d0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001d4:	d002      	beq.n	80001dc <__adddf3+0x70>
 80001d6:	4240      	negs	r0, r0
 80001d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001dc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 80001e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001e4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001e8:	d002      	beq.n	80001f0 <__adddf3+0x84>
 80001ea:	4252      	negs	r2, r2
 80001ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001f0:	ea94 0f05 	teq	r4, r5
 80001f4:	f000 80a7 	beq.w	8000346 <__adddf3+0x1da>
 80001f8:	f1a4 0401 	sub.w	r4, r4, #1
 80001fc:	f1d5 0e20 	rsbs	lr, r5, #32
 8000200:	db0d      	blt.n	800021e <__adddf3+0xb2>
 8000202:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000206:	fa22 f205 	lsr.w	r2, r2, r5
 800020a:	1880      	adds	r0, r0, r2
 800020c:	f141 0100 	adc.w	r1, r1, #0
 8000210:	fa03 f20e 	lsl.w	r2, r3, lr
 8000214:	1880      	adds	r0, r0, r2
 8000216:	fa43 f305 	asr.w	r3, r3, r5
 800021a:	4159      	adcs	r1, r3
 800021c:	e00e      	b.n	800023c <__adddf3+0xd0>
 800021e:	f1a5 0520 	sub.w	r5, r5, #32
 8000222:	f10e 0e20 	add.w	lr, lr, #32
 8000226:	2a01      	cmp	r2, #1
 8000228:	fa03 fc0e 	lsl.w	ip, r3, lr
 800022c:	bf28      	it	cs
 800022e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000232:	fa43 f305 	asr.w	r3, r3, r5
 8000236:	18c0      	adds	r0, r0, r3
 8000238:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800023c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000240:	d507      	bpl.n	8000252 <__adddf3+0xe6>
 8000242:	f04f 0e00 	mov.w	lr, #0
 8000246:	f1dc 0c00 	rsbs	ip, ip, #0
 800024a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800024e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000252:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000256:	d31b      	bcc.n	8000290 <__adddf3+0x124>
 8000258:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800025c:	d30c      	bcc.n	8000278 <__adddf3+0x10c>
 800025e:	0849      	lsrs	r1, r1, #1
 8000260:	ea5f 0030 	movs.w	r0, r0, rrx
 8000264:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000268:	f104 0401 	add.w	r4, r4, #1
 800026c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000270:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000274:	f080 809a 	bcs.w	80003ac <__adddf3+0x240>
 8000278:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800027c:	bf08      	it	eq
 800027e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000282:	f150 0000 	adcs.w	r0, r0, #0
 8000286:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800028a:	ea41 0105 	orr.w	r1, r1, r5
 800028e:	bd30      	pop	{r4, r5, pc}
 8000290:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000294:	4140      	adcs	r0, r0
 8000296:	eb41 0101 	adc.w	r1, r1, r1
 800029a:	3c01      	subs	r4, #1
 800029c:	bf28      	it	cs
 800029e:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80002a2:	d2e9      	bcs.n	8000278 <__adddf3+0x10c>
 80002a4:	f091 0f00 	teq	r1, #0
 80002a8:	bf04      	itt	eq
 80002aa:	4601      	moveq	r1, r0
 80002ac:	2000      	moveq	r0, #0
 80002ae:	fab1 f381 	clz	r3, r1
 80002b2:	bf08      	it	eq
 80002b4:	3320      	addeq	r3, #32
 80002b6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ba:	f1b3 0220 	subs.w	r2, r3, #32
 80002be:	da0c      	bge.n	80002da <__adddf3+0x16e>
 80002c0:	320c      	adds	r2, #12
 80002c2:	dd08      	ble.n	80002d6 <__adddf3+0x16a>
 80002c4:	f102 0c14 	add.w	ip, r2, #20
 80002c8:	f1c2 020c 	rsb	r2, r2, #12
 80002cc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002d0:	fa21 f102 	lsr.w	r1, r1, r2
 80002d4:	e00c      	b.n	80002f0 <__adddf3+0x184>
 80002d6:	f102 0214 	add.w	r2, r2, #20
 80002da:	bfd8      	it	le
 80002dc:	f1c2 0c20 	rsble	ip, r2, #32
 80002e0:	fa01 f102 	lsl.w	r1, r1, r2
 80002e4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002e8:	bfdc      	itt	le
 80002ea:	ea41 010c 	orrle.w	r1, r1, ip
 80002ee:	4090      	lslle	r0, r2
 80002f0:	1ae4      	subs	r4, r4, r3
 80002f2:	bfa2      	ittt	ge
 80002f4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002f8:	4329      	orrge	r1, r5
 80002fa:	bd30      	popge	{r4, r5, pc}
 80002fc:	ea6f 0404 	mvn.w	r4, r4
 8000300:	3c1f      	subs	r4, #31
 8000302:	da1c      	bge.n	800033e <__adddf3+0x1d2>
 8000304:	340c      	adds	r4, #12
 8000306:	dc0e      	bgt.n	8000326 <__adddf3+0x1ba>
 8000308:	f104 0414 	add.w	r4, r4, #20
 800030c:	f1c4 0220 	rsb	r2, r4, #32
 8000310:	fa20 f004 	lsr.w	r0, r0, r4
 8000314:	fa01 f302 	lsl.w	r3, r1, r2
 8000318:	ea40 0003 	orr.w	r0, r0, r3
 800031c:	fa21 f304 	lsr.w	r3, r1, r4
 8000320:	ea45 0103 	orr.w	r1, r5, r3
 8000324:	bd30      	pop	{r4, r5, pc}
 8000326:	f1c4 040c 	rsb	r4, r4, #12
 800032a:	f1c4 0220 	rsb	r2, r4, #32
 800032e:	fa20 f002 	lsr.w	r0, r0, r2
 8000332:	fa01 f304 	lsl.w	r3, r1, r4
 8000336:	ea40 0003 	orr.w	r0, r0, r3
 800033a:	4629      	mov	r1, r5
 800033c:	bd30      	pop	{r4, r5, pc}
 800033e:	fa21 f004 	lsr.w	r0, r1, r4
 8000342:	4629      	mov	r1, r5
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f094 0f00 	teq	r4, #0
 800034a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800034e:	bf06      	itte	eq
 8000350:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000354:	3401      	addeq	r4, #1
 8000356:	3d01      	subne	r5, #1
 8000358:	e74e      	b.n	80001f8 <__adddf3+0x8c>
 800035a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800035e:	bf18      	it	ne
 8000360:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000364:	d029      	beq.n	80003ba <__adddf3+0x24e>
 8000366:	ea94 0f05 	teq	r4, r5
 800036a:	bf08      	it	eq
 800036c:	ea90 0f02 	teqeq	r0, r2
 8000370:	d005      	beq.n	800037e <__adddf3+0x212>
 8000372:	ea54 0c00 	orrs.w	ip, r4, r0
 8000376:	bf04      	itt	eq
 8000378:	4619      	moveq	r1, r3
 800037a:	4610      	moveq	r0, r2
 800037c:	bd30      	pop	{r4, r5, pc}
 800037e:	ea91 0f03 	teq	r1, r3
 8000382:	bf1e      	ittt	ne
 8000384:	2100      	movne	r1, #0
 8000386:	2000      	movne	r0, #0
 8000388:	bd30      	popne	{r4, r5, pc}
 800038a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800038e:	d105      	bne.n	800039c <__adddf3+0x230>
 8000390:	0040      	lsls	r0, r0, #1
 8000392:	4149      	adcs	r1, r1
 8000394:	bf28      	it	cs
 8000396:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 800039a:	bd30      	pop	{r4, r5, pc}
 800039c:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80003a0:	bf3c      	itt	cc
 80003a2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80003a6:	bd30      	popcc	{r4, r5, pc}
 80003a8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003ac:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80003b0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80003b4:	f04f 0000 	mov.w	r0, #0
 80003b8:	bd30      	pop	{r4, r5, pc}
 80003ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003be:	bf1a      	itte	ne
 80003c0:	4619      	movne	r1, r3
 80003c2:	4610      	movne	r0, r2
 80003c4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003c8:	bf1c      	itt	ne
 80003ca:	460b      	movne	r3, r1
 80003cc:	4602      	movne	r2, r0
 80003ce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003d2:	bf06      	itte	eq
 80003d4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003d8:	ea91 0f03 	teqeq	r1, r3
 80003dc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 80003e0:	bd30      	pop	{r4, r5, pc}
 80003e2:	bf00      	nop

080003e4 <__aeabi_ui2d>:
 80003e4:	f090 0f00 	teq	r0, #0
 80003e8:	bf04      	itt	eq
 80003ea:	2100      	moveq	r1, #0
 80003ec:	4770      	bxeq	lr
 80003ee:	b530      	push	{r4, r5, lr}
 80003f0:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80003f4:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80003f8:	f04f 0500 	mov.w	r5, #0
 80003fc:	f04f 0100 	mov.w	r1, #0
 8000400:	e750      	b.n	80002a4 <__adddf3+0x138>
 8000402:	bf00      	nop

08000404 <__aeabi_i2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000418:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800041c:	bf48      	it	mi
 800041e:	4240      	negmi	r0, r0
 8000420:	f04f 0100 	mov.w	r1, #0
 8000424:	e73e      	b.n	80002a4 <__adddf3+0x138>
 8000426:	bf00      	nop

08000428 <__aeabi_f2d>:
 8000428:	0042      	lsls	r2, r0, #1
 800042a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800042e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000432:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000436:	bf1f      	itttt	ne
 8000438:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800043c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000440:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000444:	4770      	bxne	lr
 8000446:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800044a:	bf08      	it	eq
 800044c:	4770      	bxeq	lr
 800044e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000452:	bf04      	itt	eq
 8000454:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000458:	4770      	bxeq	lr
 800045a:	b530      	push	{r4, r5, lr}
 800045c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000460:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000464:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000468:	e71c      	b.n	80002a4 <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_ul2d>:
 800046c:	ea50 0201 	orrs.w	r2, r0, r1
 8000470:	bf08      	it	eq
 8000472:	4770      	bxeq	lr
 8000474:	b530      	push	{r4, r5, lr}
 8000476:	f04f 0500 	mov.w	r5, #0
 800047a:	e00a      	b.n	8000492 <__aeabi_l2d+0x16>

0800047c <__aeabi_l2d>:
 800047c:	ea50 0201 	orrs.w	r2, r0, r1
 8000480:	bf08      	it	eq
 8000482:	4770      	bxeq	lr
 8000484:	b530      	push	{r4, r5, lr}
 8000486:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 800048a:	d502      	bpl.n	8000492 <__aeabi_l2d+0x16>
 800048c:	4240      	negs	r0, r0
 800048e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000492:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000496:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800049a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800049e:	f43f aed8 	beq.w	8000252 <__adddf3+0xe6>
 80004a2:	f04f 0203 	mov.w	r2, #3
 80004a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004aa:	bf18      	it	ne
 80004ac:	3203      	addne	r2, #3
 80004ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004b2:	bf18      	it	ne
 80004b4:	3203      	addne	r2, #3
 80004b6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004ba:	f1c2 0320 	rsb	r3, r2, #32
 80004be:	fa00 fc03 	lsl.w	ip, r0, r3
 80004c2:	fa20 f002 	lsr.w	r0, r0, r2
 80004c6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ca:	ea40 000e 	orr.w	r0, r0, lr
 80004ce:	fa21 f102 	lsr.w	r1, r1, r2
 80004d2:	4414      	add	r4, r2
 80004d4:	e6bd      	b.n	8000252 <__adddf3+0xe6>
 80004d6:	bf00      	nop

080004d8 <__aeabi_dmul>:
 80004d8:	b570      	push	{r4, r5, r6, lr}
 80004da:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80004de:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80004e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004e6:	bf1d      	ittte	ne
 80004e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004ec:	ea94 0f0c 	teqne	r4, ip
 80004f0:	ea95 0f0c 	teqne	r5, ip
 80004f4:	f000 f8de 	bleq	80006b4 <__aeabi_dmul+0x1dc>
 80004f8:	442c      	add	r4, r5
 80004fa:	ea81 0603 	eor.w	r6, r1, r3
 80004fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000502:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000506:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800050a:	bf18      	it	ne
 800050c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000510:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000514:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000518:	d038      	beq.n	800058c <__aeabi_dmul+0xb4>
 800051a:	fba0 ce02 	umull	ip, lr, r0, r2
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000526:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800052a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800052e:	f04f 0600 	mov.w	r6, #0
 8000532:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000536:	f09c 0f00 	teq	ip, #0
 800053a:	bf18      	it	ne
 800053c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000540:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000544:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000548:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800054c:	d204      	bcs.n	8000558 <__aeabi_dmul+0x80>
 800054e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000552:	416d      	adcs	r5, r5
 8000554:	eb46 0606 	adc.w	r6, r6, r6
 8000558:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800055c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000560:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000564:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000568:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800056c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000570:	bf88      	it	hi
 8000572:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000576:	d81e      	bhi.n	80005b6 <__aeabi_dmul+0xde>
 8000578:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800057c:	bf08      	it	eq
 800057e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000582:	f150 0000 	adcs.w	r0, r0, #0
 8000586:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800058a:	bd70      	pop	{r4, r5, r6, pc}
 800058c:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000590:	ea46 0101 	orr.w	r1, r6, r1
 8000594:	ea40 0002 	orr.w	r0, r0, r2
 8000598:	ea81 0103 	eor.w	r1, r1, r3
 800059c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005a0:	bfc2      	ittt	gt
 80005a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	popgt	{r4, r5, r6, pc}
 80005ac:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80005b0:	f04f 0e00 	mov.w	lr, #0
 80005b4:	3c01      	subs	r4, #1
 80005b6:	f300 80ab 	bgt.w	8000710 <__aeabi_dmul+0x238>
 80005ba:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80005be:	bfde      	ittt	le
 80005c0:	2000      	movle	r0, #0
 80005c2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80005c6:	bd70      	pople	{r4, r5, r6, pc}
 80005c8:	f1c4 0400 	rsb	r4, r4, #0
 80005cc:	3c20      	subs	r4, #32
 80005ce:	da35      	bge.n	800063c <__aeabi_dmul+0x164>
 80005d0:	340c      	adds	r4, #12
 80005d2:	dc1b      	bgt.n	800060c <__aeabi_dmul+0x134>
 80005d4:	f104 0414 	add.w	r4, r4, #20
 80005d8:	f1c4 0520 	rsb	r5, r4, #32
 80005dc:	fa00 f305 	lsl.w	r3, r0, r5
 80005e0:	fa20 f004 	lsr.w	r0, r0, r4
 80005e4:	fa01 f205 	lsl.w	r2, r1, r5
 80005e8:	ea40 0002 	orr.w	r0, r0, r2
 80005ec:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 80005f0:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80005f8:	fa21 f604 	lsr.w	r6, r1, r4
 80005fc:	eb42 0106 	adc.w	r1, r2, r6
 8000600:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000604:	bf08      	it	eq
 8000606:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800060a:	bd70      	pop	{r4, r5, r6, pc}
 800060c:	f1c4 040c 	rsb	r4, r4, #12
 8000610:	f1c4 0520 	rsb	r5, r4, #32
 8000614:	fa00 f304 	lsl.w	r3, r0, r4
 8000618:	fa20 f005 	lsr.w	r0, r0, r5
 800061c:	fa01 f204 	lsl.w	r2, r1, r4
 8000620:	ea40 0002 	orr.w	r0, r0, r2
 8000624:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000628:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800062c:	f141 0100 	adc.w	r1, r1, #0
 8000630:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000634:	bf08      	it	eq
 8000636:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800063a:	bd70      	pop	{r4, r5, r6, pc}
 800063c:	f1c4 0520 	rsb	r5, r4, #32
 8000640:	fa00 f205 	lsl.w	r2, r0, r5
 8000644:	ea4e 0e02 	orr.w	lr, lr, r2
 8000648:	fa20 f304 	lsr.w	r3, r0, r4
 800064c:	fa01 f205 	lsl.w	r2, r1, r5
 8000650:	ea43 0302 	orr.w	r3, r3, r2
 8000654:	fa21 f004 	lsr.w	r0, r1, r4
 8000658:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800065c:	fa21 f204 	lsr.w	r2, r1, r4
 8000660:	ea20 0002 	bic.w	r0, r0, r2
 8000664:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000668:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800066c:	bf08      	it	eq
 800066e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	f094 0f00 	teq	r4, #0
 8000678:	d10f      	bne.n	800069a <__aeabi_dmul+0x1c2>
 800067a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800067e:	0040      	lsls	r0, r0, #1
 8000680:	eb41 0101 	adc.w	r1, r1, r1
 8000684:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000688:	bf08      	it	eq
 800068a:	3c01      	subeq	r4, #1
 800068c:	d0f7      	beq.n	800067e <__aeabi_dmul+0x1a6>
 800068e:	ea41 0106 	orr.w	r1, r1, r6
 8000692:	f095 0f00 	teq	r5, #0
 8000696:	bf18      	it	ne
 8000698:	4770      	bxne	lr
 800069a:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 800069e:	0052      	lsls	r2, r2, #1
 80006a0:	eb43 0303 	adc.w	r3, r3, r3
 80006a4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3d01      	subeq	r5, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1c6>
 80006ae:	ea43 0306 	orr.w	r3, r3, r6
 80006b2:	4770      	bx	lr
 80006b4:	ea94 0f0c 	teq	r4, ip
 80006b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006bc:	bf18      	it	ne
 80006be:	ea95 0f0c 	teqne	r5, ip
 80006c2:	d00c      	beq.n	80006de <__aeabi_dmul+0x206>
 80006c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006c8:	bf18      	it	ne
 80006ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ce:	d1d1      	bne.n	8000674 <__aeabi_dmul+0x19c>
 80006d0:	ea81 0103 	eor.w	r1, r1, r3
 80006d4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006d8:	f04f 0000 	mov.w	r0, #0
 80006dc:	bd70      	pop	{r4, r5, r6, pc}
 80006de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e2:	bf06      	itte	eq
 80006e4:	4610      	moveq	r0, r2
 80006e6:	4619      	moveq	r1, r3
 80006e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ec:	d019      	beq.n	8000722 <__aeabi_dmul+0x24a>
 80006ee:	ea94 0f0c 	teq	r4, ip
 80006f2:	d102      	bne.n	80006fa <__aeabi_dmul+0x222>
 80006f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80006f8:	d113      	bne.n	8000722 <__aeabi_dmul+0x24a>
 80006fa:	ea95 0f0c 	teq	r5, ip
 80006fe:	d105      	bne.n	800070c <__aeabi_dmul+0x234>
 8000700:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000704:	bf1c      	itt	ne
 8000706:	4610      	movne	r0, r2
 8000708:	4619      	movne	r1, r3
 800070a:	d10a      	bne.n	8000722 <__aeabi_dmul+0x24a>
 800070c:	ea81 0103 	eor.w	r1, r1, r3
 8000710:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000718:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800071c:	f04f 0000 	mov.w	r0, #0
 8000720:	bd70      	pop	{r4, r5, r6, pc}
 8000722:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000726:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800072a:	bd70      	pop	{r4, r5, r6, pc}

0800072c <__aeabi_ddiv>:
 800072c:	b570      	push	{r4, r5, r6, lr}
 800072e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000732:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000736:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800073a:	bf1d      	ittte	ne
 800073c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000740:	ea94 0f0c 	teqne	r4, ip
 8000744:	ea95 0f0c 	teqne	r5, ip
 8000748:	f000 f8a7 	bleq	800089a <__aeabi_ddiv+0x16e>
 800074c:	eba4 0405 	sub.w	r4, r4, r5
 8000750:	ea81 0e03 	eor.w	lr, r1, r3
 8000754:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000758:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800075c:	f000 8088 	beq.w	8000870 <__aeabi_ddiv+0x144>
 8000760:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000764:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000768:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800076c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000770:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000774:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000778:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800077c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000780:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 8000784:	429d      	cmp	r5, r3
 8000786:	bf08      	it	eq
 8000788:	4296      	cmpeq	r6, r2
 800078a:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 800078e:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 8000792:	d202      	bcs.n	800079a <__aeabi_ddiv+0x6e>
 8000794:	085b      	lsrs	r3, r3, #1
 8000796:	ea4f 0232 	mov.w	r2, r2, rrx
 800079a:	1ab6      	subs	r6, r6, r2
 800079c:	eb65 0503 	sbc.w	r5, r5, r3
 80007a0:	085b      	lsrs	r3, r3, #1
 80007a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007a6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80007aa:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80007ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80007b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007b6:	bf22      	ittt	cs
 80007b8:	1ab6      	subcs	r6, r6, r2
 80007ba:	4675      	movcs	r5, lr
 80007bc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ce:	bf22      	ittt	cs
 80007d0:	1ab6      	subcs	r6, r6, r2
 80007d2:	4675      	movcs	r5, lr
 80007d4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007d8:	085b      	lsrs	r3, r3, #1
 80007da:	ea4f 0232 	mov.w	r2, r2, rrx
 80007de:	ebb6 0e02 	subs.w	lr, r6, r2
 80007e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007e6:	bf22      	ittt	cs
 80007e8:	1ab6      	subcs	r6, r6, r2
 80007ea:	4675      	movcs	r5, lr
 80007ec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80007f0:	085b      	lsrs	r3, r3, #1
 80007f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007fe:	bf22      	ittt	cs
 8000800:	1ab6      	subcs	r6, r6, r2
 8000802:	4675      	movcs	r5, lr
 8000804:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000808:	ea55 0e06 	orrs.w	lr, r5, r6
 800080c:	d018      	beq.n	8000840 <__aeabi_ddiv+0x114>
 800080e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000812:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000816:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800081a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800081e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000822:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000826:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800082a:	d1c0      	bne.n	80007ae <__aeabi_ddiv+0x82>
 800082c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000830:	d10b      	bne.n	800084a <__aeabi_ddiv+0x11e>
 8000832:	ea41 0100 	orr.w	r1, r1, r0
 8000836:	f04f 0000 	mov.w	r0, #0
 800083a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800083e:	e7b6      	b.n	80007ae <__aeabi_ddiv+0x82>
 8000840:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000844:	bf04      	itt	eq
 8000846:	4301      	orreq	r1, r0
 8000848:	2000      	moveq	r0, #0
 800084a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800084e:	bf88      	it	hi
 8000850:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000854:	f63f aeaf 	bhi.w	80005b6 <__aeabi_dmul+0xde>
 8000858:	ebb5 0c03 	subs.w	ip, r5, r3
 800085c:	bf04      	itt	eq
 800085e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000862:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000866:	f150 0000 	adcs.w	r0, r0, #0
 800086a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800086e:	bd70      	pop	{r4, r5, r6, pc}
 8000870:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000874:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000878:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800087c:	bfc2      	ittt	gt
 800087e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000882:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000886:	bd70      	popgt	{r4, r5, r6, pc}
 8000888:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800088c:	f04f 0e00 	mov.w	lr, #0
 8000890:	3c01      	subs	r4, #1
 8000892:	e690      	b.n	80005b6 <__aeabi_dmul+0xde>
 8000894:	ea45 0e06 	orr.w	lr, r5, r6
 8000898:	e68d      	b.n	80005b6 <__aeabi_dmul+0xde>
 800089a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800089e:	ea94 0f0c 	teq	r4, ip
 80008a2:	bf08      	it	eq
 80008a4:	ea95 0f0c 	teqeq	r5, ip
 80008a8:	f43f af3b 	beq.w	8000722 <__aeabi_dmul+0x24a>
 80008ac:	ea94 0f0c 	teq	r4, ip
 80008b0:	d10a      	bne.n	80008c8 <__aeabi_ddiv+0x19c>
 80008b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008b6:	f47f af34 	bne.w	8000722 <__aeabi_dmul+0x24a>
 80008ba:	ea95 0f0c 	teq	r5, ip
 80008be:	f47f af25 	bne.w	800070c <__aeabi_dmul+0x234>
 80008c2:	4610      	mov	r0, r2
 80008c4:	4619      	mov	r1, r3
 80008c6:	e72c      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008c8:	ea95 0f0c 	teq	r5, ip
 80008cc:	d106      	bne.n	80008dc <__aeabi_ddiv+0x1b0>
 80008ce:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008d2:	f43f aefd 	beq.w	80006d0 <__aeabi_dmul+0x1f8>
 80008d6:	4610      	mov	r0, r2
 80008d8:	4619      	mov	r1, r3
 80008da:	e722      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008dc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008e0:	bf18      	it	ne
 80008e2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008e6:	f47f aec5 	bne.w	8000674 <__aeabi_dmul+0x19c>
 80008ea:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008ee:	f47f af0d 	bne.w	800070c <__aeabi_dmul+0x234>
 80008f2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80008f6:	f47f aeeb 	bne.w	80006d0 <__aeabi_dmul+0x1f8>
 80008fa:	e712      	b.n	8000722 <__aeabi_dmul+0x24a>

080008fc <__gedf2>:
 80008fc:	f04f 3cff 	mov.w	ip, #4294967295
 8000900:	e006      	b.n	8000910 <__cmpdf2+0x4>
 8000902:	bf00      	nop

08000904 <__ledf2>:
 8000904:	f04f 0c01 	mov.w	ip, #1
 8000908:	e002      	b.n	8000910 <__cmpdf2+0x4>
 800090a:	bf00      	nop

0800090c <__cmpdf2>:
 800090c:	f04f 0c01 	mov.w	ip, #1
 8000910:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000914:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000918:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800091c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000920:	bf18      	it	ne
 8000922:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000926:	d01b      	beq.n	8000960 <__cmpdf2+0x54>
 8000928:	b001      	add	sp, #4
 800092a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800092e:	bf0c      	ite	eq
 8000930:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000934:	ea91 0f03 	teqne	r1, r3
 8000938:	bf02      	ittt	eq
 800093a:	ea90 0f02 	teqeq	r0, r2
 800093e:	2000      	moveq	r0, #0
 8000940:	4770      	bxeq	lr
 8000942:	f110 0f00 	cmn.w	r0, #0
 8000946:	ea91 0f03 	teq	r1, r3
 800094a:	bf58      	it	pl
 800094c:	4299      	cmppl	r1, r3
 800094e:	bf08      	it	eq
 8000950:	4290      	cmpeq	r0, r2
 8000952:	bf2c      	ite	cs
 8000954:	17d8      	asrcs	r0, r3, #31
 8000956:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800095a:	f040 0001 	orr.w	r0, r0, #1
 800095e:	4770      	bx	lr
 8000960:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000964:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000968:	d102      	bne.n	8000970 <__cmpdf2+0x64>
 800096a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800096e:	d107      	bne.n	8000980 <__cmpdf2+0x74>
 8000970:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000974:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000978:	d1d6      	bne.n	8000928 <__cmpdf2+0x1c>
 800097a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800097e:	d0d3      	beq.n	8000928 <__cmpdf2+0x1c>
 8000980:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000984:	4770      	bx	lr
 8000986:	bf00      	nop

08000988 <__aeabi_cdrcmple>:
 8000988:	4684      	mov	ip, r0
 800098a:	4610      	mov	r0, r2
 800098c:	4662      	mov	r2, ip
 800098e:	468c      	mov	ip, r1
 8000990:	4619      	mov	r1, r3
 8000992:	4663      	mov	r3, ip
 8000994:	e000      	b.n	8000998 <__aeabi_cdcmpeq>
 8000996:	bf00      	nop

08000998 <__aeabi_cdcmpeq>:
 8000998:	b501      	push	{r0, lr}
 800099a:	f7ff ffb7 	bl	800090c <__cmpdf2>
 800099e:	2800      	cmp	r0, #0
 80009a0:	bf48      	it	mi
 80009a2:	f110 0f00 	cmnmi.w	r0, #0
 80009a6:	bd01      	pop	{r0, pc}

080009a8 <__aeabi_dcmpeq>:
 80009a8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009ac:	f7ff fff4 	bl	8000998 <__aeabi_cdcmpeq>
 80009b0:	bf0c      	ite	eq
 80009b2:	2001      	moveq	r0, #1
 80009b4:	2000      	movne	r0, #0
 80009b6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ba:	bf00      	nop

080009bc <__aeabi_dcmplt>:
 80009bc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009c0:	f7ff ffea 	bl	8000998 <__aeabi_cdcmpeq>
 80009c4:	bf34      	ite	cc
 80009c6:	2001      	movcc	r0, #1
 80009c8:	2000      	movcs	r0, #0
 80009ca:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ce:	bf00      	nop

080009d0 <__aeabi_dcmple>:
 80009d0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009d4:	f7ff ffe0 	bl	8000998 <__aeabi_cdcmpeq>
 80009d8:	bf94      	ite	ls
 80009da:	2001      	movls	r0, #1
 80009dc:	2000      	movhi	r0, #0
 80009de:	f85d fb08 	ldr.w	pc, [sp], #8
 80009e2:	bf00      	nop

080009e4 <__aeabi_dcmpge>:
 80009e4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e8:	f7ff ffce 	bl	8000988 <__aeabi_cdrcmple>
 80009ec:	bf94      	ite	ls
 80009ee:	2001      	movls	r0, #1
 80009f0:	2000      	movhi	r0, #0
 80009f2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009f6:	bf00      	nop

080009f8 <__aeabi_dcmpgt>:
 80009f8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009fc:	f7ff ffc4 	bl	8000988 <__aeabi_cdrcmple>
 8000a00:	bf34      	ite	cc
 8000a02:	2001      	movcc	r0, #1
 8000a04:	2000      	movcs	r0, #0
 8000a06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a0a:	bf00      	nop

08000a0c <__aeabi_dcmpun>:
 8000a0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a14:	d102      	bne.n	8000a1c <__aeabi_dcmpun+0x10>
 8000a16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a1a:	d10a      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a24:	d102      	bne.n	8000a2c <__aeabi_dcmpun+0x20>
 8000a26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a2a:	d102      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a2c:	f04f 0000 	mov.w	r0, #0
 8000a30:	4770      	bx	lr
 8000a32:	f04f 0001 	mov.w	r0, #1
 8000a36:	4770      	bx	lr

08000a38 <__aeabi_d2iz>:
 8000a38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a3c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000a40:	d215      	bcs.n	8000a6e <__aeabi_d2iz+0x36>
 8000a42:	d511      	bpl.n	8000a68 <__aeabi_d2iz+0x30>
 8000a44:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000a48:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a4c:	d912      	bls.n	8000a74 <__aeabi_d2iz+0x3c>
 8000a4e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a52:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000a56:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a5a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000a5e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a62:	bf18      	it	ne
 8000a64:	4240      	negne	r0, r0
 8000a66:	4770      	bx	lr
 8000a68:	f04f 0000 	mov.w	r0, #0
 8000a6c:	4770      	bx	lr
 8000a6e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a72:	d105      	bne.n	8000a80 <__aeabi_d2iz+0x48>
 8000a74:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000a78:	bf08      	it	eq
 8000a7a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000a7e:	4770      	bx	lr
 8000a80:	f04f 0000 	mov.w	r0, #0
 8000a84:	4770      	bx	lr
 8000a86:	bf00      	nop

08000a88 <__aeabi_d2uiz>:
 8000a88:	004a      	lsls	r2, r1, #1
 8000a8a:	d211      	bcs.n	8000ab0 <__aeabi_d2uiz+0x28>
 8000a8c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000a90:	d211      	bcs.n	8000ab6 <__aeabi_d2uiz+0x2e>
 8000a92:	d50d      	bpl.n	8000ab0 <__aeabi_d2uiz+0x28>
 8000a94:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000a98:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a9c:	d40e      	bmi.n	8000abc <__aeabi_d2uiz+0x34>
 8000a9e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aa2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000aa6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000aaa:	fa23 f002 	lsr.w	r0, r3, r2
 8000aae:	4770      	bx	lr
 8000ab0:	f04f 0000 	mov.w	r0, #0
 8000ab4:	4770      	bx	lr
 8000ab6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000aba:	d102      	bne.n	8000ac2 <__aeabi_d2uiz+0x3a>
 8000abc:	f04f 30ff 	mov.w	r0, #4294967295
 8000ac0:	4770      	bx	lr
 8000ac2:	f04f 0000 	mov.w	r0, #0
 8000ac6:	4770      	bx	lr

08000ac8 <__aeabi_d2f>:
 8000ac8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000acc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000ad0:	bf24      	itt	cs
 8000ad2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000ad6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000ada:	d90d      	bls.n	8000af8 <__aeabi_d2f+0x30>
 8000adc:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000ae0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000ae4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000ae8:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000aec:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000af0:	bf08      	it	eq
 8000af2:	f020 0001 	biceq.w	r0, r0, #1
 8000af6:	4770      	bx	lr
 8000af8:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000afc:	d121      	bne.n	8000b42 <__aeabi_d2f+0x7a>
 8000afe:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000b02:	bfbc      	itt	lt
 8000b04:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000b08:	4770      	bxlt	lr
 8000b0a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000b0e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b12:	f1c2 0218 	rsb	r2, r2, #24
 8000b16:	f1c2 0c20 	rsb	ip, r2, #32
 8000b1a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b1e:	fa20 f002 	lsr.w	r0, r0, r2
 8000b22:	bf18      	it	ne
 8000b24:	f040 0001 	orrne.w	r0, r0, #1
 8000b28:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b2c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b30:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b34:	ea40 000c 	orr.w	r0, r0, ip
 8000b38:	fa23 f302 	lsr.w	r3, r3, r2
 8000b3c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b40:	e7cc      	b.n	8000adc <__aeabi_d2f+0x14>
 8000b42:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b46:	d107      	bne.n	8000b58 <__aeabi_d2f+0x90>
 8000b48:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b4c:	bf1e      	ittt	ne
 8000b4e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000b52:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000b56:	4770      	bxne	lr
 8000b58:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000b5c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000b60:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000b64:	4770      	bx	lr
 8000b66:	bf00      	nop

08000b68 <__aeabi_frsub>:
 8000b68:	f080 4000 	eor.w	r0, r0, #2147483648	@ 0x80000000
 8000b6c:	e002      	b.n	8000b74 <__addsf3>
 8000b6e:	bf00      	nop

08000b70 <__aeabi_fsub>:
 8000b70:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000

08000b74 <__addsf3>:
 8000b74:	0042      	lsls	r2, r0, #1
 8000b76:	bf1f      	itttt	ne
 8000b78:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000b7c:	ea92 0f03 	teqne	r2, r3
 8000b80:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000b84:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000b88:	d06a      	beq.n	8000c60 <__addsf3+0xec>
 8000b8a:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000b8e:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000b92:	bfc1      	itttt	gt
 8000b94:	18d2      	addgt	r2, r2, r3
 8000b96:	4041      	eorgt	r1, r0
 8000b98:	4048      	eorgt	r0, r1
 8000b9a:	4041      	eorgt	r1, r0
 8000b9c:	bfb8      	it	lt
 8000b9e:	425b      	neglt	r3, r3
 8000ba0:	2b19      	cmp	r3, #25
 8000ba2:	bf88      	it	hi
 8000ba4:	4770      	bxhi	lr
 8000ba6:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8000baa:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000bae:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 8000bb2:	bf18      	it	ne
 8000bb4:	4240      	negne	r0, r0
 8000bb6:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000bba:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8000bbe:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8000bc2:	bf18      	it	ne
 8000bc4:	4249      	negne	r1, r1
 8000bc6:	ea92 0f03 	teq	r2, r3
 8000bca:	d03f      	beq.n	8000c4c <__addsf3+0xd8>
 8000bcc:	f1a2 0201 	sub.w	r2, r2, #1
 8000bd0:	fa41 fc03 	asr.w	ip, r1, r3
 8000bd4:	eb10 000c 	adds.w	r0, r0, ip
 8000bd8:	f1c3 0320 	rsb	r3, r3, #32
 8000bdc:	fa01 f103 	lsl.w	r1, r1, r3
 8000be0:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000be4:	d502      	bpl.n	8000bec <__addsf3+0x78>
 8000be6:	4249      	negs	r1, r1
 8000be8:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000bec:	f5b0 0f00 	cmp.w	r0, #8388608	@ 0x800000
 8000bf0:	d313      	bcc.n	8000c1a <__addsf3+0xa6>
 8000bf2:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8000bf6:	d306      	bcc.n	8000c06 <__addsf3+0x92>
 8000bf8:	0840      	lsrs	r0, r0, #1
 8000bfa:	ea4f 0131 	mov.w	r1, r1, rrx
 8000bfe:	f102 0201 	add.w	r2, r2, #1
 8000c02:	2afe      	cmp	r2, #254	@ 0xfe
 8000c04:	d251      	bcs.n	8000caa <__addsf3+0x136>
 8000c06:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 8000c0a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000c0e:	bf08      	it	eq
 8000c10:	f020 0001 	biceq.w	r0, r0, #1
 8000c14:	ea40 0003 	orr.w	r0, r0, r3
 8000c18:	4770      	bx	lr
 8000c1a:	0049      	lsls	r1, r1, #1
 8000c1c:	eb40 0000 	adc.w	r0, r0, r0
 8000c20:	3a01      	subs	r2, #1
 8000c22:	bf28      	it	cs
 8000c24:	f5b0 0f00 	cmpcs.w	r0, #8388608	@ 0x800000
 8000c28:	d2ed      	bcs.n	8000c06 <__addsf3+0x92>
 8000c2a:	fab0 fc80 	clz	ip, r0
 8000c2e:	f1ac 0c08 	sub.w	ip, ip, #8
 8000c32:	ebb2 020c 	subs.w	r2, r2, ip
 8000c36:	fa00 f00c 	lsl.w	r0, r0, ip
 8000c3a:	bfaa      	itet	ge
 8000c3c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000c40:	4252      	neglt	r2, r2
 8000c42:	4318      	orrge	r0, r3
 8000c44:	bfbc      	itt	lt
 8000c46:	40d0      	lsrlt	r0, r2
 8000c48:	4318      	orrlt	r0, r3
 8000c4a:	4770      	bx	lr
 8000c4c:	f092 0f00 	teq	r2, #0
 8000c50:	f481 0100 	eor.w	r1, r1, #8388608	@ 0x800000
 8000c54:	bf06      	itte	eq
 8000c56:	f480 0000 	eoreq.w	r0, r0, #8388608	@ 0x800000
 8000c5a:	3201      	addeq	r2, #1
 8000c5c:	3b01      	subne	r3, #1
 8000c5e:	e7b5      	b.n	8000bcc <__addsf3+0x58>
 8000c60:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000c64:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000c68:	bf18      	it	ne
 8000c6a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000c6e:	d021      	beq.n	8000cb4 <__addsf3+0x140>
 8000c70:	ea92 0f03 	teq	r2, r3
 8000c74:	d004      	beq.n	8000c80 <__addsf3+0x10c>
 8000c76:	f092 0f00 	teq	r2, #0
 8000c7a:	bf08      	it	eq
 8000c7c:	4608      	moveq	r0, r1
 8000c7e:	4770      	bx	lr
 8000c80:	ea90 0f01 	teq	r0, r1
 8000c84:	bf1c      	itt	ne
 8000c86:	2000      	movne	r0, #0
 8000c88:	4770      	bxne	lr
 8000c8a:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8000c8e:	d104      	bne.n	8000c9a <__addsf3+0x126>
 8000c90:	0040      	lsls	r0, r0, #1
 8000c92:	bf28      	it	cs
 8000c94:	f040 4000 	orrcs.w	r0, r0, #2147483648	@ 0x80000000
 8000c98:	4770      	bx	lr
 8000c9a:	f112 7200 	adds.w	r2, r2, #33554432	@ 0x2000000
 8000c9e:	bf3c      	itt	cc
 8000ca0:	f500 0000 	addcc.w	r0, r0, #8388608	@ 0x800000
 8000ca4:	4770      	bxcc	lr
 8000ca6:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000caa:	f043 40fe 	orr.w	r0, r3, #2130706432	@ 0x7f000000
 8000cae:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000cb2:	4770      	bx	lr
 8000cb4:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000cb8:	bf16      	itet	ne
 8000cba:	4608      	movne	r0, r1
 8000cbc:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000cc0:	4601      	movne	r1, r0
 8000cc2:	0242      	lsls	r2, r0, #9
 8000cc4:	bf06      	itte	eq
 8000cc6:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000cca:	ea90 0f01 	teqeq	r0, r1
 8000cce:	f440 0080 	orrne.w	r0, r0, #4194304	@ 0x400000
 8000cd2:	4770      	bx	lr

08000cd4 <__aeabi_ui2f>:
 8000cd4:	f04f 0300 	mov.w	r3, #0
 8000cd8:	e004      	b.n	8000ce4 <__aeabi_i2f+0x8>
 8000cda:	bf00      	nop

08000cdc <__aeabi_i2f>:
 8000cdc:	f010 4300 	ands.w	r3, r0, #2147483648	@ 0x80000000
 8000ce0:	bf48      	it	mi
 8000ce2:	4240      	negmi	r0, r0
 8000ce4:	ea5f 0c00 	movs.w	ip, r0
 8000ce8:	bf08      	it	eq
 8000cea:	4770      	bxeq	lr
 8000cec:	f043 4396 	orr.w	r3, r3, #1258291200	@ 0x4b000000
 8000cf0:	4601      	mov	r1, r0
 8000cf2:	f04f 0000 	mov.w	r0, #0
 8000cf6:	e01c      	b.n	8000d32 <__aeabi_l2f+0x2a>

08000cf8 <__aeabi_ul2f>:
 8000cf8:	ea50 0201 	orrs.w	r2, r0, r1
 8000cfc:	bf08      	it	eq
 8000cfe:	4770      	bxeq	lr
 8000d00:	f04f 0300 	mov.w	r3, #0
 8000d04:	e00a      	b.n	8000d1c <__aeabi_l2f+0x14>
 8000d06:	bf00      	nop

08000d08 <__aeabi_l2f>:
 8000d08:	ea50 0201 	orrs.w	r2, r0, r1
 8000d0c:	bf08      	it	eq
 8000d0e:	4770      	bxeq	lr
 8000d10:	f011 4300 	ands.w	r3, r1, #2147483648	@ 0x80000000
 8000d14:	d502      	bpl.n	8000d1c <__aeabi_l2f+0x14>
 8000d16:	4240      	negs	r0, r0
 8000d18:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d1c:	ea5f 0c01 	movs.w	ip, r1
 8000d20:	bf02      	ittt	eq
 8000d22:	4684      	moveq	ip, r0
 8000d24:	4601      	moveq	r1, r0
 8000d26:	2000      	moveq	r0, #0
 8000d28:	f043 43b6 	orr.w	r3, r3, #1526726656	@ 0x5b000000
 8000d2c:	bf08      	it	eq
 8000d2e:	f1a3 5380 	subeq.w	r3, r3, #268435456	@ 0x10000000
 8000d32:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8000d36:	fabc f28c 	clz	r2, ip
 8000d3a:	3a08      	subs	r2, #8
 8000d3c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000d40:	db10      	blt.n	8000d64 <__aeabi_l2f+0x5c>
 8000d42:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d46:	4463      	add	r3, ip
 8000d48:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d4c:	f1c2 0220 	rsb	r2, r2, #32
 8000d50:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000d54:	fa20 f202 	lsr.w	r2, r0, r2
 8000d58:	eb43 0002 	adc.w	r0, r3, r2
 8000d5c:	bf08      	it	eq
 8000d5e:	f020 0001 	biceq.w	r0, r0, #1
 8000d62:	4770      	bx	lr
 8000d64:	f102 0220 	add.w	r2, r2, #32
 8000d68:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d6c:	f1c2 0220 	rsb	r2, r2, #32
 8000d70:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000d74:	fa21 f202 	lsr.w	r2, r1, r2
 8000d78:	eb43 0002 	adc.w	r0, r3, r2
 8000d7c:	bf08      	it	eq
 8000d7e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000d82:	4770      	bx	lr

08000d84 <__aeabi_fmul>:
 8000d84:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000d88:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000d8c:	bf1e      	ittt	ne
 8000d8e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000d92:	ea92 0f0c 	teqne	r2, ip
 8000d96:	ea93 0f0c 	teqne	r3, ip
 8000d9a:	d06f      	beq.n	8000e7c <__aeabi_fmul+0xf8>
 8000d9c:	441a      	add	r2, r3
 8000d9e:	ea80 0c01 	eor.w	ip, r0, r1
 8000da2:	0240      	lsls	r0, r0, #9
 8000da4:	bf18      	it	ne
 8000da6:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000daa:	d01e      	beq.n	8000dea <__aeabi_fmul+0x66>
 8000dac:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8000db0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000db4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000db8:	fba0 3101 	umull	r3, r1, r0, r1
 8000dbc:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000dc0:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
 8000dc4:	bf3e      	ittt	cc
 8000dc6:	0049      	lslcc	r1, r1, #1
 8000dc8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000dcc:	005b      	lslcc	r3, r3, #1
 8000dce:	ea40 0001 	orr.w	r0, r0, r1
 8000dd2:	f162 027f 	sbc.w	r2, r2, #127	@ 0x7f
 8000dd6:	2afd      	cmp	r2, #253	@ 0xfd
 8000dd8:	d81d      	bhi.n	8000e16 <__aeabi_fmul+0x92>
 8000dda:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8000dde:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000de2:	bf08      	it	eq
 8000de4:	f020 0001 	biceq.w	r0, r0, #1
 8000de8:	4770      	bx	lr
 8000dea:	f090 0f00 	teq	r0, #0
 8000dee:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000df2:	bf08      	it	eq
 8000df4:	0249      	lsleq	r1, r1, #9
 8000df6:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000dfa:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000dfe:	3a7f      	subs	r2, #127	@ 0x7f
 8000e00:	bfc2      	ittt	gt
 8000e02:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000e06:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000e0a:	4770      	bxgt	lr
 8000e0c:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000e10:	f04f 0300 	mov.w	r3, #0
 8000e14:	3a01      	subs	r2, #1
 8000e16:	dc5d      	bgt.n	8000ed4 <__aeabi_fmul+0x150>
 8000e18:	f112 0f19 	cmn.w	r2, #25
 8000e1c:	bfdc      	itt	le
 8000e1e:	f000 4000 	andle.w	r0, r0, #2147483648	@ 0x80000000
 8000e22:	4770      	bxle	lr
 8000e24:	f1c2 0200 	rsb	r2, r2, #0
 8000e28:	0041      	lsls	r1, r0, #1
 8000e2a:	fa21 f102 	lsr.w	r1, r1, r2
 8000e2e:	f1c2 0220 	rsb	r2, r2, #32
 8000e32:	fa00 fc02 	lsl.w	ip, r0, r2
 8000e36:	ea5f 0031 	movs.w	r0, r1, rrx
 8000e3a:	f140 0000 	adc.w	r0, r0, #0
 8000e3e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000e42:	bf08      	it	eq
 8000e44:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e48:	4770      	bx	lr
 8000e4a:	f092 0f00 	teq	r2, #0
 8000e4e:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000e52:	bf02      	ittt	eq
 8000e54:	0040      	lsleq	r0, r0, #1
 8000e56:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000e5a:	3a01      	subeq	r2, #1
 8000e5c:	d0f9      	beq.n	8000e52 <__aeabi_fmul+0xce>
 8000e5e:	ea40 000c 	orr.w	r0, r0, ip
 8000e62:	f093 0f00 	teq	r3, #0
 8000e66:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000e6a:	bf02      	ittt	eq
 8000e6c:	0049      	lsleq	r1, r1, #1
 8000e6e:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000e72:	3b01      	subeq	r3, #1
 8000e74:	d0f9      	beq.n	8000e6a <__aeabi_fmul+0xe6>
 8000e76:	ea41 010c 	orr.w	r1, r1, ip
 8000e7a:	e78f      	b.n	8000d9c <__aeabi_fmul+0x18>
 8000e7c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000e80:	ea92 0f0c 	teq	r2, ip
 8000e84:	bf18      	it	ne
 8000e86:	ea93 0f0c 	teqne	r3, ip
 8000e8a:	d00a      	beq.n	8000ea2 <__aeabi_fmul+0x11e>
 8000e8c:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8000e90:	bf18      	it	ne
 8000e92:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 8000e96:	d1d8      	bne.n	8000e4a <__aeabi_fmul+0xc6>
 8000e98:	ea80 0001 	eor.w	r0, r0, r1
 8000e9c:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000ea0:	4770      	bx	lr
 8000ea2:	f090 0f00 	teq	r0, #0
 8000ea6:	bf17      	itett	ne
 8000ea8:	f090 4f00 	teqne	r0, #2147483648	@ 0x80000000
 8000eac:	4608      	moveq	r0, r1
 8000eae:	f091 0f00 	teqne	r1, #0
 8000eb2:	f091 4f00 	teqne	r1, #2147483648	@ 0x80000000
 8000eb6:	d014      	beq.n	8000ee2 <__aeabi_fmul+0x15e>
 8000eb8:	ea92 0f0c 	teq	r2, ip
 8000ebc:	d101      	bne.n	8000ec2 <__aeabi_fmul+0x13e>
 8000ebe:	0242      	lsls	r2, r0, #9
 8000ec0:	d10f      	bne.n	8000ee2 <__aeabi_fmul+0x15e>
 8000ec2:	ea93 0f0c 	teq	r3, ip
 8000ec6:	d103      	bne.n	8000ed0 <__aeabi_fmul+0x14c>
 8000ec8:	024b      	lsls	r3, r1, #9
 8000eca:	bf18      	it	ne
 8000ecc:	4608      	movne	r0, r1
 8000ece:	d108      	bne.n	8000ee2 <__aeabi_fmul+0x15e>
 8000ed0:	ea80 0001 	eor.w	r0, r0, r1
 8000ed4:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000ed8:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000edc:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000ee0:	4770      	bx	lr
 8000ee2:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000ee6:	f440 0040 	orr.w	r0, r0, #12582912	@ 0xc00000
 8000eea:	4770      	bx	lr

08000eec <__aeabi_fdiv>:
 8000eec:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000ef0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000ef4:	bf1e      	ittt	ne
 8000ef6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000efa:	ea92 0f0c 	teqne	r2, ip
 8000efe:	ea93 0f0c 	teqne	r3, ip
 8000f02:	d069      	beq.n	8000fd8 <__aeabi_fdiv+0xec>
 8000f04:	eba2 0203 	sub.w	r2, r2, r3
 8000f08:	ea80 0c01 	eor.w	ip, r0, r1
 8000f0c:	0249      	lsls	r1, r1, #9
 8000f0e:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000f12:	d037      	beq.n	8000f84 <__aeabi_fdiv+0x98>
 8000f14:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
 8000f18:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000f1c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000f20:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000f24:	428b      	cmp	r3, r1
 8000f26:	bf38      	it	cc
 8000f28:	005b      	lslcc	r3, r3, #1
 8000f2a:	f142 027d 	adc.w	r2, r2, #125	@ 0x7d
 8000f2e:	f44f 0c00 	mov.w	ip, #8388608	@ 0x800000
 8000f32:	428b      	cmp	r3, r1
 8000f34:	bf24      	itt	cs
 8000f36:	1a5b      	subcs	r3, r3, r1
 8000f38:	ea40 000c 	orrcs.w	r0, r0, ip
 8000f3c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000f40:	bf24      	itt	cs
 8000f42:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000f46:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000f4a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000f4e:	bf24      	itt	cs
 8000f50:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000f54:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000f58:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000f5c:	bf24      	itt	cs
 8000f5e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000f62:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000f66:	011b      	lsls	r3, r3, #4
 8000f68:	bf18      	it	ne
 8000f6a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000f6e:	d1e0      	bne.n	8000f32 <__aeabi_fdiv+0x46>
 8000f70:	2afd      	cmp	r2, #253	@ 0xfd
 8000f72:	f63f af50 	bhi.w	8000e16 <__aeabi_fmul+0x92>
 8000f76:	428b      	cmp	r3, r1
 8000f78:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000f7c:	bf08      	it	eq
 8000f7e:	f020 0001 	biceq.w	r0, r0, #1
 8000f82:	4770      	bx	lr
 8000f84:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000f88:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000f8c:	327f      	adds	r2, #127	@ 0x7f
 8000f8e:	bfc2      	ittt	gt
 8000f90:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000f94:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000f98:	4770      	bxgt	lr
 8000f9a:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000f9e:	f04f 0300 	mov.w	r3, #0
 8000fa2:	3a01      	subs	r2, #1
 8000fa4:	e737      	b.n	8000e16 <__aeabi_fmul+0x92>
 8000fa6:	f092 0f00 	teq	r2, #0
 8000faa:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000fae:	bf02      	ittt	eq
 8000fb0:	0040      	lsleq	r0, r0, #1
 8000fb2:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000fb6:	3a01      	subeq	r2, #1
 8000fb8:	d0f9      	beq.n	8000fae <__aeabi_fdiv+0xc2>
 8000fba:	ea40 000c 	orr.w	r0, r0, ip
 8000fbe:	f093 0f00 	teq	r3, #0
 8000fc2:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000fc6:	bf02      	ittt	eq
 8000fc8:	0049      	lsleq	r1, r1, #1
 8000fca:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000fce:	3b01      	subeq	r3, #1
 8000fd0:	d0f9      	beq.n	8000fc6 <__aeabi_fdiv+0xda>
 8000fd2:	ea41 010c 	orr.w	r1, r1, ip
 8000fd6:	e795      	b.n	8000f04 <__aeabi_fdiv+0x18>
 8000fd8:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000fdc:	ea92 0f0c 	teq	r2, ip
 8000fe0:	d108      	bne.n	8000ff4 <__aeabi_fdiv+0x108>
 8000fe2:	0242      	lsls	r2, r0, #9
 8000fe4:	f47f af7d 	bne.w	8000ee2 <__aeabi_fmul+0x15e>
 8000fe8:	ea93 0f0c 	teq	r3, ip
 8000fec:	f47f af70 	bne.w	8000ed0 <__aeabi_fmul+0x14c>
 8000ff0:	4608      	mov	r0, r1
 8000ff2:	e776      	b.n	8000ee2 <__aeabi_fmul+0x15e>
 8000ff4:	ea93 0f0c 	teq	r3, ip
 8000ff8:	d104      	bne.n	8001004 <__aeabi_fdiv+0x118>
 8000ffa:	024b      	lsls	r3, r1, #9
 8000ffc:	f43f af4c 	beq.w	8000e98 <__aeabi_fmul+0x114>
 8001000:	4608      	mov	r0, r1
 8001002:	e76e      	b.n	8000ee2 <__aeabi_fmul+0x15e>
 8001004:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8001008:	bf18      	it	ne
 800100a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 800100e:	d1ca      	bne.n	8000fa6 <__aeabi_fdiv+0xba>
 8001010:	f030 4200 	bics.w	r2, r0, #2147483648	@ 0x80000000
 8001014:	f47f af5c 	bne.w	8000ed0 <__aeabi_fmul+0x14c>
 8001018:	f031 4300 	bics.w	r3, r1, #2147483648	@ 0x80000000
 800101c:	f47f af3c 	bne.w	8000e98 <__aeabi_fmul+0x114>
 8001020:	e75f      	b.n	8000ee2 <__aeabi_fmul+0x15e>
 8001022:	bf00      	nop

08001024 <__gesf2>:
 8001024:	f04f 3cff 	mov.w	ip, #4294967295
 8001028:	e006      	b.n	8001038 <__cmpsf2+0x4>
 800102a:	bf00      	nop

0800102c <__lesf2>:
 800102c:	f04f 0c01 	mov.w	ip, #1
 8001030:	e002      	b.n	8001038 <__cmpsf2+0x4>
 8001032:	bf00      	nop

08001034 <__cmpsf2>:
 8001034:	f04f 0c01 	mov.w	ip, #1
 8001038:	f84d cd04 	str.w	ip, [sp, #-4]!
 800103c:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8001040:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8001044:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8001048:	bf18      	it	ne
 800104a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 800104e:	d011      	beq.n	8001074 <__cmpsf2+0x40>
 8001050:	b001      	add	sp, #4
 8001052:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8001056:	bf18      	it	ne
 8001058:	ea90 0f01 	teqne	r0, r1
 800105c:	bf58      	it	pl
 800105e:	ebb2 0003 	subspl.w	r0, r2, r3
 8001062:	bf88      	it	hi
 8001064:	17c8      	asrhi	r0, r1, #31
 8001066:	bf38      	it	cc
 8001068:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 800106c:	bf18      	it	ne
 800106e:	f040 0001 	orrne.w	r0, r0, #1
 8001072:	4770      	bx	lr
 8001074:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8001078:	d102      	bne.n	8001080 <__cmpsf2+0x4c>
 800107a:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 800107e:	d105      	bne.n	800108c <__cmpsf2+0x58>
 8001080:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8001084:	d1e4      	bne.n	8001050 <__cmpsf2+0x1c>
 8001086:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 800108a:	d0e1      	beq.n	8001050 <__cmpsf2+0x1c>
 800108c:	f85d 0b04 	ldr.w	r0, [sp], #4
 8001090:	4770      	bx	lr
 8001092:	bf00      	nop

08001094 <__aeabi_cfrcmple>:
 8001094:	4684      	mov	ip, r0
 8001096:	4608      	mov	r0, r1
 8001098:	4661      	mov	r1, ip
 800109a:	e7ff      	b.n	800109c <__aeabi_cfcmpeq>

0800109c <__aeabi_cfcmpeq>:
 800109c:	b50f      	push	{r0, r1, r2, r3, lr}
 800109e:	f7ff ffc9 	bl	8001034 <__cmpsf2>
 80010a2:	2800      	cmp	r0, #0
 80010a4:	bf48      	it	mi
 80010a6:	f110 0f00 	cmnmi.w	r0, #0
 80010aa:	bd0f      	pop	{r0, r1, r2, r3, pc}

080010ac <__aeabi_fcmpeq>:
 80010ac:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010b0:	f7ff fff4 	bl	800109c <__aeabi_cfcmpeq>
 80010b4:	bf0c      	ite	eq
 80010b6:	2001      	moveq	r0, #1
 80010b8:	2000      	movne	r0, #0
 80010ba:	f85d fb08 	ldr.w	pc, [sp], #8
 80010be:	bf00      	nop

080010c0 <__aeabi_fcmplt>:
 80010c0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010c4:	f7ff ffea 	bl	800109c <__aeabi_cfcmpeq>
 80010c8:	bf34      	ite	cc
 80010ca:	2001      	movcc	r0, #1
 80010cc:	2000      	movcs	r0, #0
 80010ce:	f85d fb08 	ldr.w	pc, [sp], #8
 80010d2:	bf00      	nop

080010d4 <__aeabi_fcmple>:
 80010d4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010d8:	f7ff ffe0 	bl	800109c <__aeabi_cfcmpeq>
 80010dc:	bf94      	ite	ls
 80010de:	2001      	movls	r0, #1
 80010e0:	2000      	movhi	r0, #0
 80010e2:	f85d fb08 	ldr.w	pc, [sp], #8
 80010e6:	bf00      	nop

080010e8 <__aeabi_fcmpge>:
 80010e8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010ec:	f7ff ffd2 	bl	8001094 <__aeabi_cfrcmple>
 80010f0:	bf94      	ite	ls
 80010f2:	2001      	movls	r0, #1
 80010f4:	2000      	movhi	r0, #0
 80010f6:	f85d fb08 	ldr.w	pc, [sp], #8
 80010fa:	bf00      	nop

080010fc <__aeabi_fcmpgt>:
 80010fc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001100:	f7ff ffc8 	bl	8001094 <__aeabi_cfrcmple>
 8001104:	bf34      	ite	cc
 8001106:	2001      	movcc	r0, #1
 8001108:	2000      	movcs	r0, #0
 800110a:	f85d fb08 	ldr.w	pc, [sp], #8
 800110e:	bf00      	nop

08001110 <__aeabi_f2iz>:
 8001110:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8001114:	f1b2 4ffe 	cmp.w	r2, #2130706432	@ 0x7f000000
 8001118:	d30f      	bcc.n	800113a <__aeabi_f2iz+0x2a>
 800111a:	f04f 039e 	mov.w	r3, #158	@ 0x9e
 800111e:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8001122:	d90d      	bls.n	8001140 <__aeabi_f2iz+0x30>
 8001124:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8001128:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 800112c:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8001130:	fa23 f002 	lsr.w	r0, r3, r2
 8001134:	bf18      	it	ne
 8001136:	4240      	negne	r0, r0
 8001138:	4770      	bx	lr
 800113a:	f04f 0000 	mov.w	r0, #0
 800113e:	4770      	bx	lr
 8001140:	f112 0f61 	cmn.w	r2, #97	@ 0x61
 8001144:	d101      	bne.n	800114a <__aeabi_f2iz+0x3a>
 8001146:	0242      	lsls	r2, r0, #9
 8001148:	d105      	bne.n	8001156 <__aeabi_f2iz+0x46>
 800114a:	f010 4000 	ands.w	r0, r0, #2147483648	@ 0x80000000
 800114e:	bf08      	it	eq
 8001150:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8001154:	4770      	bx	lr
 8001156:	f04f 0000 	mov.w	r0, #0
 800115a:	4770      	bx	lr

0800115c <__aeabi_d2lz>:
 800115c:	b538      	push	{r3, r4, r5, lr}
 800115e:	2200      	movs	r2, #0
 8001160:	2300      	movs	r3, #0
 8001162:	4604      	mov	r4, r0
 8001164:	460d      	mov	r5, r1
 8001166:	f7ff fc29 	bl	80009bc <__aeabi_dcmplt>
 800116a:	b928      	cbnz	r0, 8001178 <__aeabi_d2lz+0x1c>
 800116c:	4620      	mov	r0, r4
 800116e:	4629      	mov	r1, r5
 8001170:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001174:	f000 b80a 	b.w	800118c <__aeabi_d2ulz>
 8001178:	4620      	mov	r0, r4
 800117a:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 800117e:	f000 f805 	bl	800118c <__aeabi_d2ulz>
 8001182:	4240      	negs	r0, r0
 8001184:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8001188:	bd38      	pop	{r3, r4, r5, pc}
 800118a:	bf00      	nop

0800118c <__aeabi_d2ulz>:
 800118c:	b5d0      	push	{r4, r6, r7, lr}
 800118e:	2200      	movs	r2, #0
 8001190:	4b0b      	ldr	r3, [pc, #44]	@ (80011c0 <__aeabi_d2ulz+0x34>)
 8001192:	4606      	mov	r6, r0
 8001194:	460f      	mov	r7, r1
 8001196:	f7ff f99f 	bl	80004d8 <__aeabi_dmul>
 800119a:	f7ff fc75 	bl	8000a88 <__aeabi_d2uiz>
 800119e:	4604      	mov	r4, r0
 80011a0:	f7ff f920 	bl	80003e4 <__aeabi_ui2d>
 80011a4:	2200      	movs	r2, #0
 80011a6:	4b07      	ldr	r3, [pc, #28]	@ (80011c4 <__aeabi_d2ulz+0x38>)
 80011a8:	f7ff f996 	bl	80004d8 <__aeabi_dmul>
 80011ac:	4602      	mov	r2, r0
 80011ae:	460b      	mov	r3, r1
 80011b0:	4630      	mov	r0, r6
 80011b2:	4639      	mov	r1, r7
 80011b4:	f7fe ffd8 	bl	8000168 <__aeabi_dsub>
 80011b8:	f7ff fc66 	bl	8000a88 <__aeabi_d2uiz>
 80011bc:	4621      	mov	r1, r4
 80011be:	bdd0      	pop	{r4, r6, r7, pc}
 80011c0:	3df00000 	.word	0x3df00000
 80011c4:	41f00000 	.word	0x41f00000

080011c8 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 80011c8:	b480      	push	{r7}
 80011ca:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80011cc:	4b04      	ldr	r3, [pc, #16]	@ (80011e0 <__NVIC_GetPriorityGrouping+0x18>)
 80011ce:	68db      	ldr	r3, [r3, #12]
 80011d0:	0a1b      	lsrs	r3, r3, #8
 80011d2:	f003 0307 	and.w	r3, r3, #7
}
 80011d6:	4618      	mov	r0, r3
 80011d8:	46bd      	mov	sp, r7
 80011da:	bc80      	pop	{r7}
 80011dc:	4770      	bx	lr
 80011de:	bf00      	nop
 80011e0:	e000ed00 	.word	0xe000ed00

080011e4 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80011e4:	b480      	push	{r7}
 80011e6:	b083      	sub	sp, #12
 80011e8:	af00      	add	r7, sp, #0
 80011ea:	4603      	mov	r3, r0
 80011ec:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80011ee:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80011f2:	2b00      	cmp	r3, #0
 80011f4:	db0b      	blt.n	800120e <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80011f6:	79fb      	ldrb	r3, [r7, #7]
 80011f8:	f003 021f 	and.w	r2, r3, #31
 80011fc:	4906      	ldr	r1, [pc, #24]	@ (8001218 <__NVIC_EnableIRQ+0x34>)
 80011fe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001202:	095b      	lsrs	r3, r3, #5
 8001204:	2001      	movs	r0, #1
 8001206:	fa00 f202 	lsl.w	r2, r0, r2
 800120a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 800120e:	bf00      	nop
 8001210:	370c      	adds	r7, #12
 8001212:	46bd      	mov	sp, r7
 8001214:	bc80      	pop	{r7}
 8001216:	4770      	bx	lr
 8001218:	e000e100 	.word	0xe000e100

0800121c <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 800121c:	b480      	push	{r7}
 800121e:	b083      	sub	sp, #12
 8001220:	af00      	add	r7, sp, #0
 8001222:	4603      	mov	r3, r0
 8001224:	6039      	str	r1, [r7, #0]
 8001226:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001228:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800122c:	2b00      	cmp	r3, #0
 800122e:	db0a      	blt.n	8001246 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001230:	683b      	ldr	r3, [r7, #0]
 8001232:	b2da      	uxtb	r2, r3
 8001234:	490c      	ldr	r1, [pc, #48]	@ (8001268 <__NVIC_SetPriority+0x4c>)
 8001236:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800123a:	0112      	lsls	r2, r2, #4
 800123c:	b2d2      	uxtb	r2, r2
 800123e:	440b      	add	r3, r1
 8001240:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8001244:	e00a      	b.n	800125c <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001246:	683b      	ldr	r3, [r7, #0]
 8001248:	b2da      	uxtb	r2, r3
 800124a:	4908      	ldr	r1, [pc, #32]	@ (800126c <__NVIC_SetPriority+0x50>)
 800124c:	79fb      	ldrb	r3, [r7, #7]
 800124e:	f003 030f 	and.w	r3, r3, #15
 8001252:	3b04      	subs	r3, #4
 8001254:	0112      	lsls	r2, r2, #4
 8001256:	b2d2      	uxtb	r2, r2
 8001258:	440b      	add	r3, r1
 800125a:	761a      	strb	r2, [r3, #24]
}
 800125c:	bf00      	nop
 800125e:	370c      	adds	r7, #12
 8001260:	46bd      	mov	sp, r7
 8001262:	bc80      	pop	{r7}
 8001264:	4770      	bx	lr
 8001266:	bf00      	nop
 8001268:	e000e100 	.word	0xe000e100
 800126c:	e000ed00 	.word	0xe000ed00

08001270 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8001270:	b480      	push	{r7}
 8001272:	b089      	sub	sp, #36	@ 0x24
 8001274:	af00      	add	r7, sp, #0
 8001276:	60f8      	str	r0, [r7, #12]
 8001278:	60b9      	str	r1, [r7, #8]
 800127a:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 800127c:	68fb      	ldr	r3, [r7, #12]
 800127e:	f003 0307 	and.w	r3, r3, #7
 8001282:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8001284:	69fb      	ldr	r3, [r7, #28]
 8001286:	f1c3 0307 	rsb	r3, r3, #7
 800128a:	2b04      	cmp	r3, #4
 800128c:	bf28      	it	cs
 800128e:	2304      	movcs	r3, #4
 8001290:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001292:	69fb      	ldr	r3, [r7, #28]
 8001294:	3304      	adds	r3, #4
 8001296:	2b06      	cmp	r3, #6
 8001298:	d902      	bls.n	80012a0 <NVIC_EncodePriority+0x30>
 800129a:	69fb      	ldr	r3, [r7, #28]
 800129c:	3b03      	subs	r3, #3
 800129e:	e000      	b.n	80012a2 <NVIC_EncodePriority+0x32>
 80012a0:	2300      	movs	r3, #0
 80012a2:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80012a4:	f04f 32ff 	mov.w	r2, #4294967295
 80012a8:	69bb      	ldr	r3, [r7, #24]
 80012aa:	fa02 f303 	lsl.w	r3, r2, r3
 80012ae:	43da      	mvns	r2, r3
 80012b0:	68bb      	ldr	r3, [r7, #8]
 80012b2:	401a      	ands	r2, r3
 80012b4:	697b      	ldr	r3, [r7, #20]
 80012b6:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80012b8:	f04f 31ff 	mov.w	r1, #4294967295
 80012bc:	697b      	ldr	r3, [r7, #20]
 80012be:	fa01 f303 	lsl.w	r3, r1, r3
 80012c2:	43d9      	mvns	r1, r3
 80012c4:	687b      	ldr	r3, [r7, #4]
 80012c6:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80012c8:	4313      	orrs	r3, r2
         );
}
 80012ca:	4618      	mov	r0, r3
 80012cc:	3724      	adds	r7, #36	@ 0x24
 80012ce:	46bd      	mov	sp, r7
 80012d0:	bc80      	pop	{r7}
 80012d2:	4770      	bx	lr

080012d4 <calculate_unix_timestamp>:

static float current_lat = 0.0f;
static float current_lon = 0.0f;
static uint32_t current_timestamp = 0;

static uint32_t calculate_unix_timestamp(int year, int month, int day, int hour, int min, int sec) {
 80012d4:	b480      	push	{r7}
 80012d6:	b089      	sub	sp, #36	@ 0x24
 80012d8:	af00      	add	r7, sp, #0
 80012da:	60f8      	str	r0, [r7, #12]
 80012dc:	60b9      	str	r1, [r7, #8]
 80012de:	607a      	str	r2, [r7, #4]
 80012e0:	603b      	str	r3, [r7, #0]
    int years = year - 1970;
 80012e2:	68fb      	ldr	r3, [r7, #12]
 80012e4:	f2a3 73b2 	subw	r3, r3, #1970	@ 0x7b2
 80012e8:	617b      	str	r3, [r7, #20]
    int leaps = (years + 1) / 4;
 80012ea:	697b      	ldr	r3, [r7, #20]
 80012ec:	3301      	adds	r3, #1
 80012ee:	2b00      	cmp	r3, #0
 80012f0:	da00      	bge.n	80012f4 <calculate_unix_timestamp+0x20>
 80012f2:	3303      	adds	r3, #3
 80012f4:	109b      	asrs	r3, r3, #2
 80012f6:	613b      	str	r3, [r7, #16]
    uint32_t days = years * 365 + leaps;
 80012f8:	697b      	ldr	r3, [r7, #20]
 80012fa:	f240 126d 	movw	r2, #365	@ 0x16d
 80012fe:	fb03 f202 	mul.w	r2, r3, r2
 8001302:	693b      	ldr	r3, [r7, #16]
 8001304:	4413      	add	r3, r2
 8001306:	61fb      	str	r3, [r7, #28]

    static const int days_in_month[] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
    for (int i = 0; i < month - 1; i++) {
 8001308:	2300      	movs	r3, #0
 800130a:	61bb      	str	r3, [r7, #24]
 800130c:	e00a      	b.n	8001324 <calculate_unix_timestamp+0x50>
        days += days_in_month[i];
 800130e:	4a1b      	ldr	r2, [pc, #108]	@ (800137c <calculate_unix_timestamp+0xa8>)
 8001310:	69bb      	ldr	r3, [r7, #24]
 8001312:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001316:	461a      	mov	r2, r3
 8001318:	69fb      	ldr	r3, [r7, #28]
 800131a:	4413      	add	r3, r2
 800131c:	61fb      	str	r3, [r7, #28]
    for (int i = 0; i < month - 1; i++) {
 800131e:	69bb      	ldr	r3, [r7, #24]
 8001320:	3301      	adds	r3, #1
 8001322:	61bb      	str	r3, [r7, #24]
 8001324:	68bb      	ldr	r3, [r7, #8]
 8001326:	3b01      	subs	r3, #1
 8001328:	69ba      	ldr	r2, [r7, #24]
 800132a:	429a      	cmp	r2, r3
 800132c:	dbef      	blt.n	800130e <calculate_unix_timestamp+0x3a>
    }
    if (month > 2 && year % 4 == 0) days++;
 800132e:	68bb      	ldr	r3, [r7, #8]
 8001330:	2b02      	cmp	r3, #2
 8001332:	dd07      	ble.n	8001344 <calculate_unix_timestamp+0x70>
 8001334:	68fb      	ldr	r3, [r7, #12]
 8001336:	f003 0303 	and.w	r3, r3, #3
 800133a:	2b00      	cmp	r3, #0
 800133c:	d102      	bne.n	8001344 <calculate_unix_timestamp+0x70>
 800133e:	69fb      	ldr	r3, [r7, #28]
 8001340:	3301      	adds	r3, #1
 8001342:	61fb      	str	r3, [r7, #28]
    days += day - 1;
 8001344:	687a      	ldr	r2, [r7, #4]
 8001346:	69fb      	ldr	r3, [r7, #28]
 8001348:	4413      	add	r3, r2
 800134a:	3b01      	subs	r3, #1
 800134c:	61fb      	str	r3, [r7, #28]

    return days * 86400UL + hour * 3600UL + min * 60UL + sec;
 800134e:	69fb      	ldr	r3, [r7, #28]
 8001350:	4a0b      	ldr	r2, [pc, #44]	@ (8001380 <calculate_unix_timestamp+0xac>)
 8001352:	fb03 f202 	mul.w	r2, r3, r2
 8001356:	683b      	ldr	r3, [r7, #0]
 8001358:	f44f 6161 	mov.w	r1, #3600	@ 0xe10
 800135c:	fb01 f303 	mul.w	r3, r1, r3
 8001360:	18d1      	adds	r1, r2, r3
 8001362:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8001364:	4613      	mov	r3, r2
 8001366:	011b      	lsls	r3, r3, #4
 8001368:	1a9b      	subs	r3, r3, r2
 800136a:	009b      	lsls	r3, r3, #2
 800136c:	18ca      	adds	r2, r1, r3
 800136e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001370:	4413      	add	r3, r2
}
 8001372:	4618      	mov	r0, r3
 8001374:	3724      	adds	r7, #36	@ 0x24
 8001376:	46bd      	mov	sp, r7
 8001378:	bc80      	pop	{r7}
 800137a:	4770      	bx	lr
 800137c:	080073c8 	.word	0x080073c8
 8001380:	00015180 	.word	0x00015180

08001384 <validate_nmea_checksum>:

static int validate_nmea_checksum(const char* nmea) {
 8001384:	b580      	push	{r7, lr}
 8001386:	b086      	sub	sp, #24
 8001388:	af00      	add	r7, sp, #0
 800138a:	6078      	str	r0, [r7, #4]
    if (nmea[0] != '$') return 0;
 800138c:	687b      	ldr	r3, [r7, #4]
 800138e:	781b      	ldrb	r3, [r3, #0]
 8001390:	2b24      	cmp	r3, #36	@ 0x24
 8001392:	d001      	beq.n	8001398 <validate_nmea_checksum+0x14>
 8001394:	2300      	movs	r3, #0
 8001396:	e040      	b.n	800141a <validate_nmea_checksum+0x96>
    const char* asterisk = strchr(nmea, '*');
 8001398:	212a      	movs	r1, #42	@ 0x2a
 800139a:	6878      	ldr	r0, [r7, #4]
 800139c:	f003 f8e5 	bl	800456a <strchr>
 80013a0:	60f8      	str	r0, [r7, #12]
    if (!asterisk || strlen(asterisk) < 3) return 0;
 80013a2:	68fb      	ldr	r3, [r7, #12]
 80013a4:	2b00      	cmp	r3, #0
 80013a6:	d005      	beq.n	80013b4 <validate_nmea_checksum+0x30>
 80013a8:	68f8      	ldr	r0, [r7, #12]
 80013aa:	f7fe fed1 	bl	8000150 <strlen>
 80013ae:	4603      	mov	r3, r0
 80013b0:	2b02      	cmp	r3, #2
 80013b2:	d801      	bhi.n	80013b8 <validate_nmea_checksum+0x34>
 80013b4:	2300      	movs	r3, #0
 80013b6:	e030      	b.n	800141a <validate_nmea_checksum+0x96>

    uint8_t calculated_checksum = 0;
 80013b8:	2300      	movs	r3, #0
 80013ba:	75fb      	strb	r3, [r7, #23]
    for (const char* p = nmea + 1; p < asterisk; p++) {
 80013bc:	687b      	ldr	r3, [r7, #4]
 80013be:	3301      	adds	r3, #1
 80013c0:	613b      	str	r3, [r7, #16]
 80013c2:	e007      	b.n	80013d4 <validate_nmea_checksum+0x50>
        calculated_checksum ^= *p;
 80013c4:	693b      	ldr	r3, [r7, #16]
 80013c6:	781a      	ldrb	r2, [r3, #0]
 80013c8:	7dfb      	ldrb	r3, [r7, #23]
 80013ca:	4053      	eors	r3, r2
 80013cc:	75fb      	strb	r3, [r7, #23]
    for (const char* p = nmea + 1; p < asterisk; p++) {
 80013ce:	693b      	ldr	r3, [r7, #16]
 80013d0:	3301      	adds	r3, #1
 80013d2:	613b      	str	r3, [r7, #16]
 80013d4:	693a      	ldr	r2, [r7, #16]
 80013d6:	68fb      	ldr	r3, [r7, #12]
 80013d8:	429a      	cmp	r2, r3
 80013da:	d3f3      	bcc.n	80013c4 <validate_nmea_checksum+0x40>
    }

    char checksum_str[3] = {0};
 80013dc:	f107 0308 	add.w	r3, r7, #8
 80013e0:	2100      	movs	r1, #0
 80013e2:	460a      	mov	r2, r1
 80013e4:	801a      	strh	r2, [r3, #0]
 80013e6:	460a      	mov	r2, r1
 80013e8:	709a      	strb	r2, [r3, #2]
    strncpy(checksum_str, asterisk + 1, 2);
 80013ea:	68fb      	ldr	r3, [r7, #12]
 80013ec:	1c59      	adds	r1, r3, #1
 80013ee:	f107 0308 	add.w	r3, r7, #8
 80013f2:	2202      	movs	r2, #2
 80013f4:	4618      	mov	r0, r3
 80013f6:	f003 f8d7 	bl	80045a8 <strncpy>
    uint8_t received_checksum = (uint8_t)strtol(checksum_str, NULL, 16);
 80013fa:	f107 0308 	add.w	r3, r7, #8
 80013fe:	2210      	movs	r2, #16
 8001400:	2100      	movs	r1, #0
 8001402:	4618      	mov	r0, r3
 8001404:	f002 fb0a 	bl	8003a1c <strtol>
 8001408:	4603      	mov	r3, r0
 800140a:	72fb      	strb	r3, [r7, #11]

    return calculated_checksum == received_checksum;
 800140c:	7dfa      	ldrb	r2, [r7, #23]
 800140e:	7afb      	ldrb	r3, [r7, #11]
 8001410:	429a      	cmp	r2, r3
 8001412:	bf0c      	ite	eq
 8001414:	2301      	moveq	r3, #1
 8001416:	2300      	movne	r3, #0
 8001418:	b2db      	uxtb	r3, r3
}
 800141a:	4618      	mov	r0, r3
 800141c:	3718      	adds	r7, #24
 800141e:	46bd      	mov	sp, r7
 8001420:	bd80      	pop	{r7, pc}
	...

08001424 <DEBUG_UART_Init>:

void DEBUG_UART_Init(void) {
 8001424:	b480      	push	{r7}
 8001426:	af00      	add	r7, sp, #0
    RCC->APB2ENR |= RCC_APB2ENR_IOPAEN | RCC_APB2ENR_AFIOEN;
 8001428:	4b13      	ldr	r3, [pc, #76]	@ (8001478 <DEBUG_UART_Init+0x54>)
 800142a:	699b      	ldr	r3, [r3, #24]
 800142c:	4a12      	ldr	r2, [pc, #72]	@ (8001478 <DEBUG_UART_Init+0x54>)
 800142e:	f043 0305 	orr.w	r3, r3, #5
 8001432:	6193      	str	r3, [r2, #24]
    RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 8001434:	4b10      	ldr	r3, [pc, #64]	@ (8001478 <DEBUG_UART_Init+0x54>)
 8001436:	699b      	ldr	r3, [r3, #24]
 8001438:	4a0f      	ldr	r2, [pc, #60]	@ (8001478 <DEBUG_UART_Init+0x54>)
 800143a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800143e:	6193      	str	r3, [r2, #24]

    GPIOA->CRH &= ~(GPIO_CRH_MODE9 | GPIO_CRH_CNF9);
 8001440:	4b0e      	ldr	r3, [pc, #56]	@ (800147c <DEBUG_UART_Init+0x58>)
 8001442:	685b      	ldr	r3, [r3, #4]
 8001444:	4a0d      	ldr	r2, [pc, #52]	@ (800147c <DEBUG_UART_Init+0x58>)
 8001446:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800144a:	6053      	str	r3, [r2, #4]
    GPIOA->CRH |= (GPIO_CRH_MODE9_1 | GPIO_CRH_CNF9_1); // PA9: TX
 800144c:	4b0b      	ldr	r3, [pc, #44]	@ (800147c <DEBUG_UART_Init+0x58>)
 800144e:	685b      	ldr	r3, [r3, #4]
 8001450:	4a0a      	ldr	r2, [pc, #40]	@ (800147c <DEBUG_UART_Init+0x58>)
 8001452:	f043 03a0 	orr.w	r3, r3, #160	@ 0xa0
 8001456:	6053      	str	r3, [r2, #4]

    USART1->BRR = SystemCoreClock / 115200; // Baud rate 115200
 8001458:	4b09      	ldr	r3, [pc, #36]	@ (8001480 <DEBUG_UART_Init+0x5c>)
 800145a:	681b      	ldr	r3, [r3, #0]
 800145c:	4a09      	ldr	r2, [pc, #36]	@ (8001484 <DEBUG_UART_Init+0x60>)
 800145e:	490a      	ldr	r1, [pc, #40]	@ (8001488 <DEBUG_UART_Init+0x64>)
 8001460:	fba1 1303 	umull	r1, r3, r1, r3
 8001464:	0c1b      	lsrs	r3, r3, #16
 8001466:	6093      	str	r3, [r2, #8]
    USART1->CR1 = USART_CR1_UE | USART_CR1_TE;
 8001468:	4b06      	ldr	r3, [pc, #24]	@ (8001484 <DEBUG_UART_Init+0x60>)
 800146a:	f242 0208 	movw	r2, #8200	@ 0x2008
 800146e:	60da      	str	r2, [r3, #12]
}
 8001470:	bf00      	nop
 8001472:	46bd      	mov	sp, r7
 8001474:	bc80      	pop	{r7}
 8001476:	4770      	bx	lr
 8001478:	40021000 	.word	0x40021000
 800147c:	40010800 	.word	0x40010800
 8001480:	20000000 	.word	0x20000000
 8001484:	40013800 	.word	0x40013800
 8001488:	91a2b3c5 	.word	0x91a2b3c5

0800148c <DEBUG_Print>:

void DEBUG_Print(const char* str) {
 800148c:	b480      	push	{r7}
 800148e:	b083      	sub	sp, #12
 8001490:	af00      	add	r7, sp, #0
 8001492:	6078      	str	r0, [r7, #4]
    while (*str) {
 8001494:	e00c      	b.n	80014b0 <DEBUG_Print+0x24>
        while (!(USART1->SR & USART_SR_TXE));
 8001496:	bf00      	nop
 8001498:	4b0a      	ldr	r3, [pc, #40]	@ (80014c4 <DEBUG_Print+0x38>)
 800149a:	681b      	ldr	r3, [r3, #0]
 800149c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80014a0:	2b00      	cmp	r3, #0
 80014a2:	d0f9      	beq.n	8001498 <DEBUG_Print+0xc>
        USART1->DR = *str++;
 80014a4:	687b      	ldr	r3, [r7, #4]
 80014a6:	1c5a      	adds	r2, r3, #1
 80014a8:	607a      	str	r2, [r7, #4]
 80014aa:	781a      	ldrb	r2, [r3, #0]
 80014ac:	4b05      	ldr	r3, [pc, #20]	@ (80014c4 <DEBUG_Print+0x38>)
 80014ae:	605a      	str	r2, [r3, #4]
    while (*str) {
 80014b0:	687b      	ldr	r3, [r7, #4]
 80014b2:	781b      	ldrb	r3, [r3, #0]
 80014b4:	2b00      	cmp	r3, #0
 80014b6:	d1ee      	bne.n	8001496 <DEBUG_Print+0xa>
    }
}
 80014b8:	bf00      	nop
 80014ba:	bf00      	nop
 80014bc:	370c      	adds	r7, #12
 80014be:	46bd      	mov	sp, r7
 80014c0:	bc80      	pop	{r7}
 80014c2:	4770      	bx	lr
 80014c4:	40013800 	.word	0x40013800

080014c8 <GPS_UART_Init>:

void GPS_UART_Init(void) {
 80014c8:	b580      	push	{r7, lr}
 80014ca:	af00      	add	r7, sp, #0
    RCC->APB2ENR |= RCC_APB2ENR_IOPAEN | RCC_APB2ENR_AFIOEN;
 80014cc:	4b20      	ldr	r3, [pc, #128]	@ (8001550 <GPS_UART_Init+0x88>)
 80014ce:	699b      	ldr	r3, [r3, #24]
 80014d0:	4a1f      	ldr	r2, [pc, #124]	@ (8001550 <GPS_UART_Init+0x88>)
 80014d2:	f043 0305 	orr.w	r3, r3, #5
 80014d6:	6193      	str	r3, [r2, #24]
    RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 80014d8:	4b1d      	ldr	r3, [pc, #116]	@ (8001550 <GPS_UART_Init+0x88>)
 80014da:	69db      	ldr	r3, [r3, #28]
 80014dc:	4a1c      	ldr	r2, [pc, #112]	@ (8001550 <GPS_UART_Init+0x88>)
 80014de:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80014e2:	61d3      	str	r3, [r2, #28]

    GPIOA->CRL &= ~(GPIO_CRL_MODE2 | GPIO_CRL_CNF2);
 80014e4:	4b1b      	ldr	r3, [pc, #108]	@ (8001554 <GPS_UART_Init+0x8c>)
 80014e6:	681b      	ldr	r3, [r3, #0]
 80014e8:	4a1a      	ldr	r2, [pc, #104]	@ (8001554 <GPS_UART_Init+0x8c>)
 80014ea:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 80014ee:	6013      	str	r3, [r2, #0]
    GPIOA->CRL |= (GPIO_CRL_MODE2_1 | GPIO_CRL_CNF2_1); // PA2: TX
 80014f0:	4b18      	ldr	r3, [pc, #96]	@ (8001554 <GPS_UART_Init+0x8c>)
 80014f2:	681b      	ldr	r3, [r3, #0]
 80014f4:	4a17      	ldr	r2, [pc, #92]	@ (8001554 <GPS_UART_Init+0x8c>)
 80014f6:	f443 6320 	orr.w	r3, r3, #2560	@ 0xa00
 80014fa:	6013      	str	r3, [r2, #0]
    GPIOA->CRL &= ~(GPIO_CRL_MODE3 | GPIO_CRL_CNF3);
 80014fc:	4b15      	ldr	r3, [pc, #84]	@ (8001554 <GPS_UART_Init+0x8c>)
 80014fe:	681b      	ldr	r3, [r3, #0]
 8001500:	4a14      	ldr	r2, [pc, #80]	@ (8001554 <GPS_UART_Init+0x8c>)
 8001502:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8001506:	6013      	str	r3, [r2, #0]
    GPIOA->CRL |= GPIO_CRL_CNF3_0; // PA3: RX
 8001508:	4b12      	ldr	r3, [pc, #72]	@ (8001554 <GPS_UART_Init+0x8c>)
 800150a:	681b      	ldr	r3, [r3, #0]
 800150c:	4a11      	ldr	r2, [pc, #68]	@ (8001554 <GPS_UART_Init+0x8c>)
 800150e:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001512:	6013      	str	r3, [r2, #0]

    USART2->BRR = SystemCoreClock / 9600; // Baud rate 9600
 8001514:	4b10      	ldr	r3, [pc, #64]	@ (8001558 <GPS_UART_Init+0x90>)
 8001516:	681b      	ldr	r3, [r3, #0]
 8001518:	4a10      	ldr	r2, [pc, #64]	@ (800155c <GPS_UART_Init+0x94>)
 800151a:	4911      	ldr	r1, [pc, #68]	@ (8001560 <GPS_UART_Init+0x98>)
 800151c:	fba1 1303 	umull	r1, r3, r1, r3
 8001520:	0a9b      	lsrs	r3, r3, #10
 8001522:	6093      	str	r3, [r2, #8]
    USART2->CR1 = USART_CR1_UE | USART_CR1_RE | USART_CR1_TE | USART_CR1_RXNEIE;
 8001524:	4b0d      	ldr	r3, [pc, #52]	@ (800155c <GPS_UART_Init+0x94>)
 8001526:	f242 022c 	movw	r2, #8236	@ 0x202c
 800152a:	60da      	str	r2, [r3, #12]
    NVIC_SetPriority(USART2_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(), 0, 0));
 800152c:	f7ff fe4c 	bl	80011c8 <__NVIC_GetPriorityGrouping>
 8001530:	4603      	mov	r3, r0
 8001532:	2200      	movs	r2, #0
 8001534:	2100      	movs	r1, #0
 8001536:	4618      	mov	r0, r3
 8001538:	f7ff fe9a 	bl	8001270 <NVIC_EncodePriority>
 800153c:	4603      	mov	r3, r0
 800153e:	4619      	mov	r1, r3
 8001540:	2026      	movs	r0, #38	@ 0x26
 8001542:	f7ff fe6b 	bl	800121c <__NVIC_SetPriority>
    NVIC_EnableIRQ(USART2_IRQn);
 8001546:	2026      	movs	r0, #38	@ 0x26
 8001548:	f7ff fe4c 	bl	80011e4 <__NVIC_EnableIRQ>
}
 800154c:	bf00      	nop
 800154e:	bd80      	pop	{r7, pc}
 8001550:	40021000 	.word	0x40021000
 8001554:	40010800 	.word	0x40010800
 8001558:	20000000 	.word	0x20000000
 800155c:	40004400 	.word	0x40004400
 8001560:	1b4e81b5 	.word	0x1b4e81b5

08001564 <USART2_IRQHandler>:

void USART2_IRQHandler(void) {
 8001564:	b580      	push	{r7, lr}
 8001566:	f5ad 7d02 	sub.w	sp, sp, #520	@ 0x208
 800156a:	af00      	add	r7, sp, #0
    if (USART2->SR & USART_SR_RXNE) {
 800156c:	4b50      	ldr	r3, [pc, #320]	@ (80016b0 <USART2_IRQHandler+0x14c>)
 800156e:	681b      	ldr	r3, [r3, #0]
 8001570:	f003 0320 	and.w	r3, r3, #32
 8001574:	2b00      	cmp	r3, #0
 8001576:	d07f      	beq.n	8001678 <USART2_IRQHandler+0x114>
        char c = (char)(USART2->DR & 0xFF);
 8001578:	4b4d      	ldr	r3, [pc, #308]	@ (80016b0 <USART2_IRQHandler+0x14c>)
 800157a:	685b      	ldr	r3, [r3, #4]
 800157c:	f887 3207 	strb.w	r3, [r7, #519]	@ 0x207
        if (uart_index < UART_BUFFER_SIZE - 1) {
            if (c == '$') {
 8001580:	f897 3207 	ldrb.w	r3, [r7, #519]	@ 0x207
 8001584:	2b24      	cmp	r3, #36	@ 0x24
 8001586:	d10e      	bne.n	80015a6 <USART2_IRQHandler+0x42>
                uart_index = 0;
 8001588:	4b4a      	ldr	r3, [pc, #296]	@ (80016b4 <USART2_IRQHandler+0x150>)
 800158a:	2200      	movs	r2, #0
 800158c:	701a      	strb	r2, [r3, #0]
                uart_buffer[uart_index++] = c;
 800158e:	4b49      	ldr	r3, [pc, #292]	@ (80016b4 <USART2_IRQHandler+0x150>)
 8001590:	781b      	ldrb	r3, [r3, #0]
 8001592:	1c5a      	adds	r2, r3, #1
 8001594:	b2d1      	uxtb	r1, r2
 8001596:	4a47      	ldr	r2, [pc, #284]	@ (80016b4 <USART2_IRQHandler+0x150>)
 8001598:	7011      	strb	r1, [r2, #0]
 800159a:	4619      	mov	r1, r3
 800159c:	4a46      	ldr	r2, [pc, #280]	@ (80016b8 <USART2_IRQHandler+0x154>)
 800159e:	f897 3207 	ldrb.w	r3, [r7, #519]	@ 0x207
 80015a2:	5453      	strb	r3, [r2, r1]
 80015a4:	e068      	b.n	8001678 <USART2_IRQHandler+0x114>
            } else if (c == '\n' && uart_index > 0) {
 80015a6:	f897 3207 	ldrb.w	r3, [r7, #519]	@ 0x207
 80015aa:	2b0a      	cmp	r3, #10
 80015ac:	d151      	bne.n	8001652 <USART2_IRQHandler+0xee>
 80015ae:	4b41      	ldr	r3, [pc, #260]	@ (80016b4 <USART2_IRQHandler+0x150>)
 80015b0:	781b      	ldrb	r3, [r3, #0]
 80015b2:	2b00      	cmp	r3, #0
 80015b4:	d04d      	beq.n	8001652 <USART2_IRQHandler+0xee>
                uart_buffer[uart_index] = '\0';
 80015b6:	4b3f      	ldr	r3, [pc, #252]	@ (80016b4 <USART2_IRQHandler+0x150>)
 80015b8:	781b      	ldrb	r3, [r3, #0]
 80015ba:	461a      	mov	r2, r3
 80015bc:	4b3e      	ldr	r3, [pc, #248]	@ (80016b8 <USART2_IRQHandler+0x154>)
 80015be:	2100      	movs	r1, #0
 80015c0:	5499      	strb	r1, [r3, r2]
                if (uart_index >= 6 && uart_buffer[0] == '$') {
 80015c2:	4b3c      	ldr	r3, [pc, #240]	@ (80016b4 <USART2_IRQHandler+0x150>)
 80015c4:	781b      	ldrb	r3, [r3, #0]
 80015c6:	2b05      	cmp	r3, #5
 80015c8:	d93f      	bls.n	800164a <USART2_IRQHandler+0xe6>
 80015ca:	4b3b      	ldr	r3, [pc, #236]	@ (80016b8 <USART2_IRQHandler+0x154>)
 80015cc:	781b      	ldrb	r3, [r3, #0]
 80015ce:	2b24      	cmp	r3, #36	@ 0x24
 80015d0:	d13b      	bne.n	800164a <USART2_IRQHandler+0xe6>
                    char debug_buf[512];
                    snprintf(debug_buf, sizeof(debug_buf), "NMEA: %s\r\n", uart_buffer);
 80015d2:	1d38      	adds	r0, r7, #4
 80015d4:	4b38      	ldr	r3, [pc, #224]	@ (80016b8 <USART2_IRQHandler+0x154>)
 80015d6:	4a39      	ldr	r2, [pc, #228]	@ (80016bc <USART2_IRQHandler+0x158>)
 80015d8:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80015dc:	f002 ff44 	bl	8004468 <sniprintf>
                    DEBUG_Print(debug_buf);
 80015e0:	1d3b      	adds	r3, r7, #4
 80015e2:	4618      	mov	r0, r3
 80015e4:	f7ff ff52 	bl	800148c <DEBUG_Print>
                    if (strncmp(uart_buffer, "$GPGGA", 6) == 0 || strncmp(uart_buffer, "$GPRMC", 6) == 0) {
 80015e8:	2206      	movs	r2, #6
 80015ea:	4935      	ldr	r1, [pc, #212]	@ (80016c0 <USART2_IRQHandler+0x15c>)
 80015ec:	4832      	ldr	r0, [pc, #200]	@ (80016b8 <USART2_IRQHandler+0x154>)
 80015ee:	f002 ffc9 	bl	8004584 <strncmp>
 80015f2:	4603      	mov	r3, r0
 80015f4:	2b00      	cmp	r3, #0
 80015f6:	d007      	beq.n	8001608 <USART2_IRQHandler+0xa4>
 80015f8:	2206      	movs	r2, #6
 80015fa:	4932      	ldr	r1, [pc, #200]	@ (80016c4 <USART2_IRQHandler+0x160>)
 80015fc:	482e      	ldr	r0, [pc, #184]	@ (80016b8 <USART2_IRQHandler+0x154>)
 80015fe:	f002 ffc1 	bl	8004584 <strncmp>
 8001602:	4603      	mov	r3, r0
 8001604:	2b00      	cmp	r3, #0
 8001606:	d115      	bne.n	8001634 <USART2_IRQHandler+0xd0>
                        if (validate_nmea_checksum(uart_buffer)) {
 8001608:	482b      	ldr	r0, [pc, #172]	@ (80016b8 <USART2_IRQHandler+0x154>)
 800160a:	f7ff febb 	bl	8001384 <validate_nmea_checksum>
 800160e:	4603      	mov	r3, r0
 8001610:	2b00      	cmp	r3, #0
 8001612:	d003      	beq.n	800161c <USART2_IRQHandler+0xb8>
                            GPS_Parse_NMEA(uart_buffer);
 8001614:	4828      	ldr	r0, [pc, #160]	@ (80016b8 <USART2_IRQHandler+0x154>)
 8001616:	f000 f85d 	bl	80016d4 <GPS_Parse_NMEA>
                        if (validate_nmea_checksum(uart_buffer)) {
 800161a:	e016      	b.n	800164a <USART2_IRQHandler+0xe6>
                        } else {
                            snprintf(debug_buf, sizeof(debug_buf), "Checksum failed: %s\r\n", uart_buffer);
 800161c:	1d38      	adds	r0, r7, #4
 800161e:	4b26      	ldr	r3, [pc, #152]	@ (80016b8 <USART2_IRQHandler+0x154>)
 8001620:	4a29      	ldr	r2, [pc, #164]	@ (80016c8 <USART2_IRQHandler+0x164>)
 8001622:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001626:	f002 ff1f 	bl	8004468 <sniprintf>
                            DEBUG_Print(debug_buf);
 800162a:	1d3b      	adds	r3, r7, #4
 800162c:	4618      	mov	r0, r3
 800162e:	f7ff ff2d 	bl	800148c <DEBUG_Print>
                        if (validate_nmea_checksum(uart_buffer)) {
 8001632:	e00a      	b.n	800164a <USART2_IRQHandler+0xe6>
                        }
                    } else {
                        snprintf(debug_buf, sizeof(debug_buf), "Non-GPGGA/GPRMC sentence: %s\r\n", uart_buffer);
 8001634:	1d38      	adds	r0, r7, #4
 8001636:	4b20      	ldr	r3, [pc, #128]	@ (80016b8 <USART2_IRQHandler+0x154>)
 8001638:	4a24      	ldr	r2, [pc, #144]	@ (80016cc <USART2_IRQHandler+0x168>)
 800163a:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800163e:	f002 ff13 	bl	8004468 <sniprintf>
                        DEBUG_Print(debug_buf);
 8001642:	1d3b      	adds	r3, r7, #4
 8001644:	4618      	mov	r0, r3
 8001646:	f7ff ff21 	bl	800148c <DEBUG_Print>
                    }
                }
                uart_index = 0;
 800164a:	4b1a      	ldr	r3, [pc, #104]	@ (80016b4 <USART2_IRQHandler+0x150>)
 800164c:	2200      	movs	r2, #0
 800164e:	701a      	strb	r2, [r3, #0]
 8001650:	e012      	b.n	8001678 <USART2_IRQHandler+0x114>
            } else if (c != '\r' && uart_index > 0) {
 8001652:	f897 3207 	ldrb.w	r3, [r7, #519]	@ 0x207
 8001656:	2b0d      	cmp	r3, #13
 8001658:	d00e      	beq.n	8001678 <USART2_IRQHandler+0x114>
 800165a:	4b16      	ldr	r3, [pc, #88]	@ (80016b4 <USART2_IRQHandler+0x150>)
 800165c:	781b      	ldrb	r3, [r3, #0]
 800165e:	2b00      	cmp	r3, #0
 8001660:	d00a      	beq.n	8001678 <USART2_IRQHandler+0x114>
                uart_buffer[uart_index++] = c;
 8001662:	4b14      	ldr	r3, [pc, #80]	@ (80016b4 <USART2_IRQHandler+0x150>)
 8001664:	781b      	ldrb	r3, [r3, #0]
 8001666:	1c5a      	adds	r2, r3, #1
 8001668:	b2d1      	uxtb	r1, r2
 800166a:	4a12      	ldr	r2, [pc, #72]	@ (80016b4 <USART2_IRQHandler+0x150>)
 800166c:	7011      	strb	r1, [r2, #0]
 800166e:	4619      	mov	r1, r3
 8001670:	4a11      	ldr	r2, [pc, #68]	@ (80016b8 <USART2_IRQHandler+0x154>)
 8001672:	f897 3207 	ldrb.w	r3, [r7, #519]	@ 0x207
 8001676:	5453      	strb	r3, [r2, r1]
            char debug_buf[128];
            snprintf(debug_buf, sizeof(debug_buf), "UART buffer overflow\r\n");
            DEBUG_Print(debug_buf);
        }
    }
    if (USART2->SR & (USART_SR_ORE | USART_SR_FE | USART_SR_NE)) {
 8001678:	4b0d      	ldr	r3, [pc, #52]	@ (80016b0 <USART2_IRQHandler+0x14c>)
 800167a:	681b      	ldr	r3, [r3, #0]
 800167c:	f003 030e 	and.w	r3, r3, #14
 8001680:	2b00      	cmp	r3, #0
 8001682:	d010      	beq.n	80016a6 <USART2_IRQHandler+0x142>
        USART2->SR;
 8001684:	4b0a      	ldr	r3, [pc, #40]	@ (80016b0 <USART2_IRQHandler+0x14c>)
 8001686:	681b      	ldr	r3, [r3, #0]
        USART2->DR;
 8001688:	4b09      	ldr	r3, [pc, #36]	@ (80016b0 <USART2_IRQHandler+0x14c>)
 800168a:	685b      	ldr	r3, [r3, #4]
        uart_index = 0;
 800168c:	4b09      	ldr	r3, [pc, #36]	@ (80016b4 <USART2_IRQHandler+0x150>)
 800168e:	2200      	movs	r2, #0
 8001690:	701a      	strb	r2, [r3, #0]
        char debug_buf[128];
        snprintf(debug_buf, sizeof(debug_buf), "UART error detected\r\n");
 8001692:	1d3b      	adds	r3, r7, #4
 8001694:	4a0e      	ldr	r2, [pc, #56]	@ (80016d0 <USART2_IRQHandler+0x16c>)
 8001696:	2180      	movs	r1, #128	@ 0x80
 8001698:	4618      	mov	r0, r3
 800169a:	f002 fee5 	bl	8004468 <sniprintf>
        DEBUG_Print(debug_buf);
 800169e:	1d3b      	adds	r3, r7, #4
 80016a0:	4618      	mov	r0, r3
 80016a2:	f7ff fef3 	bl	800148c <DEBUG_Print>
    }
}
 80016a6:	bf00      	nop
 80016a8:	f507 7702 	add.w	r7, r7, #520	@ 0x208
 80016ac:	46bd      	mov	sp, r7
 80016ae:	bd80      	pop	{r7, pc}
 80016b0:	40004400 	.word	0x40004400
 80016b4:	200003ec 	.word	0x200003ec
 80016b8:	200001ec 	.word	0x200001ec
 80016bc:	080070a0 	.word	0x080070a0
 80016c0:	080070ac 	.word	0x080070ac
 80016c4:	080070b4 	.word	0x080070b4
 80016c8:	080070bc 	.word	0x080070bc
 80016cc:	080070d4 	.word	0x080070d4
 80016d0:	080070f4 	.word	0x080070f4

080016d4 <GPS_Parse_NMEA>:

void GPS_Parse_NMEA(char* nmea) {
 80016d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80016d6:	b0d7      	sub	sp, #348	@ 0x15c
 80016d8:	af06      	add	r7, sp, #24
 80016da:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 80016de:	f5a3 739e 	sub.w	r3, r3, #316	@ 0x13c
 80016e2:	6018      	str	r0, [r3, #0]
    char debug_buf[128];
    char* saveptr;

    snprintf(debug_buf, sizeof(debug_buf), "Parsing NMEA: %s\r\n", nmea);
 80016e4:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 80016e8:	f5a3 739e 	sub.w	r3, r3, #316	@ 0x13c
 80016ec:	f107 0064 	add.w	r0, r7, #100	@ 0x64
 80016f0:	681b      	ldr	r3, [r3, #0]
 80016f2:	4aad      	ldr	r2, [pc, #692]	@ (80019a8 <GPS_Parse_NMEA+0x2d4>)
 80016f4:	2180      	movs	r1, #128	@ 0x80
 80016f6:	f002 feb7 	bl	8004468 <sniprintf>
    DEBUG_Print(debug_buf);
 80016fa:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 80016fe:	4618      	mov	r0, r3
 8001700:	f7ff fec4 	bl	800148c <DEBUG_Print>

    if (strncmp(nmea, "$GPGGA", 6) == 0) {
 8001704:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001708:	f5a3 739e 	sub.w	r3, r3, #316	@ 0x13c
 800170c:	2206      	movs	r2, #6
 800170e:	49a7      	ldr	r1, [pc, #668]	@ (80019ac <GPS_Parse_NMEA+0x2d8>)
 8001710:	6818      	ldr	r0, [r3, #0]
 8001712:	f002 ff37 	bl	8004584 <strncmp>
 8001716:	4603      	mov	r3, r0
 8001718:	2b00      	cmp	r3, #0
 800171a:	f040 81e4 	bne.w	8001ae6 <GPS_Parse_NMEA+0x412>
        char* token = strtok_r(nmea, ",", &saveptr);
 800171e:	f107 0260 	add.w	r2, r7, #96	@ 0x60
 8001722:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001726:	f5a3 739e 	sub.w	r3, r3, #316	@ 0x13c
 800172a:	49a1      	ldr	r1, [pc, #644]	@ (80019b0 <GPS_Parse_NMEA+0x2dc>)
 800172c:	6818      	ldr	r0, [r3, #0]
 800172e:	f002 ff76 	bl	800461e <strtok_r>
 8001732:	f8c7 013c 	str.w	r0, [r7, #316]	@ 0x13c
        int field = 0;
 8001736:	2300      	movs	r3, #0
 8001738:	f8c7 3138 	str.w	r3, [r7, #312]	@ 0x138
        char lat_str[12] = {0}, lon_str[12] = {0}, lat_dir[2] = {0}, lon_dir[2] = {0};
 800173c:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8001740:	2200      	movs	r2, #0
 8001742:	601a      	str	r2, [r3, #0]
 8001744:	605a      	str	r2, [r3, #4]
 8001746:	609a      	str	r2, [r3, #8]
 8001748:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 800174c:	2200      	movs	r2, #0
 800174e:	601a      	str	r2, [r3, #0]
 8001750:	605a      	str	r2, [r3, #4]
 8001752:	609a      	str	r2, [r3, #8]
 8001754:	2300      	movs	r3, #0
 8001756:	f8a7 3044 	strh.w	r3, [r7, #68]	@ 0x44
 800175a:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 800175e:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8001762:	2200      	movs	r2, #0
 8001764:	801a      	strh	r2, [r3, #0]
        int fix_quality = 0;
 8001766:	2300      	movs	r3, #0
 8001768:	f8c7 3134 	str.w	r3, [r7, #308]	@ 0x134

        while (token != NULL && field <= 6) {
 800176c:	e05e      	b.n	800182c <GPS_Parse_NMEA+0x158>
            if (field == 0) { // $GPGGA
 800176e:	f8d7 3138 	ldr.w	r3, [r7, #312]	@ 0x138
 8001772:	2b00      	cmp	r3, #0
 8001774:	d10e      	bne.n	8001794 <GPS_Parse_NMEA+0xc0>
                token = strtok_r(NULL, ",", &saveptr);
 8001776:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 800177a:	461a      	mov	r2, r3
 800177c:	498c      	ldr	r1, [pc, #560]	@ (80019b0 <GPS_Parse_NMEA+0x2dc>)
 800177e:	2000      	movs	r0, #0
 8001780:	f002 ff4d 	bl	800461e <strtok_r>
 8001784:	f8c7 013c 	str.w	r0, [r7, #316]	@ 0x13c
                field++;
 8001788:	f8d7 3138 	ldr.w	r3, [r7, #312]	@ 0x138
 800178c:	3301      	adds	r3, #1
 800178e:	f8c7 3138 	str.w	r3, [r7, #312]	@ 0x138
                continue;
 8001792:	e04b      	b.n	800182c <GPS_Parse_NMEA+0x158>
            }
            else if (field == 2) strncpy(lat_str, token, sizeof(lat_str) - 1); // Latitude
 8001794:	f8d7 3138 	ldr.w	r3, [r7, #312]	@ 0x138
 8001798:	2b02      	cmp	r3, #2
 800179a:	d108      	bne.n	80017ae <GPS_Parse_NMEA+0xda>
 800179c:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 80017a0:	220b      	movs	r2, #11
 80017a2:	f8d7 113c 	ldr.w	r1, [r7, #316]	@ 0x13c
 80017a6:	4618      	mov	r0, r3
 80017a8:	f002 fefe 	bl	80045a8 <strncpy>
 80017ac:	e030      	b.n	8001810 <GPS_Parse_NMEA+0x13c>
            else if (field == 3) strncpy(lat_dir, token, sizeof(lat_dir) - 1); // N/S
 80017ae:	f8d7 3138 	ldr.w	r3, [r7, #312]	@ 0x138
 80017b2:	2b03      	cmp	r3, #3
 80017b4:	d108      	bne.n	80017c8 <GPS_Parse_NMEA+0xf4>
 80017b6:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 80017ba:	2201      	movs	r2, #1
 80017bc:	f8d7 113c 	ldr.w	r1, [r7, #316]	@ 0x13c
 80017c0:	4618      	mov	r0, r3
 80017c2:	f002 fef1 	bl	80045a8 <strncpy>
 80017c6:	e023      	b.n	8001810 <GPS_Parse_NMEA+0x13c>
            else if (field == 4) strncpy(lon_str, token, sizeof(lon_str) - 1); // Longitude
 80017c8:	f8d7 3138 	ldr.w	r3, [r7, #312]	@ 0x138
 80017cc:	2b04      	cmp	r3, #4
 80017ce:	d108      	bne.n	80017e2 <GPS_Parse_NMEA+0x10e>
 80017d0:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 80017d4:	220b      	movs	r2, #11
 80017d6:	f8d7 113c 	ldr.w	r1, [r7, #316]	@ 0x13c
 80017da:	4618      	mov	r0, r3
 80017dc:	f002 fee4 	bl	80045a8 <strncpy>
 80017e0:	e016      	b.n	8001810 <GPS_Parse_NMEA+0x13c>
            else if (field == 5) strncpy(lon_dir, token, sizeof(lon_dir) - 1); // E/W
 80017e2:	f8d7 3138 	ldr.w	r3, [r7, #312]	@ 0x138
 80017e6:	2b05      	cmp	r3, #5
 80017e8:	d108      	bne.n	80017fc <GPS_Parse_NMEA+0x128>
 80017ea:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 80017ee:	2201      	movs	r2, #1
 80017f0:	f8d7 113c 	ldr.w	r1, [r7, #316]	@ 0x13c
 80017f4:	4618      	mov	r0, r3
 80017f6:	f002 fed7 	bl	80045a8 <strncpy>
 80017fa:	e009      	b.n	8001810 <GPS_Parse_NMEA+0x13c>
            else if (field == 6) fix_quality = atoi(token); // Fix quality
 80017fc:	f8d7 3138 	ldr.w	r3, [r7, #312]	@ 0x138
 8001800:	2b06      	cmp	r3, #6
 8001802:	d105      	bne.n	8001810 <GPS_Parse_NMEA+0x13c>
 8001804:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8001808:	f001 fa83 	bl	8002d12 <atoi>
 800180c:	f8c7 0134 	str.w	r0, [r7, #308]	@ 0x134
            token = strtok_r(NULL, ",", &saveptr);
 8001810:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 8001814:	461a      	mov	r2, r3
 8001816:	4966      	ldr	r1, [pc, #408]	@ (80019b0 <GPS_Parse_NMEA+0x2dc>)
 8001818:	2000      	movs	r0, #0
 800181a:	f002 ff00 	bl	800461e <strtok_r>
 800181e:	f8c7 013c 	str.w	r0, [r7, #316]	@ 0x13c
            field++;
 8001822:	f8d7 3138 	ldr.w	r3, [r7, #312]	@ 0x138
 8001826:	3301      	adds	r3, #1
 8001828:	f8c7 3138 	str.w	r3, [r7, #312]	@ 0x138
        while (token != NULL && field <= 6) {
 800182c:	f8d7 313c 	ldr.w	r3, [r7, #316]	@ 0x13c
 8001830:	2b00      	cmp	r3, #0
 8001832:	d003      	beq.n	800183c <GPS_Parse_NMEA+0x168>
 8001834:	f8d7 3138 	ldr.w	r3, [r7, #312]	@ 0x138
 8001838:	2b06      	cmp	r3, #6
 800183a:	dd98      	ble.n	800176e <GPS_Parse_NMEA+0x9a>
        }

        snprintf(debug_buf, sizeof(debug_buf), "Raw GPGGA: fix=%d, lat=%s, lon=%s, lat_dir=%s, lon_dir=%s\r\n",
 800183c:	f107 0064 	add.w	r0, r7, #100	@ 0x64
 8001840:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8001844:	9303      	str	r3, [sp, #12]
 8001846:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800184a:	9302      	str	r3, [sp, #8]
 800184c:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 8001850:	9301      	str	r3, [sp, #4]
 8001852:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8001856:	9300      	str	r3, [sp, #0]
 8001858:	f8d7 3134 	ldr.w	r3, [r7, #308]	@ 0x134
 800185c:	4a55      	ldr	r2, [pc, #340]	@ (80019b4 <GPS_Parse_NMEA+0x2e0>)
 800185e:	2180      	movs	r1, #128	@ 0x80
 8001860:	f002 fe02 	bl	8004468 <sniprintf>
                 fix_quality, lat_str, lon_str, lat_dir, lon_dir);
        DEBUG_Print(debug_buf);
 8001864:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 8001868:	4618      	mov	r0, r3
 800186a:	f7ff fe0f 	bl	800148c <DEBUG_Print>

        if (fix_quality == 0 || lat_str[0] == '\0' || lon_str[0] == '\0' || lat_dir[0] == '\0' || lon_dir[0] == '\0') {
 800186e:	f8d7 3134 	ldr.w	r3, [r7, #308]	@ 0x134
 8001872:	2b00      	cmp	r3, #0
 8001874:	d012      	beq.n	800189c <GPS_Parse_NMEA+0x1c8>
 8001876:	f897 3054 	ldrb.w	r3, [r7, #84]	@ 0x54
 800187a:	2b00      	cmp	r3, #0
 800187c:	d00e      	beq.n	800189c <GPS_Parse_NMEA+0x1c8>
 800187e:	f897 3048 	ldrb.w	r3, [r7, #72]	@ 0x48
 8001882:	2b00      	cmp	r3, #0
 8001884:	d00a      	beq.n	800189c <GPS_Parse_NMEA+0x1c8>
 8001886:	f897 3044 	ldrb.w	r3, [r7, #68]	@ 0x44
 800188a:	2b00      	cmp	r3, #0
 800188c:	d006      	beq.n	800189c <GPS_Parse_NMEA+0x1c8>
 800188e:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001892:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8001896:	781b      	ldrb	r3, [r3, #0]
 8001898:	2b00      	cmp	r3, #0
 800189a:	d119      	bne.n	80018d0 <GPS_Parse_NMEA+0x1fc>
            snprintf(debug_buf, sizeof(debug_buf), "Invalid GPGGA: fix=%d, lat=%s, lon=%s, lat_dir=%s, lon_dir=%s\r\n",
 800189c:	f107 0064 	add.w	r0, r7, #100	@ 0x64
 80018a0:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 80018a4:	9303      	str	r3, [sp, #12]
 80018a6:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 80018aa:	9302      	str	r3, [sp, #8]
 80018ac:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 80018b0:	9301      	str	r3, [sp, #4]
 80018b2:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 80018b6:	9300      	str	r3, [sp, #0]
 80018b8:	f8d7 3134 	ldr.w	r3, [r7, #308]	@ 0x134
 80018bc:	4a3e      	ldr	r2, [pc, #248]	@ (80019b8 <GPS_Parse_NMEA+0x2e4>)
 80018be:	2180      	movs	r1, #128	@ 0x80
 80018c0:	f002 fdd2 	bl	8004468 <sniprintf>
                     fix_quality, lat_str, lon_str, lat_dir, lon_dir);
            DEBUG_Print(debug_buf);
 80018c4:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 80018c8:	4618      	mov	r0, r3
 80018ca:	f7ff fddf 	bl	800148c <DEBUG_Print>
            return;
 80018ce:	e3bf      	b.n	8002050 <GPS_Parse_NMEA+0x97c>
        }

        float lat = atof(lat_str);
 80018d0:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 80018d4:	4618      	mov	r0, r3
 80018d6:	f001 fa19 	bl	8002d0c <atof>
 80018da:	4602      	mov	r2, r0
 80018dc:	460b      	mov	r3, r1
 80018de:	4610      	mov	r0, r2
 80018e0:	4619      	mov	r1, r3
 80018e2:	f7ff f8f1 	bl	8000ac8 <__aeabi_d2f>
 80018e6:	4603      	mov	r3, r0
 80018e8:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
        int lat_deg = (int)(lat / 100);
 80018ec:	4933      	ldr	r1, [pc, #204]	@ (80019bc <GPS_Parse_NMEA+0x2e8>)
 80018ee:	f8d7 00f8 	ldr.w	r0, [r7, #248]	@ 0xf8
 80018f2:	f7ff fafb 	bl	8000eec <__aeabi_fdiv>
 80018f6:	4603      	mov	r3, r0
 80018f8:	4618      	mov	r0, r3
 80018fa:	f7ff fc09 	bl	8001110 <__aeabi_f2iz>
 80018fe:	4603      	mov	r3, r0
 8001900:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
        float lat_min = lat - (lat_deg * 100);
 8001904:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8001908:	2264      	movs	r2, #100	@ 0x64
 800190a:	fb02 f303 	mul.w	r3, r2, r3
 800190e:	4618      	mov	r0, r3
 8001910:	f7ff f9e4 	bl	8000cdc <__aeabi_i2f>
 8001914:	4603      	mov	r3, r0
 8001916:	4619      	mov	r1, r3
 8001918:	f8d7 00f8 	ldr.w	r0, [r7, #248]	@ 0xf8
 800191c:	f7ff f928 	bl	8000b70 <__aeabi_fsub>
 8001920:	4603      	mov	r3, r0
 8001922:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
        if (lat_deg >= 0 && lat_min >= 0.0f) {
 8001926:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800192a:	2b00      	cmp	r3, #0
 800192c:	db26      	blt.n	800197c <GPS_Parse_NMEA+0x2a8>
 800192e:	f04f 0100 	mov.w	r1, #0
 8001932:	f8d7 00f0 	ldr.w	r0, [r7, #240]	@ 0xf0
 8001936:	f7ff fbd7 	bl	80010e8 <__aeabi_fcmpge>
 800193a:	4603      	mov	r3, r0
 800193c:	2b00      	cmp	r3, #0
 800193e:	d01d      	beq.n	800197c <GPS_Parse_NMEA+0x2a8>
            current_lat = lat_deg + lat_min / 60.0f;
 8001940:	f8d7 00f4 	ldr.w	r0, [r7, #244]	@ 0xf4
 8001944:	f7ff f9ca 	bl	8000cdc <__aeabi_i2f>
 8001948:	4604      	mov	r4, r0
 800194a:	491d      	ldr	r1, [pc, #116]	@ (80019c0 <GPS_Parse_NMEA+0x2ec>)
 800194c:	f8d7 00f0 	ldr.w	r0, [r7, #240]	@ 0xf0
 8001950:	f7ff facc 	bl	8000eec <__aeabi_fdiv>
 8001954:	4603      	mov	r3, r0
 8001956:	4619      	mov	r1, r3
 8001958:	4620      	mov	r0, r4
 800195a:	f7ff f90b 	bl	8000b74 <__addsf3>
 800195e:	4603      	mov	r3, r0
 8001960:	461a      	mov	r2, r3
 8001962:	4b18      	ldr	r3, [pc, #96]	@ (80019c4 <GPS_Parse_NMEA+0x2f0>)
 8001964:	601a      	str	r2, [r3, #0]
            if (lat_dir[0] == 'S') current_lat = -current_lat;
 8001966:	f897 3044 	ldrb.w	r3, [r7, #68]	@ 0x44
 800196a:	2b53      	cmp	r3, #83	@ 0x53
 800196c:	d12e      	bne.n	80019cc <GPS_Parse_NMEA+0x2f8>
 800196e:	4b15      	ldr	r3, [pc, #84]	@ (80019c4 <GPS_Parse_NMEA+0x2f0>)
 8001970:	681b      	ldr	r3, [r3, #0]
 8001972:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000
 8001976:	4a13      	ldr	r2, [pc, #76]	@ (80019c4 <GPS_Parse_NMEA+0x2f0>)
 8001978:	6013      	str	r3, [r2, #0]
 800197a:	e027      	b.n	80019cc <GPS_Parse_NMEA+0x2f8>
        } else {
            snprintf(debug_buf, sizeof(debug_buf), "Invalid latitude: deg=%d, min=%.2f\r\n", lat_deg, lat_min);
 800197c:	f8d7 00f0 	ldr.w	r0, [r7, #240]	@ 0xf0
 8001980:	f7fe fd52 	bl	8000428 <__aeabi_f2d>
 8001984:	4602      	mov	r2, r0
 8001986:	460b      	mov	r3, r1
 8001988:	f107 0064 	add.w	r0, r7, #100	@ 0x64
 800198c:	e9cd 2300 	strd	r2, r3, [sp]
 8001990:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8001994:	4a0c      	ldr	r2, [pc, #48]	@ (80019c8 <GPS_Parse_NMEA+0x2f4>)
 8001996:	2180      	movs	r1, #128	@ 0x80
 8001998:	f002 fd66 	bl	8004468 <sniprintf>
            DEBUG_Print(debug_buf);
 800199c:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 80019a0:	4618      	mov	r0, r3
 80019a2:	f7ff fd73 	bl	800148c <DEBUG_Print>
            return;
 80019a6:	e353      	b.n	8002050 <GPS_Parse_NMEA+0x97c>
 80019a8:	0800710c 	.word	0x0800710c
 80019ac:	080070ac 	.word	0x080070ac
 80019b0:	08007120 	.word	0x08007120
 80019b4:	08007124 	.word	0x08007124
 80019b8:	08007160 	.word	0x08007160
 80019bc:	42c80000 	.word	0x42c80000
 80019c0:	42700000 	.word	0x42700000
 80019c4:	200003f0 	.word	0x200003f0
 80019c8:	080071a0 	.word	0x080071a0
        }

        float lon = atof(lon_str);
 80019cc:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 80019d0:	4618      	mov	r0, r3
 80019d2:	f001 f99b 	bl	8002d0c <atof>
 80019d6:	4602      	mov	r2, r0
 80019d8:	460b      	mov	r3, r1
 80019da:	4610      	mov	r0, r2
 80019dc:	4619      	mov	r1, r3
 80019de:	f7ff f873 	bl	8000ac8 <__aeabi_d2f>
 80019e2:	4603      	mov	r3, r0
 80019e4:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
        int lon_deg = (int)(lon / 100);
 80019e8:	49a0      	ldr	r1, [pc, #640]	@ (8001c6c <GPS_Parse_NMEA+0x598>)
 80019ea:	f8d7 00ec 	ldr.w	r0, [r7, #236]	@ 0xec
 80019ee:	f7ff fa7d 	bl	8000eec <__aeabi_fdiv>
 80019f2:	4603      	mov	r3, r0
 80019f4:	4618      	mov	r0, r3
 80019f6:	f7ff fb8b 	bl	8001110 <__aeabi_f2iz>
 80019fa:	4603      	mov	r3, r0
 80019fc:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
        float lon_min = lon - (lon_deg * 100);
 8001a00:	f8d7 30e8 	ldr.w	r3, [r7, #232]	@ 0xe8
 8001a04:	2264      	movs	r2, #100	@ 0x64
 8001a06:	fb02 f303 	mul.w	r3, r2, r3
 8001a0a:	4618      	mov	r0, r3
 8001a0c:	f7ff f966 	bl	8000cdc <__aeabi_i2f>
 8001a10:	4603      	mov	r3, r0
 8001a12:	4619      	mov	r1, r3
 8001a14:	f8d7 00ec 	ldr.w	r0, [r7, #236]	@ 0xec
 8001a18:	f7ff f8aa 	bl	8000b70 <__aeabi_fsub>
 8001a1c:	4603      	mov	r3, r0
 8001a1e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
        if (lon_deg >= 0 && lon_min >= 0.0f) {
 8001a22:	f8d7 30e8 	ldr.w	r3, [r7, #232]	@ 0xe8
 8001a26:	2b00      	cmp	r3, #0
 8001a28:	db29      	blt.n	8001a7e <GPS_Parse_NMEA+0x3aa>
 8001a2a:	f04f 0100 	mov.w	r1, #0
 8001a2e:	f8d7 00e4 	ldr.w	r0, [r7, #228]	@ 0xe4
 8001a32:	f7ff fb59 	bl	80010e8 <__aeabi_fcmpge>
 8001a36:	4603      	mov	r3, r0
 8001a38:	2b00      	cmp	r3, #0
 8001a3a:	d020      	beq.n	8001a7e <GPS_Parse_NMEA+0x3aa>
            current_lon = lon_deg + lon_min / 60.0f;
 8001a3c:	f8d7 00e8 	ldr.w	r0, [r7, #232]	@ 0xe8
 8001a40:	f7ff f94c 	bl	8000cdc <__aeabi_i2f>
 8001a44:	4604      	mov	r4, r0
 8001a46:	498a      	ldr	r1, [pc, #552]	@ (8001c70 <GPS_Parse_NMEA+0x59c>)
 8001a48:	f8d7 00e4 	ldr.w	r0, [r7, #228]	@ 0xe4
 8001a4c:	f7ff fa4e 	bl	8000eec <__aeabi_fdiv>
 8001a50:	4603      	mov	r3, r0
 8001a52:	4619      	mov	r1, r3
 8001a54:	4620      	mov	r0, r4
 8001a56:	f7ff f88d 	bl	8000b74 <__addsf3>
 8001a5a:	4603      	mov	r3, r0
 8001a5c:	461a      	mov	r2, r3
 8001a5e:	4b85      	ldr	r3, [pc, #532]	@ (8001c74 <GPS_Parse_NMEA+0x5a0>)
 8001a60:	601a      	str	r2, [r3, #0]
            if (lon_dir[0] == 'W') current_lon = -current_lon;
 8001a62:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001a66:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8001a6a:	781b      	ldrb	r3, [r3, #0]
 8001a6c:	2b57      	cmp	r3, #87	@ 0x57
 8001a6e:	d11c      	bne.n	8001aaa <GPS_Parse_NMEA+0x3d6>
 8001a70:	4b80      	ldr	r3, [pc, #512]	@ (8001c74 <GPS_Parse_NMEA+0x5a0>)
 8001a72:	681b      	ldr	r3, [r3, #0]
 8001a74:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000
 8001a78:	4a7e      	ldr	r2, [pc, #504]	@ (8001c74 <GPS_Parse_NMEA+0x5a0>)
 8001a7a:	6013      	str	r3, [r2, #0]
 8001a7c:	e015      	b.n	8001aaa <GPS_Parse_NMEA+0x3d6>
        } else {
            snprintf(debug_buf, sizeof(debug_buf), "Invalid longitude: deg=%d, min=%.2f\r\n", lon_deg, lon_min);
 8001a7e:	f8d7 00e4 	ldr.w	r0, [r7, #228]	@ 0xe4
 8001a82:	f7fe fcd1 	bl	8000428 <__aeabi_f2d>
 8001a86:	4602      	mov	r2, r0
 8001a88:	460b      	mov	r3, r1
 8001a8a:	f107 0064 	add.w	r0, r7, #100	@ 0x64
 8001a8e:	e9cd 2300 	strd	r2, r3, [sp]
 8001a92:	f8d7 30e8 	ldr.w	r3, [r7, #232]	@ 0xe8
 8001a96:	4a78      	ldr	r2, [pc, #480]	@ (8001c78 <GPS_Parse_NMEA+0x5a4>)
 8001a98:	2180      	movs	r1, #128	@ 0x80
 8001a9a:	f002 fce5 	bl	8004468 <sniprintf>
            DEBUG_Print(debug_buf);
 8001a9e:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 8001aa2:	4618      	mov	r0, r3
 8001aa4:	f7ff fcf2 	bl	800148c <DEBUG_Print>
            return;
 8001aa8:	e2d2      	b.n	8002050 <GPS_Parse_NMEA+0x97c>
        }

        snprintf(debug_buf, sizeof(debug_buf), "Lat: %.6f, Lon: %.6f\r\n", current_lat, current_lon);
 8001aaa:	4b74      	ldr	r3, [pc, #464]	@ (8001c7c <GPS_Parse_NMEA+0x5a8>)
 8001aac:	681b      	ldr	r3, [r3, #0]
 8001aae:	4618      	mov	r0, r3
 8001ab0:	f7fe fcba 	bl	8000428 <__aeabi_f2d>
 8001ab4:	4604      	mov	r4, r0
 8001ab6:	460d      	mov	r5, r1
 8001ab8:	4b6e      	ldr	r3, [pc, #440]	@ (8001c74 <GPS_Parse_NMEA+0x5a0>)
 8001aba:	681b      	ldr	r3, [r3, #0]
 8001abc:	4618      	mov	r0, r3
 8001abe:	f7fe fcb3 	bl	8000428 <__aeabi_f2d>
 8001ac2:	4602      	mov	r2, r0
 8001ac4:	460b      	mov	r3, r1
 8001ac6:	f107 0064 	add.w	r0, r7, #100	@ 0x64
 8001aca:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8001ace:	e9cd 4500 	strd	r4, r5, [sp]
 8001ad2:	4a6b      	ldr	r2, [pc, #428]	@ (8001c80 <GPS_Parse_NMEA+0x5ac>)
 8001ad4:	2180      	movs	r1, #128	@ 0x80
 8001ad6:	f002 fcc7 	bl	8004468 <sniprintf>
        DEBUG_Print(debug_buf);
 8001ada:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 8001ade:	4618      	mov	r0, r3
 8001ae0:	f7ff fcd4 	bl	800148c <DEBUG_Print>
 8001ae4:	e2b4      	b.n	8002050 <GPS_Parse_NMEA+0x97c>
    } else if (strncmp(nmea, "$GPRMC", 6) == 0) {
 8001ae6:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001aea:	f5a3 739e 	sub.w	r3, r3, #316	@ 0x13c
 8001aee:	2206      	movs	r2, #6
 8001af0:	4964      	ldr	r1, [pc, #400]	@ (8001c84 <GPS_Parse_NMEA+0x5b0>)
 8001af2:	6818      	ldr	r0, [r3, #0]
 8001af4:	f002 fd46 	bl	8004584 <strncmp>
 8001af8:	4603      	mov	r3, r0
 8001afa:	2b00      	cmp	r3, #0
 8001afc:	f040 82a8 	bne.w	8002050 <GPS_Parse_NMEA+0x97c>
        char* token = strtok_r(nmea, ",", &saveptr);
 8001b00:	f107 0260 	add.w	r2, r7, #96	@ 0x60
 8001b04:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001b08:	f5a3 739e 	sub.w	r3, r3, #316	@ 0x13c
 8001b0c:	495e      	ldr	r1, [pc, #376]	@ (8001c88 <GPS_Parse_NMEA+0x5b4>)
 8001b0e:	6818      	ldr	r0, [r3, #0]
 8001b10:	f002 fd85 	bl	800461e <strtok_r>
 8001b14:	f8c7 0130 	str.w	r0, [r7, #304]	@ 0x130
        int field = 0;
 8001b18:	2300      	movs	r3, #0
 8001b1a:	f8c7 312c 	str.w	r3, [r7, #300]	@ 0x12c
        char time_str[11] = {0}, date_str[7] = {0}, status[2] = {0}, lat_str[12] = {0}, lon_str[12] = {0}, lat_dir[2] = {0}, lon_dir[2] = {0};
 8001b1e:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001b22:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 8001b26:	461a      	mov	r2, r3
 8001b28:	2300      	movs	r3, #0
 8001b2a:	6013      	str	r3, [r2, #0]
 8001b2c:	6053      	str	r3, [r2, #4]
 8001b2e:	f8c2 3007 	str.w	r3, [r2, #7]
 8001b32:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001b36:	f5a3 738a 	sub.w	r3, r3, #276	@ 0x114
 8001b3a:	461a      	mov	r2, r3
 8001b3c:	2300      	movs	r3, #0
 8001b3e:	6013      	str	r3, [r2, #0]
 8001b40:	f8c2 3003 	str.w	r3, [r2, #3]
 8001b44:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001b48:	f5a3 738c 	sub.w	r3, r3, #280	@ 0x118
 8001b4c:	2200      	movs	r2, #0
 8001b4e:	801a      	strh	r2, [r3, #0]
 8001b50:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001b54:	f5a3 7392 	sub.w	r3, r3, #292	@ 0x124
 8001b58:	461a      	mov	r2, r3
 8001b5a:	2300      	movs	r3, #0
 8001b5c:	6013      	str	r3, [r2, #0]
 8001b5e:	6053      	str	r3, [r2, #4]
 8001b60:	6093      	str	r3, [r2, #8]
 8001b62:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001b66:	f5a3 7398 	sub.w	r3, r3, #304	@ 0x130
 8001b6a:	461a      	mov	r2, r3
 8001b6c:	2300      	movs	r3, #0
 8001b6e:	6013      	str	r3, [r2, #0]
 8001b70:	6053      	str	r3, [r2, #4]
 8001b72:	6093      	str	r3, [r2, #8]
 8001b74:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001b78:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 8001b7c:	2200      	movs	r2, #0
 8001b7e:	801a      	strh	r2, [r3, #0]
 8001b80:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001b84:	f5a3 739c 	sub.w	r3, r3, #312	@ 0x138
 8001b88:	2200      	movs	r2, #0
 8001b8a:	801a      	strh	r2, [r3, #0]

        while (token != NULL && field <= 9) {
 8001b8c:	e08c      	b.n	8001ca8 <GPS_Parse_NMEA+0x5d4>
            if (field == 0) { // $GPRMC
 8001b8e:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 8001b92:	2b00      	cmp	r3, #0
 8001b94:	d10e      	bne.n	8001bb4 <GPS_Parse_NMEA+0x4e0>
                token = strtok_r(NULL, ",", &saveptr);
 8001b96:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 8001b9a:	461a      	mov	r2, r3
 8001b9c:	493a      	ldr	r1, [pc, #232]	@ (8001c88 <GPS_Parse_NMEA+0x5b4>)
 8001b9e:	2000      	movs	r0, #0
 8001ba0:	f002 fd3d 	bl	800461e <strtok_r>
 8001ba4:	f8c7 0130 	str.w	r0, [r7, #304]	@ 0x130
                field++;
 8001ba8:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 8001bac:	3301      	adds	r3, #1
 8001bae:	f8c7 312c 	str.w	r3, [r7, #300]	@ 0x12c
                continue;
 8001bb2:	e079      	b.n	8001ca8 <GPS_Parse_NMEA+0x5d4>
            }
            else if (field == 1) strncpy(time_str, token, sizeof(time_str) - 1); // Time
 8001bb4:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 8001bb8:	2b01      	cmp	r3, #1
 8001bba:	d108      	bne.n	8001bce <GPS_Parse_NMEA+0x4fa>
 8001bbc:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8001bc0:	220a      	movs	r2, #10
 8001bc2:	f8d7 1130 	ldr.w	r1, [r7, #304]	@ 0x130
 8001bc6:	4618      	mov	r0, r3
 8001bc8:	f002 fcee 	bl	80045a8 <strncpy>
 8001bcc:	e05e      	b.n	8001c8c <GPS_Parse_NMEA+0x5b8>
            else if (field == 2) strncpy(status, token, sizeof(status) - 1); // Status
 8001bce:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 8001bd2:	2b02      	cmp	r3, #2
 8001bd4:	d108      	bne.n	8001be8 <GPS_Parse_NMEA+0x514>
 8001bd6:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001bda:	2201      	movs	r2, #1
 8001bdc:	f8d7 1130 	ldr.w	r1, [r7, #304]	@ 0x130
 8001be0:	4618      	mov	r0, r3
 8001be2:	f002 fce1 	bl	80045a8 <strncpy>
 8001be6:	e051      	b.n	8001c8c <GPS_Parse_NMEA+0x5b8>
            else if (field == 3) strncpy(lat_str, token, sizeof(lat_str) - 1); // Latitude
 8001be8:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 8001bec:	2b03      	cmp	r3, #3
 8001bee:	d108      	bne.n	8001c02 <GPS_Parse_NMEA+0x52e>
 8001bf0:	f107 031c 	add.w	r3, r7, #28
 8001bf4:	220b      	movs	r2, #11
 8001bf6:	f8d7 1130 	ldr.w	r1, [r7, #304]	@ 0x130
 8001bfa:	4618      	mov	r0, r3
 8001bfc:	f002 fcd4 	bl	80045a8 <strncpy>
 8001c00:	e044      	b.n	8001c8c <GPS_Parse_NMEA+0x5b8>
            else if (field == 4) strncpy(lat_dir, token, sizeof(lat_dir) - 1); // N/S
 8001c02:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 8001c06:	2b04      	cmp	r3, #4
 8001c08:	d108      	bne.n	8001c1c <GPS_Parse_NMEA+0x548>
 8001c0a:	f107 030c 	add.w	r3, r7, #12
 8001c0e:	2201      	movs	r2, #1
 8001c10:	f8d7 1130 	ldr.w	r1, [r7, #304]	@ 0x130
 8001c14:	4618      	mov	r0, r3
 8001c16:	f002 fcc7 	bl	80045a8 <strncpy>
 8001c1a:	e037      	b.n	8001c8c <GPS_Parse_NMEA+0x5b8>
            else if (field == 5) strncpy(lon_str, token, sizeof(lon_str) - 1); // Longitude
 8001c1c:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 8001c20:	2b05      	cmp	r3, #5
 8001c22:	d108      	bne.n	8001c36 <GPS_Parse_NMEA+0x562>
 8001c24:	f107 0310 	add.w	r3, r7, #16
 8001c28:	220b      	movs	r2, #11
 8001c2a:	f8d7 1130 	ldr.w	r1, [r7, #304]	@ 0x130
 8001c2e:	4618      	mov	r0, r3
 8001c30:	f002 fcba 	bl	80045a8 <strncpy>
 8001c34:	e02a      	b.n	8001c8c <GPS_Parse_NMEA+0x5b8>
            else if (field == 6) strncpy(lon_dir, token, sizeof(lon_dir) - 1); // E/W
 8001c36:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 8001c3a:	2b06      	cmp	r3, #6
 8001c3c:	d108      	bne.n	8001c50 <GPS_Parse_NMEA+0x57c>
 8001c3e:	f107 0308 	add.w	r3, r7, #8
 8001c42:	2201      	movs	r2, #1
 8001c44:	f8d7 1130 	ldr.w	r1, [r7, #304]	@ 0x130
 8001c48:	4618      	mov	r0, r3
 8001c4a:	f002 fcad 	bl	80045a8 <strncpy>
 8001c4e:	e01d      	b.n	8001c8c <GPS_Parse_NMEA+0x5b8>
            else if (field == 9) {
 8001c50:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 8001c54:	2b09      	cmp	r3, #9
 8001c56:	d119      	bne.n	8001c8c <GPS_Parse_NMEA+0x5b8>
                strncpy(date_str, token, sizeof(date_str) - 1); // Date
 8001c58:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8001c5c:	2206      	movs	r2, #6
 8001c5e:	f8d7 1130 	ldr.w	r1, [r7, #304]	@ 0x130
 8001c62:	4618      	mov	r0, r3
 8001c64:	f002 fca0 	bl	80045a8 <strncpy>
                break;
 8001c68:	e027      	b.n	8001cba <GPS_Parse_NMEA+0x5e6>
 8001c6a:	bf00      	nop
 8001c6c:	42c80000 	.word	0x42c80000
 8001c70:	42700000 	.word	0x42700000
 8001c74:	200003f4 	.word	0x200003f4
 8001c78:	080071c8 	.word	0x080071c8
 8001c7c:	200003f0 	.word	0x200003f0
 8001c80:	080071f0 	.word	0x080071f0
 8001c84:	080070b4 	.word	0x080070b4
 8001c88:	08007120 	.word	0x08007120
            }
            token = strtok_r(NULL, ",", &saveptr);
 8001c8c:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 8001c90:	461a      	mov	r2, r3
 8001c92:	4930      	ldr	r1, [pc, #192]	@ (8001d54 <GPS_Parse_NMEA+0x680>)
 8001c94:	2000      	movs	r0, #0
 8001c96:	f002 fcc2 	bl	800461e <strtok_r>
 8001c9a:	f8c7 0130 	str.w	r0, [r7, #304]	@ 0x130
            field++;
 8001c9e:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 8001ca2:	3301      	adds	r3, #1
 8001ca4:	f8c7 312c 	str.w	r3, [r7, #300]	@ 0x12c
        while (token != NULL && field <= 9) {
 8001ca8:	f8d7 3130 	ldr.w	r3, [r7, #304]	@ 0x130
 8001cac:	2b00      	cmp	r3, #0
 8001cae:	d004      	beq.n	8001cba <GPS_Parse_NMEA+0x5e6>
 8001cb0:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 8001cb4:	2b09      	cmp	r3, #9
 8001cb6:	f77f af6a 	ble.w	8001b8e <GPS_Parse_NMEA+0x4ba>
        }

        snprintf(debug_buf, sizeof(debug_buf), "Raw GPRMC: status=%s, time=%s, date=%s, lat=%s, lon=%s, lat_dir=%s, lon_dir=%s\r\n",
 8001cba:	f107 0228 	add.w	r2, r7, #40	@ 0x28
 8001cbe:	f107 0064 	add.w	r0, r7, #100	@ 0x64
 8001cc2:	f107 0308 	add.w	r3, r7, #8
 8001cc6:	9305      	str	r3, [sp, #20]
 8001cc8:	f107 030c 	add.w	r3, r7, #12
 8001ccc:	9304      	str	r3, [sp, #16]
 8001cce:	f107 0310 	add.w	r3, r7, #16
 8001cd2:	9303      	str	r3, [sp, #12]
 8001cd4:	f107 031c 	add.w	r3, r7, #28
 8001cd8:	9302      	str	r3, [sp, #8]
 8001cda:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8001cde:	9301      	str	r3, [sp, #4]
 8001ce0:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8001ce4:	9300      	str	r3, [sp, #0]
 8001ce6:	4613      	mov	r3, r2
 8001ce8:	4a1b      	ldr	r2, [pc, #108]	@ (8001d58 <GPS_Parse_NMEA+0x684>)
 8001cea:	2180      	movs	r1, #128	@ 0x80
 8001cec:	f002 fbbc 	bl	8004468 <sniprintf>
                 status, time_str, date_str, lat_str, lon_str, lat_dir, lon_dir);
        DEBUG_Print(debug_buf);
 8001cf0:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 8001cf4:	4618      	mov	r0, r3
 8001cf6:	f7ff fbc9 	bl	800148c <DEBUG_Print>

        if (status[0] != 'A' || strlen(time_str) < 6 || strlen(date_str) != 6) {
 8001cfa:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001cfe:	f5a3 738c 	sub.w	r3, r3, #280	@ 0x118
 8001d02:	781b      	ldrb	r3, [r3, #0]
 8001d04:	2b41      	cmp	r3, #65	@ 0x41
 8001d06:	d10f      	bne.n	8001d28 <GPS_Parse_NMEA+0x654>
 8001d08:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8001d0c:	4618      	mov	r0, r3
 8001d0e:	f7fe fa1f 	bl	8000150 <strlen>
 8001d12:	4603      	mov	r3, r0
 8001d14:	2b05      	cmp	r3, #5
 8001d16:	d907      	bls.n	8001d28 <GPS_Parse_NMEA+0x654>
 8001d18:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8001d1c:	4618      	mov	r0, r3
 8001d1e:	f7fe fa17 	bl	8000150 <strlen>
 8001d22:	4603      	mov	r3, r0
 8001d24:	2b06      	cmp	r3, #6
 8001d26:	d01b      	beq.n	8001d60 <GPS_Parse_NMEA+0x68c>
            snprintf(debug_buf, sizeof(debug_buf), "Invalid GPRMC: status=%s, time=%s, date=%s\r\n",
 8001d28:	f107 0228 	add.w	r2, r7, #40	@ 0x28
 8001d2c:	f107 0064 	add.w	r0, r7, #100	@ 0x64
 8001d30:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8001d34:	9301      	str	r3, [sp, #4]
 8001d36:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8001d3a:	9300      	str	r3, [sp, #0]
 8001d3c:	4613      	mov	r3, r2
 8001d3e:	4a07      	ldr	r2, [pc, #28]	@ (8001d5c <GPS_Parse_NMEA+0x688>)
 8001d40:	2180      	movs	r1, #128	@ 0x80
 8001d42:	f002 fb91 	bl	8004468 <sniprintf>
                     status, time_str, date_str);
            DEBUG_Print(debug_buf);
 8001d46:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 8001d4a:	4618      	mov	r0, r3
 8001d4c:	f7ff fb9e 	bl	800148c <DEBUG_Print>
 8001d50:	e17e      	b.n	8002050 <GPS_Parse_NMEA+0x97c>
 8001d52:	bf00      	nop
 8001d54:	08007120 	.word	0x08007120
 8001d58:	08007208 	.word	0x08007208
 8001d5c:	0800725c 	.word	0x0800725c
            return;
        }

        int hour = (time_str[0] - '0') * 10 + (time_str[1] - '0');
 8001d60:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001d64:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 8001d68:	781b      	ldrb	r3, [r3, #0]
 8001d6a:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
 8001d6e:	4613      	mov	r3, r2
 8001d70:	009b      	lsls	r3, r3, #2
 8001d72:	4413      	add	r3, r2
 8001d74:	005b      	lsls	r3, r3, #1
 8001d76:	461a      	mov	r2, r3
 8001d78:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001d7c:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 8001d80:	785b      	ldrb	r3, [r3, #1]
 8001d82:	3b30      	subs	r3, #48	@ 0x30
 8001d84:	4413      	add	r3, r2
 8001d86:	f8c7 3128 	str.w	r3, [r7, #296]	@ 0x128
        int min = (time_str[2] - '0') * 10 + (time_str[3] - '0');
 8001d8a:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001d8e:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 8001d92:	789b      	ldrb	r3, [r3, #2]
 8001d94:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
 8001d98:	4613      	mov	r3, r2
 8001d9a:	009b      	lsls	r3, r3, #2
 8001d9c:	4413      	add	r3, r2
 8001d9e:	005b      	lsls	r3, r3, #1
 8001da0:	461a      	mov	r2, r3
 8001da2:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001da6:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 8001daa:	78db      	ldrb	r3, [r3, #3]
 8001dac:	3b30      	subs	r3, #48	@ 0x30
 8001dae:	4413      	add	r3, r2
 8001db0:	f8c7 3124 	str.w	r3, [r7, #292]	@ 0x124
        int sec = (time_str[4] - '0') * 10 + (time_str[5] - '0');
 8001db4:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001db8:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 8001dbc:	791b      	ldrb	r3, [r3, #4]
 8001dbe:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
 8001dc2:	4613      	mov	r3, r2
 8001dc4:	009b      	lsls	r3, r3, #2
 8001dc6:	4413      	add	r3, r2
 8001dc8:	005b      	lsls	r3, r3, #1
 8001dca:	461a      	mov	r2, r3
 8001dcc:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001dd0:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 8001dd4:	795b      	ldrb	r3, [r3, #5]
 8001dd6:	3b30      	subs	r3, #48	@ 0x30
 8001dd8:	4413      	add	r3, r2
 8001dda:	f8c7 3120 	str.w	r3, [r7, #288]	@ 0x120

        int day = (date_str[0] - '0') * 10 + (date_str[1] - '0');
 8001dde:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001de2:	f5a3 738a 	sub.w	r3, r3, #276	@ 0x114
 8001de6:	781b      	ldrb	r3, [r3, #0]
 8001de8:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
 8001dec:	4613      	mov	r3, r2
 8001dee:	009b      	lsls	r3, r3, #2
 8001df0:	4413      	add	r3, r2
 8001df2:	005b      	lsls	r3, r3, #1
 8001df4:	461a      	mov	r2, r3
 8001df6:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001dfa:	f5a3 738a 	sub.w	r3, r3, #276	@ 0x114
 8001dfe:	785b      	ldrb	r3, [r3, #1]
 8001e00:	3b30      	subs	r3, #48	@ 0x30
 8001e02:	4413      	add	r3, r2
 8001e04:	f8c7 311c 	str.w	r3, [r7, #284]	@ 0x11c
        int month = (date_str[2] - '0') * 10 + (date_str[3] - '0');
 8001e08:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001e0c:	f5a3 738a 	sub.w	r3, r3, #276	@ 0x114
 8001e10:	789b      	ldrb	r3, [r3, #2]
 8001e12:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
 8001e16:	4613      	mov	r3, r2
 8001e18:	009b      	lsls	r3, r3, #2
 8001e1a:	4413      	add	r3, r2
 8001e1c:	005b      	lsls	r3, r3, #1
 8001e1e:	461a      	mov	r2, r3
 8001e20:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001e24:	f5a3 738a 	sub.w	r3, r3, #276	@ 0x114
 8001e28:	78db      	ldrb	r3, [r3, #3]
 8001e2a:	3b30      	subs	r3, #48	@ 0x30
 8001e2c:	4413      	add	r3, r2
 8001e2e:	f8c7 3118 	str.w	r3, [r7, #280]	@ 0x118
        int year = (date_str[4] - '0') * 10 + (date_str[5] - '0') + 2000;
 8001e32:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001e36:	f5a3 738a 	sub.w	r3, r3, #276	@ 0x114
 8001e3a:	791b      	ldrb	r3, [r3, #4]
 8001e3c:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
 8001e40:	4613      	mov	r3, r2
 8001e42:	009b      	lsls	r3, r3, #2
 8001e44:	4413      	add	r3, r2
 8001e46:	005b      	lsls	r3, r3, #1
 8001e48:	461a      	mov	r2, r3
 8001e4a:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001e4e:	f5a3 738a 	sub.w	r3, r3, #276	@ 0x114
 8001e52:	795b      	ldrb	r3, [r3, #5]
 8001e54:	3b30      	subs	r3, #48	@ 0x30
 8001e56:	4413      	add	r3, r2
 8001e58:	f503 63fa 	add.w	r3, r3, #2000	@ 0x7d0
 8001e5c:	f8c7 3114 	str.w	r3, [r7, #276]	@ 0x114

        current_timestamp = calculate_unix_timestamp(year, month, day, hour, min, sec);
 8001e60:	f8d7 3120 	ldr.w	r3, [r7, #288]	@ 0x120
 8001e64:	9301      	str	r3, [sp, #4]
 8001e66:	f8d7 3124 	ldr.w	r3, [r7, #292]	@ 0x124
 8001e6a:	9300      	str	r3, [sp, #0]
 8001e6c:	f8d7 3128 	ldr.w	r3, [r7, #296]	@ 0x128
 8001e70:	f8d7 211c 	ldr.w	r2, [r7, #284]	@ 0x11c
 8001e74:	f8d7 1118 	ldr.w	r1, [r7, #280]	@ 0x118
 8001e78:	f8d7 0114 	ldr.w	r0, [r7, #276]	@ 0x114
 8001e7c:	f7ff fa2a 	bl	80012d4 <calculate_unix_timestamp>
 8001e80:	4603      	mov	r3, r0
 8001e82:	4a75      	ldr	r2, [pc, #468]	@ (8002058 <GPS_Parse_NMEA+0x984>)
 8001e84:	6013      	str	r3, [r2, #0]

        // Update coordinates from GPRMC if GPGGA not available
        if (current_lat == 0.0f || current_lon == 0.0f) {
 8001e86:	4b75      	ldr	r3, [pc, #468]	@ (800205c <GPS_Parse_NMEA+0x988>)
 8001e88:	681b      	ldr	r3, [r3, #0]
 8001e8a:	f04f 0100 	mov.w	r1, #0
 8001e8e:	4618      	mov	r0, r3
 8001e90:	f7ff f90c 	bl	80010ac <__aeabi_fcmpeq>
 8001e94:	4603      	mov	r3, r0
 8001e96:	2b00      	cmp	r3, #0
 8001e98:	d10a      	bne.n	8001eb0 <GPS_Parse_NMEA+0x7dc>
 8001e9a:	4b71      	ldr	r3, [pc, #452]	@ (8002060 <GPS_Parse_NMEA+0x98c>)
 8001e9c:	681b      	ldr	r3, [r3, #0]
 8001e9e:	f04f 0100 	mov.w	r1, #0
 8001ea2:	4618      	mov	r0, r3
 8001ea4:	f7ff f902 	bl	80010ac <__aeabi_fcmpeq>
 8001ea8:	4603      	mov	r3, r0
 8001eaa:	2b00      	cmp	r3, #0
 8001eac:	f000 80b0 	beq.w	8002010 <GPS_Parse_NMEA+0x93c>
            float lat = atof(lat_str);
 8001eb0:	f107 031c 	add.w	r3, r7, #28
 8001eb4:	4618      	mov	r0, r3
 8001eb6:	f000 ff29 	bl	8002d0c <atof>
 8001eba:	4602      	mov	r2, r0
 8001ebc:	460b      	mov	r3, r1
 8001ebe:	4610      	mov	r0, r2
 8001ec0:	4619      	mov	r1, r3
 8001ec2:	f7fe fe01 	bl	8000ac8 <__aeabi_d2f>
 8001ec6:	4603      	mov	r3, r0
 8001ec8:	f8c7 3110 	str.w	r3, [r7, #272]	@ 0x110
            int lat_deg = (int)(lat / 100);
 8001ecc:	4965      	ldr	r1, [pc, #404]	@ (8002064 <GPS_Parse_NMEA+0x990>)
 8001ece:	f8d7 0110 	ldr.w	r0, [r7, #272]	@ 0x110
 8001ed2:	f7ff f80b 	bl	8000eec <__aeabi_fdiv>
 8001ed6:	4603      	mov	r3, r0
 8001ed8:	4618      	mov	r0, r3
 8001eda:	f7ff f919 	bl	8001110 <__aeabi_f2iz>
 8001ede:	4603      	mov	r3, r0
 8001ee0:	f8c7 310c 	str.w	r3, [r7, #268]	@ 0x10c
            float lat_min = lat - (lat_deg * 100);
 8001ee4:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8001ee8:	2264      	movs	r2, #100	@ 0x64
 8001eea:	fb02 f303 	mul.w	r3, r2, r3
 8001eee:	4618      	mov	r0, r3
 8001ef0:	f7fe fef4 	bl	8000cdc <__aeabi_i2f>
 8001ef4:	4603      	mov	r3, r0
 8001ef6:	4619      	mov	r1, r3
 8001ef8:	f8d7 0110 	ldr.w	r0, [r7, #272]	@ 0x110
 8001efc:	f7fe fe38 	bl	8000b70 <__aeabi_fsub>
 8001f00:	4603      	mov	r3, r0
 8001f02:	f8c7 3108 	str.w	r3, [r7, #264]	@ 0x108
            if (lat_deg >= 0 && lat_min >= 0.0f) {
 8001f06:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8001f0a:	2b00      	cmp	r3, #0
 8001f0c:	db28      	blt.n	8001f60 <GPS_Parse_NMEA+0x88c>
 8001f0e:	f04f 0100 	mov.w	r1, #0
 8001f12:	f8d7 0108 	ldr.w	r0, [r7, #264]	@ 0x108
 8001f16:	f7ff f8e7 	bl	80010e8 <__aeabi_fcmpge>
 8001f1a:	4603      	mov	r3, r0
 8001f1c:	2b00      	cmp	r3, #0
 8001f1e:	d01f      	beq.n	8001f60 <GPS_Parse_NMEA+0x88c>
                current_lat = lat_deg + lat_min / 60.0f;
 8001f20:	f8d7 010c 	ldr.w	r0, [r7, #268]	@ 0x10c
 8001f24:	f7fe feda 	bl	8000cdc <__aeabi_i2f>
 8001f28:	4604      	mov	r4, r0
 8001f2a:	494f      	ldr	r1, [pc, #316]	@ (8002068 <GPS_Parse_NMEA+0x994>)
 8001f2c:	f8d7 0108 	ldr.w	r0, [r7, #264]	@ 0x108
 8001f30:	f7fe ffdc 	bl	8000eec <__aeabi_fdiv>
 8001f34:	4603      	mov	r3, r0
 8001f36:	4619      	mov	r1, r3
 8001f38:	4620      	mov	r0, r4
 8001f3a:	f7fe fe1b 	bl	8000b74 <__addsf3>
 8001f3e:	4603      	mov	r3, r0
 8001f40:	461a      	mov	r2, r3
 8001f42:	4b46      	ldr	r3, [pc, #280]	@ (800205c <GPS_Parse_NMEA+0x988>)
 8001f44:	601a      	str	r2, [r3, #0]
                if (lat_dir[0] == 'S') current_lat = -current_lat;
 8001f46:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001f4a:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 8001f4e:	781b      	ldrb	r3, [r3, #0]
 8001f50:	2b53      	cmp	r3, #83	@ 0x53
 8001f52:	d105      	bne.n	8001f60 <GPS_Parse_NMEA+0x88c>
 8001f54:	4b41      	ldr	r3, [pc, #260]	@ (800205c <GPS_Parse_NMEA+0x988>)
 8001f56:	681b      	ldr	r3, [r3, #0]
 8001f58:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000
 8001f5c:	4a3f      	ldr	r2, [pc, #252]	@ (800205c <GPS_Parse_NMEA+0x988>)
 8001f5e:	6013      	str	r3, [r2, #0]
            }

            float lon = atof(lon_str);
 8001f60:	f107 0310 	add.w	r3, r7, #16
 8001f64:	4618      	mov	r0, r3
 8001f66:	f000 fed1 	bl	8002d0c <atof>
 8001f6a:	4602      	mov	r2, r0
 8001f6c:	460b      	mov	r3, r1
 8001f6e:	4610      	mov	r0, r2
 8001f70:	4619      	mov	r1, r3
 8001f72:	f7fe fda9 	bl	8000ac8 <__aeabi_d2f>
 8001f76:	4603      	mov	r3, r0
 8001f78:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
            int lon_deg = (int)(lon / 100);
 8001f7c:	4939      	ldr	r1, [pc, #228]	@ (8002064 <GPS_Parse_NMEA+0x990>)
 8001f7e:	f8d7 0104 	ldr.w	r0, [r7, #260]	@ 0x104
 8001f82:	f7fe ffb3 	bl	8000eec <__aeabi_fdiv>
 8001f86:	4603      	mov	r3, r0
 8001f88:	4618      	mov	r0, r3
 8001f8a:	f7ff f8c1 	bl	8001110 <__aeabi_f2iz>
 8001f8e:	4603      	mov	r3, r0
 8001f90:	f8c7 3100 	str.w	r3, [r7, #256]	@ 0x100
            float lon_min = lon - (lon_deg * 100);
 8001f94:	f8d7 3100 	ldr.w	r3, [r7, #256]	@ 0x100
 8001f98:	2264      	movs	r2, #100	@ 0x64
 8001f9a:	fb02 f303 	mul.w	r3, r2, r3
 8001f9e:	4618      	mov	r0, r3
 8001fa0:	f7fe fe9c 	bl	8000cdc <__aeabi_i2f>
 8001fa4:	4603      	mov	r3, r0
 8001fa6:	4619      	mov	r1, r3
 8001fa8:	f8d7 0104 	ldr.w	r0, [r7, #260]	@ 0x104
 8001fac:	f7fe fde0 	bl	8000b70 <__aeabi_fsub>
 8001fb0:	4603      	mov	r3, r0
 8001fb2:	f8c7 30fc 	str.w	r3, [r7, #252]	@ 0xfc
            if (lon_deg >= 0 && lon_min >= 0.0f) {
 8001fb6:	f8d7 3100 	ldr.w	r3, [r7, #256]	@ 0x100
 8001fba:	2b00      	cmp	r3, #0
 8001fbc:	db28      	blt.n	8002010 <GPS_Parse_NMEA+0x93c>
 8001fbe:	f04f 0100 	mov.w	r1, #0
 8001fc2:	f8d7 00fc 	ldr.w	r0, [r7, #252]	@ 0xfc
 8001fc6:	f7ff f88f 	bl	80010e8 <__aeabi_fcmpge>
 8001fca:	4603      	mov	r3, r0
 8001fcc:	2b00      	cmp	r3, #0
 8001fce:	d01f      	beq.n	8002010 <GPS_Parse_NMEA+0x93c>
                current_lon = lon_deg + lon_min / 60.0f;
 8001fd0:	f8d7 0100 	ldr.w	r0, [r7, #256]	@ 0x100
 8001fd4:	f7fe fe82 	bl	8000cdc <__aeabi_i2f>
 8001fd8:	4604      	mov	r4, r0
 8001fda:	4923      	ldr	r1, [pc, #140]	@ (8002068 <GPS_Parse_NMEA+0x994>)
 8001fdc:	f8d7 00fc 	ldr.w	r0, [r7, #252]	@ 0xfc
 8001fe0:	f7fe ff84 	bl	8000eec <__aeabi_fdiv>
 8001fe4:	4603      	mov	r3, r0
 8001fe6:	4619      	mov	r1, r3
 8001fe8:	4620      	mov	r0, r4
 8001fea:	f7fe fdc3 	bl	8000b74 <__addsf3>
 8001fee:	4603      	mov	r3, r0
 8001ff0:	461a      	mov	r2, r3
 8001ff2:	4b1b      	ldr	r3, [pc, #108]	@ (8002060 <GPS_Parse_NMEA+0x98c>)
 8001ff4:	601a      	str	r2, [r3, #0]
                if (lon_dir[0] == 'W') current_lon = -current_lon;
 8001ff6:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001ffa:	f5a3 739c 	sub.w	r3, r3, #312	@ 0x138
 8001ffe:	781b      	ldrb	r3, [r3, #0]
 8002000:	2b57      	cmp	r3, #87	@ 0x57
 8002002:	d105      	bne.n	8002010 <GPS_Parse_NMEA+0x93c>
 8002004:	4b16      	ldr	r3, [pc, #88]	@ (8002060 <GPS_Parse_NMEA+0x98c>)
 8002006:	681b      	ldr	r3, [r3, #0]
 8002008:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000
 800200c:	4a14      	ldr	r2, [pc, #80]	@ (8002060 <GPS_Parse_NMEA+0x98c>)
 800200e:	6013      	str	r3, [r2, #0]
            }
        }

        snprintf(debug_buf, sizeof(debug_buf), "Timestamp: %lu, Lat: %.6f, Lon: %.6f\r\n",
 8002010:	4b11      	ldr	r3, [pc, #68]	@ (8002058 <GPS_Parse_NMEA+0x984>)
 8002012:	681e      	ldr	r6, [r3, #0]
 8002014:	4b11      	ldr	r3, [pc, #68]	@ (800205c <GPS_Parse_NMEA+0x988>)
 8002016:	681b      	ldr	r3, [r3, #0]
 8002018:	4618      	mov	r0, r3
 800201a:	f7fe fa05 	bl	8000428 <__aeabi_f2d>
 800201e:	4604      	mov	r4, r0
 8002020:	460d      	mov	r5, r1
 8002022:	4b0f      	ldr	r3, [pc, #60]	@ (8002060 <GPS_Parse_NMEA+0x98c>)
 8002024:	681b      	ldr	r3, [r3, #0]
 8002026:	4618      	mov	r0, r3
 8002028:	f7fe f9fe 	bl	8000428 <__aeabi_f2d>
 800202c:	4602      	mov	r2, r0
 800202e:	460b      	mov	r3, r1
 8002030:	f107 0064 	add.w	r0, r7, #100	@ 0x64
 8002034:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002038:	e9cd 4500 	strd	r4, r5, [sp]
 800203c:	4633      	mov	r3, r6
 800203e:	4a0b      	ldr	r2, [pc, #44]	@ (800206c <GPS_Parse_NMEA+0x998>)
 8002040:	2180      	movs	r1, #128	@ 0x80
 8002042:	f002 fa11 	bl	8004468 <sniprintf>
                 current_timestamp, current_lat, current_lon);
        DEBUG_Print(debug_buf);
 8002046:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 800204a:	4618      	mov	r0, r3
 800204c:	f7ff fa1e 	bl	800148c <DEBUG_Print>
    }
}
 8002050:	f507 77a2 	add.w	r7, r7, #324	@ 0x144
 8002054:	46bd      	mov	sp, r7
 8002056:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002058:	200003f8 	.word	0x200003f8
 800205c:	200003f0 	.word	0x200003f0
 8002060:	200003f4 	.word	0x200003f4
 8002064:	42c80000 	.word	0x42c80000
 8002068:	42700000 	.word	0x42700000
 800206c:	0800728c 	.word	0x0800728c

08002070 <is_point_in_polygon>:

static int is_point_in_polygon(Point p, const Point* poly, int n) {
 8002070:	b5b0      	push	{r4, r5, r7, lr}
 8002072:	b088      	sub	sp, #32
 8002074:	af00      	add	r7, sp, #0
 8002076:	f107 0408 	add.w	r4, r7, #8
 800207a:	e884 0003 	stmia.w	r4, {r0, r1}
 800207e:	607a      	str	r2, [r7, #4]
 8002080:	603b      	str	r3, [r7, #0]
    int i, j, c = 0;
 8002082:	2300      	movs	r3, #0
 8002084:	617b      	str	r3, [r7, #20]
    for (i = 0, j = n - 1; i < n; j = i++) {
 8002086:	2300      	movs	r3, #0
 8002088:	61fb      	str	r3, [r7, #28]
 800208a:	683b      	ldr	r3, [r7, #0]
 800208c:	3b01      	subs	r3, #1
 800208e:	61bb      	str	r3, [r7, #24]
 8002090:	e076      	b.n	8002180 <is_point_in_polygon+0x110>
        if (((poly[i].lat > p.lat) != (poly[j].lat > p.lat)) &&
 8002092:	69fb      	ldr	r3, [r7, #28]
 8002094:	00db      	lsls	r3, r3, #3
 8002096:	687a      	ldr	r2, [r7, #4]
 8002098:	4413      	add	r3, r2
 800209a:	681b      	ldr	r3, [r3, #0]
 800209c:	68ba      	ldr	r2, [r7, #8]
 800209e:	2101      	movs	r1, #1
 80020a0:	460c      	mov	r4, r1
 80020a2:	4611      	mov	r1, r2
 80020a4:	4618      	mov	r0, r3
 80020a6:	f7ff f829 	bl	80010fc <__aeabi_fcmpgt>
 80020aa:	4603      	mov	r3, r0
 80020ac:	2b00      	cmp	r3, #0
 80020ae:	d101      	bne.n	80020b4 <is_point_in_polygon+0x44>
 80020b0:	2300      	movs	r3, #0
 80020b2:	461c      	mov	r4, r3
 80020b4:	b2e4      	uxtb	r4, r4
 80020b6:	69bb      	ldr	r3, [r7, #24]
 80020b8:	00db      	lsls	r3, r3, #3
 80020ba:	687a      	ldr	r2, [r7, #4]
 80020bc:	4413      	add	r3, r2
 80020be:	681b      	ldr	r3, [r3, #0]
 80020c0:	68ba      	ldr	r2, [r7, #8]
 80020c2:	2101      	movs	r1, #1
 80020c4:	460d      	mov	r5, r1
 80020c6:	4611      	mov	r1, r2
 80020c8:	4618      	mov	r0, r3
 80020ca:	f7ff f817 	bl	80010fc <__aeabi_fcmpgt>
 80020ce:	4603      	mov	r3, r0
 80020d0:	2b00      	cmp	r3, #0
 80020d2:	d101      	bne.n	80020d8 <is_point_in_polygon+0x68>
 80020d4:	2300      	movs	r3, #0
 80020d6:	461d      	mov	r5, r3
 80020d8:	b2eb      	uxtb	r3, r5
 80020da:	4063      	eors	r3, r4
 80020dc:	b2db      	uxtb	r3, r3
 80020de:	2b00      	cmp	r3, #0
 80020e0:	d04a      	beq.n	8002178 <is_point_in_polygon+0x108>
            (p.lon < (poly[j].lon - poly[i].lon) * (p.lat - poly[i].lat) /
 80020e2:	68fc      	ldr	r4, [r7, #12]
 80020e4:	69bb      	ldr	r3, [r7, #24]
 80020e6:	00db      	lsls	r3, r3, #3
 80020e8:	687a      	ldr	r2, [r7, #4]
 80020ea:	4413      	add	r3, r2
 80020ec:	6858      	ldr	r0, [r3, #4]
 80020ee:	69fb      	ldr	r3, [r7, #28]
 80020f0:	00db      	lsls	r3, r3, #3
 80020f2:	687a      	ldr	r2, [r7, #4]
 80020f4:	4413      	add	r3, r2
 80020f6:	685b      	ldr	r3, [r3, #4]
 80020f8:	4619      	mov	r1, r3
 80020fa:	f7fe fd39 	bl	8000b70 <__aeabi_fsub>
 80020fe:	4603      	mov	r3, r0
 8002100:	461d      	mov	r5, r3
 8002102:	68b8      	ldr	r0, [r7, #8]
 8002104:	69fb      	ldr	r3, [r7, #28]
 8002106:	00db      	lsls	r3, r3, #3
 8002108:	687a      	ldr	r2, [r7, #4]
 800210a:	4413      	add	r3, r2
 800210c:	681b      	ldr	r3, [r3, #0]
 800210e:	4619      	mov	r1, r3
 8002110:	f7fe fd2e 	bl	8000b70 <__aeabi_fsub>
 8002114:	4603      	mov	r3, r0
 8002116:	4619      	mov	r1, r3
 8002118:	4628      	mov	r0, r5
 800211a:	f7fe fe33 	bl	8000d84 <__aeabi_fmul>
 800211e:	4603      	mov	r3, r0
 8002120:	461d      	mov	r5, r3
             (poly[j].lat - poly[i].lat) + poly[i].lon)) {
 8002122:	69bb      	ldr	r3, [r7, #24]
 8002124:	00db      	lsls	r3, r3, #3
 8002126:	687a      	ldr	r2, [r7, #4]
 8002128:	4413      	add	r3, r2
 800212a:	6818      	ldr	r0, [r3, #0]
 800212c:	69fb      	ldr	r3, [r7, #28]
 800212e:	00db      	lsls	r3, r3, #3
 8002130:	687a      	ldr	r2, [r7, #4]
 8002132:	4413      	add	r3, r2
 8002134:	681b      	ldr	r3, [r3, #0]
 8002136:	4619      	mov	r1, r3
 8002138:	f7fe fd1a 	bl	8000b70 <__aeabi_fsub>
 800213c:	4603      	mov	r3, r0
            (p.lon < (poly[j].lon - poly[i].lon) * (p.lat - poly[i].lat) /
 800213e:	4619      	mov	r1, r3
 8002140:	4628      	mov	r0, r5
 8002142:	f7fe fed3 	bl	8000eec <__aeabi_fdiv>
 8002146:	4603      	mov	r3, r0
 8002148:	4618      	mov	r0, r3
             (poly[j].lat - poly[i].lat) + poly[i].lon)) {
 800214a:	69fb      	ldr	r3, [r7, #28]
 800214c:	00db      	lsls	r3, r3, #3
 800214e:	687a      	ldr	r2, [r7, #4]
 8002150:	4413      	add	r3, r2
 8002152:	685b      	ldr	r3, [r3, #4]
 8002154:	4619      	mov	r1, r3
 8002156:	f7fe fd0d 	bl	8000b74 <__addsf3>
 800215a:	4603      	mov	r3, r0
        if (((poly[i].lat > p.lat) != (poly[j].lat > p.lat)) &&
 800215c:	4619      	mov	r1, r3
 800215e:	4620      	mov	r0, r4
 8002160:	f7fe ffae 	bl	80010c0 <__aeabi_fcmplt>
 8002164:	4603      	mov	r3, r0
 8002166:	2b00      	cmp	r3, #0
 8002168:	d006      	beq.n	8002178 <is_point_in_polygon+0x108>
            c = !c;
 800216a:	697b      	ldr	r3, [r7, #20]
 800216c:	2b00      	cmp	r3, #0
 800216e:	bf0c      	ite	eq
 8002170:	2301      	moveq	r3, #1
 8002172:	2300      	movne	r3, #0
 8002174:	b2db      	uxtb	r3, r3
 8002176:	617b      	str	r3, [r7, #20]
    for (i = 0, j = n - 1; i < n; j = i++) {
 8002178:	69fb      	ldr	r3, [r7, #28]
 800217a:	1c5a      	adds	r2, r3, #1
 800217c:	61fa      	str	r2, [r7, #28]
 800217e:	61bb      	str	r3, [r7, #24]
 8002180:	69fa      	ldr	r2, [r7, #28]
 8002182:	683b      	ldr	r3, [r7, #0]
 8002184:	429a      	cmp	r2, r3
 8002186:	db84      	blt.n	8002092 <is_point_in_polygon+0x22>
        }
    }
    return c;
 8002188:	697b      	ldr	r3, [r7, #20]
}
 800218a:	4618      	mov	r0, r3
 800218c:	3720      	adds	r7, #32
 800218e:	46bd      	mov	sp, r7
 8002190:	bdb0      	pop	{r4, r5, r7, pc}

08002192 <GPS_Init>:

void GPS_Init(void) {
 8002192:	b580      	push	{r7, lr}
 8002194:	af00      	add	r7, sp, #0
    DEBUG_UART_Init();
 8002196:	f7ff f945 	bl	8001424 <DEBUG_UART_Init>
    GPS_UART_Init();
 800219a:	f7ff f995 	bl	80014c8 <GPS_UART_Init>
}
 800219e:	bf00      	nop
 80021a0:	bd80      	pop	{r7, pc}
	...

080021a4 <GPS_Get_Timestamp>:

uint32_t GPS_Get_Timestamp(void) {
 80021a4:	b480      	push	{r7}
 80021a6:	af00      	add	r7, sp, #0
    return current_timestamp;
 80021a8:	4b02      	ldr	r3, [pc, #8]	@ (80021b4 <GPS_Get_Timestamp+0x10>)
 80021aa:	681b      	ldr	r3, [r3, #0]
}
 80021ac:	4618      	mov	r0, r3
 80021ae:	46bd      	mov	sp, r7
 80021b0:	bc80      	pop	{r7}
 80021b2:	4770      	bx	lr
 80021b4:	200003f8 	.word	0x200003f8

080021b8 <GPS_Check_Geofence>:

void GPS_Check_Geofence(uint8_t dev_id, uint32_t timestamp) {
 80021b8:	b5b0      	push	{r4, r5, r7, lr}
 80021ba:	b0aa      	sub	sp, #168	@ 0xa8
 80021bc:	af04      	add	r7, sp, #16
 80021be:	4603      	mov	r3, r0
 80021c0:	6039      	str	r1, [r7, #0]
 80021c2:	71fb      	strb	r3, [r7, #7]
    char debug_buf[128];
    Point p = {current_lat, current_lon};
 80021c4:	4b4b      	ldr	r3, [pc, #300]	@ (80022f4 <GPS_Check_Geofence+0x13c>)
 80021c6:	681b      	ldr	r3, [r3, #0]
 80021c8:	60fb      	str	r3, [r7, #12]
 80021ca:	4b4b      	ldr	r3, [pc, #300]	@ (80022f8 <GPS_Check_Geofence+0x140>)
 80021cc:	681b      	ldr	r3, [r3, #0]
 80021ce:	613b      	str	r3, [r7, #16]
    if (current_lat == 0.0f || current_lon == 0.0f) {
 80021d0:	4b48      	ldr	r3, [pc, #288]	@ (80022f4 <GPS_Check_Geofence+0x13c>)
 80021d2:	681b      	ldr	r3, [r3, #0]
 80021d4:	f04f 0100 	mov.w	r1, #0
 80021d8:	4618      	mov	r0, r3
 80021da:	f7fe ff67 	bl	80010ac <__aeabi_fcmpeq>
 80021de:	4603      	mov	r3, r0
 80021e0:	2b00      	cmp	r3, #0
 80021e2:	d109      	bne.n	80021f8 <GPS_Check_Geofence+0x40>
 80021e4:	4b44      	ldr	r3, [pc, #272]	@ (80022f8 <GPS_Check_Geofence+0x140>)
 80021e6:	681b      	ldr	r3, [r3, #0]
 80021e8:	f04f 0100 	mov.w	r1, #0
 80021ec:	4618      	mov	r0, r3
 80021ee:	f7fe ff5d 	bl	80010ac <__aeabi_fcmpeq>
 80021f2:	4603      	mov	r3, r0
 80021f4:	2b00      	cmp	r3, #0
 80021f6:	d021      	beq.n	800223c <GPS_Check_Geofence+0x84>
        LED_ERR_ON();
 80021f8:	f000 f8e6 	bl	80023c8 <LED_ERR_ON>
        LED_SEND_OFF();
 80021fc:	f000 f8fc 	bl	80023f8 <LED_SEND_OFF>
        snprintf(debug_buf, sizeof(debug_buf), "No GPS fix: lat=%.6f, lon=%.6f\r\n", current_lat, current_lon);
 8002200:	4b3c      	ldr	r3, [pc, #240]	@ (80022f4 <GPS_Check_Geofence+0x13c>)
 8002202:	681b      	ldr	r3, [r3, #0]
 8002204:	4618      	mov	r0, r3
 8002206:	f7fe f90f 	bl	8000428 <__aeabi_f2d>
 800220a:	4604      	mov	r4, r0
 800220c:	460d      	mov	r5, r1
 800220e:	4b3a      	ldr	r3, [pc, #232]	@ (80022f8 <GPS_Check_Geofence+0x140>)
 8002210:	681b      	ldr	r3, [r3, #0]
 8002212:	4618      	mov	r0, r3
 8002214:	f7fe f908 	bl	8000428 <__aeabi_f2d>
 8002218:	4602      	mov	r2, r0
 800221a:	460b      	mov	r3, r1
 800221c:	f107 0014 	add.w	r0, r7, #20
 8002220:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002224:	e9cd 4500 	strd	r4, r5, [sp]
 8002228:	4a34      	ldr	r2, [pc, #208]	@ (80022fc <GPS_Check_Geofence+0x144>)
 800222a:	2180      	movs	r1, #128	@ 0x80
 800222c:	f002 f91c 	bl	8004468 <sniprintf>
        DEBUG_Print(debug_buf);
 8002230:	f107 0314 	add.w	r3, r7, #20
 8002234:	4618      	mov	r0, r3
 8002236:	f7ff f929 	bl	800148c <DEBUG_Print>
 800223a:	e058      	b.n	80022ee <GPS_Check_Geofence+0x136>
        return;
    }
    LED_ERR_OFF();
 800223c:	f000 f8d0 	bl	80023e0 <LED_ERR_OFF>
    int inside = is_point_in_polygon(p, fence, 4);
 8002240:	2304      	movs	r3, #4
 8002242:	4a2f      	ldr	r2, [pc, #188]	@ (8002300 <GPS_Check_Geofence+0x148>)
 8002244:	f107 010c 	add.w	r1, r7, #12
 8002248:	c903      	ldmia	r1, {r0, r1}
 800224a:	f7ff ff11 	bl	8002070 <is_point_in_polygon>
 800224e:	f8c7 0094 	str.w	r0, [r7, #148]	@ 0x94

    if (inside) {
 8002252:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 8002256:	2b00      	cmp	r3, #0
 8002258:	d01f      	beq.n	800229a <GPS_Check_Geofence+0xe2>
        LED_SEND_OFF();
 800225a:	f000 f8cd 	bl	80023f8 <LED_SEND_OFF>
        snprintf(debug_buf, sizeof(debug_buf), "Inside fence: lat=%.6f, lon=%.6f\r\n", current_lat, current_lon);
 800225e:	4b25      	ldr	r3, [pc, #148]	@ (80022f4 <GPS_Check_Geofence+0x13c>)
 8002260:	681b      	ldr	r3, [r3, #0]
 8002262:	4618      	mov	r0, r3
 8002264:	f7fe f8e0 	bl	8000428 <__aeabi_f2d>
 8002268:	4604      	mov	r4, r0
 800226a:	460d      	mov	r5, r1
 800226c:	4b22      	ldr	r3, [pc, #136]	@ (80022f8 <GPS_Check_Geofence+0x140>)
 800226e:	681b      	ldr	r3, [r3, #0]
 8002270:	4618      	mov	r0, r3
 8002272:	f7fe f8d9 	bl	8000428 <__aeabi_f2d>
 8002276:	4602      	mov	r2, r0
 8002278:	460b      	mov	r3, r1
 800227a:	f107 0014 	add.w	r0, r7, #20
 800227e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002282:	e9cd 4500 	strd	r4, r5, [sp]
 8002286:	4a1f      	ldr	r2, [pc, #124]	@ (8002304 <GPS_Check_Geofence+0x14c>)
 8002288:	2180      	movs	r1, #128	@ 0x80
 800228a:	f002 f8ed 	bl	8004468 <sniprintf>
        DEBUG_Print(debug_buf);
 800228e:	f107 0314 	add.w	r3, r7, #20
 8002292:	4618      	mov	r0, r3
 8002294:	f7ff f8fa 	bl	800148c <DEBUG_Print>
 8002298:	e029      	b.n	80022ee <GPS_Check_Geofence+0x136>
    } else {
        LED_SEND_TOGGLE();
 800229a:	f000 f8b9 	bl	8002410 <LED_SEND_TOGGLE>
        delay_ms(100);
 800229e:	2064      	movs	r0, #100	@ 0x64
 80022a0:	f000 fce8 	bl	8002c74 <delay_ms>
        lora_prepare_and_send(dev_id, timestamp, current_lat, current_lon);
 80022a4:	4b13      	ldr	r3, [pc, #76]	@ (80022f4 <GPS_Check_Geofence+0x13c>)
 80022a6:	681a      	ldr	r2, [r3, #0]
 80022a8:	4b13      	ldr	r3, [pc, #76]	@ (80022f8 <GPS_Check_Geofence+0x140>)
 80022aa:	681b      	ldr	r3, [r3, #0]
 80022ac:	79f8      	ldrb	r0, [r7, #7]
 80022ae:	6839      	ldr	r1, [r7, #0]
 80022b0:	f000 fa20 	bl	80026f4 <lora_prepare_and_send>
        snprintf(debug_buf, sizeof(debug_buf), "Outside fence: lat=%.6f, lon=%.6f\r\n", current_lat, current_lon);
 80022b4:	4b0f      	ldr	r3, [pc, #60]	@ (80022f4 <GPS_Check_Geofence+0x13c>)
 80022b6:	681b      	ldr	r3, [r3, #0]
 80022b8:	4618      	mov	r0, r3
 80022ba:	f7fe f8b5 	bl	8000428 <__aeabi_f2d>
 80022be:	4604      	mov	r4, r0
 80022c0:	460d      	mov	r5, r1
 80022c2:	4b0d      	ldr	r3, [pc, #52]	@ (80022f8 <GPS_Check_Geofence+0x140>)
 80022c4:	681b      	ldr	r3, [r3, #0]
 80022c6:	4618      	mov	r0, r3
 80022c8:	f7fe f8ae 	bl	8000428 <__aeabi_f2d>
 80022cc:	4602      	mov	r2, r0
 80022ce:	460b      	mov	r3, r1
 80022d0:	f107 0014 	add.w	r0, r7, #20
 80022d4:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80022d8:	e9cd 4500 	strd	r4, r5, [sp]
 80022dc:	4a0a      	ldr	r2, [pc, #40]	@ (8002308 <GPS_Check_Geofence+0x150>)
 80022de:	2180      	movs	r1, #128	@ 0x80
 80022e0:	f002 f8c2 	bl	8004468 <sniprintf>
        DEBUG_Print(debug_buf);
 80022e4:	f107 0314 	add.w	r3, r7, #20
 80022e8:	4618      	mov	r0, r3
 80022ea:	f7ff f8cf 	bl	800148c <DEBUG_Print>
    }
}
 80022ee:	3798      	adds	r7, #152	@ 0x98
 80022f0:	46bd      	mov	sp, r7
 80022f2:	bdb0      	pop	{r4, r5, r7, pc}
 80022f4:	200003f0 	.word	0x200003f0
 80022f8:	200003f4 	.word	0x200003f4
 80022fc:	080072b4 	.word	0x080072b4
 8002300:	080073a8 	.word	0x080073a8
 8002304:	080072d8 	.word	0x080072d8
 8002308:	080072fc 	.word	0x080072fc

0800230c <LED_Init>:
#include "led.h"

void LED_Init(void) {
 800230c:	b480      	push	{r7}
 800230e:	af00      	add	r7, sp, #0
    RCC->APB2ENR |= RCC_APB2ENR_IOPBEN;
 8002310:	4b1e      	ldr	r3, [pc, #120]	@ (800238c <LED_Init+0x80>)
 8002312:	699b      	ldr	r3, [r3, #24]
 8002314:	4a1d      	ldr	r2, [pc, #116]	@ (800238c <LED_Init+0x80>)
 8002316:	f043 0308 	orr.w	r3, r3, #8
 800231a:	6193      	str	r3, [r2, #24]

    // PB0, PB1, PB10, PB11: output push-pull 2MHz
    GPIOB->CRL &= ~(GPIO_CRL_CNF0 | GPIO_CRL_MODE0);
 800231c:	4b1c      	ldr	r3, [pc, #112]	@ (8002390 <LED_Init+0x84>)
 800231e:	681b      	ldr	r3, [r3, #0]
 8002320:	4a1b      	ldr	r2, [pc, #108]	@ (8002390 <LED_Init+0x84>)
 8002322:	f023 030f 	bic.w	r3, r3, #15
 8002326:	6013      	str	r3, [r2, #0]
    GPIOB->CRL |=  (GPIO_CRL_MODE0_1); // PB0: LED_POWER
 8002328:	4b19      	ldr	r3, [pc, #100]	@ (8002390 <LED_Init+0x84>)
 800232a:	681b      	ldr	r3, [r3, #0]
 800232c:	4a18      	ldr	r2, [pc, #96]	@ (8002390 <LED_Init+0x84>)
 800232e:	f043 0302 	orr.w	r3, r3, #2
 8002332:	6013      	str	r3, [r2, #0]

    GPIOB->CRL &= ~(GPIO_CRL_CNF1 | GPIO_CRL_MODE1);
 8002334:	4b16      	ldr	r3, [pc, #88]	@ (8002390 <LED_Init+0x84>)
 8002336:	681b      	ldr	r3, [r3, #0]
 8002338:	4a15      	ldr	r2, [pc, #84]	@ (8002390 <LED_Init+0x84>)
 800233a:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800233e:	6013      	str	r3, [r2, #0]
    GPIOB->CRL |=  (GPIO_CRL_MODE1_1); // PB1: LED_OK
 8002340:	4b13      	ldr	r3, [pc, #76]	@ (8002390 <LED_Init+0x84>)
 8002342:	681b      	ldr	r3, [r3, #0]
 8002344:	4a12      	ldr	r2, [pc, #72]	@ (8002390 <LED_Init+0x84>)
 8002346:	f043 0320 	orr.w	r3, r3, #32
 800234a:	6013      	str	r3, [r2, #0]

    GPIOB->CRH &= ~(GPIO_CRH_CNF10 | GPIO_CRH_MODE10);
 800234c:	4b10      	ldr	r3, [pc, #64]	@ (8002390 <LED_Init+0x84>)
 800234e:	685b      	ldr	r3, [r3, #4]
 8002350:	4a0f      	ldr	r2, [pc, #60]	@ (8002390 <LED_Init+0x84>)
 8002352:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8002356:	6053      	str	r3, [r2, #4]
    GPIOB->CRH |=  (GPIO_CRH_MODE10_1); // PB10: LED_SEND
 8002358:	4b0d      	ldr	r3, [pc, #52]	@ (8002390 <LED_Init+0x84>)
 800235a:	685b      	ldr	r3, [r3, #4]
 800235c:	4a0c      	ldr	r2, [pc, #48]	@ (8002390 <LED_Init+0x84>)
 800235e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002362:	6053      	str	r3, [r2, #4]

    GPIOB->CRH &= ~(GPIO_CRH_CNF11 | GPIO_CRH_MODE11);
 8002364:	4b0a      	ldr	r3, [pc, #40]	@ (8002390 <LED_Init+0x84>)
 8002366:	685b      	ldr	r3, [r3, #4]
 8002368:	4a09      	ldr	r2, [pc, #36]	@ (8002390 <LED_Init+0x84>)
 800236a:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 800236e:	6053      	str	r3, [r2, #4]
    GPIOB->CRH |=  (GPIO_CRH_MODE11_1); // PB11: LED_ERR
 8002370:	4b07      	ldr	r3, [pc, #28]	@ (8002390 <LED_Init+0x84>)
 8002372:	685b      	ldr	r3, [r3, #4]
 8002374:	4a06      	ldr	r2, [pc, #24]	@ (8002390 <LED_Init+0x84>)
 8002376:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 800237a:	6053      	str	r3, [r2, #4]

    // Tắt tất cả LED ban đầu
    GPIOB->BSRR = GPIO_BSRR_BR0 | GPIO_BSRR_BR1 | GPIO_BSRR_BR10 | GPIO_BSRR_BR11;
 800237c:	4b04      	ldr	r3, [pc, #16]	@ (8002390 <LED_Init+0x84>)
 800237e:	4a05      	ldr	r2, [pc, #20]	@ (8002394 <LED_Init+0x88>)
 8002380:	611a      	str	r2, [r3, #16]
}
 8002382:	bf00      	nop
 8002384:	46bd      	mov	sp, r7
 8002386:	bc80      	pop	{r7}
 8002388:	4770      	bx	lr
 800238a:	bf00      	nop
 800238c:	40021000 	.word	0x40021000
 8002390:	40010c00 	.word	0x40010c00
 8002394:	0c030000 	.word	0x0c030000

08002398 <LED_POWER_ON>:

void LED_POWER_ON(void) {
 8002398:	b480      	push	{r7}
 800239a:	af00      	add	r7, sp, #0
    GPIOB->BSRR = GPIO_BSRR_BS0;
 800239c:	4b03      	ldr	r3, [pc, #12]	@ (80023ac <LED_POWER_ON+0x14>)
 800239e:	2201      	movs	r2, #1
 80023a0:	611a      	str	r2, [r3, #16]
}
 80023a2:	bf00      	nop
 80023a4:	46bd      	mov	sp, r7
 80023a6:	bc80      	pop	{r7}
 80023a8:	4770      	bx	lr
 80023aa:	bf00      	nop
 80023ac:	40010c00 	.word	0x40010c00

080023b0 <LED_OK_ON>:

void LED_POWER_OFF(void) {
    GPIOB->BSRR = GPIO_BSRR_BR0;
}

void LED_OK_ON(void) {
 80023b0:	b480      	push	{r7}
 80023b2:	af00      	add	r7, sp, #0
    GPIOB->BSRR = GPIO_BSRR_BS1;
 80023b4:	4b03      	ldr	r3, [pc, #12]	@ (80023c4 <LED_OK_ON+0x14>)
 80023b6:	2202      	movs	r2, #2
 80023b8:	611a      	str	r2, [r3, #16]
}
 80023ba:	bf00      	nop
 80023bc:	46bd      	mov	sp, r7
 80023be:	bc80      	pop	{r7}
 80023c0:	4770      	bx	lr
 80023c2:	bf00      	nop
 80023c4:	40010c00 	.word	0x40010c00

080023c8 <LED_ERR_ON>:

void LED_OK_OFF(void) {
    GPIOB->BSRR = GPIO_BSRR_BR1;
}

void LED_ERR_ON(void) {
 80023c8:	b480      	push	{r7}
 80023ca:	af00      	add	r7, sp, #0
    GPIOB->BSRR = GPIO_BSRR_BS11;
 80023cc:	4b03      	ldr	r3, [pc, #12]	@ (80023dc <LED_ERR_ON+0x14>)
 80023ce:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 80023d2:	611a      	str	r2, [r3, #16]
}
 80023d4:	bf00      	nop
 80023d6:	46bd      	mov	sp, r7
 80023d8:	bc80      	pop	{r7}
 80023da:	4770      	bx	lr
 80023dc:	40010c00 	.word	0x40010c00

080023e0 <LED_ERR_OFF>:

void LED_ERR_OFF(void) {
 80023e0:	b480      	push	{r7}
 80023e2:	af00      	add	r7, sp, #0
    GPIOB->BSRR = GPIO_BSRR_BR11;
 80023e4:	4b03      	ldr	r3, [pc, #12]	@ (80023f4 <LED_ERR_OFF+0x14>)
 80023e6:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 80023ea:	611a      	str	r2, [r3, #16]
}
 80023ec:	bf00      	nop
 80023ee:	46bd      	mov	sp, r7
 80023f0:	bc80      	pop	{r7}
 80023f2:	4770      	bx	lr
 80023f4:	40010c00 	.word	0x40010c00

080023f8 <LED_SEND_OFF>:

void LED_SEND_ON(void) {
    GPIOB->BSRR = GPIO_BSRR_BS10;
}

void LED_SEND_OFF(void) {
 80023f8:	b480      	push	{r7}
 80023fa:	af00      	add	r7, sp, #0
    GPIOB->BSRR = GPIO_BSRR_BR10;
 80023fc:	4b03      	ldr	r3, [pc, #12]	@ (800240c <LED_SEND_OFF+0x14>)
 80023fe:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8002402:	611a      	str	r2, [r3, #16]
}
 8002404:	bf00      	nop
 8002406:	46bd      	mov	sp, r7
 8002408:	bc80      	pop	{r7}
 800240a:	4770      	bx	lr
 800240c:	40010c00 	.word	0x40010c00

08002410 <LED_SEND_TOGGLE>:

void LED_SEND_TOGGLE(void) {
 8002410:	b480      	push	{r7}
 8002412:	af00      	add	r7, sp, #0
    GPIOB->ODR ^= (1 << 10); // Toggle PB10
 8002414:	4b04      	ldr	r3, [pc, #16]	@ (8002428 <LED_SEND_TOGGLE+0x18>)
 8002416:	68db      	ldr	r3, [r3, #12]
 8002418:	4a03      	ldr	r2, [pc, #12]	@ (8002428 <LED_SEND_TOGGLE+0x18>)
 800241a:	f483 6380 	eor.w	r3, r3, #1024	@ 0x400
 800241e:	60d3      	str	r3, [r2, #12]
}
 8002420:	bf00      	nop
 8002422:	46bd      	mov	sp, r7
 8002424:	bc80      	pop	{r7}
 8002426:	4770      	bx	lr
 8002428:	40010c00 	.word	0x40010c00

0800242c <SPI1_Init>:
#define LORA_NSS_LOW()   (GPIOA->BSRR = GPIO_BSRR_BR4)
#define LORA_NSS_HIGH()  (GPIOA->BSRR = GPIO_BSRR_BS4)
#define LORA_RST_LOW()   (GPIOA->BSRR = GPIO_BSRR_BR1)   // PA1: RST
#define LORA_RST_HIGH()  (GPIOA->BSRR = GPIO_BSRR_BS1)

void SPI1_Init(void) {
 800242c:	b480      	push	{r7}
 800242e:	af00      	add	r7, sp, #0
    RCC->APB2ENR |= RCC_APB2ENR_IOPAEN | RCC_APB2ENR_AFIOEN | RCC_APB2ENR_SPI1EN;
 8002430:	4b22      	ldr	r3, [pc, #136]	@ (80024bc <SPI1_Init+0x90>)
 8002432:	699b      	ldr	r3, [r3, #24]
 8002434:	4a21      	ldr	r2, [pc, #132]	@ (80024bc <SPI1_Init+0x90>)
 8002436:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800243a:	f043 0305 	orr.w	r3, r3, #5
 800243e:	6193      	str	r3, [r2, #24]

    GPIOA->CRL &= ~(GPIO_CRL_CNF5 | GPIO_CRL_MODE5);
 8002440:	4b1f      	ldr	r3, [pc, #124]	@ (80024c0 <SPI1_Init+0x94>)
 8002442:	681b      	ldr	r3, [r3, #0]
 8002444:	4a1e      	ldr	r2, [pc, #120]	@ (80024c0 <SPI1_Init+0x94>)
 8002446:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 800244a:	6013      	str	r3, [r2, #0]
    GPIOA->CRL |=  (GPIO_CRL_MODE5_1 | GPIO_CRL_MODE5_0 | GPIO_CRL_CNF5_1); // PA5: SCK
 800244c:	4b1c      	ldr	r3, [pc, #112]	@ (80024c0 <SPI1_Init+0x94>)
 800244e:	681b      	ldr	r3, [r3, #0]
 8002450:	4a1b      	ldr	r2, [pc, #108]	@ (80024c0 <SPI1_Init+0x94>)
 8002452:	f443 0330 	orr.w	r3, r3, #11534336	@ 0xb00000
 8002456:	6013      	str	r3, [r2, #0]

    GPIOA->CRL &= ~(GPIO_CRL_CNF7 | GPIO_CRL_MODE7);
 8002458:	4b19      	ldr	r3, [pc, #100]	@ (80024c0 <SPI1_Init+0x94>)
 800245a:	681b      	ldr	r3, [r3, #0]
 800245c:	4a18      	ldr	r2, [pc, #96]	@ (80024c0 <SPI1_Init+0x94>)
 800245e:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8002462:	6013      	str	r3, [r2, #0]
    GPIOA->CRL |=  (GPIO_CRL_MODE7_1 | GPIO_CRL_MODE7_0 | GPIO_CRL_CNF7_1); // PA7: MOSI
 8002464:	4b16      	ldr	r3, [pc, #88]	@ (80024c0 <SPI1_Init+0x94>)
 8002466:	681b      	ldr	r3, [r3, #0]
 8002468:	4a15      	ldr	r2, [pc, #84]	@ (80024c0 <SPI1_Init+0x94>)
 800246a:	f043 4330 	orr.w	r3, r3, #2952790016	@ 0xb0000000
 800246e:	6013      	str	r3, [r2, #0]

    GPIOA->CRL &= ~(GPIO_CRL_CNF6 | GPIO_CRL_MODE6);
 8002470:	4b13      	ldr	r3, [pc, #76]	@ (80024c0 <SPI1_Init+0x94>)
 8002472:	681b      	ldr	r3, [r3, #0]
 8002474:	4a12      	ldr	r2, [pc, #72]	@ (80024c0 <SPI1_Init+0x94>)
 8002476:	f023 6370 	bic.w	r3, r3, #251658240	@ 0xf000000
 800247a:	6013      	str	r3, [r2, #0]
    GPIOA->CRL |= GPIO_CRL_CNF6_0; // PA6: MISO
 800247c:	4b10      	ldr	r3, [pc, #64]	@ (80024c0 <SPI1_Init+0x94>)
 800247e:	681b      	ldr	r3, [r3, #0]
 8002480:	4a0f      	ldr	r2, [pc, #60]	@ (80024c0 <SPI1_Init+0x94>)
 8002482:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8002486:	6013      	str	r3, [r2, #0]

    GPIOA->CRL &= ~(GPIO_CRL_CNF4 | GPIO_CRL_MODE4);
 8002488:	4b0d      	ldr	r3, [pc, #52]	@ (80024c0 <SPI1_Init+0x94>)
 800248a:	681b      	ldr	r3, [r3, #0]
 800248c:	4a0c      	ldr	r2, [pc, #48]	@ (80024c0 <SPI1_Init+0x94>)
 800248e:	f423 2370 	bic.w	r3, r3, #983040	@ 0xf0000
 8002492:	6013      	str	r3, [r2, #0]
    GPIOA->CRL |= (GPIO_CRL_MODE4_1 | GPIO_CRL_MODE4_0); // PA4: NSS
 8002494:	4b0a      	ldr	r3, [pc, #40]	@ (80024c0 <SPI1_Init+0x94>)
 8002496:	681b      	ldr	r3, [r3, #0]
 8002498:	4a09      	ldr	r2, [pc, #36]	@ (80024c0 <SPI1_Init+0x94>)
 800249a:	f443 3340 	orr.w	r3, r3, #196608	@ 0x30000
 800249e:	6013      	str	r3, [r2, #0]

    SPI1->CR1 = SPI_CR1_MSTR | SPI_CR1_SSI | SPI_CR1_SSM | SPI_CR1_BR_1;
 80024a0:	4b08      	ldr	r3, [pc, #32]	@ (80024c4 <SPI1_Init+0x98>)
 80024a2:	f44f 7245 	mov.w	r2, #788	@ 0x314
 80024a6:	601a      	str	r2, [r3, #0]
    SPI1->CR1 |= SPI_CR1_SPE;
 80024a8:	4b06      	ldr	r3, [pc, #24]	@ (80024c4 <SPI1_Init+0x98>)
 80024aa:	681b      	ldr	r3, [r3, #0]
 80024ac:	4a05      	ldr	r2, [pc, #20]	@ (80024c4 <SPI1_Init+0x98>)
 80024ae:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80024b2:	6013      	str	r3, [r2, #0]
}
 80024b4:	bf00      	nop
 80024b6:	46bd      	mov	sp, r7
 80024b8:	bc80      	pop	{r7}
 80024ba:	4770      	bx	lr
 80024bc:	40021000 	.word	0x40021000
 80024c0:	40010800 	.word	0x40010800
 80024c4:	40013000 	.word	0x40013000

080024c8 <LORA_GPIO_Init>:

void LORA_GPIO_Init(void) {
 80024c8:	b480      	push	{r7}
 80024ca:	af00      	add	r7, sp, #0
    RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;
 80024cc:	4b13      	ldr	r3, [pc, #76]	@ (800251c <LORA_GPIO_Init+0x54>)
 80024ce:	699b      	ldr	r3, [r3, #24]
 80024d0:	4a12      	ldr	r2, [pc, #72]	@ (800251c <LORA_GPIO_Init+0x54>)
 80024d2:	f043 0304 	orr.w	r3, r3, #4
 80024d6:	6193      	str	r3, [r2, #24]

    GPIOA->CRL &= ~(GPIO_CRL_MODE1 | GPIO_CRL_CNF1);
 80024d8:	4b11      	ldr	r3, [pc, #68]	@ (8002520 <LORA_GPIO_Init+0x58>)
 80024da:	681b      	ldr	r3, [r3, #0]
 80024dc:	4a10      	ldr	r2, [pc, #64]	@ (8002520 <LORA_GPIO_Init+0x58>)
 80024de:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80024e2:	6013      	str	r3, [r2, #0]
    GPIOA->CRL |= (GPIO_CRL_MODE1_1 | GPIO_CRL_MODE1_0); // PA1: RST
 80024e4:	4b0e      	ldr	r3, [pc, #56]	@ (8002520 <LORA_GPIO_Init+0x58>)
 80024e6:	681b      	ldr	r3, [r3, #0]
 80024e8:	4a0d      	ldr	r2, [pc, #52]	@ (8002520 <LORA_GPIO_Init+0x58>)
 80024ea:	f043 0330 	orr.w	r3, r3, #48	@ 0x30
 80024ee:	6013      	str	r3, [r2, #0]

    GPIOA->CRL &= ~(GPIO_CRL_MODE4 | GPIO_CRL_CNF4);
 80024f0:	4b0b      	ldr	r3, [pc, #44]	@ (8002520 <LORA_GPIO_Init+0x58>)
 80024f2:	681b      	ldr	r3, [r3, #0]
 80024f4:	4a0a      	ldr	r2, [pc, #40]	@ (8002520 <LORA_GPIO_Init+0x58>)
 80024f6:	f423 2370 	bic.w	r3, r3, #983040	@ 0xf0000
 80024fa:	6013      	str	r3, [r2, #0]
    GPIOA->CRL |= (GPIO_CRL_MODE4_1 | GPIO_CRL_MODE4_0); // PA4: NSS
 80024fc:	4b08      	ldr	r3, [pc, #32]	@ (8002520 <LORA_GPIO_Init+0x58>)
 80024fe:	681b      	ldr	r3, [r3, #0]
 8002500:	4a07      	ldr	r2, [pc, #28]	@ (8002520 <LORA_GPIO_Init+0x58>)
 8002502:	f443 3340 	orr.w	r3, r3, #196608	@ 0x30000
 8002506:	6013      	str	r3, [r2, #0]

    LORA_NSS_HIGH();
 8002508:	4b05      	ldr	r3, [pc, #20]	@ (8002520 <LORA_GPIO_Init+0x58>)
 800250a:	2210      	movs	r2, #16
 800250c:	611a      	str	r2, [r3, #16]
    LORA_RST_HIGH();
 800250e:	4b04      	ldr	r3, [pc, #16]	@ (8002520 <LORA_GPIO_Init+0x58>)
 8002510:	2202      	movs	r2, #2
 8002512:	611a      	str	r2, [r3, #16]
}
 8002514:	bf00      	nop
 8002516:	46bd      	mov	sp, r7
 8002518:	bc80      	pop	{r7}
 800251a:	4770      	bx	lr
 800251c:	40021000 	.word	0x40021000
 8002520:	40010800 	.word	0x40010800

08002524 <spi1_write>:

static void spi1_write(uint8_t data) {
 8002524:	b480      	push	{r7}
 8002526:	b083      	sub	sp, #12
 8002528:	af00      	add	r7, sp, #0
 800252a:	4603      	mov	r3, r0
 800252c:	71fb      	strb	r3, [r7, #7]
    while (!(SPI1->SR & SPI_SR_TXE));
 800252e:	bf00      	nop
 8002530:	4b0b      	ldr	r3, [pc, #44]	@ (8002560 <spi1_write+0x3c>)
 8002532:	689b      	ldr	r3, [r3, #8]
 8002534:	f003 0302 	and.w	r3, r3, #2
 8002538:	2b00      	cmp	r3, #0
 800253a:	d0f9      	beq.n	8002530 <spi1_write+0xc>
    *(volatile uint8_t*)&SPI1->DR = data;
 800253c:	4a09      	ldr	r2, [pc, #36]	@ (8002564 <spi1_write+0x40>)
 800253e:	79fb      	ldrb	r3, [r7, #7]
 8002540:	7013      	strb	r3, [r2, #0]
    while (!(SPI1->SR & SPI_SR_RXNE));
 8002542:	bf00      	nop
 8002544:	4b06      	ldr	r3, [pc, #24]	@ (8002560 <spi1_write+0x3c>)
 8002546:	689b      	ldr	r3, [r3, #8]
 8002548:	f003 0301 	and.w	r3, r3, #1
 800254c:	2b00      	cmp	r3, #0
 800254e:	d0f9      	beq.n	8002544 <spi1_write+0x20>
    (void)SPI1->DR;
 8002550:	4b03      	ldr	r3, [pc, #12]	@ (8002560 <spi1_write+0x3c>)
 8002552:	68db      	ldr	r3, [r3, #12]
}
 8002554:	bf00      	nop
 8002556:	370c      	adds	r7, #12
 8002558:	46bd      	mov	sp, r7
 800255a:	bc80      	pop	{r7}
 800255c:	4770      	bx	lr
 800255e:	bf00      	nop
 8002560:	40013000 	.word	0x40013000
 8002564:	4001300c 	.word	0x4001300c

08002568 <spi1_transfer>:

static uint8_t spi1_transfer(uint8_t data) {
 8002568:	b480      	push	{r7}
 800256a:	b083      	sub	sp, #12
 800256c:	af00      	add	r7, sp, #0
 800256e:	4603      	mov	r3, r0
 8002570:	71fb      	strb	r3, [r7, #7]
    while (!(SPI1->SR & SPI_SR_TXE));
 8002572:	bf00      	nop
 8002574:	4b0b      	ldr	r3, [pc, #44]	@ (80025a4 <spi1_transfer+0x3c>)
 8002576:	689b      	ldr	r3, [r3, #8]
 8002578:	f003 0302 	and.w	r3, r3, #2
 800257c:	2b00      	cmp	r3, #0
 800257e:	d0f9      	beq.n	8002574 <spi1_transfer+0xc>
    *(volatile uint8_t*)&SPI1->DR = data;
 8002580:	4a09      	ldr	r2, [pc, #36]	@ (80025a8 <spi1_transfer+0x40>)
 8002582:	79fb      	ldrb	r3, [r7, #7]
 8002584:	7013      	strb	r3, [r2, #0]
    while (!(SPI1->SR & SPI_SR_RXNE));
 8002586:	bf00      	nop
 8002588:	4b06      	ldr	r3, [pc, #24]	@ (80025a4 <spi1_transfer+0x3c>)
 800258a:	689b      	ldr	r3, [r3, #8]
 800258c:	f003 0301 	and.w	r3, r3, #1
 8002590:	2b00      	cmp	r3, #0
 8002592:	d0f9      	beq.n	8002588 <spi1_transfer+0x20>
    return (uint8_t)SPI1->DR;
 8002594:	4b03      	ldr	r3, [pc, #12]	@ (80025a4 <spi1_transfer+0x3c>)
 8002596:	68db      	ldr	r3, [r3, #12]
 8002598:	b2db      	uxtb	r3, r3
}
 800259a:	4618      	mov	r0, r3
 800259c:	370c      	adds	r7, #12
 800259e:	46bd      	mov	sp, r7
 80025a0:	bc80      	pop	{r7}
 80025a2:	4770      	bx	lr
 80025a4:	40013000 	.word	0x40013000
 80025a8:	4001300c 	.word	0x4001300c

080025ac <lora_write_reg>:

static void lora_write_reg(uint8_t addr, uint8_t value) {
 80025ac:	b580      	push	{r7, lr}
 80025ae:	b082      	sub	sp, #8
 80025b0:	af00      	add	r7, sp, #0
 80025b2:	4603      	mov	r3, r0
 80025b4:	460a      	mov	r2, r1
 80025b6:	71fb      	strb	r3, [r7, #7]
 80025b8:	4613      	mov	r3, r2
 80025ba:	71bb      	strb	r3, [r7, #6]
    LORA_NSS_LOW();
 80025bc:	4b0a      	ldr	r3, [pc, #40]	@ (80025e8 <lora_write_reg+0x3c>)
 80025be:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 80025c2:	611a      	str	r2, [r3, #16]
    spi1_write(addr | 0x80);
 80025c4:	79fb      	ldrb	r3, [r7, #7]
 80025c6:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 80025ca:	b2db      	uxtb	r3, r3
 80025cc:	4618      	mov	r0, r3
 80025ce:	f7ff ffa9 	bl	8002524 <spi1_write>
    spi1_write(value);
 80025d2:	79bb      	ldrb	r3, [r7, #6]
 80025d4:	4618      	mov	r0, r3
 80025d6:	f7ff ffa5 	bl	8002524 <spi1_write>
    LORA_NSS_HIGH();
 80025da:	4b03      	ldr	r3, [pc, #12]	@ (80025e8 <lora_write_reg+0x3c>)
 80025dc:	2210      	movs	r2, #16
 80025de:	611a      	str	r2, [r3, #16]
}
 80025e0:	bf00      	nop
 80025e2:	3708      	adds	r7, #8
 80025e4:	46bd      	mov	sp, r7
 80025e6:	bd80      	pop	{r7, pc}
 80025e8:	40010800 	.word	0x40010800

080025ec <lora_read_reg>:

static uint8_t lora_read_reg(uint8_t addr) {
 80025ec:	b580      	push	{r7, lr}
 80025ee:	b084      	sub	sp, #16
 80025f0:	af00      	add	r7, sp, #0
 80025f2:	4603      	mov	r3, r0
 80025f4:	71fb      	strb	r3, [r7, #7]
    LORA_NSS_LOW();
 80025f6:	4b0c      	ldr	r3, [pc, #48]	@ (8002628 <lora_read_reg+0x3c>)
 80025f8:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 80025fc:	611a      	str	r2, [r3, #16]
    spi1_write(addr & 0x7F);
 80025fe:	79fb      	ldrb	r3, [r7, #7]
 8002600:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8002604:	b2db      	uxtb	r3, r3
 8002606:	4618      	mov	r0, r3
 8002608:	f7ff ff8c 	bl	8002524 <spi1_write>
    uint8_t val = spi1_transfer(0x00);
 800260c:	2000      	movs	r0, #0
 800260e:	f7ff ffab 	bl	8002568 <spi1_transfer>
 8002612:	4603      	mov	r3, r0
 8002614:	73fb      	strb	r3, [r7, #15]
    LORA_NSS_HIGH();
 8002616:	4b04      	ldr	r3, [pc, #16]	@ (8002628 <lora_read_reg+0x3c>)
 8002618:	2210      	movs	r2, #16
 800261a:	611a      	str	r2, [r3, #16]
    return val;
 800261c:	7bfb      	ldrb	r3, [r7, #15]
}
 800261e:	4618      	mov	r0, r3
 8002620:	3710      	adds	r7, #16
 8002622:	46bd      	mov	sp, r7
 8002624:	bd80      	pop	{r7, pc}
 8002626:	bf00      	nop
 8002628:	40010800 	.word	0x40010800

0800262c <lora_init>:

void lora_init(void) {
 800262c:	b580      	push	{r7, lr}
 800262e:	b084      	sub	sp, #16
 8002630:	af00      	add	r7, sp, #0
    LORA_RST_LOW();
 8002632:	4b2e      	ldr	r3, [pc, #184]	@ (80026ec <lora_init+0xc0>)
 8002634:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8002638:	611a      	str	r2, [r3, #16]
    for (volatile int i = 0; i < 100000; i++);
 800263a:	2300      	movs	r3, #0
 800263c:	60bb      	str	r3, [r7, #8]
 800263e:	e002      	b.n	8002646 <lora_init+0x1a>
 8002640:	68bb      	ldr	r3, [r7, #8]
 8002642:	3301      	adds	r3, #1
 8002644:	60bb      	str	r3, [r7, #8]
 8002646:	68bb      	ldr	r3, [r7, #8]
 8002648:	4a29      	ldr	r2, [pc, #164]	@ (80026f0 <lora_init+0xc4>)
 800264a:	4293      	cmp	r3, r2
 800264c:	ddf8      	ble.n	8002640 <lora_init+0x14>
    LORA_RST_HIGH();
 800264e:	4b27      	ldr	r3, [pc, #156]	@ (80026ec <lora_init+0xc0>)
 8002650:	2202      	movs	r2, #2
 8002652:	611a      	str	r2, [r3, #16]
    for (volatile int i = 0; i < 100000; i++);
 8002654:	2300      	movs	r3, #0
 8002656:	607b      	str	r3, [r7, #4]
 8002658:	e002      	b.n	8002660 <lora_init+0x34>
 800265a:	687b      	ldr	r3, [r7, #4]
 800265c:	3301      	adds	r3, #1
 800265e:	607b      	str	r3, [r7, #4]
 8002660:	687b      	ldr	r3, [r7, #4]
 8002662:	4a23      	ldr	r2, [pc, #140]	@ (80026f0 <lora_init+0xc4>)
 8002664:	4293      	cmp	r3, r2
 8002666:	ddf8      	ble.n	800265a <lora_init+0x2e>

    uint8_t version = lora_read_reg(0x42);
 8002668:	2042      	movs	r0, #66	@ 0x42
 800266a:	f7ff ffbf 	bl	80025ec <lora_read_reg>
 800266e:	4603      	mov	r3, r0
 8002670:	73fb      	strb	r3, [r7, #15]
    if (version == 0x12) {
 8002672:	7bfb      	ldrb	r3, [r7, #15]
 8002674:	2b12      	cmp	r3, #18
 8002676:	d132      	bne.n	80026de <lora_init+0xb2>
        LED_OK_ON();
 8002678:	f7ff fe9a 	bl	80023b0 <LED_OK_ON>
    } else {
        LED_ERR_ON();
        return; // Không treo
    }

    lora_write_reg(0x01, 0x80); // Sleep + LoRa
 800267c:	2180      	movs	r1, #128	@ 0x80
 800267e:	2001      	movs	r0, #1
 8002680:	f7ff ff94 	bl	80025ac <lora_write_reg>
    lora_write_reg(0x01, 0x81); // Standby + LoRa
 8002684:	2181      	movs	r1, #129	@ 0x81
 8002686:	2001      	movs	r0, #1
 8002688:	f7ff ff90 	bl	80025ac <lora_write_reg>

    lora_write_reg(0x06, 0x6C); // 433 MHz
 800268c:	216c      	movs	r1, #108	@ 0x6c
 800268e:	2006      	movs	r0, #6
 8002690:	f7ff ff8c 	bl	80025ac <lora_write_reg>
    lora_write_reg(0x07, 0x80);
 8002694:	2180      	movs	r1, #128	@ 0x80
 8002696:	2007      	movs	r0, #7
 8002698:	f7ff ff88 	bl	80025ac <lora_write_reg>
    lora_write_reg(0x08, 0x00);
 800269c:	2100      	movs	r1, #0
 800269e:	2008      	movs	r0, #8
 80026a0:	f7ff ff84 	bl	80025ac <lora_write_reg>

    lora_write_reg(0x20, 0x00); // Preamble
 80026a4:	2100      	movs	r1, #0
 80026a6:	2020      	movs	r0, #32
 80026a8:	f7ff ff80 	bl	80025ac <lora_write_reg>
    lora_write_reg(0x21, 0x08);
 80026ac:	2108      	movs	r1, #8
 80026ae:	2021      	movs	r0, #33	@ 0x21
 80026b0:	f7ff ff7c 	bl	80025ac <lora_write_reg>

    lora_write_reg(0x39, 0x12); // Sync word
 80026b4:	2112      	movs	r1, #18
 80026b6:	2039      	movs	r0, #57	@ 0x39
 80026b8:	f7ff ff78 	bl	80025ac <lora_write_reg>

    lora_write_reg(0x1D, 0x72); // BW 125 kHz, CR 4/5
 80026bc:	2172      	movs	r1, #114	@ 0x72
 80026be:	201d      	movs	r0, #29
 80026c0:	f7ff ff74 	bl	80025ac <lora_write_reg>
    lora_write_reg(0x1E, 0xC4); // SF12
 80026c4:	21c4      	movs	r1, #196	@ 0xc4
 80026c6:	201e      	movs	r0, #30
 80026c8:	f7ff ff70 	bl	80025ac <lora_write_reg>
    lora_write_reg(0x26, 0x04); // Low data rate
 80026cc:	2104      	movs	r1, #4
 80026ce:	2026      	movs	r0, #38	@ 0x26
 80026d0:	f7ff ff6c 	bl	80025ac <lora_write_reg>

    lora_write_reg(0x0E, 0x00); // FIFO TX base
 80026d4:	2100      	movs	r1, #0
 80026d6:	200e      	movs	r0, #14
 80026d8:	f7ff ff68 	bl	80025ac <lora_write_reg>
 80026dc:	e002      	b.n	80026e4 <lora_init+0xb8>
        LED_ERR_ON();
 80026de:	f7ff fe73 	bl	80023c8 <LED_ERR_ON>
        return; // Không treo
 80026e2:	bf00      	nop
}
 80026e4:	3710      	adds	r7, #16
 80026e6:	46bd      	mov	sp, r7
 80026e8:	bd80      	pop	{r7, pc}
 80026ea:	bf00      	nop
 80026ec:	40010800 	.word	0x40010800
 80026f0:	0001869f 	.word	0x0001869f

080026f4 <lora_prepare_and_send>:

void lora_prepare_and_send(uint8_t dev_id, uint32_t timestamp, float lat, float lon) {
 80026f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80026f6:	b0b7      	sub	sp, #220	@ 0xdc
 80026f8:	af06      	add	r7, sp, #24
 80026fa:	60b9      	str	r1, [r7, #8]
 80026fc:	607a      	str	r2, [r7, #4]
 80026fe:	603b      	str	r3, [r7, #0]
 8002700:	4603      	mov	r3, r0
 8002702:	73fb      	strb	r3, [r7, #15]
    union {
        float f;
        uint8_t b[4];
    } lat_u, lon_u;

    packet[0] = dev_id;
 8002704:	7bfb      	ldrb	r3, [r7, #15]
 8002706:	f887 309c 	strb.w	r3, [r7, #156]	@ 0x9c
    packet[1] = (uint8_t)(timestamp & 0xFF);
 800270a:	68bb      	ldr	r3, [r7, #8]
 800270c:	b2db      	uxtb	r3, r3
 800270e:	f887 309d 	strb.w	r3, [r7, #157]	@ 0x9d
    packet[2] = (uint8_t)((timestamp >> 8) & 0xFF);
 8002712:	68bb      	ldr	r3, [r7, #8]
 8002714:	0a1b      	lsrs	r3, r3, #8
 8002716:	b2db      	uxtb	r3, r3
 8002718:	f887 309e 	strb.w	r3, [r7, #158]	@ 0x9e
    packet[3] = (uint8_t)((timestamp >> 16) & 0xFF);
 800271c:	68bb      	ldr	r3, [r7, #8]
 800271e:	0c1b      	lsrs	r3, r3, #16
 8002720:	b2db      	uxtb	r3, r3
 8002722:	f887 309f 	strb.w	r3, [r7, #159]	@ 0x9f
    packet[4] = (uint8_t)((timestamp >> 24) & 0xFF);
 8002726:	68bb      	ldr	r3, [r7, #8]
 8002728:	0e1b      	lsrs	r3, r3, #24
 800272a:	b2db      	uxtb	r3, r3
 800272c:	f887 30a0 	strb.w	r3, [r7, #160]	@ 0xa0

    lat_u.f = lat;
 8002730:	687b      	ldr	r3, [r7, #4]
 8002732:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
    for (int i = 0; i < 4; i++) packet[5 + i] = lat_u.b[i];
 8002736:	2300      	movs	r3, #0
 8002738:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 800273c:	e011      	b.n	8002762 <lora_prepare_and_send+0x6e>
 800273e:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 8002742:	3305      	adds	r3, #5
 8002744:	f107 0198 	add.w	r1, r7, #152	@ 0x98
 8002748:	f8d7 20bc 	ldr.w	r2, [r7, #188]	@ 0xbc
 800274c:	440a      	add	r2, r1
 800274e:	7812      	ldrb	r2, [r2, #0]
 8002750:	33c0      	adds	r3, #192	@ 0xc0
 8002752:	443b      	add	r3, r7
 8002754:	f803 2c24 	strb.w	r2, [r3, #-36]
 8002758:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 800275c:	3301      	adds	r3, #1
 800275e:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 8002762:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 8002766:	2b03      	cmp	r3, #3
 8002768:	dde9      	ble.n	800273e <lora_prepare_and_send+0x4a>

    lon_u.f = lon;
 800276a:	683b      	ldr	r3, [r7, #0]
 800276c:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
    for (int i = 0; i < 4; i++) packet[9 + i] = lon_u.b[i];
 8002770:	2300      	movs	r3, #0
 8002772:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8002776:	e011      	b.n	800279c <lora_prepare_and_send+0xa8>
 8002778:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 800277c:	3309      	adds	r3, #9
 800277e:	f107 0194 	add.w	r1, r7, #148	@ 0x94
 8002782:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 8002786:	440a      	add	r2, r1
 8002788:	7812      	ldrb	r2, [r2, #0]
 800278a:	33c0      	adds	r3, #192	@ 0xc0
 800278c:	443b      	add	r3, r7
 800278e:	f803 2c24 	strb.w	r2, [r3, #-36]
 8002792:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 8002796:	3301      	adds	r3, #1
 8002798:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 800279c:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 80027a0:	2b03      	cmp	r3, #3
 80027a2:	dde9      	ble.n	8002778 <lora_prepare_and_send+0x84>

    uint8_t crc = 0;
 80027a4:	2300      	movs	r3, #0
 80027a6:	f887 30b7 	strb.w	r3, [r7, #183]	@ 0xb7
    for (int i = 0; i < 13; i++) crc ^= packet[i];
 80027aa:	2300      	movs	r3, #0
 80027ac:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80027b0:	e00f      	b.n	80027d2 <lora_prepare_and_send+0xde>
 80027b2:	f107 029c 	add.w	r2, r7, #156	@ 0x9c
 80027b6:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 80027ba:	4413      	add	r3, r2
 80027bc:	781a      	ldrb	r2, [r3, #0]
 80027be:	f897 30b7 	ldrb.w	r3, [r7, #183]	@ 0xb7
 80027c2:	4053      	eors	r3, r2
 80027c4:	f887 30b7 	strb.w	r3, [r7, #183]	@ 0xb7
 80027c8:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 80027cc:	3301      	adds	r3, #1
 80027ce:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80027d2:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 80027d6:	2b0c      	cmp	r3, #12
 80027d8:	ddeb      	ble.n	80027b2 <lora_prepare_and_send+0xbe>
    packet[13] = crc;
 80027da:	f897 30b7 	ldrb.w	r3, [r7, #183]	@ 0xb7
 80027de:	f887 30a9 	strb.w	r3, [r7, #169]	@ 0xa9

    // Debug gói tin qua Serial
    char debug_buf[128];
    snprintf(debug_buf, sizeof(debug_buf), "Packet: ");
 80027e2:	f107 0314 	add.w	r3, r7, #20
 80027e6:	4a27      	ldr	r2, [pc, #156]	@ (8002884 <lora_prepare_and_send+0x190>)
 80027e8:	2180      	movs	r1, #128	@ 0x80
 80027ea:	4618      	mov	r0, r3
 80027ec:	f001 fe3c 	bl	8004468 <sniprintf>
    DEBUG_Print(debug_buf);
 80027f0:	f107 0314 	add.w	r3, r7, #20
 80027f4:	4618      	mov	r0, r3
 80027f6:	f7fe fe49 	bl	800148c <DEBUG_Print>
    for (int i = 0; i < 14; i++) {
 80027fa:	2300      	movs	r3, #0
 80027fc:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8002800:	e015      	b.n	800282e <lora_prepare_and_send+0x13a>
        snprintf(debug_buf, sizeof(debug_buf), "0x%02X ", packet[i]);
 8002802:	f107 029c 	add.w	r2, r7, #156	@ 0x9c
 8002806:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800280a:	4413      	add	r3, r2
 800280c:	781b      	ldrb	r3, [r3, #0]
 800280e:	f107 0014 	add.w	r0, r7, #20
 8002812:	4a1d      	ldr	r2, [pc, #116]	@ (8002888 <lora_prepare_and_send+0x194>)
 8002814:	2180      	movs	r1, #128	@ 0x80
 8002816:	f001 fe27 	bl	8004468 <sniprintf>
        DEBUG_Print(debug_buf);
 800281a:	f107 0314 	add.w	r3, r7, #20
 800281e:	4618      	mov	r0, r3
 8002820:	f7fe fe34 	bl	800148c <DEBUG_Print>
    for (int i = 0; i < 14; i++) {
 8002824:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8002828:	3301      	adds	r3, #1
 800282a:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800282e:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8002832:	2b0d      	cmp	r3, #13
 8002834:	dde5      	ble.n	8002802 <lora_prepare_and_send+0x10e>
    }
    snprintf(debug_buf, sizeof(debug_buf), "\r\nSending: DevID=%d, Timestamp=%u, Lat=%.6f, Lon=%.6f\r\n",
 8002836:	7bfe      	ldrb	r6, [r7, #15]
 8002838:	6878      	ldr	r0, [r7, #4]
 800283a:	f7fd fdf5 	bl	8000428 <__aeabi_f2d>
 800283e:	4604      	mov	r4, r0
 8002840:	460d      	mov	r5, r1
 8002842:	6838      	ldr	r0, [r7, #0]
 8002844:	f7fd fdf0 	bl	8000428 <__aeabi_f2d>
 8002848:	4602      	mov	r2, r0
 800284a:	460b      	mov	r3, r1
 800284c:	f107 0014 	add.w	r0, r7, #20
 8002850:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002854:	e9cd 4502 	strd	r4, r5, [sp, #8]
 8002858:	68bb      	ldr	r3, [r7, #8]
 800285a:	9300      	str	r3, [sp, #0]
 800285c:	4633      	mov	r3, r6
 800285e:	4a0b      	ldr	r2, [pc, #44]	@ (800288c <lora_prepare_and_send+0x198>)
 8002860:	2180      	movs	r1, #128	@ 0x80
 8002862:	f001 fe01 	bl	8004468 <sniprintf>
             dev_id, timestamp, lat, lon);
    DEBUG_Print(debug_buf);
 8002866:	f107 0314 	add.w	r3, r7, #20
 800286a:	4618      	mov	r0, r3
 800286c:	f7fe fe0e 	bl	800148c <DEBUG_Print>

    lora_send_packet(packet, 14);
 8002870:	f107 039c 	add.w	r3, r7, #156	@ 0x9c
 8002874:	210e      	movs	r1, #14
 8002876:	4618      	mov	r0, r3
 8002878:	f000 f80a 	bl	8002890 <lora_send_packet>
}
 800287c:	bf00      	nop
 800287e:	37c4      	adds	r7, #196	@ 0xc4
 8002880:	46bd      	mov	sp, r7
 8002882:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002884:	08007320 	.word	0x08007320
 8002888:	0800732c 	.word	0x0800732c
 800288c:	08007334 	.word	0x08007334

08002890 <lora_send_packet>:

void lora_send_packet(uint8_t* data, uint8_t len) {
 8002890:	b580      	push	{r7, lr}
 8002892:	b0a4      	sub	sp, #144	@ 0x90
 8002894:	af00      	add	r7, sp, #0
 8002896:	6078      	str	r0, [r7, #4]
 8002898:	460b      	mov	r3, r1
 800289a:	70fb      	strb	r3, [r7, #3]
    lora_write_reg(0x01, 0x81);
 800289c:	2181      	movs	r1, #129	@ 0x81
 800289e:	2001      	movs	r0, #1
 80028a0:	f7ff fe84 	bl	80025ac <lora_write_reg>
    lora_write_reg(0x0D, 0x00);
 80028a4:	2100      	movs	r1, #0
 80028a6:	200d      	movs	r0, #13
 80028a8:	f7ff fe80 	bl	80025ac <lora_write_reg>
    lora_write_reg(0x0E, 0x00);
 80028ac:	2100      	movs	r1, #0
 80028ae:	200e      	movs	r0, #14
 80028b0:	f7ff fe7c 	bl	80025ac <lora_write_reg>

    LORA_NSS_LOW();
 80028b4:	4b35      	ldr	r3, [pc, #212]	@ (800298c <lora_send_packet+0xfc>)
 80028b6:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 80028ba:	611a      	str	r2, [r3, #16]
    spi1_write(0x00 | 0x80);
 80028bc:	2080      	movs	r0, #128	@ 0x80
 80028be:	f7ff fe31 	bl	8002524 <spi1_write>
    for (uint8_t i = 0; i < len; i++) {
 80028c2:	2300      	movs	r3, #0
 80028c4:	f887 308f 	strb.w	r3, [r7, #143]	@ 0x8f
 80028c8:	e00c      	b.n	80028e4 <lora_send_packet+0x54>
        spi1_write(data[i]);
 80028ca:	f897 308f 	ldrb.w	r3, [r7, #143]	@ 0x8f
 80028ce:	687a      	ldr	r2, [r7, #4]
 80028d0:	4413      	add	r3, r2
 80028d2:	781b      	ldrb	r3, [r3, #0]
 80028d4:	4618      	mov	r0, r3
 80028d6:	f7ff fe25 	bl	8002524 <spi1_write>
    for (uint8_t i = 0; i < len; i++) {
 80028da:	f897 308f 	ldrb.w	r3, [r7, #143]	@ 0x8f
 80028de:	3301      	adds	r3, #1
 80028e0:	f887 308f 	strb.w	r3, [r7, #143]	@ 0x8f
 80028e4:	f897 208f 	ldrb.w	r2, [r7, #143]	@ 0x8f
 80028e8:	78fb      	ldrb	r3, [r7, #3]
 80028ea:	429a      	cmp	r2, r3
 80028ec:	d3ed      	bcc.n	80028ca <lora_send_packet+0x3a>
    }
    LORA_NSS_HIGH();
 80028ee:	4b27      	ldr	r3, [pc, #156]	@ (800298c <lora_send_packet+0xfc>)
 80028f0:	2210      	movs	r2, #16
 80028f2:	611a      	str	r2, [r3, #16]

    lora_write_reg(0x22, len);
 80028f4:	78fb      	ldrb	r3, [r7, #3]
 80028f6:	4619      	mov	r1, r3
 80028f8:	2022      	movs	r0, #34	@ 0x22
 80028fa:	f7ff fe57 	bl	80025ac <lora_write_reg>
    lora_write_reg(0x01, 0x83);
 80028fe:	2183      	movs	r1, #131	@ 0x83
 8002900:	2001      	movs	r0, #1
 8002902:	f7ff fe53 	bl	80025ac <lora_write_reg>

    uint32_t timeout = 100000;
 8002906:	4b22      	ldr	r3, [pc, #136]	@ (8002990 <lora_send_packet+0x100>)
 8002908:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
    while ((lora_read_reg(0x12) & 0x08) == 0 && timeout--);
 800290c:	bf00      	nop
 800290e:	2012      	movs	r0, #18
 8002910:	f7ff fe6c 	bl	80025ec <lora_read_reg>
 8002914:	4603      	mov	r3, r0
 8002916:	f003 0308 	and.w	r3, r3, #8
 800291a:	2b00      	cmp	r3, #0
 800291c:	d106      	bne.n	800292c <lora_send_packet+0x9c>
 800291e:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8002922:	1e5a      	subs	r2, r3, #1
 8002924:	f8c7 2088 	str.w	r2, [r7, #136]	@ 0x88
 8002928:	2b00      	cmp	r3, #0
 800292a:	d1f0      	bne.n	800290e <lora_send_packet+0x7e>
    if (timeout == 0) {
 800292c:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8002930:	2b00      	cmp	r3, #0
 8002932:	d111      	bne.n	8002958 <lora_send_packet+0xc8>
        LED_ERR_ON();
 8002934:	f7ff fd48 	bl	80023c8 <LED_ERR_ON>
        char debug_buf[64];
        snprintf(debug_buf, sizeof(debug_buf), "Tx Timeout, IRQ Flags: 0x%02X\r\n", lora_read_reg(0x12));
 8002938:	2012      	movs	r0, #18
 800293a:	f7ff fe57 	bl	80025ec <lora_read_reg>
 800293e:	4603      	mov	r3, r0
 8002940:	f107 0008 	add.w	r0, r7, #8
 8002944:	4a13      	ldr	r2, [pc, #76]	@ (8002994 <lora_send_packet+0x104>)
 8002946:	2140      	movs	r1, #64	@ 0x40
 8002948:	f001 fd8e 	bl	8004468 <sniprintf>
        DEBUG_Print(debug_buf);
 800294c:	f107 0308 	add.w	r3, r7, #8
 8002950:	4618      	mov	r0, r3
 8002952:	f7fe fd9b 	bl	800148c <DEBUG_Print>
 8002956:	e015      	b.n	8002984 <lora_send_packet+0xf4>
        return;
    }
    lora_write_reg(0x12, 0x08);
 8002958:	2108      	movs	r1, #8
 800295a:	2012      	movs	r0, #18
 800295c:	f7ff fe26 	bl	80025ac <lora_write_reg>
    LED_SEND_TOGGLE();
 8002960:	f7ff fd56 	bl	8002410 <LED_SEND_TOGGLE>
    lora_write_reg(0x01, 0x80);
 8002964:	2180      	movs	r1, #128	@ 0x80
 8002966:	2001      	movs	r0, #1
 8002968:	f7ff fe20 	bl	80025ac <lora_write_reg>
    char debug_buf[64];
    snprintf(debug_buf, sizeof(debug_buf), "Packet sent successfully\r\n");
 800296c:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 8002970:	4a09      	ldr	r2, [pc, #36]	@ (8002998 <lora_send_packet+0x108>)
 8002972:	2140      	movs	r1, #64	@ 0x40
 8002974:	4618      	mov	r0, r3
 8002976:	f001 fd77 	bl	8004468 <sniprintf>
    DEBUG_Print(debug_buf);
 800297a:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 800297e:	4618      	mov	r0, r3
 8002980:	f7fe fd84 	bl	800148c <DEBUG_Print>
}
 8002984:	3790      	adds	r7, #144	@ 0x90
 8002986:	46bd      	mov	sp, r7
 8002988:	bd80      	pop	{r7, pc}
 800298a:	bf00      	nop
 800298c:	40010800 	.word	0x40010800
 8002990:	000186a0 	.word	0x000186a0
 8002994:	0800736c 	.word	0x0800736c
 8002998:	0800738c 	.word	0x0800738c

0800299c <main>:
#include "lora.h"
#include "led.h"
#include "timer.h"
#include "gps.h"

int main(void) {
 800299c:	b580      	push	{r7, lr}
 800299e:	b082      	sub	sp, #8
 80029a0:	af00      	add	r7, sp, #0
    timer_init();
 80029a2:	f000 f919 	bl	8002bd8 <timer_init>
    LED_Init();
 80029a6:	f7ff fcb1 	bl	800230c <LED_Init>
    SPI1_Init();
 80029aa:	f7ff fd3f 	bl	800242c <SPI1_Init>
    LORA_GPIO_Init();
 80029ae:	f7ff fd8b 	bl	80024c8 <LORA_GPIO_Init>
    GPS_Init();
 80029b2:	f7ff fbee 	bl	8002192 <GPS_Init>
    LED_POWER_ON();
 80029b6:	f7ff fcef 	bl	8002398 <LED_POWER_ON>
    GPIOB->BSRR = GPIO_BSRR_BR10;
 80029ba:	4b0b      	ldr	r3, [pc, #44]	@ (80029e8 <main+0x4c>)
 80029bc:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80029c0:	611a      	str	r2, [r3, #16]
    lora_init();
 80029c2:	f7ff fe33 	bl	800262c <lora_init>

    while (1) {
        uint32_t timestamp = GPS_Get_Timestamp();
 80029c6:	f7ff fbed 	bl	80021a4 <GPS_Get_Timestamp>
 80029ca:	6078      	str	r0, [r7, #4]
        if (timestamp == 0) {
 80029cc:	687b      	ldr	r3, [r7, #4]
 80029ce:	2b00      	cmp	r3, #0
 80029d0:	d101      	bne.n	80029d6 <main+0x3a>
            timestamp = 1717587397;
 80029d2:	4b06      	ldr	r3, [pc, #24]	@ (80029ec <main+0x50>)
 80029d4:	607b      	str	r3, [r7, #4]
        }
        GPS_Check_Geofence(0x01, timestamp);
 80029d6:	6879      	ldr	r1, [r7, #4]
 80029d8:	2001      	movs	r0, #1
 80029da:	f7ff fbed 	bl	80021b8 <GPS_Check_Geofence>
        delay_ms(200);
 80029de:	20c8      	movs	r0, #200	@ 0xc8
 80029e0:	f000 f948 	bl	8002c74 <delay_ms>
    while (1) {
 80029e4:	e7ef      	b.n	80029c6 <main+0x2a>
 80029e6:	bf00      	nop
 80029e8:	40010c00 	.word	0x40010c00
 80029ec:	66604dc5 	.word	0x66604dc5

080029f0 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80029f0:	b480      	push	{r7}
 80029f2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80029f4:	bf00      	nop
 80029f6:	e7fd      	b.n	80029f4 <NMI_Handler+0x4>

080029f8 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80029f8:	b480      	push	{r7}
 80029fa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80029fc:	bf00      	nop
 80029fe:	e7fd      	b.n	80029fc <HardFault_Handler+0x4>

08002a00 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002a00:	b480      	push	{r7}
 8002a02:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002a04:	bf00      	nop
 8002a06:	e7fd      	b.n	8002a04 <MemManage_Handler+0x4>

08002a08 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002a08:	b480      	push	{r7}
 8002a0a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002a0c:	bf00      	nop
 8002a0e:	e7fd      	b.n	8002a0c <BusFault_Handler+0x4>

08002a10 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002a10:	b480      	push	{r7}
 8002a12:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002a14:	bf00      	nop
 8002a16:	e7fd      	b.n	8002a14 <UsageFault_Handler+0x4>

08002a18 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002a18:	b480      	push	{r7}
 8002a1a:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002a1c:	bf00      	nop
 8002a1e:	46bd      	mov	sp, r7
 8002a20:	bc80      	pop	{r7}
 8002a22:	4770      	bx	lr

08002a24 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002a24:	b480      	push	{r7}
 8002a26:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002a28:	bf00      	nop
 8002a2a:	46bd      	mov	sp, r7
 8002a2c:	bc80      	pop	{r7}
 8002a2e:	4770      	bx	lr

08002a30 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002a30:	b480      	push	{r7}
 8002a32:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002a34:	bf00      	nop
 8002a36:	46bd      	mov	sp, r7
 8002a38:	bc80      	pop	{r7}
 8002a3a:	4770      	bx	lr

08002a3c <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002a3c:	b580      	push	{r7, lr}
 8002a3e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002a40:	f000 f952 	bl	8002ce8 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002a44:	bf00      	nop
 8002a46:	bd80      	pop	{r7, pc}

08002a48 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002a48:	b480      	push	{r7}
 8002a4a:	af00      	add	r7, sp, #0
  return 1;
 8002a4c:	2301      	movs	r3, #1
}
 8002a4e:	4618      	mov	r0, r3
 8002a50:	46bd      	mov	sp, r7
 8002a52:	bc80      	pop	{r7}
 8002a54:	4770      	bx	lr

08002a56 <_kill>:

int _kill(int pid, int sig)
{
 8002a56:	b580      	push	{r7, lr}
 8002a58:	b082      	sub	sp, #8
 8002a5a:	af00      	add	r7, sp, #0
 8002a5c:	6078      	str	r0, [r7, #4]
 8002a5e:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8002a60:	f001 fe2a 	bl	80046b8 <__errno>
 8002a64:	4603      	mov	r3, r0
 8002a66:	2216      	movs	r2, #22
 8002a68:	601a      	str	r2, [r3, #0]
  return -1;
 8002a6a:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002a6e:	4618      	mov	r0, r3
 8002a70:	3708      	adds	r7, #8
 8002a72:	46bd      	mov	sp, r7
 8002a74:	bd80      	pop	{r7, pc}

08002a76 <_exit>:

void _exit (int status)
{
 8002a76:	b580      	push	{r7, lr}
 8002a78:	b082      	sub	sp, #8
 8002a7a:	af00      	add	r7, sp, #0
 8002a7c:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8002a7e:	f04f 31ff 	mov.w	r1, #4294967295
 8002a82:	6878      	ldr	r0, [r7, #4]
 8002a84:	f7ff ffe7 	bl	8002a56 <_kill>
  while (1) {}    /* Make sure we hang here */
 8002a88:	bf00      	nop
 8002a8a:	e7fd      	b.n	8002a88 <_exit+0x12>

08002a8c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002a8c:	b580      	push	{r7, lr}
 8002a8e:	b086      	sub	sp, #24
 8002a90:	af00      	add	r7, sp, #0
 8002a92:	60f8      	str	r0, [r7, #12]
 8002a94:	60b9      	str	r1, [r7, #8]
 8002a96:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002a98:	2300      	movs	r3, #0
 8002a9a:	617b      	str	r3, [r7, #20]
 8002a9c:	e00a      	b.n	8002ab4 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8002a9e:	f3af 8000 	nop.w
 8002aa2:	4601      	mov	r1, r0
 8002aa4:	68bb      	ldr	r3, [r7, #8]
 8002aa6:	1c5a      	adds	r2, r3, #1
 8002aa8:	60ba      	str	r2, [r7, #8]
 8002aaa:	b2ca      	uxtb	r2, r1
 8002aac:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002aae:	697b      	ldr	r3, [r7, #20]
 8002ab0:	3301      	adds	r3, #1
 8002ab2:	617b      	str	r3, [r7, #20]
 8002ab4:	697a      	ldr	r2, [r7, #20]
 8002ab6:	687b      	ldr	r3, [r7, #4]
 8002ab8:	429a      	cmp	r2, r3
 8002aba:	dbf0      	blt.n	8002a9e <_read+0x12>
  }

  return len;
 8002abc:	687b      	ldr	r3, [r7, #4]
}
 8002abe:	4618      	mov	r0, r3
 8002ac0:	3718      	adds	r7, #24
 8002ac2:	46bd      	mov	sp, r7
 8002ac4:	bd80      	pop	{r7, pc}

08002ac6 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002ac6:	b580      	push	{r7, lr}
 8002ac8:	b086      	sub	sp, #24
 8002aca:	af00      	add	r7, sp, #0
 8002acc:	60f8      	str	r0, [r7, #12]
 8002ace:	60b9      	str	r1, [r7, #8]
 8002ad0:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002ad2:	2300      	movs	r3, #0
 8002ad4:	617b      	str	r3, [r7, #20]
 8002ad6:	e009      	b.n	8002aec <_write+0x26>
  {
    __io_putchar(*ptr++);
 8002ad8:	68bb      	ldr	r3, [r7, #8]
 8002ada:	1c5a      	adds	r2, r3, #1
 8002adc:	60ba      	str	r2, [r7, #8]
 8002ade:	781b      	ldrb	r3, [r3, #0]
 8002ae0:	4618      	mov	r0, r3
 8002ae2:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002ae6:	697b      	ldr	r3, [r7, #20]
 8002ae8:	3301      	adds	r3, #1
 8002aea:	617b      	str	r3, [r7, #20]
 8002aec:	697a      	ldr	r2, [r7, #20]
 8002aee:	687b      	ldr	r3, [r7, #4]
 8002af0:	429a      	cmp	r2, r3
 8002af2:	dbf1      	blt.n	8002ad8 <_write+0x12>
  }
  return len;
 8002af4:	687b      	ldr	r3, [r7, #4]
}
 8002af6:	4618      	mov	r0, r3
 8002af8:	3718      	adds	r7, #24
 8002afa:	46bd      	mov	sp, r7
 8002afc:	bd80      	pop	{r7, pc}

08002afe <_close>:

int _close(int file)
{
 8002afe:	b480      	push	{r7}
 8002b00:	b083      	sub	sp, #12
 8002b02:	af00      	add	r7, sp, #0
 8002b04:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8002b06:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002b0a:	4618      	mov	r0, r3
 8002b0c:	370c      	adds	r7, #12
 8002b0e:	46bd      	mov	sp, r7
 8002b10:	bc80      	pop	{r7}
 8002b12:	4770      	bx	lr

08002b14 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002b14:	b480      	push	{r7}
 8002b16:	b083      	sub	sp, #12
 8002b18:	af00      	add	r7, sp, #0
 8002b1a:	6078      	str	r0, [r7, #4]
 8002b1c:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8002b1e:	683b      	ldr	r3, [r7, #0]
 8002b20:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8002b24:	605a      	str	r2, [r3, #4]
  return 0;
 8002b26:	2300      	movs	r3, #0
}
 8002b28:	4618      	mov	r0, r3
 8002b2a:	370c      	adds	r7, #12
 8002b2c:	46bd      	mov	sp, r7
 8002b2e:	bc80      	pop	{r7}
 8002b30:	4770      	bx	lr

08002b32 <_isatty>:

int _isatty(int file)
{
 8002b32:	b480      	push	{r7}
 8002b34:	b083      	sub	sp, #12
 8002b36:	af00      	add	r7, sp, #0
 8002b38:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8002b3a:	2301      	movs	r3, #1
}
 8002b3c:	4618      	mov	r0, r3
 8002b3e:	370c      	adds	r7, #12
 8002b40:	46bd      	mov	sp, r7
 8002b42:	bc80      	pop	{r7}
 8002b44:	4770      	bx	lr

08002b46 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002b46:	b480      	push	{r7}
 8002b48:	b085      	sub	sp, #20
 8002b4a:	af00      	add	r7, sp, #0
 8002b4c:	60f8      	str	r0, [r7, #12]
 8002b4e:	60b9      	str	r1, [r7, #8]
 8002b50:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8002b52:	2300      	movs	r3, #0
}
 8002b54:	4618      	mov	r0, r3
 8002b56:	3714      	adds	r7, #20
 8002b58:	46bd      	mov	sp, r7
 8002b5a:	bc80      	pop	{r7}
 8002b5c:	4770      	bx	lr
	...

08002b60 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002b60:	b580      	push	{r7, lr}
 8002b62:	b086      	sub	sp, #24
 8002b64:	af00      	add	r7, sp, #0
 8002b66:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002b68:	4a14      	ldr	r2, [pc, #80]	@ (8002bbc <_sbrk+0x5c>)
 8002b6a:	4b15      	ldr	r3, [pc, #84]	@ (8002bc0 <_sbrk+0x60>)
 8002b6c:	1ad3      	subs	r3, r2, r3
 8002b6e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002b70:	697b      	ldr	r3, [r7, #20]
 8002b72:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002b74:	4b13      	ldr	r3, [pc, #76]	@ (8002bc4 <_sbrk+0x64>)
 8002b76:	681b      	ldr	r3, [r3, #0]
 8002b78:	2b00      	cmp	r3, #0
 8002b7a:	d102      	bne.n	8002b82 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002b7c:	4b11      	ldr	r3, [pc, #68]	@ (8002bc4 <_sbrk+0x64>)
 8002b7e:	4a12      	ldr	r2, [pc, #72]	@ (8002bc8 <_sbrk+0x68>)
 8002b80:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002b82:	4b10      	ldr	r3, [pc, #64]	@ (8002bc4 <_sbrk+0x64>)
 8002b84:	681a      	ldr	r2, [r3, #0]
 8002b86:	687b      	ldr	r3, [r7, #4]
 8002b88:	4413      	add	r3, r2
 8002b8a:	693a      	ldr	r2, [r7, #16]
 8002b8c:	429a      	cmp	r2, r3
 8002b8e:	d207      	bcs.n	8002ba0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002b90:	f001 fd92 	bl	80046b8 <__errno>
 8002b94:	4603      	mov	r3, r0
 8002b96:	220c      	movs	r2, #12
 8002b98:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8002b9a:	f04f 33ff 	mov.w	r3, #4294967295
 8002b9e:	e009      	b.n	8002bb4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002ba0:	4b08      	ldr	r3, [pc, #32]	@ (8002bc4 <_sbrk+0x64>)
 8002ba2:	681b      	ldr	r3, [r3, #0]
 8002ba4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8002ba6:	4b07      	ldr	r3, [pc, #28]	@ (8002bc4 <_sbrk+0x64>)
 8002ba8:	681a      	ldr	r2, [r3, #0]
 8002baa:	687b      	ldr	r3, [r7, #4]
 8002bac:	4413      	add	r3, r2
 8002bae:	4a05      	ldr	r2, [pc, #20]	@ (8002bc4 <_sbrk+0x64>)
 8002bb0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8002bb2:	68fb      	ldr	r3, [r7, #12]
}
 8002bb4:	4618      	mov	r0, r3
 8002bb6:	3718      	adds	r7, #24
 8002bb8:	46bd      	mov	sp, r7
 8002bba:	bd80      	pop	{r7, pc}
 8002bbc:	20005000 	.word	0x20005000
 8002bc0:	00000400 	.word	0x00000400
 8002bc4:	200003fc 	.word	0x200003fc
 8002bc8:	20000550 	.word	0x20000550

08002bcc <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8002bcc:	b480      	push	{r7}
 8002bce:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002bd0:	bf00      	nop
 8002bd2:	46bd      	mov	sp, r7
 8002bd4:	bc80      	pop	{r7}
 8002bd6:	4770      	bx	lr

08002bd8 <timer_init>:
#include "stm32f1xx.h"
#include "timer.h"

void timer_init(void) {
 8002bd8:	b480      	push	{r7}
 8002bda:	af00      	add	r7, sp, #0
    // Sử dụng HCLK = 72MHz
    SysTick->CTRL = 0;                   // Tắt SysTick
 8002bdc:	4b08      	ldr	r3, [pc, #32]	@ (8002c00 <timer_init+0x28>)
 8002bde:	2200      	movs	r2, #0
 8002be0:	601a      	str	r2, [r3, #0]
    SysTick->LOAD = 0xFFFFFF;            // Max 24-bit (16,777,215)
 8002be2:	4b07      	ldr	r3, [pc, #28]	@ (8002c00 <timer_init+0x28>)
 8002be4:	f06f 427f 	mvn.w	r2, #4278190080	@ 0xff000000
 8002be8:	605a      	str	r2, [r3, #4]
    SysTick->VAL  = 0;                   // Reset bộ đếm
 8002bea:	4b05      	ldr	r3, [pc, #20]	@ (8002c00 <timer_init+0x28>)
 8002bec:	2200      	movs	r2, #0
 8002bee:	609a      	str	r2, [r3, #8]
    SysTick->CTRL = SysTick_CTRL_CLKSOURCE_Msk | SysTick_CTRL_ENABLE_Msk;
 8002bf0:	4b03      	ldr	r3, [pc, #12]	@ (8002c00 <timer_init+0x28>)
 8002bf2:	2205      	movs	r2, #5
 8002bf4:	601a      	str	r2, [r3, #0]
    // Clock source = HCLK, Enable
}
 8002bf6:	bf00      	nop
 8002bf8:	46bd      	mov	sp, r7
 8002bfa:	bc80      	pop	{r7}
 8002bfc:	4770      	bx	lr
 8002bfe:	bf00      	nop
 8002c00:	e000e010 	.word	0xe000e010

08002c04 <delay_us>:

void delay_us(uint32_t us) {
 8002c04:	b480      	push	{r7}
 8002c06:	b089      	sub	sp, #36	@ 0x24
 8002c08:	af00      	add	r7, sp, #0
 8002c0a:	6078      	str	r0, [r7, #4]
    uint32_t ticks = us * 72;  // 1us = 72 ticks @72MHz
 8002c0c:	687a      	ldr	r2, [r7, #4]
 8002c0e:	4613      	mov	r3, r2
 8002c10:	00db      	lsls	r3, r3, #3
 8002c12:	4413      	add	r3, r2
 8002c14:	00db      	lsls	r3, r3, #3
 8002c16:	617b      	str	r3, [r7, #20]
    uint32_t start = SysTick->VAL;
 8002c18:	4b15      	ldr	r3, [pc, #84]	@ (8002c70 <delay_us+0x6c>)
 8002c1a:	689b      	ldr	r3, [r3, #8]
 8002c1c:	613b      	str	r3, [r7, #16]
    uint32_t elapsed = 0;
 8002c1e:	2300      	movs	r3, #0
 8002c20:	61fb      	str	r3, [r7, #28]
    uint32_t prev = start;
 8002c22:	693b      	ldr	r3, [r7, #16]
 8002c24:	61bb      	str	r3, [r7, #24]

    while (elapsed < ticks) {
 8002c26:	e018      	b.n	8002c5a <delay_us+0x56>
        uint32_t now = SysTick->VAL;
 8002c28:	4b11      	ldr	r3, [pc, #68]	@ (8002c70 <delay_us+0x6c>)
 8002c2a:	689b      	ldr	r3, [r3, #8]
 8002c2c:	60fb      	str	r3, [r7, #12]
        uint32_t diff = (prev >= now)
                        ? (prev - now)
                        : (prev + (SysTick->LOAD + 1) - now);
 8002c2e:	69ba      	ldr	r2, [r7, #24]
 8002c30:	68fb      	ldr	r3, [r7, #12]
 8002c32:	429a      	cmp	r2, r3
 8002c34:	d303      	bcc.n	8002c3e <delay_us+0x3a>
 8002c36:	69ba      	ldr	r2, [r7, #24]
 8002c38:	68fb      	ldr	r3, [r7, #12]
 8002c3a:	1ad3      	subs	r3, r2, r3
 8002c3c:	e006      	b.n	8002c4c <delay_us+0x48>
 8002c3e:	4b0c      	ldr	r3, [pc, #48]	@ (8002c70 <delay_us+0x6c>)
 8002c40:	685a      	ldr	r2, [r3, #4]
 8002c42:	69bb      	ldr	r3, [r7, #24]
 8002c44:	441a      	add	r2, r3
 8002c46:	68fb      	ldr	r3, [r7, #12]
 8002c48:	1ad3      	subs	r3, r2, r3
 8002c4a:	3301      	adds	r3, #1
        uint32_t diff = (prev >= now)
 8002c4c:	60bb      	str	r3, [r7, #8]
        elapsed += diff;
 8002c4e:	69fa      	ldr	r2, [r7, #28]
 8002c50:	68bb      	ldr	r3, [r7, #8]
 8002c52:	4413      	add	r3, r2
 8002c54:	61fb      	str	r3, [r7, #28]
        prev = now;
 8002c56:	68fb      	ldr	r3, [r7, #12]
 8002c58:	61bb      	str	r3, [r7, #24]
    while (elapsed < ticks) {
 8002c5a:	69fa      	ldr	r2, [r7, #28]
 8002c5c:	697b      	ldr	r3, [r7, #20]
 8002c5e:	429a      	cmp	r2, r3
 8002c60:	d3e2      	bcc.n	8002c28 <delay_us+0x24>
    }
}
 8002c62:	bf00      	nop
 8002c64:	bf00      	nop
 8002c66:	3724      	adds	r7, #36	@ 0x24
 8002c68:	46bd      	mov	sp, r7
 8002c6a:	bc80      	pop	{r7}
 8002c6c:	4770      	bx	lr
 8002c6e:	bf00      	nop
 8002c70:	e000e010 	.word	0xe000e010

08002c74 <delay_ms>:

// 1s= 100ms
void delay_ms(uint32_t ms) {
 8002c74:	b580      	push	{r7, lr}
 8002c76:	b082      	sub	sp, #8
 8002c78:	af00      	add	r7, sp, #0
 8002c7a:	6078      	str	r0, [r7, #4]
    while (ms--) {
 8002c7c:	e003      	b.n	8002c86 <delay_ms+0x12>
        delay_us(1000);
 8002c7e:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8002c82:	f7ff ffbf 	bl	8002c04 <delay_us>
    while (ms--) {
 8002c86:	687b      	ldr	r3, [r7, #4]
 8002c88:	1e5a      	subs	r2, r3, #1
 8002c8a:	607a      	str	r2, [r7, #4]
 8002c8c:	2b00      	cmp	r3, #0
 8002c8e:	d1f6      	bne.n	8002c7e <delay_ms+0xa>
    }
}
 8002c90:	bf00      	nop
 8002c92:	bf00      	nop
 8002c94:	3708      	adds	r7, #8
 8002c96:	46bd      	mov	sp, r7
 8002c98:	bd80      	pop	{r7, pc}
	...

08002c9c <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Call the clock system initialization function.*/
    bl  SystemInit
 8002c9c:	f7ff ff96 	bl	8002bcc <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002ca0:	480b      	ldr	r0, [pc, #44]	@ (8002cd0 <LoopFillZerobss+0xe>)
  ldr r1, =_edata
 8002ca2:	490c      	ldr	r1, [pc, #48]	@ (8002cd4 <LoopFillZerobss+0x12>)
  ldr r2, =_sidata
 8002ca4:	4a0c      	ldr	r2, [pc, #48]	@ (8002cd8 <LoopFillZerobss+0x16>)
  movs r3, #0
 8002ca6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002ca8:	e002      	b.n	8002cb0 <LoopCopyDataInit>

08002caa <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8002caa:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002cac:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002cae:	3304      	adds	r3, #4

08002cb0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002cb0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002cb2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002cb4:	d3f9      	bcc.n	8002caa <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8002cb6:	4a09      	ldr	r2, [pc, #36]	@ (8002cdc <LoopFillZerobss+0x1a>)
  ldr r4, =_ebss
 8002cb8:	4c09      	ldr	r4, [pc, #36]	@ (8002ce0 <LoopFillZerobss+0x1e>)
  movs r3, #0
 8002cba:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002cbc:	e001      	b.n	8002cc2 <LoopFillZerobss>

08002cbe <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002cbe:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002cc0:	3204      	adds	r2, #4

08002cc2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002cc2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002cc4:	d3fb      	bcc.n	8002cbe <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8002cc6:	f001 fcfd 	bl	80046c4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8002cca:	f7ff fe67 	bl	800299c <main>
  bx lr
 8002cce:	4770      	bx	lr
  ldr r0, =_sdata
 8002cd0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002cd4:	200001d0 	.word	0x200001d0
  ldr r2, =_sidata
 8002cd8:	08007830 	.word	0x08007830
  ldr r2, =_sbss
 8002cdc:	200001d0 	.word	0x200001d0
  ldr r4, =_ebss
 8002ce0:	20000550 	.word	0x20000550

08002ce4 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8002ce4:	e7fe      	b.n	8002ce4 <ADC1_2_IRQHandler>
	...

08002ce8 <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8002ce8:	b480      	push	{r7}
 8002cea:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8002cec:	4b05      	ldr	r3, [pc, #20]	@ (8002d04 <HAL_IncTick+0x1c>)
 8002cee:	781b      	ldrb	r3, [r3, #0]
 8002cf0:	461a      	mov	r2, r3
 8002cf2:	4b05      	ldr	r3, [pc, #20]	@ (8002d08 <HAL_IncTick+0x20>)
 8002cf4:	681b      	ldr	r3, [r3, #0]
 8002cf6:	4413      	add	r3, r2
 8002cf8:	4a03      	ldr	r2, [pc, #12]	@ (8002d08 <HAL_IncTick+0x20>)
 8002cfa:	6013      	str	r3, [r2, #0]
}
 8002cfc:	bf00      	nop
 8002cfe:	46bd      	mov	sp, r7
 8002d00:	bc80      	pop	{r7}
 8002d02:	4770      	bx	lr
 8002d04:	20000004 	.word	0x20000004
 8002d08:	20000400 	.word	0x20000400

08002d0c <atof>:
 8002d0c:	2100      	movs	r1, #0
 8002d0e:	f000 bdff 	b.w	8003910 <strtod>

08002d12 <atoi>:
 8002d12:	220a      	movs	r2, #10
 8002d14:	2100      	movs	r1, #0
 8002d16:	f000 be81 	b.w	8003a1c <strtol>

08002d1a <sulp>:
 8002d1a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002d1e:	460f      	mov	r7, r1
 8002d20:	4690      	mov	r8, r2
 8002d22:	f003 fb2b 	bl	800637c <__ulp>
 8002d26:	4604      	mov	r4, r0
 8002d28:	460d      	mov	r5, r1
 8002d2a:	f1b8 0f00 	cmp.w	r8, #0
 8002d2e:	d011      	beq.n	8002d54 <sulp+0x3a>
 8002d30:	f3c7 530a 	ubfx	r3, r7, #20, #11
 8002d34:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8002d38:	2b00      	cmp	r3, #0
 8002d3a:	dd0b      	ble.n	8002d54 <sulp+0x3a>
 8002d3c:	2400      	movs	r4, #0
 8002d3e:	051b      	lsls	r3, r3, #20
 8002d40:	f103 557f 	add.w	r5, r3, #1069547520	@ 0x3fc00000
 8002d44:	f505 1540 	add.w	r5, r5, #3145728	@ 0x300000
 8002d48:	4622      	mov	r2, r4
 8002d4a:	462b      	mov	r3, r5
 8002d4c:	f7fd fbc4 	bl	80004d8 <__aeabi_dmul>
 8002d50:	4604      	mov	r4, r0
 8002d52:	460d      	mov	r5, r1
 8002d54:	4620      	mov	r0, r4
 8002d56:	4629      	mov	r1, r5
 8002d58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002d5c:	0000      	movs	r0, r0
	...

08002d60 <_strtod_l>:
 8002d60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002d64:	b09f      	sub	sp, #124	@ 0x7c
 8002d66:	9217      	str	r2, [sp, #92]	@ 0x5c
 8002d68:	2200      	movs	r2, #0
 8002d6a:	460c      	mov	r4, r1
 8002d6c:	921a      	str	r2, [sp, #104]	@ 0x68
 8002d6e:	f04f 0a00 	mov.w	sl, #0
 8002d72:	f04f 0b00 	mov.w	fp, #0
 8002d76:	460a      	mov	r2, r1
 8002d78:	9005      	str	r0, [sp, #20]
 8002d7a:	9219      	str	r2, [sp, #100]	@ 0x64
 8002d7c:	7811      	ldrb	r1, [r2, #0]
 8002d7e:	292b      	cmp	r1, #43	@ 0x2b
 8002d80:	d048      	beq.n	8002e14 <_strtod_l+0xb4>
 8002d82:	d836      	bhi.n	8002df2 <_strtod_l+0x92>
 8002d84:	290d      	cmp	r1, #13
 8002d86:	d830      	bhi.n	8002dea <_strtod_l+0x8a>
 8002d88:	2908      	cmp	r1, #8
 8002d8a:	d830      	bhi.n	8002dee <_strtod_l+0x8e>
 8002d8c:	2900      	cmp	r1, #0
 8002d8e:	d039      	beq.n	8002e04 <_strtod_l+0xa4>
 8002d90:	2200      	movs	r2, #0
 8002d92:	920e      	str	r2, [sp, #56]	@ 0x38
 8002d94:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 8002d96:	782a      	ldrb	r2, [r5, #0]
 8002d98:	2a30      	cmp	r2, #48	@ 0x30
 8002d9a:	f040 80b0 	bne.w	8002efe <_strtod_l+0x19e>
 8002d9e:	786a      	ldrb	r2, [r5, #1]
 8002da0:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8002da4:	2a58      	cmp	r2, #88	@ 0x58
 8002da6:	d16c      	bne.n	8002e82 <_strtod_l+0x122>
 8002da8:	9302      	str	r3, [sp, #8]
 8002daa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002dac:	4a8f      	ldr	r2, [pc, #572]	@ (8002fec <_strtod_l+0x28c>)
 8002dae:	9301      	str	r3, [sp, #4]
 8002db0:	ab1a      	add	r3, sp, #104	@ 0x68
 8002db2:	9300      	str	r3, [sp, #0]
 8002db4:	9805      	ldr	r0, [sp, #20]
 8002db6:	ab1b      	add	r3, sp, #108	@ 0x6c
 8002db8:	a919      	add	r1, sp, #100	@ 0x64
 8002dba:	f002 fbd9 	bl	8005570 <__gethex>
 8002dbe:	f010 060f 	ands.w	r6, r0, #15
 8002dc2:	4604      	mov	r4, r0
 8002dc4:	d005      	beq.n	8002dd2 <_strtod_l+0x72>
 8002dc6:	2e06      	cmp	r6, #6
 8002dc8:	d126      	bne.n	8002e18 <_strtod_l+0xb8>
 8002dca:	2300      	movs	r3, #0
 8002dcc:	3501      	adds	r5, #1
 8002dce:	9519      	str	r5, [sp, #100]	@ 0x64
 8002dd0:	930e      	str	r3, [sp, #56]	@ 0x38
 8002dd2:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8002dd4:	2b00      	cmp	r3, #0
 8002dd6:	f040 8582 	bne.w	80038de <_strtod_l+0xb7e>
 8002dda:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002ddc:	b1bb      	cbz	r3, 8002e0e <_strtod_l+0xae>
 8002dde:	4650      	mov	r0, sl
 8002de0:	f10b 4100 	add.w	r1, fp, #2147483648	@ 0x80000000
 8002de4:	b01f      	add	sp, #124	@ 0x7c
 8002de6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002dea:	2920      	cmp	r1, #32
 8002dec:	d1d0      	bne.n	8002d90 <_strtod_l+0x30>
 8002dee:	3201      	adds	r2, #1
 8002df0:	e7c3      	b.n	8002d7a <_strtod_l+0x1a>
 8002df2:	292d      	cmp	r1, #45	@ 0x2d
 8002df4:	d1cc      	bne.n	8002d90 <_strtod_l+0x30>
 8002df6:	2101      	movs	r1, #1
 8002df8:	910e      	str	r1, [sp, #56]	@ 0x38
 8002dfa:	1c51      	adds	r1, r2, #1
 8002dfc:	9119      	str	r1, [sp, #100]	@ 0x64
 8002dfe:	7852      	ldrb	r2, [r2, #1]
 8002e00:	2a00      	cmp	r2, #0
 8002e02:	d1c7      	bne.n	8002d94 <_strtod_l+0x34>
 8002e04:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8002e06:	9419      	str	r4, [sp, #100]	@ 0x64
 8002e08:	2b00      	cmp	r3, #0
 8002e0a:	f040 8566 	bne.w	80038da <_strtod_l+0xb7a>
 8002e0e:	4650      	mov	r0, sl
 8002e10:	4659      	mov	r1, fp
 8002e12:	e7e7      	b.n	8002de4 <_strtod_l+0x84>
 8002e14:	2100      	movs	r1, #0
 8002e16:	e7ef      	b.n	8002df8 <_strtod_l+0x98>
 8002e18:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8002e1a:	b13a      	cbz	r2, 8002e2c <_strtod_l+0xcc>
 8002e1c:	2135      	movs	r1, #53	@ 0x35
 8002e1e:	a81c      	add	r0, sp, #112	@ 0x70
 8002e20:	f003 fb9c 	bl	800655c <__copybits>
 8002e24:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8002e26:	9805      	ldr	r0, [sp, #20]
 8002e28:	f002 ff7c 	bl	8005d24 <_Bfree>
 8002e2c:	3e01      	subs	r6, #1
 8002e2e:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8002e30:	2e04      	cmp	r6, #4
 8002e32:	d806      	bhi.n	8002e42 <_strtod_l+0xe2>
 8002e34:	e8df f006 	tbb	[pc, r6]
 8002e38:	201d0314 	.word	0x201d0314
 8002e3c:	14          	.byte	0x14
 8002e3d:	00          	.byte	0x00
 8002e3e:	e9dd ab1c 	ldrd	sl, fp, [sp, #112]	@ 0x70
 8002e42:	05e1      	lsls	r1, r4, #23
 8002e44:	bf48      	it	mi
 8002e46:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 8002e4a:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8002e4e:	0d1b      	lsrs	r3, r3, #20
 8002e50:	051b      	lsls	r3, r3, #20
 8002e52:	2b00      	cmp	r3, #0
 8002e54:	d1bd      	bne.n	8002dd2 <_strtod_l+0x72>
 8002e56:	f001 fc2f 	bl	80046b8 <__errno>
 8002e5a:	2322      	movs	r3, #34	@ 0x22
 8002e5c:	6003      	str	r3, [r0, #0]
 8002e5e:	e7b8      	b.n	8002dd2 <_strtod_l+0x72>
 8002e60:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 8002e64:	e9dd a31c 	ldrd	sl, r3, [sp, #112]	@ 0x70
 8002e68:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 8002e6c:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8002e70:	e7e7      	b.n	8002e42 <_strtod_l+0xe2>
 8002e72:	f8df b17c 	ldr.w	fp, [pc, #380]	@ 8002ff0 <_strtod_l+0x290>
 8002e76:	e7e4      	b.n	8002e42 <_strtod_l+0xe2>
 8002e78:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 8002e7c:	f04f 3aff 	mov.w	sl, #4294967295
 8002e80:	e7df      	b.n	8002e42 <_strtod_l+0xe2>
 8002e82:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8002e84:	1c5a      	adds	r2, r3, #1
 8002e86:	9219      	str	r2, [sp, #100]	@ 0x64
 8002e88:	785b      	ldrb	r3, [r3, #1]
 8002e8a:	2b30      	cmp	r3, #48	@ 0x30
 8002e8c:	d0f9      	beq.n	8002e82 <_strtod_l+0x122>
 8002e8e:	2b00      	cmp	r3, #0
 8002e90:	d09f      	beq.n	8002dd2 <_strtod_l+0x72>
 8002e92:	2301      	movs	r3, #1
 8002e94:	2700      	movs	r7, #0
 8002e96:	220a      	movs	r2, #10
 8002e98:	46b9      	mov	r9, r7
 8002e9a:	9308      	str	r3, [sp, #32]
 8002e9c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8002e9e:	970b      	str	r7, [sp, #44]	@ 0x2c
 8002ea0:	930c      	str	r3, [sp, #48]	@ 0x30
 8002ea2:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8002ea4:	7805      	ldrb	r5, [r0, #0]
 8002ea6:	f1a5 0330 	sub.w	r3, r5, #48	@ 0x30
 8002eaa:	b2d9      	uxtb	r1, r3
 8002eac:	2909      	cmp	r1, #9
 8002eae:	d928      	bls.n	8002f02 <_strtod_l+0x1a2>
 8002eb0:	2201      	movs	r2, #1
 8002eb2:	4950      	ldr	r1, [pc, #320]	@ (8002ff4 <_strtod_l+0x294>)
 8002eb4:	f001 fb66 	bl	8004584 <strncmp>
 8002eb8:	2800      	cmp	r0, #0
 8002eba:	d032      	beq.n	8002f22 <_strtod_l+0x1c2>
 8002ebc:	2000      	movs	r0, #0
 8002ebe:	462a      	mov	r2, r5
 8002ec0:	4603      	mov	r3, r0
 8002ec2:	464d      	mov	r5, r9
 8002ec4:	900a      	str	r0, [sp, #40]	@ 0x28
 8002ec6:	2a65      	cmp	r2, #101	@ 0x65
 8002ec8:	d001      	beq.n	8002ece <_strtod_l+0x16e>
 8002eca:	2a45      	cmp	r2, #69	@ 0x45
 8002ecc:	d114      	bne.n	8002ef8 <_strtod_l+0x198>
 8002ece:	b91d      	cbnz	r5, 8002ed8 <_strtod_l+0x178>
 8002ed0:	9a08      	ldr	r2, [sp, #32]
 8002ed2:	4302      	orrs	r2, r0
 8002ed4:	d096      	beq.n	8002e04 <_strtod_l+0xa4>
 8002ed6:	2500      	movs	r5, #0
 8002ed8:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 8002eda:	1c62      	adds	r2, r4, #1
 8002edc:	9219      	str	r2, [sp, #100]	@ 0x64
 8002ede:	7862      	ldrb	r2, [r4, #1]
 8002ee0:	2a2b      	cmp	r2, #43	@ 0x2b
 8002ee2:	d07a      	beq.n	8002fda <_strtod_l+0x27a>
 8002ee4:	2a2d      	cmp	r2, #45	@ 0x2d
 8002ee6:	d07e      	beq.n	8002fe6 <_strtod_l+0x286>
 8002ee8:	f04f 0c00 	mov.w	ip, #0
 8002eec:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 8002ef0:	2909      	cmp	r1, #9
 8002ef2:	f240 8085 	bls.w	8003000 <_strtod_l+0x2a0>
 8002ef6:	9419      	str	r4, [sp, #100]	@ 0x64
 8002ef8:	f04f 0800 	mov.w	r8, #0
 8002efc:	e0a5      	b.n	800304a <_strtod_l+0x2ea>
 8002efe:	2300      	movs	r3, #0
 8002f00:	e7c8      	b.n	8002e94 <_strtod_l+0x134>
 8002f02:	f1b9 0f08 	cmp.w	r9, #8
 8002f06:	bfd8      	it	le
 8002f08:	990b      	ldrle	r1, [sp, #44]	@ 0x2c
 8002f0a:	f100 0001 	add.w	r0, r0, #1
 8002f0e:	bfd6      	itet	le
 8002f10:	fb02 3301 	mlale	r3, r2, r1, r3
 8002f14:	fb02 3707 	mlagt	r7, r2, r7, r3
 8002f18:	930b      	strle	r3, [sp, #44]	@ 0x2c
 8002f1a:	f109 0901 	add.w	r9, r9, #1
 8002f1e:	9019      	str	r0, [sp, #100]	@ 0x64
 8002f20:	e7bf      	b.n	8002ea2 <_strtod_l+0x142>
 8002f22:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8002f24:	1c5a      	adds	r2, r3, #1
 8002f26:	9219      	str	r2, [sp, #100]	@ 0x64
 8002f28:	785a      	ldrb	r2, [r3, #1]
 8002f2a:	f1b9 0f00 	cmp.w	r9, #0
 8002f2e:	d03b      	beq.n	8002fa8 <_strtod_l+0x248>
 8002f30:	464d      	mov	r5, r9
 8002f32:	900a      	str	r0, [sp, #40]	@ 0x28
 8002f34:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 8002f38:	2b09      	cmp	r3, #9
 8002f3a:	d912      	bls.n	8002f62 <_strtod_l+0x202>
 8002f3c:	2301      	movs	r3, #1
 8002f3e:	e7c2      	b.n	8002ec6 <_strtod_l+0x166>
 8002f40:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8002f42:	3001      	adds	r0, #1
 8002f44:	1c5a      	adds	r2, r3, #1
 8002f46:	9219      	str	r2, [sp, #100]	@ 0x64
 8002f48:	785a      	ldrb	r2, [r3, #1]
 8002f4a:	2a30      	cmp	r2, #48	@ 0x30
 8002f4c:	d0f8      	beq.n	8002f40 <_strtod_l+0x1e0>
 8002f4e:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 8002f52:	2b08      	cmp	r3, #8
 8002f54:	f200 84c8 	bhi.w	80038e8 <_strtod_l+0xb88>
 8002f58:	900a      	str	r0, [sp, #40]	@ 0x28
 8002f5a:	2000      	movs	r0, #0
 8002f5c:	4605      	mov	r5, r0
 8002f5e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8002f60:	930c      	str	r3, [sp, #48]	@ 0x30
 8002f62:	3a30      	subs	r2, #48	@ 0x30
 8002f64:	f100 0301 	add.w	r3, r0, #1
 8002f68:	d018      	beq.n	8002f9c <_strtod_l+0x23c>
 8002f6a:	462e      	mov	r6, r5
 8002f6c:	f04f 0e0a 	mov.w	lr, #10
 8002f70:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8002f72:	4419      	add	r1, r3
 8002f74:	910a      	str	r1, [sp, #40]	@ 0x28
 8002f76:	1c71      	adds	r1, r6, #1
 8002f78:	eba1 0c05 	sub.w	ip, r1, r5
 8002f7c:	4563      	cmp	r3, ip
 8002f7e:	dc15      	bgt.n	8002fac <_strtod_l+0x24c>
 8002f80:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 8002f84:	182b      	adds	r3, r5, r0
 8002f86:	2b08      	cmp	r3, #8
 8002f88:	f105 0501 	add.w	r5, r5, #1
 8002f8c:	4405      	add	r5, r0
 8002f8e:	dc1a      	bgt.n	8002fc6 <_strtod_l+0x266>
 8002f90:	230a      	movs	r3, #10
 8002f92:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8002f94:	fb03 2301 	mla	r3, r3, r1, r2
 8002f98:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002f9a:	2300      	movs	r3, #0
 8002f9c:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8002f9e:	4618      	mov	r0, r3
 8002fa0:	1c51      	adds	r1, r2, #1
 8002fa2:	9119      	str	r1, [sp, #100]	@ 0x64
 8002fa4:	7852      	ldrb	r2, [r2, #1]
 8002fa6:	e7c5      	b.n	8002f34 <_strtod_l+0x1d4>
 8002fa8:	4648      	mov	r0, r9
 8002faa:	e7ce      	b.n	8002f4a <_strtod_l+0x1ea>
 8002fac:	2e08      	cmp	r6, #8
 8002fae:	dc05      	bgt.n	8002fbc <_strtod_l+0x25c>
 8002fb0:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8002fb2:	fb0e f606 	mul.w	r6, lr, r6
 8002fb6:	960b      	str	r6, [sp, #44]	@ 0x2c
 8002fb8:	460e      	mov	r6, r1
 8002fba:	e7dc      	b.n	8002f76 <_strtod_l+0x216>
 8002fbc:	2910      	cmp	r1, #16
 8002fbe:	bfd8      	it	le
 8002fc0:	fb0e f707 	mulle.w	r7, lr, r7
 8002fc4:	e7f8      	b.n	8002fb8 <_strtod_l+0x258>
 8002fc6:	2b0f      	cmp	r3, #15
 8002fc8:	bfdc      	itt	le
 8002fca:	230a      	movle	r3, #10
 8002fcc:	fb03 2707 	mlale	r7, r3, r7, r2
 8002fd0:	e7e3      	b.n	8002f9a <_strtod_l+0x23a>
 8002fd2:	2300      	movs	r3, #0
 8002fd4:	930a      	str	r3, [sp, #40]	@ 0x28
 8002fd6:	2301      	movs	r3, #1
 8002fd8:	e77a      	b.n	8002ed0 <_strtod_l+0x170>
 8002fda:	f04f 0c00 	mov.w	ip, #0
 8002fde:	1ca2      	adds	r2, r4, #2
 8002fe0:	9219      	str	r2, [sp, #100]	@ 0x64
 8002fe2:	78a2      	ldrb	r2, [r4, #2]
 8002fe4:	e782      	b.n	8002eec <_strtod_l+0x18c>
 8002fe6:	f04f 0c01 	mov.w	ip, #1
 8002fea:	e7f8      	b.n	8002fde <_strtod_l+0x27e>
 8002fec:	080075e0 	.word	0x080075e0
 8002ff0:	7ff00000 	.word	0x7ff00000
 8002ff4:	080073f8 	.word	0x080073f8
 8002ff8:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8002ffa:	1c51      	adds	r1, r2, #1
 8002ffc:	9119      	str	r1, [sp, #100]	@ 0x64
 8002ffe:	7852      	ldrb	r2, [r2, #1]
 8003000:	2a30      	cmp	r2, #48	@ 0x30
 8003002:	d0f9      	beq.n	8002ff8 <_strtod_l+0x298>
 8003004:	f1a2 0131 	sub.w	r1, r2, #49	@ 0x31
 8003008:	2908      	cmp	r1, #8
 800300a:	f63f af75 	bhi.w	8002ef8 <_strtod_l+0x198>
 800300e:	f04f 080a 	mov.w	r8, #10
 8003012:	3a30      	subs	r2, #48	@ 0x30
 8003014:	9209      	str	r2, [sp, #36]	@ 0x24
 8003016:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8003018:	920f      	str	r2, [sp, #60]	@ 0x3c
 800301a:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800301c:	1c56      	adds	r6, r2, #1
 800301e:	9619      	str	r6, [sp, #100]	@ 0x64
 8003020:	7852      	ldrb	r2, [r2, #1]
 8003022:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 8003026:	f1be 0f09 	cmp.w	lr, #9
 800302a:	d939      	bls.n	80030a0 <_strtod_l+0x340>
 800302c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 800302e:	f644 681f 	movw	r8, #19999	@ 0x4e1f
 8003032:	1a76      	subs	r6, r6, r1
 8003034:	2e08      	cmp	r6, #8
 8003036:	dc03      	bgt.n	8003040 <_strtod_l+0x2e0>
 8003038:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800303a:	4588      	cmp	r8, r1
 800303c:	bfa8      	it	ge
 800303e:	4688      	movge	r8, r1
 8003040:	f1bc 0f00 	cmp.w	ip, #0
 8003044:	d001      	beq.n	800304a <_strtod_l+0x2ea>
 8003046:	f1c8 0800 	rsb	r8, r8, #0
 800304a:	2d00      	cmp	r5, #0
 800304c:	d14e      	bne.n	80030ec <_strtod_l+0x38c>
 800304e:	9908      	ldr	r1, [sp, #32]
 8003050:	4308      	orrs	r0, r1
 8003052:	f47f aebe 	bne.w	8002dd2 <_strtod_l+0x72>
 8003056:	2b00      	cmp	r3, #0
 8003058:	f47f aed4 	bne.w	8002e04 <_strtod_l+0xa4>
 800305c:	2a69      	cmp	r2, #105	@ 0x69
 800305e:	d028      	beq.n	80030b2 <_strtod_l+0x352>
 8003060:	dc25      	bgt.n	80030ae <_strtod_l+0x34e>
 8003062:	2a49      	cmp	r2, #73	@ 0x49
 8003064:	d025      	beq.n	80030b2 <_strtod_l+0x352>
 8003066:	2a4e      	cmp	r2, #78	@ 0x4e
 8003068:	f47f aecc 	bne.w	8002e04 <_strtod_l+0xa4>
 800306c:	4999      	ldr	r1, [pc, #612]	@ (80032d4 <_strtod_l+0x574>)
 800306e:	a819      	add	r0, sp, #100	@ 0x64
 8003070:	f002 fca0 	bl	80059b4 <__match>
 8003074:	2800      	cmp	r0, #0
 8003076:	f43f aec5 	beq.w	8002e04 <_strtod_l+0xa4>
 800307a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800307c:	781b      	ldrb	r3, [r3, #0]
 800307e:	2b28      	cmp	r3, #40	@ 0x28
 8003080:	d12e      	bne.n	80030e0 <_strtod_l+0x380>
 8003082:	4995      	ldr	r1, [pc, #596]	@ (80032d8 <_strtod_l+0x578>)
 8003084:	aa1c      	add	r2, sp, #112	@ 0x70
 8003086:	a819      	add	r0, sp, #100	@ 0x64
 8003088:	f002 fca8 	bl	80059dc <__hexnan>
 800308c:	2805      	cmp	r0, #5
 800308e:	d127      	bne.n	80030e0 <_strtod_l+0x380>
 8003090:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8003092:	f8dd a070 	ldr.w	sl, [sp, #112]	@ 0x70
 8003096:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 800309a:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 800309e:	e698      	b.n	8002dd2 <_strtod_l+0x72>
 80030a0:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80030a2:	fb08 2101 	mla	r1, r8, r1, r2
 80030a6:	f1a1 0230 	sub.w	r2, r1, #48	@ 0x30
 80030aa:	9209      	str	r2, [sp, #36]	@ 0x24
 80030ac:	e7b5      	b.n	800301a <_strtod_l+0x2ba>
 80030ae:	2a6e      	cmp	r2, #110	@ 0x6e
 80030b0:	e7da      	b.n	8003068 <_strtod_l+0x308>
 80030b2:	498a      	ldr	r1, [pc, #552]	@ (80032dc <_strtod_l+0x57c>)
 80030b4:	a819      	add	r0, sp, #100	@ 0x64
 80030b6:	f002 fc7d 	bl	80059b4 <__match>
 80030ba:	2800      	cmp	r0, #0
 80030bc:	f43f aea2 	beq.w	8002e04 <_strtod_l+0xa4>
 80030c0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80030c2:	4987      	ldr	r1, [pc, #540]	@ (80032e0 <_strtod_l+0x580>)
 80030c4:	3b01      	subs	r3, #1
 80030c6:	a819      	add	r0, sp, #100	@ 0x64
 80030c8:	9319      	str	r3, [sp, #100]	@ 0x64
 80030ca:	f002 fc73 	bl	80059b4 <__match>
 80030ce:	b910      	cbnz	r0, 80030d6 <_strtod_l+0x376>
 80030d0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80030d2:	3301      	adds	r3, #1
 80030d4:	9319      	str	r3, [sp, #100]	@ 0x64
 80030d6:	f04f 0a00 	mov.w	sl, #0
 80030da:	f8df b208 	ldr.w	fp, [pc, #520]	@ 80032e4 <_strtod_l+0x584>
 80030de:	e678      	b.n	8002dd2 <_strtod_l+0x72>
 80030e0:	4881      	ldr	r0, [pc, #516]	@ (80032e8 <_strtod_l+0x588>)
 80030e2:	f001 fb33 	bl	800474c <nan>
 80030e6:	4682      	mov	sl, r0
 80030e8:	468b      	mov	fp, r1
 80030ea:	e672      	b.n	8002dd2 <_strtod_l+0x72>
 80030ec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80030ee:	f1b9 0f00 	cmp.w	r9, #0
 80030f2:	bf08      	it	eq
 80030f4:	46a9      	moveq	r9, r5
 80030f6:	eba8 0303 	sub.w	r3, r8, r3
 80030fa:	2d10      	cmp	r5, #16
 80030fc:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80030fe:	462c      	mov	r4, r5
 8003100:	9309      	str	r3, [sp, #36]	@ 0x24
 8003102:	bfa8      	it	ge
 8003104:	2410      	movge	r4, #16
 8003106:	f7fd f96d 	bl	80003e4 <__aeabi_ui2d>
 800310a:	2d09      	cmp	r5, #9
 800310c:	4682      	mov	sl, r0
 800310e:	468b      	mov	fp, r1
 8003110:	dc11      	bgt.n	8003136 <_strtod_l+0x3d6>
 8003112:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003114:	2b00      	cmp	r3, #0
 8003116:	f43f ae5c 	beq.w	8002dd2 <_strtod_l+0x72>
 800311a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800311c:	dd76      	ble.n	800320c <_strtod_l+0x4ac>
 800311e:	2b16      	cmp	r3, #22
 8003120:	dc5d      	bgt.n	80031de <_strtod_l+0x47e>
 8003122:	4972      	ldr	r1, [pc, #456]	@ (80032ec <_strtod_l+0x58c>)
 8003124:	4652      	mov	r2, sl
 8003126:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800312a:	465b      	mov	r3, fp
 800312c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003130:	f7fd f9d2 	bl	80004d8 <__aeabi_dmul>
 8003134:	e7d7      	b.n	80030e6 <_strtod_l+0x386>
 8003136:	4b6d      	ldr	r3, [pc, #436]	@ (80032ec <_strtod_l+0x58c>)
 8003138:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800313c:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
 8003140:	f7fd f9ca 	bl	80004d8 <__aeabi_dmul>
 8003144:	4682      	mov	sl, r0
 8003146:	4638      	mov	r0, r7
 8003148:	468b      	mov	fp, r1
 800314a:	f7fd f94b 	bl	80003e4 <__aeabi_ui2d>
 800314e:	4602      	mov	r2, r0
 8003150:	460b      	mov	r3, r1
 8003152:	4650      	mov	r0, sl
 8003154:	4659      	mov	r1, fp
 8003156:	f7fd f809 	bl	800016c <__adddf3>
 800315a:	2d0f      	cmp	r5, #15
 800315c:	4682      	mov	sl, r0
 800315e:	468b      	mov	fp, r1
 8003160:	ddd7      	ble.n	8003112 <_strtod_l+0x3b2>
 8003162:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003164:	1b2c      	subs	r4, r5, r4
 8003166:	441c      	add	r4, r3
 8003168:	2c00      	cmp	r4, #0
 800316a:	f340 8093 	ble.w	8003294 <_strtod_l+0x534>
 800316e:	f014 030f 	ands.w	r3, r4, #15
 8003172:	d00a      	beq.n	800318a <_strtod_l+0x42a>
 8003174:	495d      	ldr	r1, [pc, #372]	@ (80032ec <_strtod_l+0x58c>)
 8003176:	4652      	mov	r2, sl
 8003178:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800317c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003180:	465b      	mov	r3, fp
 8003182:	f7fd f9a9 	bl	80004d8 <__aeabi_dmul>
 8003186:	4682      	mov	sl, r0
 8003188:	468b      	mov	fp, r1
 800318a:	f034 040f 	bics.w	r4, r4, #15
 800318e:	d073      	beq.n	8003278 <_strtod_l+0x518>
 8003190:	f5b4 7f9a 	cmp.w	r4, #308	@ 0x134
 8003194:	dd49      	ble.n	800322a <_strtod_l+0x4ca>
 8003196:	2400      	movs	r4, #0
 8003198:	46a0      	mov	r8, r4
 800319a:	46a1      	mov	r9, r4
 800319c:	940b      	str	r4, [sp, #44]	@ 0x2c
 800319e:	2322      	movs	r3, #34	@ 0x22
 80031a0:	f04f 0a00 	mov.w	sl, #0
 80031a4:	9a05      	ldr	r2, [sp, #20]
 80031a6:	f8df b13c 	ldr.w	fp, [pc, #316]	@ 80032e4 <_strtod_l+0x584>
 80031aa:	6013      	str	r3, [r2, #0]
 80031ac:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80031ae:	2b00      	cmp	r3, #0
 80031b0:	f43f ae0f 	beq.w	8002dd2 <_strtod_l+0x72>
 80031b4:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80031b6:	9805      	ldr	r0, [sp, #20]
 80031b8:	f002 fdb4 	bl	8005d24 <_Bfree>
 80031bc:	4649      	mov	r1, r9
 80031be:	9805      	ldr	r0, [sp, #20]
 80031c0:	f002 fdb0 	bl	8005d24 <_Bfree>
 80031c4:	4641      	mov	r1, r8
 80031c6:	9805      	ldr	r0, [sp, #20]
 80031c8:	f002 fdac 	bl	8005d24 <_Bfree>
 80031cc:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80031ce:	9805      	ldr	r0, [sp, #20]
 80031d0:	f002 fda8 	bl	8005d24 <_Bfree>
 80031d4:	4621      	mov	r1, r4
 80031d6:	9805      	ldr	r0, [sp, #20]
 80031d8:	f002 fda4 	bl	8005d24 <_Bfree>
 80031dc:	e5f9      	b.n	8002dd2 <_strtod_l+0x72>
 80031de:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80031e0:	f1c5 0325 	rsb	r3, r5, #37	@ 0x25
 80031e4:	4293      	cmp	r3, r2
 80031e6:	dbbc      	blt.n	8003162 <_strtod_l+0x402>
 80031e8:	4c40      	ldr	r4, [pc, #256]	@ (80032ec <_strtod_l+0x58c>)
 80031ea:	f1c5 050f 	rsb	r5, r5, #15
 80031ee:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 80031f2:	4652      	mov	r2, sl
 80031f4:	e9d1 0100 	ldrd	r0, r1, [r1]
 80031f8:	465b      	mov	r3, fp
 80031fa:	f7fd f96d 	bl	80004d8 <__aeabi_dmul>
 80031fe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003200:	1b5d      	subs	r5, r3, r5
 8003202:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 8003206:	e9d4 2300 	ldrd	r2, r3, [r4]
 800320a:	e791      	b.n	8003130 <_strtod_l+0x3d0>
 800320c:	3316      	adds	r3, #22
 800320e:	dba8      	blt.n	8003162 <_strtod_l+0x402>
 8003210:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003212:	4650      	mov	r0, sl
 8003214:	eba3 0808 	sub.w	r8, r3, r8
 8003218:	4b34      	ldr	r3, [pc, #208]	@ (80032ec <_strtod_l+0x58c>)
 800321a:	4659      	mov	r1, fp
 800321c:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
 8003220:	e9d8 2300 	ldrd	r2, r3, [r8]
 8003224:	f7fd fa82 	bl	800072c <__aeabi_ddiv>
 8003228:	e75d      	b.n	80030e6 <_strtod_l+0x386>
 800322a:	2300      	movs	r3, #0
 800322c:	4650      	mov	r0, sl
 800322e:	4659      	mov	r1, fp
 8003230:	461e      	mov	r6, r3
 8003232:	4f2f      	ldr	r7, [pc, #188]	@ (80032f0 <_strtod_l+0x590>)
 8003234:	1124      	asrs	r4, r4, #4
 8003236:	2c01      	cmp	r4, #1
 8003238:	dc21      	bgt.n	800327e <_strtod_l+0x51e>
 800323a:	b10b      	cbz	r3, 8003240 <_strtod_l+0x4e0>
 800323c:	4682      	mov	sl, r0
 800323e:	468b      	mov	fp, r1
 8003240:	492b      	ldr	r1, [pc, #172]	@ (80032f0 <_strtod_l+0x590>)
 8003242:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 8003246:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 800324a:	4652      	mov	r2, sl
 800324c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003250:	465b      	mov	r3, fp
 8003252:	f7fd f941 	bl	80004d8 <__aeabi_dmul>
 8003256:	4b23      	ldr	r3, [pc, #140]	@ (80032e4 <_strtod_l+0x584>)
 8003258:	460a      	mov	r2, r1
 800325a:	400b      	ands	r3, r1
 800325c:	4925      	ldr	r1, [pc, #148]	@ (80032f4 <_strtod_l+0x594>)
 800325e:	4682      	mov	sl, r0
 8003260:	428b      	cmp	r3, r1
 8003262:	d898      	bhi.n	8003196 <_strtod_l+0x436>
 8003264:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
 8003268:	428b      	cmp	r3, r1
 800326a:	bf86      	itte	hi
 800326c:	f04f 3aff 	movhi.w	sl, #4294967295
 8003270:	f8df b084 	ldrhi.w	fp, [pc, #132]	@ 80032f8 <_strtod_l+0x598>
 8003274:	f102 7b54 	addls.w	fp, r2, #55574528	@ 0x3500000
 8003278:	2300      	movs	r3, #0
 800327a:	9308      	str	r3, [sp, #32]
 800327c:	e076      	b.n	800336c <_strtod_l+0x60c>
 800327e:	07e2      	lsls	r2, r4, #31
 8003280:	d504      	bpl.n	800328c <_strtod_l+0x52c>
 8003282:	e9d7 2300 	ldrd	r2, r3, [r7]
 8003286:	f7fd f927 	bl	80004d8 <__aeabi_dmul>
 800328a:	2301      	movs	r3, #1
 800328c:	3601      	adds	r6, #1
 800328e:	1064      	asrs	r4, r4, #1
 8003290:	3708      	adds	r7, #8
 8003292:	e7d0      	b.n	8003236 <_strtod_l+0x4d6>
 8003294:	d0f0      	beq.n	8003278 <_strtod_l+0x518>
 8003296:	4264      	negs	r4, r4
 8003298:	f014 020f 	ands.w	r2, r4, #15
 800329c:	d00a      	beq.n	80032b4 <_strtod_l+0x554>
 800329e:	4b13      	ldr	r3, [pc, #76]	@ (80032ec <_strtod_l+0x58c>)
 80032a0:	4650      	mov	r0, sl
 80032a2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80032a6:	4659      	mov	r1, fp
 80032a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80032ac:	f7fd fa3e 	bl	800072c <__aeabi_ddiv>
 80032b0:	4682      	mov	sl, r0
 80032b2:	468b      	mov	fp, r1
 80032b4:	1124      	asrs	r4, r4, #4
 80032b6:	d0df      	beq.n	8003278 <_strtod_l+0x518>
 80032b8:	2c1f      	cmp	r4, #31
 80032ba:	dd1f      	ble.n	80032fc <_strtod_l+0x59c>
 80032bc:	2400      	movs	r4, #0
 80032be:	46a0      	mov	r8, r4
 80032c0:	46a1      	mov	r9, r4
 80032c2:	940b      	str	r4, [sp, #44]	@ 0x2c
 80032c4:	2322      	movs	r3, #34	@ 0x22
 80032c6:	9a05      	ldr	r2, [sp, #20]
 80032c8:	f04f 0a00 	mov.w	sl, #0
 80032cc:	f04f 0b00 	mov.w	fp, #0
 80032d0:	6013      	str	r3, [r2, #0]
 80032d2:	e76b      	b.n	80031ac <_strtod_l+0x44c>
 80032d4:	08007407 	.word	0x08007407
 80032d8:	080075cc 	.word	0x080075cc
 80032dc:	080073ff 	.word	0x080073ff
 80032e0:	08007439 	.word	0x08007439
 80032e4:	7ff00000 	.word	0x7ff00000
 80032e8:	080075c8 	.word	0x080075c8
 80032ec:	08007758 	.word	0x08007758
 80032f0:	08007730 	.word	0x08007730
 80032f4:	7ca00000 	.word	0x7ca00000
 80032f8:	7fefffff 	.word	0x7fefffff
 80032fc:	f014 0310 	ands.w	r3, r4, #16
 8003300:	bf18      	it	ne
 8003302:	236a      	movne	r3, #106	@ 0x6a
 8003304:	4650      	mov	r0, sl
 8003306:	9308      	str	r3, [sp, #32]
 8003308:	4659      	mov	r1, fp
 800330a:	2300      	movs	r3, #0
 800330c:	4e77      	ldr	r6, [pc, #476]	@ (80034ec <_strtod_l+0x78c>)
 800330e:	07e7      	lsls	r7, r4, #31
 8003310:	d504      	bpl.n	800331c <_strtod_l+0x5bc>
 8003312:	e9d6 2300 	ldrd	r2, r3, [r6]
 8003316:	f7fd f8df 	bl	80004d8 <__aeabi_dmul>
 800331a:	2301      	movs	r3, #1
 800331c:	1064      	asrs	r4, r4, #1
 800331e:	f106 0608 	add.w	r6, r6, #8
 8003322:	d1f4      	bne.n	800330e <_strtod_l+0x5ae>
 8003324:	b10b      	cbz	r3, 800332a <_strtod_l+0x5ca>
 8003326:	4682      	mov	sl, r0
 8003328:	468b      	mov	fp, r1
 800332a:	9b08      	ldr	r3, [sp, #32]
 800332c:	b1b3      	cbz	r3, 800335c <_strtod_l+0x5fc>
 800332e:	f3cb 520a 	ubfx	r2, fp, #20, #11
 8003332:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
 8003336:	2b00      	cmp	r3, #0
 8003338:	4659      	mov	r1, fp
 800333a:	dd0f      	ble.n	800335c <_strtod_l+0x5fc>
 800333c:	2b1f      	cmp	r3, #31
 800333e:	dd58      	ble.n	80033f2 <_strtod_l+0x692>
 8003340:	2b34      	cmp	r3, #52	@ 0x34
 8003342:	bfd8      	it	le
 8003344:	f04f 33ff 	movle.w	r3, #4294967295
 8003348:	f04f 0a00 	mov.w	sl, #0
 800334c:	bfcf      	iteee	gt
 800334e:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 8003352:	f1c2 024b 	rsble	r2, r2, #75	@ 0x4b
 8003356:	4093      	lslle	r3, r2
 8003358:	ea03 0b01 	andle.w	fp, r3, r1
 800335c:	2200      	movs	r2, #0
 800335e:	2300      	movs	r3, #0
 8003360:	4650      	mov	r0, sl
 8003362:	4659      	mov	r1, fp
 8003364:	f7fd fb20 	bl	80009a8 <__aeabi_dcmpeq>
 8003368:	2800      	cmp	r0, #0
 800336a:	d1a7      	bne.n	80032bc <_strtod_l+0x55c>
 800336c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800336e:	464a      	mov	r2, r9
 8003370:	9300      	str	r3, [sp, #0]
 8003372:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8003374:	462b      	mov	r3, r5
 8003376:	9805      	ldr	r0, [sp, #20]
 8003378:	f002 fd3c 	bl	8005df4 <__s2b>
 800337c:	900b      	str	r0, [sp, #44]	@ 0x2c
 800337e:	2800      	cmp	r0, #0
 8003380:	f43f af09 	beq.w	8003196 <_strtod_l+0x436>
 8003384:	2400      	movs	r4, #0
 8003386:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003388:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800338a:	2a00      	cmp	r2, #0
 800338c:	eba3 0308 	sub.w	r3, r3, r8
 8003390:	bfa8      	it	ge
 8003392:	2300      	movge	r3, #0
 8003394:	46a0      	mov	r8, r4
 8003396:	9312      	str	r3, [sp, #72]	@ 0x48
 8003398:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 800339c:	9316      	str	r3, [sp, #88]	@ 0x58
 800339e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80033a0:	9805      	ldr	r0, [sp, #20]
 80033a2:	6859      	ldr	r1, [r3, #4]
 80033a4:	f002 fc7e 	bl	8005ca4 <_Balloc>
 80033a8:	4681      	mov	r9, r0
 80033aa:	2800      	cmp	r0, #0
 80033ac:	f43f aef7 	beq.w	800319e <_strtod_l+0x43e>
 80033b0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80033b2:	300c      	adds	r0, #12
 80033b4:	691a      	ldr	r2, [r3, #16]
 80033b6:	f103 010c 	add.w	r1, r3, #12
 80033ba:	3202      	adds	r2, #2
 80033bc:	0092      	lsls	r2, r2, #2
 80033be:	f001 f9b6 	bl	800472e <memcpy>
 80033c2:	ab1c      	add	r3, sp, #112	@ 0x70
 80033c4:	9301      	str	r3, [sp, #4]
 80033c6:	ab1b      	add	r3, sp, #108	@ 0x6c
 80033c8:	9300      	str	r3, [sp, #0]
 80033ca:	4652      	mov	r2, sl
 80033cc:	465b      	mov	r3, fp
 80033ce:	9805      	ldr	r0, [sp, #20]
 80033d0:	e9cd ab0c 	strd	sl, fp, [sp, #48]	@ 0x30
 80033d4:	f003 f83a 	bl	800644c <__d2b>
 80033d8:	901a      	str	r0, [sp, #104]	@ 0x68
 80033da:	2800      	cmp	r0, #0
 80033dc:	f43f aedf 	beq.w	800319e <_strtod_l+0x43e>
 80033e0:	2101      	movs	r1, #1
 80033e2:	9805      	ldr	r0, [sp, #20]
 80033e4:	f002 fd9c 	bl	8005f20 <__i2b>
 80033e8:	4680      	mov	r8, r0
 80033ea:	b948      	cbnz	r0, 8003400 <_strtod_l+0x6a0>
 80033ec:	f04f 0800 	mov.w	r8, #0
 80033f0:	e6d5      	b.n	800319e <_strtod_l+0x43e>
 80033f2:	f04f 32ff 	mov.w	r2, #4294967295
 80033f6:	fa02 f303 	lsl.w	r3, r2, r3
 80033fa:	ea03 0a0a 	and.w	sl, r3, sl
 80033fe:	e7ad      	b.n	800335c <_strtod_l+0x5fc>
 8003400:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 8003402:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8003404:	2d00      	cmp	r5, #0
 8003406:	bfab      	itete	ge
 8003408:	9b12      	ldrge	r3, [sp, #72]	@ 0x48
 800340a:	9b16      	ldrlt	r3, [sp, #88]	@ 0x58
 800340c:	18ef      	addge	r7, r5, r3
 800340e:	1b5e      	sublt	r6, r3, r5
 8003410:	9b08      	ldr	r3, [sp, #32]
 8003412:	bfa8      	it	ge
 8003414:	9e16      	ldrge	r6, [sp, #88]	@ 0x58
 8003416:	eba5 0503 	sub.w	r5, r5, r3
 800341a:	4415      	add	r5, r2
 800341c:	4b34      	ldr	r3, [pc, #208]	@ (80034f0 <_strtod_l+0x790>)
 800341e:	f105 35ff 	add.w	r5, r5, #4294967295
 8003422:	bfb8      	it	lt
 8003424:	9f12      	ldrlt	r7, [sp, #72]	@ 0x48
 8003426:	429d      	cmp	r5, r3
 8003428:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 800342c:	da50      	bge.n	80034d0 <_strtod_l+0x770>
 800342e:	1b5b      	subs	r3, r3, r5
 8003430:	2b1f      	cmp	r3, #31
 8003432:	f04f 0101 	mov.w	r1, #1
 8003436:	eba2 0203 	sub.w	r2, r2, r3
 800343a:	dc3d      	bgt.n	80034b8 <_strtod_l+0x758>
 800343c:	fa01 f303 	lsl.w	r3, r1, r3
 8003440:	9313      	str	r3, [sp, #76]	@ 0x4c
 8003442:	2300      	movs	r3, #0
 8003444:	9310      	str	r3, [sp, #64]	@ 0x40
 8003446:	18bd      	adds	r5, r7, r2
 8003448:	9b08      	ldr	r3, [sp, #32]
 800344a:	42af      	cmp	r7, r5
 800344c:	4416      	add	r6, r2
 800344e:	441e      	add	r6, r3
 8003450:	463b      	mov	r3, r7
 8003452:	bfa8      	it	ge
 8003454:	462b      	movge	r3, r5
 8003456:	42b3      	cmp	r3, r6
 8003458:	bfa8      	it	ge
 800345a:	4633      	movge	r3, r6
 800345c:	2b00      	cmp	r3, #0
 800345e:	bfc2      	ittt	gt
 8003460:	1aed      	subgt	r5, r5, r3
 8003462:	1af6      	subgt	r6, r6, r3
 8003464:	1aff      	subgt	r7, r7, r3
 8003466:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8003468:	2b00      	cmp	r3, #0
 800346a:	dd16      	ble.n	800349a <_strtod_l+0x73a>
 800346c:	4641      	mov	r1, r8
 800346e:	461a      	mov	r2, r3
 8003470:	9805      	ldr	r0, [sp, #20]
 8003472:	f002 fe0d 	bl	8006090 <__pow5mult>
 8003476:	4680      	mov	r8, r0
 8003478:	2800      	cmp	r0, #0
 800347a:	d0b7      	beq.n	80033ec <_strtod_l+0x68c>
 800347c:	4601      	mov	r1, r0
 800347e:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8003480:	9805      	ldr	r0, [sp, #20]
 8003482:	f002 fd63 	bl	8005f4c <__multiply>
 8003486:	900a      	str	r0, [sp, #40]	@ 0x28
 8003488:	2800      	cmp	r0, #0
 800348a:	f43f ae88 	beq.w	800319e <_strtod_l+0x43e>
 800348e:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8003490:	9805      	ldr	r0, [sp, #20]
 8003492:	f002 fc47 	bl	8005d24 <_Bfree>
 8003496:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003498:	931a      	str	r3, [sp, #104]	@ 0x68
 800349a:	2d00      	cmp	r5, #0
 800349c:	dc1d      	bgt.n	80034da <_strtod_l+0x77a>
 800349e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80034a0:	2b00      	cmp	r3, #0
 80034a2:	dd27      	ble.n	80034f4 <_strtod_l+0x794>
 80034a4:	4649      	mov	r1, r9
 80034a6:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 80034a8:	9805      	ldr	r0, [sp, #20]
 80034aa:	f002 fdf1 	bl	8006090 <__pow5mult>
 80034ae:	4681      	mov	r9, r0
 80034b0:	bb00      	cbnz	r0, 80034f4 <_strtod_l+0x794>
 80034b2:	f04f 0900 	mov.w	r9, #0
 80034b6:	e672      	b.n	800319e <_strtod_l+0x43e>
 80034b8:	f1c5 457f 	rsb	r5, r5, #4278190080	@ 0xff000000
 80034bc:	f505 057f 	add.w	r5, r5, #16711680	@ 0xff0000
 80034c0:	f505 457b 	add.w	r5, r5, #64256	@ 0xfb00
 80034c4:	35e2      	adds	r5, #226	@ 0xe2
 80034c6:	fa01 f305 	lsl.w	r3, r1, r5
 80034ca:	9310      	str	r3, [sp, #64]	@ 0x40
 80034cc:	9113      	str	r1, [sp, #76]	@ 0x4c
 80034ce:	e7ba      	b.n	8003446 <_strtod_l+0x6e6>
 80034d0:	2300      	movs	r3, #0
 80034d2:	9310      	str	r3, [sp, #64]	@ 0x40
 80034d4:	2301      	movs	r3, #1
 80034d6:	9313      	str	r3, [sp, #76]	@ 0x4c
 80034d8:	e7b5      	b.n	8003446 <_strtod_l+0x6e6>
 80034da:	462a      	mov	r2, r5
 80034dc:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80034de:	9805      	ldr	r0, [sp, #20]
 80034e0:	f002 fe30 	bl	8006144 <__lshift>
 80034e4:	901a      	str	r0, [sp, #104]	@ 0x68
 80034e6:	2800      	cmp	r0, #0
 80034e8:	d1d9      	bne.n	800349e <_strtod_l+0x73e>
 80034ea:	e658      	b.n	800319e <_strtod_l+0x43e>
 80034ec:	080075f8 	.word	0x080075f8
 80034f0:	fffffc02 	.word	0xfffffc02
 80034f4:	2e00      	cmp	r6, #0
 80034f6:	dd07      	ble.n	8003508 <_strtod_l+0x7a8>
 80034f8:	4649      	mov	r1, r9
 80034fa:	4632      	mov	r2, r6
 80034fc:	9805      	ldr	r0, [sp, #20]
 80034fe:	f002 fe21 	bl	8006144 <__lshift>
 8003502:	4681      	mov	r9, r0
 8003504:	2800      	cmp	r0, #0
 8003506:	d0d4      	beq.n	80034b2 <_strtod_l+0x752>
 8003508:	2f00      	cmp	r7, #0
 800350a:	dd08      	ble.n	800351e <_strtod_l+0x7be>
 800350c:	4641      	mov	r1, r8
 800350e:	463a      	mov	r2, r7
 8003510:	9805      	ldr	r0, [sp, #20]
 8003512:	f002 fe17 	bl	8006144 <__lshift>
 8003516:	4680      	mov	r8, r0
 8003518:	2800      	cmp	r0, #0
 800351a:	f43f ae40 	beq.w	800319e <_strtod_l+0x43e>
 800351e:	464a      	mov	r2, r9
 8003520:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8003522:	9805      	ldr	r0, [sp, #20]
 8003524:	f002 fe96 	bl	8006254 <__mdiff>
 8003528:	4604      	mov	r4, r0
 800352a:	2800      	cmp	r0, #0
 800352c:	f43f ae37 	beq.w	800319e <_strtod_l+0x43e>
 8003530:	68c3      	ldr	r3, [r0, #12]
 8003532:	4641      	mov	r1, r8
 8003534:	930f      	str	r3, [sp, #60]	@ 0x3c
 8003536:	2300      	movs	r3, #0
 8003538:	60c3      	str	r3, [r0, #12]
 800353a:	f002 fe6f 	bl	800621c <__mcmp>
 800353e:	2800      	cmp	r0, #0
 8003540:	da3d      	bge.n	80035be <_strtod_l+0x85e>
 8003542:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003544:	ea53 030a 	orrs.w	r3, r3, sl
 8003548:	d163      	bne.n	8003612 <_strtod_l+0x8b2>
 800354a:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800354e:	2b00      	cmp	r3, #0
 8003550:	d15f      	bne.n	8003612 <_strtod_l+0x8b2>
 8003552:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8003556:	0d1b      	lsrs	r3, r3, #20
 8003558:	051b      	lsls	r3, r3, #20
 800355a:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 800355e:	d958      	bls.n	8003612 <_strtod_l+0x8b2>
 8003560:	6963      	ldr	r3, [r4, #20]
 8003562:	b913      	cbnz	r3, 800356a <_strtod_l+0x80a>
 8003564:	6923      	ldr	r3, [r4, #16]
 8003566:	2b01      	cmp	r3, #1
 8003568:	dd53      	ble.n	8003612 <_strtod_l+0x8b2>
 800356a:	4621      	mov	r1, r4
 800356c:	2201      	movs	r2, #1
 800356e:	9805      	ldr	r0, [sp, #20]
 8003570:	f002 fde8 	bl	8006144 <__lshift>
 8003574:	4641      	mov	r1, r8
 8003576:	4604      	mov	r4, r0
 8003578:	f002 fe50 	bl	800621c <__mcmp>
 800357c:	2800      	cmp	r0, #0
 800357e:	dd48      	ble.n	8003612 <_strtod_l+0x8b2>
 8003580:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8003584:	9a08      	ldr	r2, [sp, #32]
 8003586:	0d1b      	lsrs	r3, r3, #20
 8003588:	051b      	lsls	r3, r3, #20
 800358a:	2a00      	cmp	r2, #0
 800358c:	d062      	beq.n	8003654 <_strtod_l+0x8f4>
 800358e:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 8003592:	d85f      	bhi.n	8003654 <_strtod_l+0x8f4>
 8003594:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 8003598:	f67f ae94 	bls.w	80032c4 <_strtod_l+0x564>
 800359c:	4650      	mov	r0, sl
 800359e:	4659      	mov	r1, fp
 80035a0:	4ba3      	ldr	r3, [pc, #652]	@ (8003830 <_strtod_l+0xad0>)
 80035a2:	2200      	movs	r2, #0
 80035a4:	f7fc ff98 	bl	80004d8 <__aeabi_dmul>
 80035a8:	4ba2      	ldr	r3, [pc, #648]	@ (8003834 <_strtod_l+0xad4>)
 80035aa:	4682      	mov	sl, r0
 80035ac:	400b      	ands	r3, r1
 80035ae:	468b      	mov	fp, r1
 80035b0:	2b00      	cmp	r3, #0
 80035b2:	f47f adff 	bne.w	80031b4 <_strtod_l+0x454>
 80035b6:	2322      	movs	r3, #34	@ 0x22
 80035b8:	9a05      	ldr	r2, [sp, #20]
 80035ba:	6013      	str	r3, [r2, #0]
 80035bc:	e5fa      	b.n	80031b4 <_strtod_l+0x454>
 80035be:	f8cd b028 	str.w	fp, [sp, #40]	@ 0x28
 80035c2:	d165      	bne.n	8003690 <_strtod_l+0x930>
 80035c4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80035c6:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80035ca:	b35a      	cbz	r2, 8003624 <_strtod_l+0x8c4>
 80035cc:	4a9a      	ldr	r2, [pc, #616]	@ (8003838 <_strtod_l+0xad8>)
 80035ce:	4293      	cmp	r3, r2
 80035d0:	d12b      	bne.n	800362a <_strtod_l+0x8ca>
 80035d2:	9b08      	ldr	r3, [sp, #32]
 80035d4:	4651      	mov	r1, sl
 80035d6:	b303      	cbz	r3, 800361a <_strtod_l+0x8ba>
 80035d8:	465a      	mov	r2, fp
 80035da:	4b96      	ldr	r3, [pc, #600]	@ (8003834 <_strtod_l+0xad4>)
 80035dc:	4013      	ands	r3, r2
 80035de:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 80035e2:	f04f 32ff 	mov.w	r2, #4294967295
 80035e6:	d81b      	bhi.n	8003620 <_strtod_l+0x8c0>
 80035e8:	0d1b      	lsrs	r3, r3, #20
 80035ea:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 80035ee:	fa02 f303 	lsl.w	r3, r2, r3
 80035f2:	4299      	cmp	r1, r3
 80035f4:	d119      	bne.n	800362a <_strtod_l+0x8ca>
 80035f6:	4b91      	ldr	r3, [pc, #580]	@ (800383c <_strtod_l+0xadc>)
 80035f8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80035fa:	429a      	cmp	r2, r3
 80035fc:	d102      	bne.n	8003604 <_strtod_l+0x8a4>
 80035fe:	3101      	adds	r1, #1
 8003600:	f43f adcd 	beq.w	800319e <_strtod_l+0x43e>
 8003604:	f04f 0a00 	mov.w	sl, #0
 8003608:	4b8a      	ldr	r3, [pc, #552]	@ (8003834 <_strtod_l+0xad4>)
 800360a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800360c:	401a      	ands	r2, r3
 800360e:	f502 1b80 	add.w	fp, r2, #1048576	@ 0x100000
 8003612:	9b08      	ldr	r3, [sp, #32]
 8003614:	2b00      	cmp	r3, #0
 8003616:	d1c1      	bne.n	800359c <_strtod_l+0x83c>
 8003618:	e5cc      	b.n	80031b4 <_strtod_l+0x454>
 800361a:	f04f 33ff 	mov.w	r3, #4294967295
 800361e:	e7e8      	b.n	80035f2 <_strtod_l+0x892>
 8003620:	4613      	mov	r3, r2
 8003622:	e7e6      	b.n	80035f2 <_strtod_l+0x892>
 8003624:	ea53 030a 	orrs.w	r3, r3, sl
 8003628:	d0aa      	beq.n	8003580 <_strtod_l+0x820>
 800362a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800362c:	b1db      	cbz	r3, 8003666 <_strtod_l+0x906>
 800362e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8003630:	4213      	tst	r3, r2
 8003632:	d0ee      	beq.n	8003612 <_strtod_l+0x8b2>
 8003634:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003636:	4650      	mov	r0, sl
 8003638:	4659      	mov	r1, fp
 800363a:	9a08      	ldr	r2, [sp, #32]
 800363c:	b1bb      	cbz	r3, 800366e <_strtod_l+0x90e>
 800363e:	f7ff fb6c 	bl	8002d1a <sulp>
 8003642:	4602      	mov	r2, r0
 8003644:	460b      	mov	r3, r1
 8003646:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800364a:	f7fc fd8f 	bl	800016c <__adddf3>
 800364e:	4682      	mov	sl, r0
 8003650:	468b      	mov	fp, r1
 8003652:	e7de      	b.n	8003612 <_strtod_l+0x8b2>
 8003654:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 8003658:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 800365c:	f04f 3aff 	mov.w	sl, #4294967295
 8003660:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 8003664:	e7d5      	b.n	8003612 <_strtod_l+0x8b2>
 8003666:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8003668:	ea13 0f0a 	tst.w	r3, sl
 800366c:	e7e1      	b.n	8003632 <_strtod_l+0x8d2>
 800366e:	f7ff fb54 	bl	8002d1a <sulp>
 8003672:	4602      	mov	r2, r0
 8003674:	460b      	mov	r3, r1
 8003676:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800367a:	f7fc fd75 	bl	8000168 <__aeabi_dsub>
 800367e:	2200      	movs	r2, #0
 8003680:	2300      	movs	r3, #0
 8003682:	4682      	mov	sl, r0
 8003684:	468b      	mov	fp, r1
 8003686:	f7fd f98f 	bl	80009a8 <__aeabi_dcmpeq>
 800368a:	2800      	cmp	r0, #0
 800368c:	d0c1      	beq.n	8003612 <_strtod_l+0x8b2>
 800368e:	e619      	b.n	80032c4 <_strtod_l+0x564>
 8003690:	4641      	mov	r1, r8
 8003692:	4620      	mov	r0, r4
 8003694:	f002 ff32 	bl	80064fc <__ratio>
 8003698:	2200      	movs	r2, #0
 800369a:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800369e:	4606      	mov	r6, r0
 80036a0:	460f      	mov	r7, r1
 80036a2:	f7fd f995 	bl	80009d0 <__aeabi_dcmple>
 80036a6:	2800      	cmp	r0, #0
 80036a8:	d06d      	beq.n	8003786 <_strtod_l+0xa26>
 80036aa:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80036ac:	2b00      	cmp	r3, #0
 80036ae:	d178      	bne.n	80037a2 <_strtod_l+0xa42>
 80036b0:	f1ba 0f00 	cmp.w	sl, #0
 80036b4:	d156      	bne.n	8003764 <_strtod_l+0xa04>
 80036b6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80036b8:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80036bc:	2b00      	cmp	r3, #0
 80036be:	d158      	bne.n	8003772 <_strtod_l+0xa12>
 80036c0:	2200      	movs	r2, #0
 80036c2:	4630      	mov	r0, r6
 80036c4:	4639      	mov	r1, r7
 80036c6:	4b5e      	ldr	r3, [pc, #376]	@ (8003840 <_strtod_l+0xae0>)
 80036c8:	f7fd f978 	bl	80009bc <__aeabi_dcmplt>
 80036cc:	2800      	cmp	r0, #0
 80036ce:	d157      	bne.n	8003780 <_strtod_l+0xa20>
 80036d0:	4630      	mov	r0, r6
 80036d2:	4639      	mov	r1, r7
 80036d4:	2200      	movs	r2, #0
 80036d6:	4b5b      	ldr	r3, [pc, #364]	@ (8003844 <_strtod_l+0xae4>)
 80036d8:	f7fc fefe 	bl	80004d8 <__aeabi_dmul>
 80036dc:	4606      	mov	r6, r0
 80036de:	460f      	mov	r7, r1
 80036e0:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
 80036e4:	9606      	str	r6, [sp, #24]
 80036e6:	9307      	str	r3, [sp, #28]
 80036e8:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80036ec:	4d51      	ldr	r5, [pc, #324]	@ (8003834 <_strtod_l+0xad4>)
 80036ee:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 80036f2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80036f4:	401d      	ands	r5, r3
 80036f6:	4b54      	ldr	r3, [pc, #336]	@ (8003848 <_strtod_l+0xae8>)
 80036f8:	429d      	cmp	r5, r3
 80036fa:	f040 80ab 	bne.w	8003854 <_strtod_l+0xaf4>
 80036fe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003700:	4650      	mov	r0, sl
 8003702:	f1a3 7b54 	sub.w	fp, r3, #55574528	@ 0x3500000
 8003706:	4659      	mov	r1, fp
 8003708:	f002 fe38 	bl	800637c <__ulp>
 800370c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8003710:	f7fc fee2 	bl	80004d8 <__aeabi_dmul>
 8003714:	4652      	mov	r2, sl
 8003716:	465b      	mov	r3, fp
 8003718:	f7fc fd28 	bl	800016c <__adddf3>
 800371c:	460b      	mov	r3, r1
 800371e:	4945      	ldr	r1, [pc, #276]	@ (8003834 <_strtod_l+0xad4>)
 8003720:	4a4a      	ldr	r2, [pc, #296]	@ (800384c <_strtod_l+0xaec>)
 8003722:	4019      	ands	r1, r3
 8003724:	4291      	cmp	r1, r2
 8003726:	4682      	mov	sl, r0
 8003728:	d942      	bls.n	80037b0 <_strtod_l+0xa50>
 800372a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800372c:	4b43      	ldr	r3, [pc, #268]	@ (800383c <_strtod_l+0xadc>)
 800372e:	429a      	cmp	r2, r3
 8003730:	d103      	bne.n	800373a <_strtod_l+0x9da>
 8003732:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8003734:	3301      	adds	r3, #1
 8003736:	f43f ad32 	beq.w	800319e <_strtod_l+0x43e>
 800373a:	f04f 3aff 	mov.w	sl, #4294967295
 800373e:	f8df b0fc 	ldr.w	fp, [pc, #252]	@ 800383c <_strtod_l+0xadc>
 8003742:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8003744:	9805      	ldr	r0, [sp, #20]
 8003746:	f002 faed 	bl	8005d24 <_Bfree>
 800374a:	4649      	mov	r1, r9
 800374c:	9805      	ldr	r0, [sp, #20]
 800374e:	f002 fae9 	bl	8005d24 <_Bfree>
 8003752:	4641      	mov	r1, r8
 8003754:	9805      	ldr	r0, [sp, #20]
 8003756:	f002 fae5 	bl	8005d24 <_Bfree>
 800375a:	4621      	mov	r1, r4
 800375c:	9805      	ldr	r0, [sp, #20]
 800375e:	f002 fae1 	bl	8005d24 <_Bfree>
 8003762:	e61c      	b.n	800339e <_strtod_l+0x63e>
 8003764:	f1ba 0f01 	cmp.w	sl, #1
 8003768:	d103      	bne.n	8003772 <_strtod_l+0xa12>
 800376a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800376c:	2b00      	cmp	r3, #0
 800376e:	f43f ada9 	beq.w	80032c4 <_strtod_l+0x564>
 8003772:	2200      	movs	r2, #0
 8003774:	4b36      	ldr	r3, [pc, #216]	@ (8003850 <_strtod_l+0xaf0>)
 8003776:	2600      	movs	r6, #0
 8003778:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800377c:	4f30      	ldr	r7, [pc, #192]	@ (8003840 <_strtod_l+0xae0>)
 800377e:	e7b3      	b.n	80036e8 <_strtod_l+0x988>
 8003780:	2600      	movs	r6, #0
 8003782:	4f30      	ldr	r7, [pc, #192]	@ (8003844 <_strtod_l+0xae4>)
 8003784:	e7ac      	b.n	80036e0 <_strtod_l+0x980>
 8003786:	4630      	mov	r0, r6
 8003788:	4639      	mov	r1, r7
 800378a:	4b2e      	ldr	r3, [pc, #184]	@ (8003844 <_strtod_l+0xae4>)
 800378c:	2200      	movs	r2, #0
 800378e:	f7fc fea3 	bl	80004d8 <__aeabi_dmul>
 8003792:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003794:	4606      	mov	r6, r0
 8003796:	460f      	mov	r7, r1
 8003798:	2b00      	cmp	r3, #0
 800379a:	d0a1      	beq.n	80036e0 <_strtod_l+0x980>
 800379c:	e9cd 6706 	strd	r6, r7, [sp, #24]
 80037a0:	e7a2      	b.n	80036e8 <_strtod_l+0x988>
 80037a2:	2200      	movs	r2, #0
 80037a4:	4b26      	ldr	r3, [pc, #152]	@ (8003840 <_strtod_l+0xae0>)
 80037a6:	4616      	mov	r6, r2
 80037a8:	461f      	mov	r7, r3
 80037aa:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80037ae:	e79b      	b.n	80036e8 <_strtod_l+0x988>
 80037b0:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 80037b4:	9b08      	ldr	r3, [sp, #32]
 80037b6:	f8cd b028 	str.w	fp, [sp, #40]	@ 0x28
 80037ba:	2b00      	cmp	r3, #0
 80037bc:	d1c1      	bne.n	8003742 <_strtod_l+0x9e2>
 80037be:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 80037c2:	0d1b      	lsrs	r3, r3, #20
 80037c4:	051b      	lsls	r3, r3, #20
 80037c6:	429d      	cmp	r5, r3
 80037c8:	d1bb      	bne.n	8003742 <_strtod_l+0x9e2>
 80037ca:	4630      	mov	r0, r6
 80037cc:	4639      	mov	r1, r7
 80037ce:	f7fd fcc5 	bl	800115c <__aeabi_d2lz>
 80037d2:	f7fc fe53 	bl	800047c <__aeabi_l2d>
 80037d6:	4602      	mov	r2, r0
 80037d8:	460b      	mov	r3, r1
 80037da:	4630      	mov	r0, r6
 80037dc:	4639      	mov	r1, r7
 80037de:	f7fc fcc3 	bl	8000168 <__aeabi_dsub>
 80037e2:	460b      	mov	r3, r1
 80037e4:	4602      	mov	r2, r0
 80037e6:	f3cb 0613 	ubfx	r6, fp, #0, #20
 80037ea:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 80037ee:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80037f0:	ea46 060a 	orr.w	r6, r6, sl
 80037f4:	431e      	orrs	r6, r3
 80037f6:	d06a      	beq.n	80038ce <_strtod_l+0xb6e>
 80037f8:	a309      	add	r3, pc, #36	@ (adr r3, 8003820 <_strtod_l+0xac0>)
 80037fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80037fe:	f7fd f8dd 	bl	80009bc <__aeabi_dcmplt>
 8003802:	2800      	cmp	r0, #0
 8003804:	f47f acd6 	bne.w	80031b4 <_strtod_l+0x454>
 8003808:	a307      	add	r3, pc, #28	@ (adr r3, 8003828 <_strtod_l+0xac8>)
 800380a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800380e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8003812:	f7fd f8f1 	bl	80009f8 <__aeabi_dcmpgt>
 8003816:	2800      	cmp	r0, #0
 8003818:	d093      	beq.n	8003742 <_strtod_l+0x9e2>
 800381a:	e4cb      	b.n	80031b4 <_strtod_l+0x454>
 800381c:	f3af 8000 	nop.w
 8003820:	94a03595 	.word	0x94a03595
 8003824:	3fdfffff 	.word	0x3fdfffff
 8003828:	35afe535 	.word	0x35afe535
 800382c:	3fe00000 	.word	0x3fe00000
 8003830:	39500000 	.word	0x39500000
 8003834:	7ff00000 	.word	0x7ff00000
 8003838:	000fffff 	.word	0x000fffff
 800383c:	7fefffff 	.word	0x7fefffff
 8003840:	3ff00000 	.word	0x3ff00000
 8003844:	3fe00000 	.word	0x3fe00000
 8003848:	7fe00000 	.word	0x7fe00000
 800384c:	7c9fffff 	.word	0x7c9fffff
 8003850:	bff00000 	.word	0xbff00000
 8003854:	9b08      	ldr	r3, [sp, #32]
 8003856:	b323      	cbz	r3, 80038a2 <_strtod_l+0xb42>
 8003858:	f1b5 6fd4 	cmp.w	r5, #111149056	@ 0x6a00000
 800385c:	d821      	bhi.n	80038a2 <_strtod_l+0xb42>
 800385e:	a328      	add	r3, pc, #160	@ (adr r3, 8003900 <_strtod_l+0xba0>)
 8003860:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003864:	4630      	mov	r0, r6
 8003866:	4639      	mov	r1, r7
 8003868:	f7fd f8b2 	bl	80009d0 <__aeabi_dcmple>
 800386c:	b1a0      	cbz	r0, 8003898 <_strtod_l+0xb38>
 800386e:	4639      	mov	r1, r7
 8003870:	4630      	mov	r0, r6
 8003872:	f7fd f909 	bl	8000a88 <__aeabi_d2uiz>
 8003876:	2801      	cmp	r0, #1
 8003878:	bf38      	it	cc
 800387a:	2001      	movcc	r0, #1
 800387c:	f7fc fdb2 	bl	80003e4 <__aeabi_ui2d>
 8003880:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003882:	4606      	mov	r6, r0
 8003884:	460f      	mov	r7, r1
 8003886:	b9fb      	cbnz	r3, 80038c8 <_strtod_l+0xb68>
 8003888:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 800388c:	9014      	str	r0, [sp, #80]	@ 0x50
 800388e:	9315      	str	r3, [sp, #84]	@ 0x54
 8003890:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
 8003894:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 8003898:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800389a:	f103 63d6 	add.w	r3, r3, #112197632	@ 0x6b00000
 800389e:	1b5b      	subs	r3, r3, r5
 80038a0:	9311      	str	r3, [sp, #68]	@ 0x44
 80038a2:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80038a6:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	@ 0x40
 80038aa:	f002 fd67 	bl	800637c <__ulp>
 80038ae:	4602      	mov	r2, r0
 80038b0:	460b      	mov	r3, r1
 80038b2:	4650      	mov	r0, sl
 80038b4:	4659      	mov	r1, fp
 80038b6:	f7fc fe0f 	bl	80004d8 <__aeabi_dmul>
 80038ba:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 80038be:	f7fc fc55 	bl	800016c <__adddf3>
 80038c2:	4682      	mov	sl, r0
 80038c4:	468b      	mov	fp, r1
 80038c6:	e775      	b.n	80037b4 <_strtod_l+0xa54>
 80038c8:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
 80038cc:	e7e0      	b.n	8003890 <_strtod_l+0xb30>
 80038ce:	a30e      	add	r3, pc, #56	@ (adr r3, 8003908 <_strtod_l+0xba8>)
 80038d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80038d4:	f7fd f872 	bl	80009bc <__aeabi_dcmplt>
 80038d8:	e79d      	b.n	8003816 <_strtod_l+0xab6>
 80038da:	2300      	movs	r3, #0
 80038dc:	930e      	str	r3, [sp, #56]	@ 0x38
 80038de:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80038e0:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 80038e2:	6013      	str	r3, [r2, #0]
 80038e4:	f7ff ba79 	b.w	8002dda <_strtod_l+0x7a>
 80038e8:	2a65      	cmp	r2, #101	@ 0x65
 80038ea:	f43f ab72 	beq.w	8002fd2 <_strtod_l+0x272>
 80038ee:	2a45      	cmp	r2, #69	@ 0x45
 80038f0:	f43f ab6f 	beq.w	8002fd2 <_strtod_l+0x272>
 80038f4:	2301      	movs	r3, #1
 80038f6:	f7ff bbaa 	b.w	800304e <_strtod_l+0x2ee>
 80038fa:	bf00      	nop
 80038fc:	f3af 8000 	nop.w
 8003900:	ffc00000 	.word	0xffc00000
 8003904:	41dfffff 	.word	0x41dfffff
 8003908:	94a03595 	.word	0x94a03595
 800390c:	3fcfffff 	.word	0x3fcfffff

08003910 <strtod>:
 8003910:	460a      	mov	r2, r1
 8003912:	4601      	mov	r1, r0
 8003914:	4802      	ldr	r0, [pc, #8]	@ (8003920 <strtod+0x10>)
 8003916:	4b03      	ldr	r3, [pc, #12]	@ (8003924 <strtod+0x14>)
 8003918:	6800      	ldr	r0, [r0, #0]
 800391a:	f7ff ba21 	b.w	8002d60 <_strtod_l>
 800391e:	bf00      	nop
 8003920:	20000180 	.word	0x20000180
 8003924:	20000014 	.word	0x20000014

08003928 <_strtol_l.isra.0>:
 8003928:	2b24      	cmp	r3, #36	@ 0x24
 800392a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800392e:	4686      	mov	lr, r0
 8003930:	4690      	mov	r8, r2
 8003932:	d801      	bhi.n	8003938 <_strtol_l.isra.0+0x10>
 8003934:	2b01      	cmp	r3, #1
 8003936:	d106      	bne.n	8003946 <_strtol_l.isra.0+0x1e>
 8003938:	f000 febe 	bl	80046b8 <__errno>
 800393c:	2316      	movs	r3, #22
 800393e:	6003      	str	r3, [r0, #0]
 8003940:	2000      	movs	r0, #0
 8003942:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003946:	460d      	mov	r5, r1
 8003948:	4833      	ldr	r0, [pc, #204]	@ (8003a18 <_strtol_l.isra.0+0xf0>)
 800394a:	462a      	mov	r2, r5
 800394c:	f815 4b01 	ldrb.w	r4, [r5], #1
 8003950:	5d06      	ldrb	r6, [r0, r4]
 8003952:	f016 0608 	ands.w	r6, r6, #8
 8003956:	d1f8      	bne.n	800394a <_strtol_l.isra.0+0x22>
 8003958:	2c2d      	cmp	r4, #45	@ 0x2d
 800395a:	d110      	bne.n	800397e <_strtol_l.isra.0+0x56>
 800395c:	2601      	movs	r6, #1
 800395e:	782c      	ldrb	r4, [r5, #0]
 8003960:	1c95      	adds	r5, r2, #2
 8003962:	f033 0210 	bics.w	r2, r3, #16
 8003966:	d115      	bne.n	8003994 <_strtol_l.isra.0+0x6c>
 8003968:	2c30      	cmp	r4, #48	@ 0x30
 800396a:	d10d      	bne.n	8003988 <_strtol_l.isra.0+0x60>
 800396c:	782a      	ldrb	r2, [r5, #0]
 800396e:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8003972:	2a58      	cmp	r2, #88	@ 0x58
 8003974:	d108      	bne.n	8003988 <_strtol_l.isra.0+0x60>
 8003976:	786c      	ldrb	r4, [r5, #1]
 8003978:	3502      	adds	r5, #2
 800397a:	2310      	movs	r3, #16
 800397c:	e00a      	b.n	8003994 <_strtol_l.isra.0+0x6c>
 800397e:	2c2b      	cmp	r4, #43	@ 0x2b
 8003980:	bf04      	itt	eq
 8003982:	782c      	ldrbeq	r4, [r5, #0]
 8003984:	1c95      	addeq	r5, r2, #2
 8003986:	e7ec      	b.n	8003962 <_strtol_l.isra.0+0x3a>
 8003988:	2b00      	cmp	r3, #0
 800398a:	d1f6      	bne.n	800397a <_strtol_l.isra.0+0x52>
 800398c:	2c30      	cmp	r4, #48	@ 0x30
 800398e:	bf14      	ite	ne
 8003990:	230a      	movne	r3, #10
 8003992:	2308      	moveq	r3, #8
 8003994:	2200      	movs	r2, #0
 8003996:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 800399a:	f10c 3cff 	add.w	ip, ip, #4294967295
 800399e:	fbbc f9f3 	udiv	r9, ip, r3
 80039a2:	4610      	mov	r0, r2
 80039a4:	fb03 ca19 	mls	sl, r3, r9, ip
 80039a8:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 80039ac:	2f09      	cmp	r7, #9
 80039ae:	d80f      	bhi.n	80039d0 <_strtol_l.isra.0+0xa8>
 80039b0:	463c      	mov	r4, r7
 80039b2:	42a3      	cmp	r3, r4
 80039b4:	dd1b      	ble.n	80039ee <_strtol_l.isra.0+0xc6>
 80039b6:	1c57      	adds	r7, r2, #1
 80039b8:	d007      	beq.n	80039ca <_strtol_l.isra.0+0xa2>
 80039ba:	4581      	cmp	r9, r0
 80039bc:	d314      	bcc.n	80039e8 <_strtol_l.isra.0+0xc0>
 80039be:	d101      	bne.n	80039c4 <_strtol_l.isra.0+0x9c>
 80039c0:	45a2      	cmp	sl, r4
 80039c2:	db11      	blt.n	80039e8 <_strtol_l.isra.0+0xc0>
 80039c4:	2201      	movs	r2, #1
 80039c6:	fb00 4003 	mla	r0, r0, r3, r4
 80039ca:	f815 4b01 	ldrb.w	r4, [r5], #1
 80039ce:	e7eb      	b.n	80039a8 <_strtol_l.isra.0+0x80>
 80039d0:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 80039d4:	2f19      	cmp	r7, #25
 80039d6:	d801      	bhi.n	80039dc <_strtol_l.isra.0+0xb4>
 80039d8:	3c37      	subs	r4, #55	@ 0x37
 80039da:	e7ea      	b.n	80039b2 <_strtol_l.isra.0+0x8a>
 80039dc:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 80039e0:	2f19      	cmp	r7, #25
 80039e2:	d804      	bhi.n	80039ee <_strtol_l.isra.0+0xc6>
 80039e4:	3c57      	subs	r4, #87	@ 0x57
 80039e6:	e7e4      	b.n	80039b2 <_strtol_l.isra.0+0x8a>
 80039e8:	f04f 32ff 	mov.w	r2, #4294967295
 80039ec:	e7ed      	b.n	80039ca <_strtol_l.isra.0+0xa2>
 80039ee:	1c53      	adds	r3, r2, #1
 80039f0:	d108      	bne.n	8003a04 <_strtol_l.isra.0+0xdc>
 80039f2:	2322      	movs	r3, #34	@ 0x22
 80039f4:	4660      	mov	r0, ip
 80039f6:	f8ce 3000 	str.w	r3, [lr]
 80039fa:	f1b8 0f00 	cmp.w	r8, #0
 80039fe:	d0a0      	beq.n	8003942 <_strtol_l.isra.0+0x1a>
 8003a00:	1e69      	subs	r1, r5, #1
 8003a02:	e006      	b.n	8003a12 <_strtol_l.isra.0+0xea>
 8003a04:	b106      	cbz	r6, 8003a08 <_strtol_l.isra.0+0xe0>
 8003a06:	4240      	negs	r0, r0
 8003a08:	f1b8 0f00 	cmp.w	r8, #0
 8003a0c:	d099      	beq.n	8003942 <_strtol_l.isra.0+0x1a>
 8003a0e:	2a00      	cmp	r2, #0
 8003a10:	d1f6      	bne.n	8003a00 <_strtol_l.isra.0+0xd8>
 8003a12:	f8c8 1000 	str.w	r1, [r8]
 8003a16:	e794      	b.n	8003942 <_strtol_l.isra.0+0x1a>
 8003a18:	08007621 	.word	0x08007621

08003a1c <strtol>:
 8003a1c:	4613      	mov	r3, r2
 8003a1e:	460a      	mov	r2, r1
 8003a20:	4601      	mov	r1, r0
 8003a22:	4802      	ldr	r0, [pc, #8]	@ (8003a2c <strtol+0x10>)
 8003a24:	6800      	ldr	r0, [r0, #0]
 8003a26:	f7ff bf7f 	b.w	8003928 <_strtol_l.isra.0>
 8003a2a:	bf00      	nop
 8003a2c:	20000180 	.word	0x20000180

08003a30 <__cvt>:
 8003a30:	2b00      	cmp	r3, #0
 8003a32:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003a36:	461d      	mov	r5, r3
 8003a38:	bfbb      	ittet	lt
 8003a3a:	f103 4300 	addlt.w	r3, r3, #2147483648	@ 0x80000000
 8003a3e:	461d      	movlt	r5, r3
 8003a40:	2300      	movge	r3, #0
 8003a42:	232d      	movlt	r3, #45	@ 0x2d
 8003a44:	b088      	sub	sp, #32
 8003a46:	4614      	mov	r4, r2
 8003a48:	bfb8      	it	lt
 8003a4a:	4614      	movlt	r4, r2
 8003a4c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8003a4e:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 8003a50:	7013      	strb	r3, [r2, #0]
 8003a52:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8003a54:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 8003a58:	f023 0820 	bic.w	r8, r3, #32
 8003a5c:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8003a60:	d005      	beq.n	8003a6e <__cvt+0x3e>
 8003a62:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8003a66:	d100      	bne.n	8003a6a <__cvt+0x3a>
 8003a68:	3601      	adds	r6, #1
 8003a6a:	2302      	movs	r3, #2
 8003a6c:	e000      	b.n	8003a70 <__cvt+0x40>
 8003a6e:	2303      	movs	r3, #3
 8003a70:	aa07      	add	r2, sp, #28
 8003a72:	9204      	str	r2, [sp, #16]
 8003a74:	aa06      	add	r2, sp, #24
 8003a76:	e9cd a202 	strd	sl, r2, [sp, #8]
 8003a7a:	e9cd 3600 	strd	r3, r6, [sp]
 8003a7e:	4622      	mov	r2, r4
 8003a80:	462b      	mov	r3, r5
 8003a82:	f000 fef1 	bl	8004868 <_dtoa_r>
 8003a86:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8003a8a:	4607      	mov	r7, r0
 8003a8c:	d119      	bne.n	8003ac2 <__cvt+0x92>
 8003a8e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8003a90:	07db      	lsls	r3, r3, #31
 8003a92:	d50e      	bpl.n	8003ab2 <__cvt+0x82>
 8003a94:	eb00 0906 	add.w	r9, r0, r6
 8003a98:	2200      	movs	r2, #0
 8003a9a:	2300      	movs	r3, #0
 8003a9c:	4620      	mov	r0, r4
 8003a9e:	4629      	mov	r1, r5
 8003aa0:	f7fc ff82 	bl	80009a8 <__aeabi_dcmpeq>
 8003aa4:	b108      	cbz	r0, 8003aaa <__cvt+0x7a>
 8003aa6:	f8cd 901c 	str.w	r9, [sp, #28]
 8003aaa:	2230      	movs	r2, #48	@ 0x30
 8003aac:	9b07      	ldr	r3, [sp, #28]
 8003aae:	454b      	cmp	r3, r9
 8003ab0:	d31e      	bcc.n	8003af0 <__cvt+0xc0>
 8003ab2:	4638      	mov	r0, r7
 8003ab4:	9b07      	ldr	r3, [sp, #28]
 8003ab6:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8003ab8:	1bdb      	subs	r3, r3, r7
 8003aba:	6013      	str	r3, [r2, #0]
 8003abc:	b008      	add	sp, #32
 8003abe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003ac2:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8003ac6:	eb00 0906 	add.w	r9, r0, r6
 8003aca:	d1e5      	bne.n	8003a98 <__cvt+0x68>
 8003acc:	7803      	ldrb	r3, [r0, #0]
 8003ace:	2b30      	cmp	r3, #48	@ 0x30
 8003ad0:	d10a      	bne.n	8003ae8 <__cvt+0xb8>
 8003ad2:	2200      	movs	r2, #0
 8003ad4:	2300      	movs	r3, #0
 8003ad6:	4620      	mov	r0, r4
 8003ad8:	4629      	mov	r1, r5
 8003ada:	f7fc ff65 	bl	80009a8 <__aeabi_dcmpeq>
 8003ade:	b918      	cbnz	r0, 8003ae8 <__cvt+0xb8>
 8003ae0:	f1c6 0601 	rsb	r6, r6, #1
 8003ae4:	f8ca 6000 	str.w	r6, [sl]
 8003ae8:	f8da 3000 	ldr.w	r3, [sl]
 8003aec:	4499      	add	r9, r3
 8003aee:	e7d3      	b.n	8003a98 <__cvt+0x68>
 8003af0:	1c59      	adds	r1, r3, #1
 8003af2:	9107      	str	r1, [sp, #28]
 8003af4:	701a      	strb	r2, [r3, #0]
 8003af6:	e7d9      	b.n	8003aac <__cvt+0x7c>

08003af8 <__exponent>:
 8003af8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003afa:	2900      	cmp	r1, #0
 8003afc:	bfb6      	itet	lt
 8003afe:	232d      	movlt	r3, #45	@ 0x2d
 8003b00:	232b      	movge	r3, #43	@ 0x2b
 8003b02:	4249      	neglt	r1, r1
 8003b04:	2909      	cmp	r1, #9
 8003b06:	7002      	strb	r2, [r0, #0]
 8003b08:	7043      	strb	r3, [r0, #1]
 8003b0a:	dd29      	ble.n	8003b60 <__exponent+0x68>
 8003b0c:	f10d 0307 	add.w	r3, sp, #7
 8003b10:	461d      	mov	r5, r3
 8003b12:	270a      	movs	r7, #10
 8003b14:	fbb1 f6f7 	udiv	r6, r1, r7
 8003b18:	461a      	mov	r2, r3
 8003b1a:	fb07 1416 	mls	r4, r7, r6, r1
 8003b1e:	3430      	adds	r4, #48	@ 0x30
 8003b20:	f802 4c01 	strb.w	r4, [r2, #-1]
 8003b24:	460c      	mov	r4, r1
 8003b26:	2c63      	cmp	r4, #99	@ 0x63
 8003b28:	4631      	mov	r1, r6
 8003b2a:	f103 33ff 	add.w	r3, r3, #4294967295
 8003b2e:	dcf1      	bgt.n	8003b14 <__exponent+0x1c>
 8003b30:	3130      	adds	r1, #48	@ 0x30
 8003b32:	1e94      	subs	r4, r2, #2
 8003b34:	f803 1c01 	strb.w	r1, [r3, #-1]
 8003b38:	4623      	mov	r3, r4
 8003b3a:	1c41      	adds	r1, r0, #1
 8003b3c:	42ab      	cmp	r3, r5
 8003b3e:	d30a      	bcc.n	8003b56 <__exponent+0x5e>
 8003b40:	f10d 0309 	add.w	r3, sp, #9
 8003b44:	1a9b      	subs	r3, r3, r2
 8003b46:	42ac      	cmp	r4, r5
 8003b48:	bf88      	it	hi
 8003b4a:	2300      	movhi	r3, #0
 8003b4c:	3302      	adds	r3, #2
 8003b4e:	4403      	add	r3, r0
 8003b50:	1a18      	subs	r0, r3, r0
 8003b52:	b003      	add	sp, #12
 8003b54:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003b56:	f813 6b01 	ldrb.w	r6, [r3], #1
 8003b5a:	f801 6f01 	strb.w	r6, [r1, #1]!
 8003b5e:	e7ed      	b.n	8003b3c <__exponent+0x44>
 8003b60:	2330      	movs	r3, #48	@ 0x30
 8003b62:	3130      	adds	r1, #48	@ 0x30
 8003b64:	7083      	strb	r3, [r0, #2]
 8003b66:	70c1      	strb	r1, [r0, #3]
 8003b68:	1d03      	adds	r3, r0, #4
 8003b6a:	e7f1      	b.n	8003b50 <__exponent+0x58>

08003b6c <_printf_float>:
 8003b6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003b70:	b091      	sub	sp, #68	@ 0x44
 8003b72:	460c      	mov	r4, r1
 8003b74:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
 8003b78:	4616      	mov	r6, r2
 8003b7a:	461f      	mov	r7, r3
 8003b7c:	4605      	mov	r5, r0
 8003b7e:	f000 fd51 	bl	8004624 <_localeconv_r>
 8003b82:	6803      	ldr	r3, [r0, #0]
 8003b84:	4618      	mov	r0, r3
 8003b86:	9308      	str	r3, [sp, #32]
 8003b88:	f7fc fae2 	bl	8000150 <strlen>
 8003b8c:	2300      	movs	r3, #0
 8003b8e:	930e      	str	r3, [sp, #56]	@ 0x38
 8003b90:	f8d8 3000 	ldr.w	r3, [r8]
 8003b94:	9009      	str	r0, [sp, #36]	@ 0x24
 8003b96:	3307      	adds	r3, #7
 8003b98:	f023 0307 	bic.w	r3, r3, #7
 8003b9c:	f103 0208 	add.w	r2, r3, #8
 8003ba0:	f894 a018 	ldrb.w	sl, [r4, #24]
 8003ba4:	f8d4 b000 	ldr.w	fp, [r4]
 8003ba8:	f8c8 2000 	str.w	r2, [r8]
 8003bac:	e9d3 8900 	ldrd	r8, r9, [r3]
 8003bb0:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8003bb4:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003bb6:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 8003bba:	f04f 32ff 	mov.w	r2, #4294967295
 8003bbe:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8003bc2:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8003bc6:	4b9c      	ldr	r3, [pc, #624]	@ (8003e38 <_printf_float+0x2cc>)
 8003bc8:	f7fc ff20 	bl	8000a0c <__aeabi_dcmpun>
 8003bcc:	bb70      	cbnz	r0, 8003c2c <_printf_float+0xc0>
 8003bce:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8003bd2:	f04f 32ff 	mov.w	r2, #4294967295
 8003bd6:	4b98      	ldr	r3, [pc, #608]	@ (8003e38 <_printf_float+0x2cc>)
 8003bd8:	f7fc fefa 	bl	80009d0 <__aeabi_dcmple>
 8003bdc:	bb30      	cbnz	r0, 8003c2c <_printf_float+0xc0>
 8003bde:	2200      	movs	r2, #0
 8003be0:	2300      	movs	r3, #0
 8003be2:	4640      	mov	r0, r8
 8003be4:	4649      	mov	r1, r9
 8003be6:	f7fc fee9 	bl	80009bc <__aeabi_dcmplt>
 8003bea:	b110      	cbz	r0, 8003bf2 <_printf_float+0x86>
 8003bec:	232d      	movs	r3, #45	@ 0x2d
 8003bee:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8003bf2:	4a92      	ldr	r2, [pc, #584]	@ (8003e3c <_printf_float+0x2d0>)
 8003bf4:	4b92      	ldr	r3, [pc, #584]	@ (8003e40 <_printf_float+0x2d4>)
 8003bf6:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8003bfa:	bf8c      	ite	hi
 8003bfc:	4690      	movhi	r8, r2
 8003bfe:	4698      	movls	r8, r3
 8003c00:	2303      	movs	r3, #3
 8003c02:	f04f 0900 	mov.w	r9, #0
 8003c06:	6123      	str	r3, [r4, #16]
 8003c08:	f02b 0304 	bic.w	r3, fp, #4
 8003c0c:	6023      	str	r3, [r4, #0]
 8003c0e:	4633      	mov	r3, r6
 8003c10:	4621      	mov	r1, r4
 8003c12:	4628      	mov	r0, r5
 8003c14:	9700      	str	r7, [sp, #0]
 8003c16:	aa0f      	add	r2, sp, #60	@ 0x3c
 8003c18:	f000 f9d4 	bl	8003fc4 <_printf_common>
 8003c1c:	3001      	adds	r0, #1
 8003c1e:	f040 8090 	bne.w	8003d42 <_printf_float+0x1d6>
 8003c22:	f04f 30ff 	mov.w	r0, #4294967295
 8003c26:	b011      	add	sp, #68	@ 0x44
 8003c28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003c2c:	4642      	mov	r2, r8
 8003c2e:	464b      	mov	r3, r9
 8003c30:	4640      	mov	r0, r8
 8003c32:	4649      	mov	r1, r9
 8003c34:	f7fc feea 	bl	8000a0c <__aeabi_dcmpun>
 8003c38:	b148      	cbz	r0, 8003c4e <_printf_float+0xe2>
 8003c3a:	464b      	mov	r3, r9
 8003c3c:	2b00      	cmp	r3, #0
 8003c3e:	bfb8      	it	lt
 8003c40:	232d      	movlt	r3, #45	@ 0x2d
 8003c42:	4a80      	ldr	r2, [pc, #512]	@ (8003e44 <_printf_float+0x2d8>)
 8003c44:	bfb8      	it	lt
 8003c46:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8003c4a:	4b7f      	ldr	r3, [pc, #508]	@ (8003e48 <_printf_float+0x2dc>)
 8003c4c:	e7d3      	b.n	8003bf6 <_printf_float+0x8a>
 8003c4e:	6863      	ldr	r3, [r4, #4]
 8003c50:	f00a 01df 	and.w	r1, sl, #223	@ 0xdf
 8003c54:	1c5a      	adds	r2, r3, #1
 8003c56:	d13f      	bne.n	8003cd8 <_printf_float+0x16c>
 8003c58:	2306      	movs	r3, #6
 8003c5a:	6063      	str	r3, [r4, #4]
 8003c5c:	2200      	movs	r2, #0
 8003c5e:	f44b 6380 	orr.w	r3, fp, #1024	@ 0x400
 8003c62:	6023      	str	r3, [r4, #0]
 8003c64:	9206      	str	r2, [sp, #24]
 8003c66:	aa0e      	add	r2, sp, #56	@ 0x38
 8003c68:	e9cd a204 	strd	sl, r2, [sp, #16]
 8003c6c:	aa0d      	add	r2, sp, #52	@ 0x34
 8003c6e:	9203      	str	r2, [sp, #12]
 8003c70:	f10d 0233 	add.w	r2, sp, #51	@ 0x33
 8003c74:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8003c78:	6863      	ldr	r3, [r4, #4]
 8003c7a:	4642      	mov	r2, r8
 8003c7c:	9300      	str	r3, [sp, #0]
 8003c7e:	4628      	mov	r0, r5
 8003c80:	464b      	mov	r3, r9
 8003c82:	910a      	str	r1, [sp, #40]	@ 0x28
 8003c84:	f7ff fed4 	bl	8003a30 <__cvt>
 8003c88:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003c8a:	4680      	mov	r8, r0
 8003c8c:	2947      	cmp	r1, #71	@ 0x47
 8003c8e:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8003c90:	d128      	bne.n	8003ce4 <_printf_float+0x178>
 8003c92:	1cc8      	adds	r0, r1, #3
 8003c94:	db02      	blt.n	8003c9c <_printf_float+0x130>
 8003c96:	6863      	ldr	r3, [r4, #4]
 8003c98:	4299      	cmp	r1, r3
 8003c9a:	dd40      	ble.n	8003d1e <_printf_float+0x1b2>
 8003c9c:	f1aa 0a02 	sub.w	sl, sl, #2
 8003ca0:	fa5f fa8a 	uxtb.w	sl, sl
 8003ca4:	4652      	mov	r2, sl
 8003ca6:	3901      	subs	r1, #1
 8003ca8:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8003cac:	910d      	str	r1, [sp, #52]	@ 0x34
 8003cae:	f7ff ff23 	bl	8003af8 <__exponent>
 8003cb2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8003cb4:	4681      	mov	r9, r0
 8003cb6:	1813      	adds	r3, r2, r0
 8003cb8:	2a01      	cmp	r2, #1
 8003cba:	6123      	str	r3, [r4, #16]
 8003cbc:	dc02      	bgt.n	8003cc4 <_printf_float+0x158>
 8003cbe:	6822      	ldr	r2, [r4, #0]
 8003cc0:	07d2      	lsls	r2, r2, #31
 8003cc2:	d501      	bpl.n	8003cc8 <_printf_float+0x15c>
 8003cc4:	3301      	adds	r3, #1
 8003cc6:	6123      	str	r3, [r4, #16]
 8003cc8:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 8003ccc:	2b00      	cmp	r3, #0
 8003cce:	d09e      	beq.n	8003c0e <_printf_float+0xa2>
 8003cd0:	232d      	movs	r3, #45	@ 0x2d
 8003cd2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8003cd6:	e79a      	b.n	8003c0e <_printf_float+0xa2>
 8003cd8:	2947      	cmp	r1, #71	@ 0x47
 8003cda:	d1bf      	bne.n	8003c5c <_printf_float+0xf0>
 8003cdc:	2b00      	cmp	r3, #0
 8003cde:	d1bd      	bne.n	8003c5c <_printf_float+0xf0>
 8003ce0:	2301      	movs	r3, #1
 8003ce2:	e7ba      	b.n	8003c5a <_printf_float+0xee>
 8003ce4:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8003ce8:	d9dc      	bls.n	8003ca4 <_printf_float+0x138>
 8003cea:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8003cee:	d118      	bne.n	8003d22 <_printf_float+0x1b6>
 8003cf0:	2900      	cmp	r1, #0
 8003cf2:	6863      	ldr	r3, [r4, #4]
 8003cf4:	dd0b      	ble.n	8003d0e <_printf_float+0x1a2>
 8003cf6:	6121      	str	r1, [r4, #16]
 8003cf8:	b913      	cbnz	r3, 8003d00 <_printf_float+0x194>
 8003cfa:	6822      	ldr	r2, [r4, #0]
 8003cfc:	07d0      	lsls	r0, r2, #31
 8003cfe:	d502      	bpl.n	8003d06 <_printf_float+0x19a>
 8003d00:	3301      	adds	r3, #1
 8003d02:	440b      	add	r3, r1
 8003d04:	6123      	str	r3, [r4, #16]
 8003d06:	f04f 0900 	mov.w	r9, #0
 8003d0a:	65a1      	str	r1, [r4, #88]	@ 0x58
 8003d0c:	e7dc      	b.n	8003cc8 <_printf_float+0x15c>
 8003d0e:	b913      	cbnz	r3, 8003d16 <_printf_float+0x1aa>
 8003d10:	6822      	ldr	r2, [r4, #0]
 8003d12:	07d2      	lsls	r2, r2, #31
 8003d14:	d501      	bpl.n	8003d1a <_printf_float+0x1ae>
 8003d16:	3302      	adds	r3, #2
 8003d18:	e7f4      	b.n	8003d04 <_printf_float+0x198>
 8003d1a:	2301      	movs	r3, #1
 8003d1c:	e7f2      	b.n	8003d04 <_printf_float+0x198>
 8003d1e:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8003d22:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003d24:	4299      	cmp	r1, r3
 8003d26:	db05      	blt.n	8003d34 <_printf_float+0x1c8>
 8003d28:	6823      	ldr	r3, [r4, #0]
 8003d2a:	6121      	str	r1, [r4, #16]
 8003d2c:	07d8      	lsls	r0, r3, #31
 8003d2e:	d5ea      	bpl.n	8003d06 <_printf_float+0x19a>
 8003d30:	1c4b      	adds	r3, r1, #1
 8003d32:	e7e7      	b.n	8003d04 <_printf_float+0x198>
 8003d34:	2900      	cmp	r1, #0
 8003d36:	bfcc      	ite	gt
 8003d38:	2201      	movgt	r2, #1
 8003d3a:	f1c1 0202 	rsble	r2, r1, #2
 8003d3e:	4413      	add	r3, r2
 8003d40:	e7e0      	b.n	8003d04 <_printf_float+0x198>
 8003d42:	6823      	ldr	r3, [r4, #0]
 8003d44:	055a      	lsls	r2, r3, #21
 8003d46:	d407      	bmi.n	8003d58 <_printf_float+0x1ec>
 8003d48:	6923      	ldr	r3, [r4, #16]
 8003d4a:	4642      	mov	r2, r8
 8003d4c:	4631      	mov	r1, r6
 8003d4e:	4628      	mov	r0, r5
 8003d50:	47b8      	blx	r7
 8003d52:	3001      	adds	r0, #1
 8003d54:	d12b      	bne.n	8003dae <_printf_float+0x242>
 8003d56:	e764      	b.n	8003c22 <_printf_float+0xb6>
 8003d58:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8003d5c:	f240 80dc 	bls.w	8003f18 <_printf_float+0x3ac>
 8003d60:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8003d64:	2200      	movs	r2, #0
 8003d66:	2300      	movs	r3, #0
 8003d68:	f7fc fe1e 	bl	80009a8 <__aeabi_dcmpeq>
 8003d6c:	2800      	cmp	r0, #0
 8003d6e:	d033      	beq.n	8003dd8 <_printf_float+0x26c>
 8003d70:	2301      	movs	r3, #1
 8003d72:	4631      	mov	r1, r6
 8003d74:	4628      	mov	r0, r5
 8003d76:	4a35      	ldr	r2, [pc, #212]	@ (8003e4c <_printf_float+0x2e0>)
 8003d78:	47b8      	blx	r7
 8003d7a:	3001      	adds	r0, #1
 8003d7c:	f43f af51 	beq.w	8003c22 <_printf_float+0xb6>
 8003d80:	e9dd 380d 	ldrd	r3, r8, [sp, #52]	@ 0x34
 8003d84:	4543      	cmp	r3, r8
 8003d86:	db02      	blt.n	8003d8e <_printf_float+0x222>
 8003d88:	6823      	ldr	r3, [r4, #0]
 8003d8a:	07d8      	lsls	r0, r3, #31
 8003d8c:	d50f      	bpl.n	8003dae <_printf_float+0x242>
 8003d8e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8003d92:	4631      	mov	r1, r6
 8003d94:	4628      	mov	r0, r5
 8003d96:	47b8      	blx	r7
 8003d98:	3001      	adds	r0, #1
 8003d9a:	f43f af42 	beq.w	8003c22 <_printf_float+0xb6>
 8003d9e:	f04f 0900 	mov.w	r9, #0
 8003da2:	f108 38ff 	add.w	r8, r8, #4294967295
 8003da6:	f104 0a1a 	add.w	sl, r4, #26
 8003daa:	45c8      	cmp	r8, r9
 8003dac:	dc09      	bgt.n	8003dc2 <_printf_float+0x256>
 8003dae:	6823      	ldr	r3, [r4, #0]
 8003db0:	079b      	lsls	r3, r3, #30
 8003db2:	f100 8102 	bmi.w	8003fba <_printf_float+0x44e>
 8003db6:	68e0      	ldr	r0, [r4, #12]
 8003db8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003dba:	4298      	cmp	r0, r3
 8003dbc:	bfb8      	it	lt
 8003dbe:	4618      	movlt	r0, r3
 8003dc0:	e731      	b.n	8003c26 <_printf_float+0xba>
 8003dc2:	2301      	movs	r3, #1
 8003dc4:	4652      	mov	r2, sl
 8003dc6:	4631      	mov	r1, r6
 8003dc8:	4628      	mov	r0, r5
 8003dca:	47b8      	blx	r7
 8003dcc:	3001      	adds	r0, #1
 8003dce:	f43f af28 	beq.w	8003c22 <_printf_float+0xb6>
 8003dd2:	f109 0901 	add.w	r9, r9, #1
 8003dd6:	e7e8      	b.n	8003daa <_printf_float+0x23e>
 8003dd8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003dda:	2b00      	cmp	r3, #0
 8003ddc:	dc38      	bgt.n	8003e50 <_printf_float+0x2e4>
 8003dde:	2301      	movs	r3, #1
 8003de0:	4631      	mov	r1, r6
 8003de2:	4628      	mov	r0, r5
 8003de4:	4a19      	ldr	r2, [pc, #100]	@ (8003e4c <_printf_float+0x2e0>)
 8003de6:	47b8      	blx	r7
 8003de8:	3001      	adds	r0, #1
 8003dea:	f43f af1a 	beq.w	8003c22 <_printf_float+0xb6>
 8003dee:	e9dd 390d 	ldrd	r3, r9, [sp, #52]	@ 0x34
 8003df2:	ea59 0303 	orrs.w	r3, r9, r3
 8003df6:	d102      	bne.n	8003dfe <_printf_float+0x292>
 8003df8:	6823      	ldr	r3, [r4, #0]
 8003dfa:	07d9      	lsls	r1, r3, #31
 8003dfc:	d5d7      	bpl.n	8003dae <_printf_float+0x242>
 8003dfe:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8003e02:	4631      	mov	r1, r6
 8003e04:	4628      	mov	r0, r5
 8003e06:	47b8      	blx	r7
 8003e08:	3001      	adds	r0, #1
 8003e0a:	f43f af0a 	beq.w	8003c22 <_printf_float+0xb6>
 8003e0e:	f04f 0a00 	mov.w	sl, #0
 8003e12:	f104 0b1a 	add.w	fp, r4, #26
 8003e16:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003e18:	425b      	negs	r3, r3
 8003e1a:	4553      	cmp	r3, sl
 8003e1c:	dc01      	bgt.n	8003e22 <_printf_float+0x2b6>
 8003e1e:	464b      	mov	r3, r9
 8003e20:	e793      	b.n	8003d4a <_printf_float+0x1de>
 8003e22:	2301      	movs	r3, #1
 8003e24:	465a      	mov	r2, fp
 8003e26:	4631      	mov	r1, r6
 8003e28:	4628      	mov	r0, r5
 8003e2a:	47b8      	blx	r7
 8003e2c:	3001      	adds	r0, #1
 8003e2e:	f43f aef8 	beq.w	8003c22 <_printf_float+0xb6>
 8003e32:	f10a 0a01 	add.w	sl, sl, #1
 8003e36:	e7ee      	b.n	8003e16 <_printf_float+0x2aa>
 8003e38:	7fefffff 	.word	0x7fefffff
 8003e3c:	080073fe 	.word	0x080073fe
 8003e40:	080073fa 	.word	0x080073fa
 8003e44:	08007406 	.word	0x08007406
 8003e48:	08007402 	.word	0x08007402
 8003e4c:	0800740a 	.word	0x0800740a
 8003e50:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8003e52:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8003e56:	4553      	cmp	r3, sl
 8003e58:	bfa8      	it	ge
 8003e5a:	4653      	movge	r3, sl
 8003e5c:	2b00      	cmp	r3, #0
 8003e5e:	4699      	mov	r9, r3
 8003e60:	dc36      	bgt.n	8003ed0 <_printf_float+0x364>
 8003e62:	f04f 0b00 	mov.w	fp, #0
 8003e66:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8003e6a:	f104 021a 	add.w	r2, r4, #26
 8003e6e:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8003e70:	930a      	str	r3, [sp, #40]	@ 0x28
 8003e72:	eba3 0309 	sub.w	r3, r3, r9
 8003e76:	455b      	cmp	r3, fp
 8003e78:	dc31      	bgt.n	8003ede <_printf_float+0x372>
 8003e7a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003e7c:	459a      	cmp	sl, r3
 8003e7e:	dc3a      	bgt.n	8003ef6 <_printf_float+0x38a>
 8003e80:	6823      	ldr	r3, [r4, #0]
 8003e82:	07da      	lsls	r2, r3, #31
 8003e84:	d437      	bmi.n	8003ef6 <_printf_float+0x38a>
 8003e86:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003e88:	ebaa 0903 	sub.w	r9, sl, r3
 8003e8c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003e8e:	ebaa 0303 	sub.w	r3, sl, r3
 8003e92:	4599      	cmp	r9, r3
 8003e94:	bfa8      	it	ge
 8003e96:	4699      	movge	r9, r3
 8003e98:	f1b9 0f00 	cmp.w	r9, #0
 8003e9c:	dc33      	bgt.n	8003f06 <_printf_float+0x39a>
 8003e9e:	f04f 0800 	mov.w	r8, #0
 8003ea2:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8003ea6:	f104 0b1a 	add.w	fp, r4, #26
 8003eaa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003eac:	ebaa 0303 	sub.w	r3, sl, r3
 8003eb0:	eba3 0309 	sub.w	r3, r3, r9
 8003eb4:	4543      	cmp	r3, r8
 8003eb6:	f77f af7a 	ble.w	8003dae <_printf_float+0x242>
 8003eba:	2301      	movs	r3, #1
 8003ebc:	465a      	mov	r2, fp
 8003ebe:	4631      	mov	r1, r6
 8003ec0:	4628      	mov	r0, r5
 8003ec2:	47b8      	blx	r7
 8003ec4:	3001      	adds	r0, #1
 8003ec6:	f43f aeac 	beq.w	8003c22 <_printf_float+0xb6>
 8003eca:	f108 0801 	add.w	r8, r8, #1
 8003ece:	e7ec      	b.n	8003eaa <_printf_float+0x33e>
 8003ed0:	4642      	mov	r2, r8
 8003ed2:	4631      	mov	r1, r6
 8003ed4:	4628      	mov	r0, r5
 8003ed6:	47b8      	blx	r7
 8003ed8:	3001      	adds	r0, #1
 8003eda:	d1c2      	bne.n	8003e62 <_printf_float+0x2f6>
 8003edc:	e6a1      	b.n	8003c22 <_printf_float+0xb6>
 8003ede:	2301      	movs	r3, #1
 8003ee0:	4631      	mov	r1, r6
 8003ee2:	4628      	mov	r0, r5
 8003ee4:	920a      	str	r2, [sp, #40]	@ 0x28
 8003ee6:	47b8      	blx	r7
 8003ee8:	3001      	adds	r0, #1
 8003eea:	f43f ae9a 	beq.w	8003c22 <_printf_float+0xb6>
 8003eee:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8003ef0:	f10b 0b01 	add.w	fp, fp, #1
 8003ef4:	e7bb      	b.n	8003e6e <_printf_float+0x302>
 8003ef6:	4631      	mov	r1, r6
 8003ef8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8003efc:	4628      	mov	r0, r5
 8003efe:	47b8      	blx	r7
 8003f00:	3001      	adds	r0, #1
 8003f02:	d1c0      	bne.n	8003e86 <_printf_float+0x31a>
 8003f04:	e68d      	b.n	8003c22 <_printf_float+0xb6>
 8003f06:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8003f08:	464b      	mov	r3, r9
 8003f0a:	4631      	mov	r1, r6
 8003f0c:	4628      	mov	r0, r5
 8003f0e:	4442      	add	r2, r8
 8003f10:	47b8      	blx	r7
 8003f12:	3001      	adds	r0, #1
 8003f14:	d1c3      	bne.n	8003e9e <_printf_float+0x332>
 8003f16:	e684      	b.n	8003c22 <_printf_float+0xb6>
 8003f18:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8003f1c:	f1ba 0f01 	cmp.w	sl, #1
 8003f20:	dc01      	bgt.n	8003f26 <_printf_float+0x3ba>
 8003f22:	07db      	lsls	r3, r3, #31
 8003f24:	d536      	bpl.n	8003f94 <_printf_float+0x428>
 8003f26:	2301      	movs	r3, #1
 8003f28:	4642      	mov	r2, r8
 8003f2a:	4631      	mov	r1, r6
 8003f2c:	4628      	mov	r0, r5
 8003f2e:	47b8      	blx	r7
 8003f30:	3001      	adds	r0, #1
 8003f32:	f43f ae76 	beq.w	8003c22 <_printf_float+0xb6>
 8003f36:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8003f3a:	4631      	mov	r1, r6
 8003f3c:	4628      	mov	r0, r5
 8003f3e:	47b8      	blx	r7
 8003f40:	3001      	adds	r0, #1
 8003f42:	f43f ae6e 	beq.w	8003c22 <_printf_float+0xb6>
 8003f46:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8003f4a:	2200      	movs	r2, #0
 8003f4c:	2300      	movs	r3, #0
 8003f4e:	f10a 3aff 	add.w	sl, sl, #4294967295
 8003f52:	f7fc fd29 	bl	80009a8 <__aeabi_dcmpeq>
 8003f56:	b9c0      	cbnz	r0, 8003f8a <_printf_float+0x41e>
 8003f58:	4653      	mov	r3, sl
 8003f5a:	f108 0201 	add.w	r2, r8, #1
 8003f5e:	4631      	mov	r1, r6
 8003f60:	4628      	mov	r0, r5
 8003f62:	47b8      	blx	r7
 8003f64:	3001      	adds	r0, #1
 8003f66:	d10c      	bne.n	8003f82 <_printf_float+0x416>
 8003f68:	e65b      	b.n	8003c22 <_printf_float+0xb6>
 8003f6a:	2301      	movs	r3, #1
 8003f6c:	465a      	mov	r2, fp
 8003f6e:	4631      	mov	r1, r6
 8003f70:	4628      	mov	r0, r5
 8003f72:	47b8      	blx	r7
 8003f74:	3001      	adds	r0, #1
 8003f76:	f43f ae54 	beq.w	8003c22 <_printf_float+0xb6>
 8003f7a:	f108 0801 	add.w	r8, r8, #1
 8003f7e:	45d0      	cmp	r8, sl
 8003f80:	dbf3      	blt.n	8003f6a <_printf_float+0x3fe>
 8003f82:	464b      	mov	r3, r9
 8003f84:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8003f88:	e6e0      	b.n	8003d4c <_printf_float+0x1e0>
 8003f8a:	f04f 0800 	mov.w	r8, #0
 8003f8e:	f104 0b1a 	add.w	fp, r4, #26
 8003f92:	e7f4      	b.n	8003f7e <_printf_float+0x412>
 8003f94:	2301      	movs	r3, #1
 8003f96:	4642      	mov	r2, r8
 8003f98:	e7e1      	b.n	8003f5e <_printf_float+0x3f2>
 8003f9a:	2301      	movs	r3, #1
 8003f9c:	464a      	mov	r2, r9
 8003f9e:	4631      	mov	r1, r6
 8003fa0:	4628      	mov	r0, r5
 8003fa2:	47b8      	blx	r7
 8003fa4:	3001      	adds	r0, #1
 8003fa6:	f43f ae3c 	beq.w	8003c22 <_printf_float+0xb6>
 8003faa:	f108 0801 	add.w	r8, r8, #1
 8003fae:	68e3      	ldr	r3, [r4, #12]
 8003fb0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8003fb2:	1a5b      	subs	r3, r3, r1
 8003fb4:	4543      	cmp	r3, r8
 8003fb6:	dcf0      	bgt.n	8003f9a <_printf_float+0x42e>
 8003fb8:	e6fd      	b.n	8003db6 <_printf_float+0x24a>
 8003fba:	f04f 0800 	mov.w	r8, #0
 8003fbe:	f104 0919 	add.w	r9, r4, #25
 8003fc2:	e7f4      	b.n	8003fae <_printf_float+0x442>

08003fc4 <_printf_common>:
 8003fc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003fc8:	4616      	mov	r6, r2
 8003fca:	4698      	mov	r8, r3
 8003fcc:	688a      	ldr	r2, [r1, #8]
 8003fce:	690b      	ldr	r3, [r1, #16]
 8003fd0:	4607      	mov	r7, r0
 8003fd2:	4293      	cmp	r3, r2
 8003fd4:	bfb8      	it	lt
 8003fd6:	4613      	movlt	r3, r2
 8003fd8:	6033      	str	r3, [r6, #0]
 8003fda:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8003fde:	460c      	mov	r4, r1
 8003fe0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8003fe4:	b10a      	cbz	r2, 8003fea <_printf_common+0x26>
 8003fe6:	3301      	adds	r3, #1
 8003fe8:	6033      	str	r3, [r6, #0]
 8003fea:	6823      	ldr	r3, [r4, #0]
 8003fec:	0699      	lsls	r1, r3, #26
 8003fee:	bf42      	ittt	mi
 8003ff0:	6833      	ldrmi	r3, [r6, #0]
 8003ff2:	3302      	addmi	r3, #2
 8003ff4:	6033      	strmi	r3, [r6, #0]
 8003ff6:	6825      	ldr	r5, [r4, #0]
 8003ff8:	f015 0506 	ands.w	r5, r5, #6
 8003ffc:	d106      	bne.n	800400c <_printf_common+0x48>
 8003ffe:	f104 0a19 	add.w	sl, r4, #25
 8004002:	68e3      	ldr	r3, [r4, #12]
 8004004:	6832      	ldr	r2, [r6, #0]
 8004006:	1a9b      	subs	r3, r3, r2
 8004008:	42ab      	cmp	r3, r5
 800400a:	dc2b      	bgt.n	8004064 <_printf_common+0xa0>
 800400c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8004010:	6822      	ldr	r2, [r4, #0]
 8004012:	3b00      	subs	r3, #0
 8004014:	bf18      	it	ne
 8004016:	2301      	movne	r3, #1
 8004018:	0692      	lsls	r2, r2, #26
 800401a:	d430      	bmi.n	800407e <_printf_common+0xba>
 800401c:	4641      	mov	r1, r8
 800401e:	4638      	mov	r0, r7
 8004020:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8004024:	47c8      	blx	r9
 8004026:	3001      	adds	r0, #1
 8004028:	d023      	beq.n	8004072 <_printf_common+0xae>
 800402a:	6823      	ldr	r3, [r4, #0]
 800402c:	6922      	ldr	r2, [r4, #16]
 800402e:	f003 0306 	and.w	r3, r3, #6
 8004032:	2b04      	cmp	r3, #4
 8004034:	bf14      	ite	ne
 8004036:	2500      	movne	r5, #0
 8004038:	6833      	ldreq	r3, [r6, #0]
 800403a:	f04f 0600 	mov.w	r6, #0
 800403e:	bf08      	it	eq
 8004040:	68e5      	ldreq	r5, [r4, #12]
 8004042:	f104 041a 	add.w	r4, r4, #26
 8004046:	bf08      	it	eq
 8004048:	1aed      	subeq	r5, r5, r3
 800404a:	f854 3c12 	ldr.w	r3, [r4, #-18]
 800404e:	bf08      	it	eq
 8004050:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004054:	4293      	cmp	r3, r2
 8004056:	bfc4      	itt	gt
 8004058:	1a9b      	subgt	r3, r3, r2
 800405a:	18ed      	addgt	r5, r5, r3
 800405c:	42b5      	cmp	r5, r6
 800405e:	d11a      	bne.n	8004096 <_printf_common+0xd2>
 8004060:	2000      	movs	r0, #0
 8004062:	e008      	b.n	8004076 <_printf_common+0xb2>
 8004064:	2301      	movs	r3, #1
 8004066:	4652      	mov	r2, sl
 8004068:	4641      	mov	r1, r8
 800406a:	4638      	mov	r0, r7
 800406c:	47c8      	blx	r9
 800406e:	3001      	adds	r0, #1
 8004070:	d103      	bne.n	800407a <_printf_common+0xb6>
 8004072:	f04f 30ff 	mov.w	r0, #4294967295
 8004076:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800407a:	3501      	adds	r5, #1
 800407c:	e7c1      	b.n	8004002 <_printf_common+0x3e>
 800407e:	2030      	movs	r0, #48	@ 0x30
 8004080:	18e1      	adds	r1, r4, r3
 8004082:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8004086:	1c5a      	adds	r2, r3, #1
 8004088:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 800408c:	4422      	add	r2, r4
 800408e:	3302      	adds	r3, #2
 8004090:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8004094:	e7c2      	b.n	800401c <_printf_common+0x58>
 8004096:	2301      	movs	r3, #1
 8004098:	4622      	mov	r2, r4
 800409a:	4641      	mov	r1, r8
 800409c:	4638      	mov	r0, r7
 800409e:	47c8      	blx	r9
 80040a0:	3001      	adds	r0, #1
 80040a2:	d0e6      	beq.n	8004072 <_printf_common+0xae>
 80040a4:	3601      	adds	r6, #1
 80040a6:	e7d9      	b.n	800405c <_printf_common+0x98>

080040a8 <_printf_i>:
 80040a8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80040ac:	7e0f      	ldrb	r7, [r1, #24]
 80040ae:	4691      	mov	r9, r2
 80040b0:	2f78      	cmp	r7, #120	@ 0x78
 80040b2:	4680      	mov	r8, r0
 80040b4:	460c      	mov	r4, r1
 80040b6:	469a      	mov	sl, r3
 80040b8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80040ba:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80040be:	d807      	bhi.n	80040d0 <_printf_i+0x28>
 80040c0:	2f62      	cmp	r7, #98	@ 0x62
 80040c2:	d80a      	bhi.n	80040da <_printf_i+0x32>
 80040c4:	2f00      	cmp	r7, #0
 80040c6:	f000 80d1 	beq.w	800426c <_printf_i+0x1c4>
 80040ca:	2f58      	cmp	r7, #88	@ 0x58
 80040cc:	f000 80b8 	beq.w	8004240 <_printf_i+0x198>
 80040d0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80040d4:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80040d8:	e03a      	b.n	8004150 <_printf_i+0xa8>
 80040da:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80040de:	2b15      	cmp	r3, #21
 80040e0:	d8f6      	bhi.n	80040d0 <_printf_i+0x28>
 80040e2:	a101      	add	r1, pc, #4	@ (adr r1, 80040e8 <_printf_i+0x40>)
 80040e4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80040e8:	08004141 	.word	0x08004141
 80040ec:	08004155 	.word	0x08004155
 80040f0:	080040d1 	.word	0x080040d1
 80040f4:	080040d1 	.word	0x080040d1
 80040f8:	080040d1 	.word	0x080040d1
 80040fc:	080040d1 	.word	0x080040d1
 8004100:	08004155 	.word	0x08004155
 8004104:	080040d1 	.word	0x080040d1
 8004108:	080040d1 	.word	0x080040d1
 800410c:	080040d1 	.word	0x080040d1
 8004110:	080040d1 	.word	0x080040d1
 8004114:	08004253 	.word	0x08004253
 8004118:	0800417f 	.word	0x0800417f
 800411c:	0800420d 	.word	0x0800420d
 8004120:	080040d1 	.word	0x080040d1
 8004124:	080040d1 	.word	0x080040d1
 8004128:	08004275 	.word	0x08004275
 800412c:	080040d1 	.word	0x080040d1
 8004130:	0800417f 	.word	0x0800417f
 8004134:	080040d1 	.word	0x080040d1
 8004138:	080040d1 	.word	0x080040d1
 800413c:	08004215 	.word	0x08004215
 8004140:	6833      	ldr	r3, [r6, #0]
 8004142:	1d1a      	adds	r2, r3, #4
 8004144:	681b      	ldr	r3, [r3, #0]
 8004146:	6032      	str	r2, [r6, #0]
 8004148:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800414c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8004150:	2301      	movs	r3, #1
 8004152:	e09c      	b.n	800428e <_printf_i+0x1e6>
 8004154:	6833      	ldr	r3, [r6, #0]
 8004156:	6820      	ldr	r0, [r4, #0]
 8004158:	1d19      	adds	r1, r3, #4
 800415a:	6031      	str	r1, [r6, #0]
 800415c:	0606      	lsls	r6, r0, #24
 800415e:	d501      	bpl.n	8004164 <_printf_i+0xbc>
 8004160:	681d      	ldr	r5, [r3, #0]
 8004162:	e003      	b.n	800416c <_printf_i+0xc4>
 8004164:	0645      	lsls	r5, r0, #25
 8004166:	d5fb      	bpl.n	8004160 <_printf_i+0xb8>
 8004168:	f9b3 5000 	ldrsh.w	r5, [r3]
 800416c:	2d00      	cmp	r5, #0
 800416e:	da03      	bge.n	8004178 <_printf_i+0xd0>
 8004170:	232d      	movs	r3, #45	@ 0x2d
 8004172:	426d      	negs	r5, r5
 8004174:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8004178:	230a      	movs	r3, #10
 800417a:	4858      	ldr	r0, [pc, #352]	@ (80042dc <_printf_i+0x234>)
 800417c:	e011      	b.n	80041a2 <_printf_i+0xfa>
 800417e:	6821      	ldr	r1, [r4, #0]
 8004180:	6833      	ldr	r3, [r6, #0]
 8004182:	0608      	lsls	r0, r1, #24
 8004184:	f853 5b04 	ldr.w	r5, [r3], #4
 8004188:	d402      	bmi.n	8004190 <_printf_i+0xe8>
 800418a:	0649      	lsls	r1, r1, #25
 800418c:	bf48      	it	mi
 800418e:	b2ad      	uxthmi	r5, r5
 8004190:	2f6f      	cmp	r7, #111	@ 0x6f
 8004192:	6033      	str	r3, [r6, #0]
 8004194:	bf14      	ite	ne
 8004196:	230a      	movne	r3, #10
 8004198:	2308      	moveq	r3, #8
 800419a:	4850      	ldr	r0, [pc, #320]	@ (80042dc <_printf_i+0x234>)
 800419c:	2100      	movs	r1, #0
 800419e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80041a2:	6866      	ldr	r6, [r4, #4]
 80041a4:	2e00      	cmp	r6, #0
 80041a6:	60a6      	str	r6, [r4, #8]
 80041a8:	db05      	blt.n	80041b6 <_printf_i+0x10e>
 80041aa:	6821      	ldr	r1, [r4, #0]
 80041ac:	432e      	orrs	r6, r5
 80041ae:	f021 0104 	bic.w	r1, r1, #4
 80041b2:	6021      	str	r1, [r4, #0]
 80041b4:	d04b      	beq.n	800424e <_printf_i+0x1a6>
 80041b6:	4616      	mov	r6, r2
 80041b8:	fbb5 f1f3 	udiv	r1, r5, r3
 80041bc:	fb03 5711 	mls	r7, r3, r1, r5
 80041c0:	5dc7      	ldrb	r7, [r0, r7]
 80041c2:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80041c6:	462f      	mov	r7, r5
 80041c8:	42bb      	cmp	r3, r7
 80041ca:	460d      	mov	r5, r1
 80041cc:	d9f4      	bls.n	80041b8 <_printf_i+0x110>
 80041ce:	2b08      	cmp	r3, #8
 80041d0:	d10b      	bne.n	80041ea <_printf_i+0x142>
 80041d2:	6823      	ldr	r3, [r4, #0]
 80041d4:	07df      	lsls	r7, r3, #31
 80041d6:	d508      	bpl.n	80041ea <_printf_i+0x142>
 80041d8:	6923      	ldr	r3, [r4, #16]
 80041da:	6861      	ldr	r1, [r4, #4]
 80041dc:	4299      	cmp	r1, r3
 80041de:	bfde      	ittt	le
 80041e0:	2330      	movle	r3, #48	@ 0x30
 80041e2:	f806 3c01 	strble.w	r3, [r6, #-1]
 80041e6:	f106 36ff 	addle.w	r6, r6, #4294967295
 80041ea:	1b92      	subs	r2, r2, r6
 80041ec:	6122      	str	r2, [r4, #16]
 80041ee:	464b      	mov	r3, r9
 80041f0:	4621      	mov	r1, r4
 80041f2:	4640      	mov	r0, r8
 80041f4:	f8cd a000 	str.w	sl, [sp]
 80041f8:	aa03      	add	r2, sp, #12
 80041fa:	f7ff fee3 	bl	8003fc4 <_printf_common>
 80041fe:	3001      	adds	r0, #1
 8004200:	d14a      	bne.n	8004298 <_printf_i+0x1f0>
 8004202:	f04f 30ff 	mov.w	r0, #4294967295
 8004206:	b004      	add	sp, #16
 8004208:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800420c:	6823      	ldr	r3, [r4, #0]
 800420e:	f043 0320 	orr.w	r3, r3, #32
 8004212:	6023      	str	r3, [r4, #0]
 8004214:	2778      	movs	r7, #120	@ 0x78
 8004216:	4832      	ldr	r0, [pc, #200]	@ (80042e0 <_printf_i+0x238>)
 8004218:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800421c:	6823      	ldr	r3, [r4, #0]
 800421e:	6831      	ldr	r1, [r6, #0]
 8004220:	061f      	lsls	r7, r3, #24
 8004222:	f851 5b04 	ldr.w	r5, [r1], #4
 8004226:	d402      	bmi.n	800422e <_printf_i+0x186>
 8004228:	065f      	lsls	r7, r3, #25
 800422a:	bf48      	it	mi
 800422c:	b2ad      	uxthmi	r5, r5
 800422e:	6031      	str	r1, [r6, #0]
 8004230:	07d9      	lsls	r1, r3, #31
 8004232:	bf44      	itt	mi
 8004234:	f043 0320 	orrmi.w	r3, r3, #32
 8004238:	6023      	strmi	r3, [r4, #0]
 800423a:	b11d      	cbz	r5, 8004244 <_printf_i+0x19c>
 800423c:	2310      	movs	r3, #16
 800423e:	e7ad      	b.n	800419c <_printf_i+0xf4>
 8004240:	4826      	ldr	r0, [pc, #152]	@ (80042dc <_printf_i+0x234>)
 8004242:	e7e9      	b.n	8004218 <_printf_i+0x170>
 8004244:	6823      	ldr	r3, [r4, #0]
 8004246:	f023 0320 	bic.w	r3, r3, #32
 800424a:	6023      	str	r3, [r4, #0]
 800424c:	e7f6      	b.n	800423c <_printf_i+0x194>
 800424e:	4616      	mov	r6, r2
 8004250:	e7bd      	b.n	80041ce <_printf_i+0x126>
 8004252:	6833      	ldr	r3, [r6, #0]
 8004254:	6825      	ldr	r5, [r4, #0]
 8004256:	1d18      	adds	r0, r3, #4
 8004258:	6961      	ldr	r1, [r4, #20]
 800425a:	6030      	str	r0, [r6, #0]
 800425c:	062e      	lsls	r6, r5, #24
 800425e:	681b      	ldr	r3, [r3, #0]
 8004260:	d501      	bpl.n	8004266 <_printf_i+0x1be>
 8004262:	6019      	str	r1, [r3, #0]
 8004264:	e002      	b.n	800426c <_printf_i+0x1c4>
 8004266:	0668      	lsls	r0, r5, #25
 8004268:	d5fb      	bpl.n	8004262 <_printf_i+0x1ba>
 800426a:	8019      	strh	r1, [r3, #0]
 800426c:	2300      	movs	r3, #0
 800426e:	4616      	mov	r6, r2
 8004270:	6123      	str	r3, [r4, #16]
 8004272:	e7bc      	b.n	80041ee <_printf_i+0x146>
 8004274:	6833      	ldr	r3, [r6, #0]
 8004276:	2100      	movs	r1, #0
 8004278:	1d1a      	adds	r2, r3, #4
 800427a:	6032      	str	r2, [r6, #0]
 800427c:	681e      	ldr	r6, [r3, #0]
 800427e:	6862      	ldr	r2, [r4, #4]
 8004280:	4630      	mov	r0, r6
 8004282:	f000 fa46 	bl	8004712 <memchr>
 8004286:	b108      	cbz	r0, 800428c <_printf_i+0x1e4>
 8004288:	1b80      	subs	r0, r0, r6
 800428a:	6060      	str	r0, [r4, #4]
 800428c:	6863      	ldr	r3, [r4, #4]
 800428e:	6123      	str	r3, [r4, #16]
 8004290:	2300      	movs	r3, #0
 8004292:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8004296:	e7aa      	b.n	80041ee <_printf_i+0x146>
 8004298:	4632      	mov	r2, r6
 800429a:	4649      	mov	r1, r9
 800429c:	4640      	mov	r0, r8
 800429e:	6923      	ldr	r3, [r4, #16]
 80042a0:	47d0      	blx	sl
 80042a2:	3001      	adds	r0, #1
 80042a4:	d0ad      	beq.n	8004202 <_printf_i+0x15a>
 80042a6:	6823      	ldr	r3, [r4, #0]
 80042a8:	079b      	lsls	r3, r3, #30
 80042aa:	d413      	bmi.n	80042d4 <_printf_i+0x22c>
 80042ac:	68e0      	ldr	r0, [r4, #12]
 80042ae:	9b03      	ldr	r3, [sp, #12]
 80042b0:	4298      	cmp	r0, r3
 80042b2:	bfb8      	it	lt
 80042b4:	4618      	movlt	r0, r3
 80042b6:	e7a6      	b.n	8004206 <_printf_i+0x15e>
 80042b8:	2301      	movs	r3, #1
 80042ba:	4632      	mov	r2, r6
 80042bc:	4649      	mov	r1, r9
 80042be:	4640      	mov	r0, r8
 80042c0:	47d0      	blx	sl
 80042c2:	3001      	adds	r0, #1
 80042c4:	d09d      	beq.n	8004202 <_printf_i+0x15a>
 80042c6:	3501      	adds	r5, #1
 80042c8:	68e3      	ldr	r3, [r4, #12]
 80042ca:	9903      	ldr	r1, [sp, #12]
 80042cc:	1a5b      	subs	r3, r3, r1
 80042ce:	42ab      	cmp	r3, r5
 80042d0:	dcf2      	bgt.n	80042b8 <_printf_i+0x210>
 80042d2:	e7eb      	b.n	80042ac <_printf_i+0x204>
 80042d4:	2500      	movs	r5, #0
 80042d6:	f104 0619 	add.w	r6, r4, #25
 80042da:	e7f5      	b.n	80042c8 <_printf_i+0x220>
 80042dc:	0800740c 	.word	0x0800740c
 80042e0:	0800741d 	.word	0x0800741d

080042e4 <std>:
 80042e4:	2300      	movs	r3, #0
 80042e6:	b510      	push	{r4, lr}
 80042e8:	4604      	mov	r4, r0
 80042ea:	e9c0 3300 	strd	r3, r3, [r0]
 80042ee:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80042f2:	6083      	str	r3, [r0, #8]
 80042f4:	8181      	strh	r1, [r0, #12]
 80042f6:	6643      	str	r3, [r0, #100]	@ 0x64
 80042f8:	81c2      	strh	r2, [r0, #14]
 80042fa:	6183      	str	r3, [r0, #24]
 80042fc:	4619      	mov	r1, r3
 80042fe:	2208      	movs	r2, #8
 8004300:	305c      	adds	r0, #92	@ 0x5c
 8004302:	f000 f92a 	bl	800455a <memset>
 8004306:	4b0d      	ldr	r3, [pc, #52]	@ (800433c <std+0x58>)
 8004308:	6224      	str	r4, [r4, #32]
 800430a:	6263      	str	r3, [r4, #36]	@ 0x24
 800430c:	4b0c      	ldr	r3, [pc, #48]	@ (8004340 <std+0x5c>)
 800430e:	62a3      	str	r3, [r4, #40]	@ 0x28
 8004310:	4b0c      	ldr	r3, [pc, #48]	@ (8004344 <std+0x60>)
 8004312:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8004314:	4b0c      	ldr	r3, [pc, #48]	@ (8004348 <std+0x64>)
 8004316:	6323      	str	r3, [r4, #48]	@ 0x30
 8004318:	4b0c      	ldr	r3, [pc, #48]	@ (800434c <std+0x68>)
 800431a:	429c      	cmp	r4, r3
 800431c:	d006      	beq.n	800432c <std+0x48>
 800431e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8004322:	4294      	cmp	r4, r2
 8004324:	d002      	beq.n	800432c <std+0x48>
 8004326:	33d0      	adds	r3, #208	@ 0xd0
 8004328:	429c      	cmp	r4, r3
 800432a:	d105      	bne.n	8004338 <std+0x54>
 800432c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8004330:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004334:	f000 b9ea 	b.w	800470c <__retarget_lock_init_recursive>
 8004338:	bd10      	pop	{r4, pc}
 800433a:	bf00      	nop
 800433c:	080044d5 	.word	0x080044d5
 8004340:	080044f7 	.word	0x080044f7
 8004344:	0800452f 	.word	0x0800452f
 8004348:	08004553 	.word	0x08004553
 800434c:	20000404 	.word	0x20000404

08004350 <stdio_exit_handler>:
 8004350:	4a02      	ldr	r2, [pc, #8]	@ (800435c <stdio_exit_handler+0xc>)
 8004352:	4903      	ldr	r1, [pc, #12]	@ (8004360 <stdio_exit_handler+0x10>)
 8004354:	4803      	ldr	r0, [pc, #12]	@ (8004364 <stdio_exit_handler+0x14>)
 8004356:	f000 b869 	b.w	800442c <_fwalk_sglue>
 800435a:	bf00      	nop
 800435c:	20000008 	.word	0x20000008
 8004360:	080069ad 	.word	0x080069ad
 8004364:	20000184 	.word	0x20000184

08004368 <cleanup_stdio>:
 8004368:	6841      	ldr	r1, [r0, #4]
 800436a:	4b0c      	ldr	r3, [pc, #48]	@ (800439c <cleanup_stdio+0x34>)
 800436c:	b510      	push	{r4, lr}
 800436e:	4299      	cmp	r1, r3
 8004370:	4604      	mov	r4, r0
 8004372:	d001      	beq.n	8004378 <cleanup_stdio+0x10>
 8004374:	f002 fb1a 	bl	80069ac <_fflush_r>
 8004378:	68a1      	ldr	r1, [r4, #8]
 800437a:	4b09      	ldr	r3, [pc, #36]	@ (80043a0 <cleanup_stdio+0x38>)
 800437c:	4299      	cmp	r1, r3
 800437e:	d002      	beq.n	8004386 <cleanup_stdio+0x1e>
 8004380:	4620      	mov	r0, r4
 8004382:	f002 fb13 	bl	80069ac <_fflush_r>
 8004386:	68e1      	ldr	r1, [r4, #12]
 8004388:	4b06      	ldr	r3, [pc, #24]	@ (80043a4 <cleanup_stdio+0x3c>)
 800438a:	4299      	cmp	r1, r3
 800438c:	d004      	beq.n	8004398 <cleanup_stdio+0x30>
 800438e:	4620      	mov	r0, r4
 8004390:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004394:	f002 bb0a 	b.w	80069ac <_fflush_r>
 8004398:	bd10      	pop	{r4, pc}
 800439a:	bf00      	nop
 800439c:	20000404 	.word	0x20000404
 80043a0:	2000046c 	.word	0x2000046c
 80043a4:	200004d4 	.word	0x200004d4

080043a8 <global_stdio_init.part.0>:
 80043a8:	b510      	push	{r4, lr}
 80043aa:	4b0b      	ldr	r3, [pc, #44]	@ (80043d8 <global_stdio_init.part.0+0x30>)
 80043ac:	4c0b      	ldr	r4, [pc, #44]	@ (80043dc <global_stdio_init.part.0+0x34>)
 80043ae:	4a0c      	ldr	r2, [pc, #48]	@ (80043e0 <global_stdio_init.part.0+0x38>)
 80043b0:	4620      	mov	r0, r4
 80043b2:	601a      	str	r2, [r3, #0]
 80043b4:	2104      	movs	r1, #4
 80043b6:	2200      	movs	r2, #0
 80043b8:	f7ff ff94 	bl	80042e4 <std>
 80043bc:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80043c0:	2201      	movs	r2, #1
 80043c2:	2109      	movs	r1, #9
 80043c4:	f7ff ff8e 	bl	80042e4 <std>
 80043c8:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80043cc:	2202      	movs	r2, #2
 80043ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80043d2:	2112      	movs	r1, #18
 80043d4:	f7ff bf86 	b.w	80042e4 <std>
 80043d8:	2000053c 	.word	0x2000053c
 80043dc:	20000404 	.word	0x20000404
 80043e0:	08004351 	.word	0x08004351

080043e4 <__sfp_lock_acquire>:
 80043e4:	4801      	ldr	r0, [pc, #4]	@ (80043ec <__sfp_lock_acquire+0x8>)
 80043e6:	f000 b992 	b.w	800470e <__retarget_lock_acquire_recursive>
 80043ea:	bf00      	nop
 80043ec:	20000545 	.word	0x20000545

080043f0 <__sfp_lock_release>:
 80043f0:	4801      	ldr	r0, [pc, #4]	@ (80043f8 <__sfp_lock_release+0x8>)
 80043f2:	f000 b98d 	b.w	8004710 <__retarget_lock_release_recursive>
 80043f6:	bf00      	nop
 80043f8:	20000545 	.word	0x20000545

080043fc <__sinit>:
 80043fc:	b510      	push	{r4, lr}
 80043fe:	4604      	mov	r4, r0
 8004400:	f7ff fff0 	bl	80043e4 <__sfp_lock_acquire>
 8004404:	6a23      	ldr	r3, [r4, #32]
 8004406:	b11b      	cbz	r3, 8004410 <__sinit+0x14>
 8004408:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800440c:	f7ff bff0 	b.w	80043f0 <__sfp_lock_release>
 8004410:	4b04      	ldr	r3, [pc, #16]	@ (8004424 <__sinit+0x28>)
 8004412:	6223      	str	r3, [r4, #32]
 8004414:	4b04      	ldr	r3, [pc, #16]	@ (8004428 <__sinit+0x2c>)
 8004416:	681b      	ldr	r3, [r3, #0]
 8004418:	2b00      	cmp	r3, #0
 800441a:	d1f5      	bne.n	8004408 <__sinit+0xc>
 800441c:	f7ff ffc4 	bl	80043a8 <global_stdio_init.part.0>
 8004420:	e7f2      	b.n	8004408 <__sinit+0xc>
 8004422:	bf00      	nop
 8004424:	08004369 	.word	0x08004369
 8004428:	2000053c 	.word	0x2000053c

0800442c <_fwalk_sglue>:
 800442c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004430:	4607      	mov	r7, r0
 8004432:	4688      	mov	r8, r1
 8004434:	4614      	mov	r4, r2
 8004436:	2600      	movs	r6, #0
 8004438:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800443c:	f1b9 0901 	subs.w	r9, r9, #1
 8004440:	d505      	bpl.n	800444e <_fwalk_sglue+0x22>
 8004442:	6824      	ldr	r4, [r4, #0]
 8004444:	2c00      	cmp	r4, #0
 8004446:	d1f7      	bne.n	8004438 <_fwalk_sglue+0xc>
 8004448:	4630      	mov	r0, r6
 800444a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800444e:	89ab      	ldrh	r3, [r5, #12]
 8004450:	2b01      	cmp	r3, #1
 8004452:	d907      	bls.n	8004464 <_fwalk_sglue+0x38>
 8004454:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8004458:	3301      	adds	r3, #1
 800445a:	d003      	beq.n	8004464 <_fwalk_sglue+0x38>
 800445c:	4629      	mov	r1, r5
 800445e:	4638      	mov	r0, r7
 8004460:	47c0      	blx	r8
 8004462:	4306      	orrs	r6, r0
 8004464:	3568      	adds	r5, #104	@ 0x68
 8004466:	e7e9      	b.n	800443c <_fwalk_sglue+0x10>

08004468 <sniprintf>:
 8004468:	b40c      	push	{r2, r3}
 800446a:	b530      	push	{r4, r5, lr}
 800446c:	4b18      	ldr	r3, [pc, #96]	@ (80044d0 <sniprintf+0x68>)
 800446e:	1e0c      	subs	r4, r1, #0
 8004470:	681d      	ldr	r5, [r3, #0]
 8004472:	b09d      	sub	sp, #116	@ 0x74
 8004474:	da08      	bge.n	8004488 <sniprintf+0x20>
 8004476:	238b      	movs	r3, #139	@ 0x8b
 8004478:	f04f 30ff 	mov.w	r0, #4294967295
 800447c:	602b      	str	r3, [r5, #0]
 800447e:	b01d      	add	sp, #116	@ 0x74
 8004480:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8004484:	b002      	add	sp, #8
 8004486:	4770      	bx	lr
 8004488:	f44f 7302 	mov.w	r3, #520	@ 0x208
 800448c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004490:	f04f 0300 	mov.w	r3, #0
 8004494:	931b      	str	r3, [sp, #108]	@ 0x6c
 8004496:	bf0c      	ite	eq
 8004498:	4623      	moveq	r3, r4
 800449a:	f104 33ff 	addne.w	r3, r4, #4294967295
 800449e:	9304      	str	r3, [sp, #16]
 80044a0:	9307      	str	r3, [sp, #28]
 80044a2:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80044a6:	9002      	str	r0, [sp, #8]
 80044a8:	9006      	str	r0, [sp, #24]
 80044aa:	f8ad 3016 	strh.w	r3, [sp, #22]
 80044ae:	4628      	mov	r0, r5
 80044b0:	ab21      	add	r3, sp, #132	@ 0x84
 80044b2:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80044b4:	a902      	add	r1, sp, #8
 80044b6:	9301      	str	r3, [sp, #4]
 80044b8:	f002 f8fc 	bl	80066b4 <_svfiprintf_r>
 80044bc:	1c43      	adds	r3, r0, #1
 80044be:	bfbc      	itt	lt
 80044c0:	238b      	movlt	r3, #139	@ 0x8b
 80044c2:	602b      	strlt	r3, [r5, #0]
 80044c4:	2c00      	cmp	r4, #0
 80044c6:	d0da      	beq.n	800447e <sniprintf+0x16>
 80044c8:	2200      	movs	r2, #0
 80044ca:	9b02      	ldr	r3, [sp, #8]
 80044cc:	701a      	strb	r2, [r3, #0]
 80044ce:	e7d6      	b.n	800447e <sniprintf+0x16>
 80044d0:	20000180 	.word	0x20000180

080044d4 <__sread>:
 80044d4:	b510      	push	{r4, lr}
 80044d6:	460c      	mov	r4, r1
 80044d8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80044dc:	f000 f8c8 	bl	8004670 <_read_r>
 80044e0:	2800      	cmp	r0, #0
 80044e2:	bfab      	itete	ge
 80044e4:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80044e6:	89a3      	ldrhlt	r3, [r4, #12]
 80044e8:	181b      	addge	r3, r3, r0
 80044ea:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80044ee:	bfac      	ite	ge
 80044f0:	6563      	strge	r3, [r4, #84]	@ 0x54
 80044f2:	81a3      	strhlt	r3, [r4, #12]
 80044f4:	bd10      	pop	{r4, pc}

080044f6 <__swrite>:
 80044f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80044fa:	461f      	mov	r7, r3
 80044fc:	898b      	ldrh	r3, [r1, #12]
 80044fe:	4605      	mov	r5, r0
 8004500:	05db      	lsls	r3, r3, #23
 8004502:	460c      	mov	r4, r1
 8004504:	4616      	mov	r6, r2
 8004506:	d505      	bpl.n	8004514 <__swrite+0x1e>
 8004508:	2302      	movs	r3, #2
 800450a:	2200      	movs	r2, #0
 800450c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004510:	f000 f89c 	bl	800464c <_lseek_r>
 8004514:	89a3      	ldrh	r3, [r4, #12]
 8004516:	4632      	mov	r2, r6
 8004518:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800451c:	81a3      	strh	r3, [r4, #12]
 800451e:	4628      	mov	r0, r5
 8004520:	463b      	mov	r3, r7
 8004522:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004526:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800452a:	f000 b8b3 	b.w	8004694 <_write_r>

0800452e <__sseek>:
 800452e:	b510      	push	{r4, lr}
 8004530:	460c      	mov	r4, r1
 8004532:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004536:	f000 f889 	bl	800464c <_lseek_r>
 800453a:	1c43      	adds	r3, r0, #1
 800453c:	89a3      	ldrh	r3, [r4, #12]
 800453e:	bf15      	itete	ne
 8004540:	6560      	strne	r0, [r4, #84]	@ 0x54
 8004542:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8004546:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800454a:	81a3      	strheq	r3, [r4, #12]
 800454c:	bf18      	it	ne
 800454e:	81a3      	strhne	r3, [r4, #12]
 8004550:	bd10      	pop	{r4, pc}

08004552 <__sclose>:
 8004552:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004556:	f000 b869 	b.w	800462c <_close_r>

0800455a <memset>:
 800455a:	4603      	mov	r3, r0
 800455c:	4402      	add	r2, r0
 800455e:	4293      	cmp	r3, r2
 8004560:	d100      	bne.n	8004564 <memset+0xa>
 8004562:	4770      	bx	lr
 8004564:	f803 1b01 	strb.w	r1, [r3], #1
 8004568:	e7f9      	b.n	800455e <memset+0x4>

0800456a <strchr>:
 800456a:	4603      	mov	r3, r0
 800456c:	b2c9      	uxtb	r1, r1
 800456e:	4618      	mov	r0, r3
 8004570:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004574:	b112      	cbz	r2, 800457c <strchr+0x12>
 8004576:	428a      	cmp	r2, r1
 8004578:	d1f9      	bne.n	800456e <strchr+0x4>
 800457a:	4770      	bx	lr
 800457c:	2900      	cmp	r1, #0
 800457e:	bf18      	it	ne
 8004580:	2000      	movne	r0, #0
 8004582:	4770      	bx	lr

08004584 <strncmp>:
 8004584:	b510      	push	{r4, lr}
 8004586:	b16a      	cbz	r2, 80045a4 <strncmp+0x20>
 8004588:	3901      	subs	r1, #1
 800458a:	1884      	adds	r4, r0, r2
 800458c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004590:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8004594:	429a      	cmp	r2, r3
 8004596:	d103      	bne.n	80045a0 <strncmp+0x1c>
 8004598:	42a0      	cmp	r0, r4
 800459a:	d001      	beq.n	80045a0 <strncmp+0x1c>
 800459c:	2a00      	cmp	r2, #0
 800459e:	d1f5      	bne.n	800458c <strncmp+0x8>
 80045a0:	1ad0      	subs	r0, r2, r3
 80045a2:	bd10      	pop	{r4, pc}
 80045a4:	4610      	mov	r0, r2
 80045a6:	e7fc      	b.n	80045a2 <strncmp+0x1e>

080045a8 <strncpy>:
 80045a8:	4603      	mov	r3, r0
 80045aa:	b510      	push	{r4, lr}
 80045ac:	3901      	subs	r1, #1
 80045ae:	b132      	cbz	r2, 80045be <strncpy+0x16>
 80045b0:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 80045b4:	3a01      	subs	r2, #1
 80045b6:	f803 4b01 	strb.w	r4, [r3], #1
 80045ba:	2c00      	cmp	r4, #0
 80045bc:	d1f7      	bne.n	80045ae <strncpy+0x6>
 80045be:	2100      	movs	r1, #0
 80045c0:	441a      	add	r2, r3
 80045c2:	4293      	cmp	r3, r2
 80045c4:	d100      	bne.n	80045c8 <strncpy+0x20>
 80045c6:	bd10      	pop	{r4, pc}
 80045c8:	f803 1b01 	strb.w	r1, [r3], #1
 80045cc:	e7f9      	b.n	80045c2 <strncpy+0x1a>

080045ce <__strtok_r>:
 80045ce:	b5f0      	push	{r4, r5, r6, r7, lr}
 80045d0:	4604      	mov	r4, r0
 80045d2:	b908      	cbnz	r0, 80045d8 <__strtok_r+0xa>
 80045d4:	6814      	ldr	r4, [r2, #0]
 80045d6:	b144      	cbz	r4, 80045ea <__strtok_r+0x1c>
 80045d8:	460f      	mov	r7, r1
 80045da:	4620      	mov	r0, r4
 80045dc:	f814 5b01 	ldrb.w	r5, [r4], #1
 80045e0:	f817 6b01 	ldrb.w	r6, [r7], #1
 80045e4:	b91e      	cbnz	r6, 80045ee <__strtok_r+0x20>
 80045e6:	b965      	cbnz	r5, 8004602 <__strtok_r+0x34>
 80045e8:	6015      	str	r5, [r2, #0]
 80045ea:	2000      	movs	r0, #0
 80045ec:	e005      	b.n	80045fa <__strtok_r+0x2c>
 80045ee:	42b5      	cmp	r5, r6
 80045f0:	d1f6      	bne.n	80045e0 <__strtok_r+0x12>
 80045f2:	2b00      	cmp	r3, #0
 80045f4:	d1f0      	bne.n	80045d8 <__strtok_r+0xa>
 80045f6:	6014      	str	r4, [r2, #0]
 80045f8:	7003      	strb	r3, [r0, #0]
 80045fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80045fc:	461c      	mov	r4, r3
 80045fe:	e00c      	b.n	800461a <__strtok_r+0x4c>
 8004600:	b91d      	cbnz	r5, 800460a <__strtok_r+0x3c>
 8004602:	460e      	mov	r6, r1
 8004604:	4627      	mov	r7, r4
 8004606:	f814 3b01 	ldrb.w	r3, [r4], #1
 800460a:	f816 5b01 	ldrb.w	r5, [r6], #1
 800460e:	42ab      	cmp	r3, r5
 8004610:	d1f6      	bne.n	8004600 <__strtok_r+0x32>
 8004612:	2b00      	cmp	r3, #0
 8004614:	d0f2      	beq.n	80045fc <__strtok_r+0x2e>
 8004616:	2300      	movs	r3, #0
 8004618:	703b      	strb	r3, [r7, #0]
 800461a:	6014      	str	r4, [r2, #0]
 800461c:	e7ed      	b.n	80045fa <__strtok_r+0x2c>

0800461e <strtok_r>:
 800461e:	2301      	movs	r3, #1
 8004620:	f7ff bfd5 	b.w	80045ce <__strtok_r>

08004624 <_localeconv_r>:
 8004624:	4800      	ldr	r0, [pc, #0]	@ (8004628 <_localeconv_r+0x4>)
 8004626:	4770      	bx	lr
 8004628:	20000104 	.word	0x20000104

0800462c <_close_r>:
 800462c:	b538      	push	{r3, r4, r5, lr}
 800462e:	2300      	movs	r3, #0
 8004630:	4d05      	ldr	r5, [pc, #20]	@ (8004648 <_close_r+0x1c>)
 8004632:	4604      	mov	r4, r0
 8004634:	4608      	mov	r0, r1
 8004636:	602b      	str	r3, [r5, #0]
 8004638:	f7fe fa61 	bl	8002afe <_close>
 800463c:	1c43      	adds	r3, r0, #1
 800463e:	d102      	bne.n	8004646 <_close_r+0x1a>
 8004640:	682b      	ldr	r3, [r5, #0]
 8004642:	b103      	cbz	r3, 8004646 <_close_r+0x1a>
 8004644:	6023      	str	r3, [r4, #0]
 8004646:	bd38      	pop	{r3, r4, r5, pc}
 8004648:	20000540 	.word	0x20000540

0800464c <_lseek_r>:
 800464c:	b538      	push	{r3, r4, r5, lr}
 800464e:	4604      	mov	r4, r0
 8004650:	4608      	mov	r0, r1
 8004652:	4611      	mov	r1, r2
 8004654:	2200      	movs	r2, #0
 8004656:	4d05      	ldr	r5, [pc, #20]	@ (800466c <_lseek_r+0x20>)
 8004658:	602a      	str	r2, [r5, #0]
 800465a:	461a      	mov	r2, r3
 800465c:	f7fe fa73 	bl	8002b46 <_lseek>
 8004660:	1c43      	adds	r3, r0, #1
 8004662:	d102      	bne.n	800466a <_lseek_r+0x1e>
 8004664:	682b      	ldr	r3, [r5, #0]
 8004666:	b103      	cbz	r3, 800466a <_lseek_r+0x1e>
 8004668:	6023      	str	r3, [r4, #0]
 800466a:	bd38      	pop	{r3, r4, r5, pc}
 800466c:	20000540 	.word	0x20000540

08004670 <_read_r>:
 8004670:	b538      	push	{r3, r4, r5, lr}
 8004672:	4604      	mov	r4, r0
 8004674:	4608      	mov	r0, r1
 8004676:	4611      	mov	r1, r2
 8004678:	2200      	movs	r2, #0
 800467a:	4d05      	ldr	r5, [pc, #20]	@ (8004690 <_read_r+0x20>)
 800467c:	602a      	str	r2, [r5, #0]
 800467e:	461a      	mov	r2, r3
 8004680:	f7fe fa04 	bl	8002a8c <_read>
 8004684:	1c43      	adds	r3, r0, #1
 8004686:	d102      	bne.n	800468e <_read_r+0x1e>
 8004688:	682b      	ldr	r3, [r5, #0]
 800468a:	b103      	cbz	r3, 800468e <_read_r+0x1e>
 800468c:	6023      	str	r3, [r4, #0]
 800468e:	bd38      	pop	{r3, r4, r5, pc}
 8004690:	20000540 	.word	0x20000540

08004694 <_write_r>:
 8004694:	b538      	push	{r3, r4, r5, lr}
 8004696:	4604      	mov	r4, r0
 8004698:	4608      	mov	r0, r1
 800469a:	4611      	mov	r1, r2
 800469c:	2200      	movs	r2, #0
 800469e:	4d05      	ldr	r5, [pc, #20]	@ (80046b4 <_write_r+0x20>)
 80046a0:	602a      	str	r2, [r5, #0]
 80046a2:	461a      	mov	r2, r3
 80046a4:	f7fe fa0f 	bl	8002ac6 <_write>
 80046a8:	1c43      	adds	r3, r0, #1
 80046aa:	d102      	bne.n	80046b2 <_write_r+0x1e>
 80046ac:	682b      	ldr	r3, [r5, #0]
 80046ae:	b103      	cbz	r3, 80046b2 <_write_r+0x1e>
 80046b0:	6023      	str	r3, [r4, #0]
 80046b2:	bd38      	pop	{r3, r4, r5, pc}
 80046b4:	20000540 	.word	0x20000540

080046b8 <__errno>:
 80046b8:	4b01      	ldr	r3, [pc, #4]	@ (80046c0 <__errno+0x8>)
 80046ba:	6818      	ldr	r0, [r3, #0]
 80046bc:	4770      	bx	lr
 80046be:	bf00      	nop
 80046c0:	20000180 	.word	0x20000180

080046c4 <__libc_init_array>:
 80046c4:	b570      	push	{r4, r5, r6, lr}
 80046c6:	2600      	movs	r6, #0
 80046c8:	4d0c      	ldr	r5, [pc, #48]	@ (80046fc <__libc_init_array+0x38>)
 80046ca:	4c0d      	ldr	r4, [pc, #52]	@ (8004700 <__libc_init_array+0x3c>)
 80046cc:	1b64      	subs	r4, r4, r5
 80046ce:	10a4      	asrs	r4, r4, #2
 80046d0:	42a6      	cmp	r6, r4
 80046d2:	d109      	bne.n	80046e8 <__libc_init_array+0x24>
 80046d4:	f002 fcd8 	bl	8007088 <_init>
 80046d8:	2600      	movs	r6, #0
 80046da:	4d0a      	ldr	r5, [pc, #40]	@ (8004704 <__libc_init_array+0x40>)
 80046dc:	4c0a      	ldr	r4, [pc, #40]	@ (8004708 <__libc_init_array+0x44>)
 80046de:	1b64      	subs	r4, r4, r5
 80046e0:	10a4      	asrs	r4, r4, #2
 80046e2:	42a6      	cmp	r6, r4
 80046e4:	d105      	bne.n	80046f2 <__libc_init_array+0x2e>
 80046e6:	bd70      	pop	{r4, r5, r6, pc}
 80046e8:	f855 3b04 	ldr.w	r3, [r5], #4
 80046ec:	4798      	blx	r3
 80046ee:	3601      	adds	r6, #1
 80046f0:	e7ee      	b.n	80046d0 <__libc_init_array+0xc>
 80046f2:	f855 3b04 	ldr.w	r3, [r5], #4
 80046f6:	4798      	blx	r3
 80046f8:	3601      	adds	r6, #1
 80046fa:	e7f2      	b.n	80046e2 <__libc_init_array+0x1e>
 80046fc:	08007828 	.word	0x08007828
 8004700:	08007828 	.word	0x08007828
 8004704:	08007828 	.word	0x08007828
 8004708:	0800782c 	.word	0x0800782c

0800470c <__retarget_lock_init_recursive>:
 800470c:	4770      	bx	lr

0800470e <__retarget_lock_acquire_recursive>:
 800470e:	4770      	bx	lr

08004710 <__retarget_lock_release_recursive>:
 8004710:	4770      	bx	lr

08004712 <memchr>:
 8004712:	4603      	mov	r3, r0
 8004714:	b510      	push	{r4, lr}
 8004716:	b2c9      	uxtb	r1, r1
 8004718:	4402      	add	r2, r0
 800471a:	4293      	cmp	r3, r2
 800471c:	4618      	mov	r0, r3
 800471e:	d101      	bne.n	8004724 <memchr+0x12>
 8004720:	2000      	movs	r0, #0
 8004722:	e003      	b.n	800472c <memchr+0x1a>
 8004724:	7804      	ldrb	r4, [r0, #0]
 8004726:	3301      	adds	r3, #1
 8004728:	428c      	cmp	r4, r1
 800472a:	d1f6      	bne.n	800471a <memchr+0x8>
 800472c:	bd10      	pop	{r4, pc}

0800472e <memcpy>:
 800472e:	440a      	add	r2, r1
 8004730:	4291      	cmp	r1, r2
 8004732:	f100 33ff 	add.w	r3, r0, #4294967295
 8004736:	d100      	bne.n	800473a <memcpy+0xc>
 8004738:	4770      	bx	lr
 800473a:	b510      	push	{r4, lr}
 800473c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004740:	4291      	cmp	r1, r2
 8004742:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004746:	d1f9      	bne.n	800473c <memcpy+0xe>
 8004748:	bd10      	pop	{r4, pc}
	...

0800474c <nan>:
 800474c:	2000      	movs	r0, #0
 800474e:	4901      	ldr	r1, [pc, #4]	@ (8004754 <nan+0x8>)
 8004750:	4770      	bx	lr
 8004752:	bf00      	nop
 8004754:	7ff80000 	.word	0x7ff80000

08004758 <quorem>:
 8004758:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800475c:	6903      	ldr	r3, [r0, #16]
 800475e:	690c      	ldr	r4, [r1, #16]
 8004760:	4607      	mov	r7, r0
 8004762:	42a3      	cmp	r3, r4
 8004764:	db7e      	blt.n	8004864 <quorem+0x10c>
 8004766:	3c01      	subs	r4, #1
 8004768:	00a3      	lsls	r3, r4, #2
 800476a:	f100 0514 	add.w	r5, r0, #20
 800476e:	f101 0814 	add.w	r8, r1, #20
 8004772:	9300      	str	r3, [sp, #0]
 8004774:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8004778:	9301      	str	r3, [sp, #4]
 800477a:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800477e:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8004782:	3301      	adds	r3, #1
 8004784:	429a      	cmp	r2, r3
 8004786:	fbb2 f6f3 	udiv	r6, r2, r3
 800478a:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800478e:	d32e      	bcc.n	80047ee <quorem+0x96>
 8004790:	f04f 0a00 	mov.w	sl, #0
 8004794:	46c4      	mov	ip, r8
 8004796:	46ae      	mov	lr, r5
 8004798:	46d3      	mov	fp, sl
 800479a:	f85c 3b04 	ldr.w	r3, [ip], #4
 800479e:	b298      	uxth	r0, r3
 80047a0:	fb06 a000 	mla	r0, r6, r0, sl
 80047a4:	0c1b      	lsrs	r3, r3, #16
 80047a6:	0c02      	lsrs	r2, r0, #16
 80047a8:	fb06 2303 	mla	r3, r6, r3, r2
 80047ac:	f8de 2000 	ldr.w	r2, [lr]
 80047b0:	b280      	uxth	r0, r0
 80047b2:	b292      	uxth	r2, r2
 80047b4:	1a12      	subs	r2, r2, r0
 80047b6:	445a      	add	r2, fp
 80047b8:	f8de 0000 	ldr.w	r0, [lr]
 80047bc:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80047c0:	b29b      	uxth	r3, r3
 80047c2:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 80047c6:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 80047ca:	b292      	uxth	r2, r2
 80047cc:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 80047d0:	45e1      	cmp	r9, ip
 80047d2:	ea4f 4b23 	mov.w	fp, r3, asr #16
 80047d6:	f84e 2b04 	str.w	r2, [lr], #4
 80047da:	d2de      	bcs.n	800479a <quorem+0x42>
 80047dc:	9b00      	ldr	r3, [sp, #0]
 80047de:	58eb      	ldr	r3, [r5, r3]
 80047e0:	b92b      	cbnz	r3, 80047ee <quorem+0x96>
 80047e2:	9b01      	ldr	r3, [sp, #4]
 80047e4:	3b04      	subs	r3, #4
 80047e6:	429d      	cmp	r5, r3
 80047e8:	461a      	mov	r2, r3
 80047ea:	d32f      	bcc.n	800484c <quorem+0xf4>
 80047ec:	613c      	str	r4, [r7, #16]
 80047ee:	4638      	mov	r0, r7
 80047f0:	f001 fd14 	bl	800621c <__mcmp>
 80047f4:	2800      	cmp	r0, #0
 80047f6:	db25      	blt.n	8004844 <quorem+0xec>
 80047f8:	4629      	mov	r1, r5
 80047fa:	2000      	movs	r0, #0
 80047fc:	f858 2b04 	ldr.w	r2, [r8], #4
 8004800:	f8d1 c000 	ldr.w	ip, [r1]
 8004804:	fa1f fe82 	uxth.w	lr, r2
 8004808:	fa1f f38c 	uxth.w	r3, ip
 800480c:	eba3 030e 	sub.w	r3, r3, lr
 8004810:	4403      	add	r3, r0
 8004812:	0c12      	lsrs	r2, r2, #16
 8004814:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8004818:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 800481c:	b29b      	uxth	r3, r3
 800481e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8004822:	45c1      	cmp	r9, r8
 8004824:	ea4f 4022 	mov.w	r0, r2, asr #16
 8004828:	f841 3b04 	str.w	r3, [r1], #4
 800482c:	d2e6      	bcs.n	80047fc <quorem+0xa4>
 800482e:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8004832:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8004836:	b922      	cbnz	r2, 8004842 <quorem+0xea>
 8004838:	3b04      	subs	r3, #4
 800483a:	429d      	cmp	r5, r3
 800483c:	461a      	mov	r2, r3
 800483e:	d30b      	bcc.n	8004858 <quorem+0x100>
 8004840:	613c      	str	r4, [r7, #16]
 8004842:	3601      	adds	r6, #1
 8004844:	4630      	mov	r0, r6
 8004846:	b003      	add	sp, #12
 8004848:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800484c:	6812      	ldr	r2, [r2, #0]
 800484e:	3b04      	subs	r3, #4
 8004850:	2a00      	cmp	r2, #0
 8004852:	d1cb      	bne.n	80047ec <quorem+0x94>
 8004854:	3c01      	subs	r4, #1
 8004856:	e7c6      	b.n	80047e6 <quorem+0x8e>
 8004858:	6812      	ldr	r2, [r2, #0]
 800485a:	3b04      	subs	r3, #4
 800485c:	2a00      	cmp	r2, #0
 800485e:	d1ef      	bne.n	8004840 <quorem+0xe8>
 8004860:	3c01      	subs	r4, #1
 8004862:	e7ea      	b.n	800483a <quorem+0xe2>
 8004864:	2000      	movs	r0, #0
 8004866:	e7ee      	b.n	8004846 <quorem+0xee>

08004868 <_dtoa_r>:
 8004868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800486c:	4614      	mov	r4, r2
 800486e:	461d      	mov	r5, r3
 8004870:	69c7      	ldr	r7, [r0, #28]
 8004872:	b097      	sub	sp, #92	@ 0x5c
 8004874:	4681      	mov	r9, r0
 8004876:	e9cd 4506 	strd	r4, r5, [sp, #24]
 800487a:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 800487c:	b97f      	cbnz	r7, 800489e <_dtoa_r+0x36>
 800487e:	2010      	movs	r0, #16
 8004880:	f001 f948 	bl	8005b14 <malloc>
 8004884:	4602      	mov	r2, r0
 8004886:	f8c9 001c 	str.w	r0, [r9, #28]
 800488a:	b920      	cbnz	r0, 8004896 <_dtoa_r+0x2e>
 800488c:	21ef      	movs	r1, #239	@ 0xef
 800488e:	4bac      	ldr	r3, [pc, #688]	@ (8004b40 <_dtoa_r+0x2d8>)
 8004890:	48ac      	ldr	r0, [pc, #688]	@ (8004b44 <_dtoa_r+0x2dc>)
 8004892:	f002 f8dd 	bl	8006a50 <__assert_func>
 8004896:	e9c0 7701 	strd	r7, r7, [r0, #4]
 800489a:	6007      	str	r7, [r0, #0]
 800489c:	60c7      	str	r7, [r0, #12]
 800489e:	f8d9 301c 	ldr.w	r3, [r9, #28]
 80048a2:	6819      	ldr	r1, [r3, #0]
 80048a4:	b159      	cbz	r1, 80048be <_dtoa_r+0x56>
 80048a6:	685a      	ldr	r2, [r3, #4]
 80048a8:	2301      	movs	r3, #1
 80048aa:	4093      	lsls	r3, r2
 80048ac:	604a      	str	r2, [r1, #4]
 80048ae:	608b      	str	r3, [r1, #8]
 80048b0:	4648      	mov	r0, r9
 80048b2:	f001 fa37 	bl	8005d24 <_Bfree>
 80048b6:	2200      	movs	r2, #0
 80048b8:	f8d9 301c 	ldr.w	r3, [r9, #28]
 80048bc:	601a      	str	r2, [r3, #0]
 80048be:	1e2b      	subs	r3, r5, #0
 80048c0:	bfaf      	iteee	ge
 80048c2:	2300      	movge	r3, #0
 80048c4:	2201      	movlt	r2, #1
 80048c6:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 80048ca:	9307      	strlt	r3, [sp, #28]
 80048cc:	bfa8      	it	ge
 80048ce:	6033      	strge	r3, [r6, #0]
 80048d0:	f8dd 801c 	ldr.w	r8, [sp, #28]
 80048d4:	4b9c      	ldr	r3, [pc, #624]	@ (8004b48 <_dtoa_r+0x2e0>)
 80048d6:	bfb8      	it	lt
 80048d8:	6032      	strlt	r2, [r6, #0]
 80048da:	ea33 0308 	bics.w	r3, r3, r8
 80048de:	d112      	bne.n	8004906 <_dtoa_r+0x9e>
 80048e0:	f242 730f 	movw	r3, #9999	@ 0x270f
 80048e4:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80048e6:	6013      	str	r3, [r2, #0]
 80048e8:	f3c8 0313 	ubfx	r3, r8, #0, #20
 80048ec:	4323      	orrs	r3, r4
 80048ee:	f000 855e 	beq.w	80053ae <_dtoa_r+0xb46>
 80048f2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80048f4:	f8df a254 	ldr.w	sl, [pc, #596]	@ 8004b4c <_dtoa_r+0x2e4>
 80048f8:	2b00      	cmp	r3, #0
 80048fa:	f000 8560 	beq.w	80053be <_dtoa_r+0xb56>
 80048fe:	f10a 0303 	add.w	r3, sl, #3
 8004902:	f000 bd5a 	b.w	80053ba <_dtoa_r+0xb52>
 8004906:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800490a:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 800490e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8004912:	2200      	movs	r2, #0
 8004914:	2300      	movs	r3, #0
 8004916:	f7fc f847 	bl	80009a8 <__aeabi_dcmpeq>
 800491a:	4607      	mov	r7, r0
 800491c:	b158      	cbz	r0, 8004936 <_dtoa_r+0xce>
 800491e:	2301      	movs	r3, #1
 8004920:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8004922:	6013      	str	r3, [r2, #0]
 8004924:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8004926:	b113      	cbz	r3, 800492e <_dtoa_r+0xc6>
 8004928:	4b89      	ldr	r3, [pc, #548]	@ (8004b50 <_dtoa_r+0x2e8>)
 800492a:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 800492c:	6013      	str	r3, [r2, #0]
 800492e:	f8df a224 	ldr.w	sl, [pc, #548]	@ 8004b54 <_dtoa_r+0x2ec>
 8004932:	f000 bd44 	b.w	80053be <_dtoa_r+0xb56>
 8004936:	ab14      	add	r3, sp, #80	@ 0x50
 8004938:	9301      	str	r3, [sp, #4]
 800493a:	ab15      	add	r3, sp, #84	@ 0x54
 800493c:	9300      	str	r3, [sp, #0]
 800493e:	4648      	mov	r0, r9
 8004940:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 8004944:	f001 fd82 	bl	800644c <__d2b>
 8004948:	f3c8 560a 	ubfx	r6, r8, #20, #11
 800494c:	9003      	str	r0, [sp, #12]
 800494e:	2e00      	cmp	r6, #0
 8004950:	d078      	beq.n	8004a44 <_dtoa_r+0x1dc>
 8004952:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8004956:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8004958:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 800495c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8004960:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8004964:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8004968:	9712      	str	r7, [sp, #72]	@ 0x48
 800496a:	4619      	mov	r1, r3
 800496c:	2200      	movs	r2, #0
 800496e:	4b7a      	ldr	r3, [pc, #488]	@ (8004b58 <_dtoa_r+0x2f0>)
 8004970:	f7fb fbfa 	bl	8000168 <__aeabi_dsub>
 8004974:	a36c      	add	r3, pc, #432	@ (adr r3, 8004b28 <_dtoa_r+0x2c0>)
 8004976:	e9d3 2300 	ldrd	r2, r3, [r3]
 800497a:	f7fb fdad 	bl	80004d8 <__aeabi_dmul>
 800497e:	a36c      	add	r3, pc, #432	@ (adr r3, 8004b30 <_dtoa_r+0x2c8>)
 8004980:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004984:	f7fb fbf2 	bl	800016c <__adddf3>
 8004988:	4604      	mov	r4, r0
 800498a:	4630      	mov	r0, r6
 800498c:	460d      	mov	r5, r1
 800498e:	f7fb fd39 	bl	8000404 <__aeabi_i2d>
 8004992:	a369      	add	r3, pc, #420	@ (adr r3, 8004b38 <_dtoa_r+0x2d0>)
 8004994:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004998:	f7fb fd9e 	bl	80004d8 <__aeabi_dmul>
 800499c:	4602      	mov	r2, r0
 800499e:	460b      	mov	r3, r1
 80049a0:	4620      	mov	r0, r4
 80049a2:	4629      	mov	r1, r5
 80049a4:	f7fb fbe2 	bl	800016c <__adddf3>
 80049a8:	4604      	mov	r4, r0
 80049aa:	460d      	mov	r5, r1
 80049ac:	f7fc f844 	bl	8000a38 <__aeabi_d2iz>
 80049b0:	2200      	movs	r2, #0
 80049b2:	4607      	mov	r7, r0
 80049b4:	2300      	movs	r3, #0
 80049b6:	4620      	mov	r0, r4
 80049b8:	4629      	mov	r1, r5
 80049ba:	f7fb ffff 	bl	80009bc <__aeabi_dcmplt>
 80049be:	b140      	cbz	r0, 80049d2 <_dtoa_r+0x16a>
 80049c0:	4638      	mov	r0, r7
 80049c2:	f7fb fd1f 	bl	8000404 <__aeabi_i2d>
 80049c6:	4622      	mov	r2, r4
 80049c8:	462b      	mov	r3, r5
 80049ca:	f7fb ffed 	bl	80009a8 <__aeabi_dcmpeq>
 80049ce:	b900      	cbnz	r0, 80049d2 <_dtoa_r+0x16a>
 80049d0:	3f01      	subs	r7, #1
 80049d2:	2f16      	cmp	r7, #22
 80049d4:	d854      	bhi.n	8004a80 <_dtoa_r+0x218>
 80049d6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80049da:	4b60      	ldr	r3, [pc, #384]	@ (8004b5c <_dtoa_r+0x2f4>)
 80049dc:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80049e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80049e4:	f7fb ffea 	bl	80009bc <__aeabi_dcmplt>
 80049e8:	2800      	cmp	r0, #0
 80049ea:	d04b      	beq.n	8004a84 <_dtoa_r+0x21c>
 80049ec:	2300      	movs	r3, #0
 80049ee:	3f01      	subs	r7, #1
 80049f0:	930f      	str	r3, [sp, #60]	@ 0x3c
 80049f2:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80049f4:	1b9b      	subs	r3, r3, r6
 80049f6:	1e5a      	subs	r2, r3, #1
 80049f8:	bf49      	itett	mi
 80049fa:	f1c3 0301 	rsbmi	r3, r3, #1
 80049fe:	2300      	movpl	r3, #0
 8004a00:	9304      	strmi	r3, [sp, #16]
 8004a02:	2300      	movmi	r3, #0
 8004a04:	9209      	str	r2, [sp, #36]	@ 0x24
 8004a06:	bf54      	ite	pl
 8004a08:	9304      	strpl	r3, [sp, #16]
 8004a0a:	9309      	strmi	r3, [sp, #36]	@ 0x24
 8004a0c:	2f00      	cmp	r7, #0
 8004a0e:	db3b      	blt.n	8004a88 <_dtoa_r+0x220>
 8004a10:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004a12:	970e      	str	r7, [sp, #56]	@ 0x38
 8004a14:	443b      	add	r3, r7
 8004a16:	9309      	str	r3, [sp, #36]	@ 0x24
 8004a18:	2300      	movs	r3, #0
 8004a1a:	930a      	str	r3, [sp, #40]	@ 0x28
 8004a1c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8004a1e:	2b09      	cmp	r3, #9
 8004a20:	d865      	bhi.n	8004aee <_dtoa_r+0x286>
 8004a22:	2b05      	cmp	r3, #5
 8004a24:	bfc4      	itt	gt
 8004a26:	3b04      	subgt	r3, #4
 8004a28:	9320      	strgt	r3, [sp, #128]	@ 0x80
 8004a2a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8004a2c:	bfc8      	it	gt
 8004a2e:	2400      	movgt	r4, #0
 8004a30:	f1a3 0302 	sub.w	r3, r3, #2
 8004a34:	bfd8      	it	le
 8004a36:	2401      	movle	r4, #1
 8004a38:	2b03      	cmp	r3, #3
 8004a3a:	d864      	bhi.n	8004b06 <_dtoa_r+0x29e>
 8004a3c:	e8df f003 	tbb	[pc, r3]
 8004a40:	2c385553 	.word	0x2c385553
 8004a44:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 8004a48:	441e      	add	r6, r3
 8004a4a:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8004a4e:	2b20      	cmp	r3, #32
 8004a50:	bfc1      	itttt	gt
 8004a52:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8004a56:	fa08 f803 	lslgt.w	r8, r8, r3
 8004a5a:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8004a5e:	fa24 f303 	lsrgt.w	r3, r4, r3
 8004a62:	bfd6      	itet	le
 8004a64:	f1c3 0320 	rsble	r3, r3, #32
 8004a68:	ea48 0003 	orrgt.w	r0, r8, r3
 8004a6c:	fa04 f003 	lslle.w	r0, r4, r3
 8004a70:	f7fb fcb8 	bl	80003e4 <__aeabi_ui2d>
 8004a74:	2201      	movs	r2, #1
 8004a76:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8004a7a:	3e01      	subs	r6, #1
 8004a7c:	9212      	str	r2, [sp, #72]	@ 0x48
 8004a7e:	e774      	b.n	800496a <_dtoa_r+0x102>
 8004a80:	2301      	movs	r3, #1
 8004a82:	e7b5      	b.n	80049f0 <_dtoa_r+0x188>
 8004a84:	900f      	str	r0, [sp, #60]	@ 0x3c
 8004a86:	e7b4      	b.n	80049f2 <_dtoa_r+0x18a>
 8004a88:	9b04      	ldr	r3, [sp, #16]
 8004a8a:	1bdb      	subs	r3, r3, r7
 8004a8c:	9304      	str	r3, [sp, #16]
 8004a8e:	427b      	negs	r3, r7
 8004a90:	930a      	str	r3, [sp, #40]	@ 0x28
 8004a92:	2300      	movs	r3, #0
 8004a94:	930e      	str	r3, [sp, #56]	@ 0x38
 8004a96:	e7c1      	b.n	8004a1c <_dtoa_r+0x1b4>
 8004a98:	2301      	movs	r3, #1
 8004a9a:	930b      	str	r3, [sp, #44]	@ 0x2c
 8004a9c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8004a9e:	eb07 0b03 	add.w	fp, r7, r3
 8004aa2:	f10b 0301 	add.w	r3, fp, #1
 8004aa6:	2b01      	cmp	r3, #1
 8004aa8:	9308      	str	r3, [sp, #32]
 8004aaa:	bfb8      	it	lt
 8004aac:	2301      	movlt	r3, #1
 8004aae:	e006      	b.n	8004abe <_dtoa_r+0x256>
 8004ab0:	2301      	movs	r3, #1
 8004ab2:	930b      	str	r3, [sp, #44]	@ 0x2c
 8004ab4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8004ab6:	2b00      	cmp	r3, #0
 8004ab8:	dd28      	ble.n	8004b0c <_dtoa_r+0x2a4>
 8004aba:	469b      	mov	fp, r3
 8004abc:	9308      	str	r3, [sp, #32]
 8004abe:	2100      	movs	r1, #0
 8004ac0:	2204      	movs	r2, #4
 8004ac2:	f8d9 001c 	ldr.w	r0, [r9, #28]
 8004ac6:	f102 0514 	add.w	r5, r2, #20
 8004aca:	429d      	cmp	r5, r3
 8004acc:	d926      	bls.n	8004b1c <_dtoa_r+0x2b4>
 8004ace:	6041      	str	r1, [r0, #4]
 8004ad0:	4648      	mov	r0, r9
 8004ad2:	f001 f8e7 	bl	8005ca4 <_Balloc>
 8004ad6:	4682      	mov	sl, r0
 8004ad8:	2800      	cmp	r0, #0
 8004ada:	d143      	bne.n	8004b64 <_dtoa_r+0x2fc>
 8004adc:	4602      	mov	r2, r0
 8004ade:	f240 11af 	movw	r1, #431	@ 0x1af
 8004ae2:	4b1f      	ldr	r3, [pc, #124]	@ (8004b60 <_dtoa_r+0x2f8>)
 8004ae4:	e6d4      	b.n	8004890 <_dtoa_r+0x28>
 8004ae6:	2300      	movs	r3, #0
 8004ae8:	e7e3      	b.n	8004ab2 <_dtoa_r+0x24a>
 8004aea:	2300      	movs	r3, #0
 8004aec:	e7d5      	b.n	8004a9a <_dtoa_r+0x232>
 8004aee:	2401      	movs	r4, #1
 8004af0:	2300      	movs	r3, #0
 8004af2:	940b      	str	r4, [sp, #44]	@ 0x2c
 8004af4:	9320      	str	r3, [sp, #128]	@ 0x80
 8004af6:	f04f 3bff 	mov.w	fp, #4294967295
 8004afa:	2200      	movs	r2, #0
 8004afc:	2312      	movs	r3, #18
 8004afe:	f8cd b020 	str.w	fp, [sp, #32]
 8004b02:	9221      	str	r2, [sp, #132]	@ 0x84
 8004b04:	e7db      	b.n	8004abe <_dtoa_r+0x256>
 8004b06:	2301      	movs	r3, #1
 8004b08:	930b      	str	r3, [sp, #44]	@ 0x2c
 8004b0a:	e7f4      	b.n	8004af6 <_dtoa_r+0x28e>
 8004b0c:	f04f 0b01 	mov.w	fp, #1
 8004b10:	465b      	mov	r3, fp
 8004b12:	f8cd b020 	str.w	fp, [sp, #32]
 8004b16:	f8cd b084 	str.w	fp, [sp, #132]	@ 0x84
 8004b1a:	e7d0      	b.n	8004abe <_dtoa_r+0x256>
 8004b1c:	3101      	adds	r1, #1
 8004b1e:	0052      	lsls	r2, r2, #1
 8004b20:	e7d1      	b.n	8004ac6 <_dtoa_r+0x25e>
 8004b22:	bf00      	nop
 8004b24:	f3af 8000 	nop.w
 8004b28:	636f4361 	.word	0x636f4361
 8004b2c:	3fd287a7 	.word	0x3fd287a7
 8004b30:	8b60c8b3 	.word	0x8b60c8b3
 8004b34:	3fc68a28 	.word	0x3fc68a28
 8004b38:	509f79fb 	.word	0x509f79fb
 8004b3c:	3fd34413 	.word	0x3fd34413
 8004b40:	08007443 	.word	0x08007443
 8004b44:	0800745a 	.word	0x0800745a
 8004b48:	7ff00000 	.word	0x7ff00000
 8004b4c:	0800743f 	.word	0x0800743f
 8004b50:	0800740b 	.word	0x0800740b
 8004b54:	0800740a 	.word	0x0800740a
 8004b58:	3ff80000 	.word	0x3ff80000
 8004b5c:	08007758 	.word	0x08007758
 8004b60:	080074b2 	.word	0x080074b2
 8004b64:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8004b68:	6018      	str	r0, [r3, #0]
 8004b6a:	9b08      	ldr	r3, [sp, #32]
 8004b6c:	2b0e      	cmp	r3, #14
 8004b6e:	f200 80a1 	bhi.w	8004cb4 <_dtoa_r+0x44c>
 8004b72:	2c00      	cmp	r4, #0
 8004b74:	f000 809e 	beq.w	8004cb4 <_dtoa_r+0x44c>
 8004b78:	2f00      	cmp	r7, #0
 8004b7a:	dd33      	ble.n	8004be4 <_dtoa_r+0x37c>
 8004b7c:	4b9c      	ldr	r3, [pc, #624]	@ (8004df0 <_dtoa_r+0x588>)
 8004b7e:	f007 020f 	and.w	r2, r7, #15
 8004b82:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8004b86:	05f8      	lsls	r0, r7, #23
 8004b88:	e9d3 3400 	ldrd	r3, r4, [r3]
 8004b8c:	e9cd 3410 	strd	r3, r4, [sp, #64]	@ 0x40
 8004b90:	ea4f 1427 	mov.w	r4, r7, asr #4
 8004b94:	d516      	bpl.n	8004bc4 <_dtoa_r+0x35c>
 8004b96:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8004b9a:	4b96      	ldr	r3, [pc, #600]	@ (8004df4 <_dtoa_r+0x58c>)
 8004b9c:	2603      	movs	r6, #3
 8004b9e:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8004ba2:	f7fb fdc3 	bl	800072c <__aeabi_ddiv>
 8004ba6:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8004baa:	f004 040f 	and.w	r4, r4, #15
 8004bae:	4d91      	ldr	r5, [pc, #580]	@ (8004df4 <_dtoa_r+0x58c>)
 8004bb0:	b954      	cbnz	r4, 8004bc8 <_dtoa_r+0x360>
 8004bb2:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8004bb6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8004bba:	f7fb fdb7 	bl	800072c <__aeabi_ddiv>
 8004bbe:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8004bc2:	e028      	b.n	8004c16 <_dtoa_r+0x3ae>
 8004bc4:	2602      	movs	r6, #2
 8004bc6:	e7f2      	b.n	8004bae <_dtoa_r+0x346>
 8004bc8:	07e1      	lsls	r1, r4, #31
 8004bca:	d508      	bpl.n	8004bde <_dtoa_r+0x376>
 8004bcc:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8004bd0:	e9d5 2300 	ldrd	r2, r3, [r5]
 8004bd4:	f7fb fc80 	bl	80004d8 <__aeabi_dmul>
 8004bd8:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8004bdc:	3601      	adds	r6, #1
 8004bde:	1064      	asrs	r4, r4, #1
 8004be0:	3508      	adds	r5, #8
 8004be2:	e7e5      	b.n	8004bb0 <_dtoa_r+0x348>
 8004be4:	f000 80af 	beq.w	8004d46 <_dtoa_r+0x4de>
 8004be8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8004bec:	427c      	negs	r4, r7
 8004bee:	4b80      	ldr	r3, [pc, #512]	@ (8004df0 <_dtoa_r+0x588>)
 8004bf0:	f004 020f 	and.w	r2, r4, #15
 8004bf4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8004bf8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004bfc:	f7fb fc6c 	bl	80004d8 <__aeabi_dmul>
 8004c00:	2602      	movs	r6, #2
 8004c02:	2300      	movs	r3, #0
 8004c04:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8004c08:	4d7a      	ldr	r5, [pc, #488]	@ (8004df4 <_dtoa_r+0x58c>)
 8004c0a:	1124      	asrs	r4, r4, #4
 8004c0c:	2c00      	cmp	r4, #0
 8004c0e:	f040 808f 	bne.w	8004d30 <_dtoa_r+0x4c8>
 8004c12:	2b00      	cmp	r3, #0
 8004c14:	d1d3      	bne.n	8004bbe <_dtoa_r+0x356>
 8004c16:	e9dd 4506 	ldrd	r4, r5, [sp, #24]
 8004c1a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004c1c:	2b00      	cmp	r3, #0
 8004c1e:	f000 8094 	beq.w	8004d4a <_dtoa_r+0x4e2>
 8004c22:	2200      	movs	r2, #0
 8004c24:	4620      	mov	r0, r4
 8004c26:	4629      	mov	r1, r5
 8004c28:	4b73      	ldr	r3, [pc, #460]	@ (8004df8 <_dtoa_r+0x590>)
 8004c2a:	f7fb fec7 	bl	80009bc <__aeabi_dcmplt>
 8004c2e:	2800      	cmp	r0, #0
 8004c30:	f000 808b 	beq.w	8004d4a <_dtoa_r+0x4e2>
 8004c34:	9b08      	ldr	r3, [sp, #32]
 8004c36:	2b00      	cmp	r3, #0
 8004c38:	f000 8087 	beq.w	8004d4a <_dtoa_r+0x4e2>
 8004c3c:	f1bb 0f00 	cmp.w	fp, #0
 8004c40:	dd34      	ble.n	8004cac <_dtoa_r+0x444>
 8004c42:	4620      	mov	r0, r4
 8004c44:	2200      	movs	r2, #0
 8004c46:	4629      	mov	r1, r5
 8004c48:	4b6c      	ldr	r3, [pc, #432]	@ (8004dfc <_dtoa_r+0x594>)
 8004c4a:	f7fb fc45 	bl	80004d8 <__aeabi_dmul>
 8004c4e:	465c      	mov	r4, fp
 8004c50:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8004c54:	f107 38ff 	add.w	r8, r7, #4294967295
 8004c58:	3601      	adds	r6, #1
 8004c5a:	4630      	mov	r0, r6
 8004c5c:	f7fb fbd2 	bl	8000404 <__aeabi_i2d>
 8004c60:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004c64:	f7fb fc38 	bl	80004d8 <__aeabi_dmul>
 8004c68:	2200      	movs	r2, #0
 8004c6a:	4b65      	ldr	r3, [pc, #404]	@ (8004e00 <_dtoa_r+0x598>)
 8004c6c:	f7fb fa7e 	bl	800016c <__adddf3>
 8004c70:	4605      	mov	r5, r0
 8004c72:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8004c76:	2c00      	cmp	r4, #0
 8004c78:	d16a      	bne.n	8004d50 <_dtoa_r+0x4e8>
 8004c7a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8004c7e:	2200      	movs	r2, #0
 8004c80:	4b60      	ldr	r3, [pc, #384]	@ (8004e04 <_dtoa_r+0x59c>)
 8004c82:	f7fb fa71 	bl	8000168 <__aeabi_dsub>
 8004c86:	4602      	mov	r2, r0
 8004c88:	460b      	mov	r3, r1
 8004c8a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8004c8e:	462a      	mov	r2, r5
 8004c90:	4633      	mov	r3, r6
 8004c92:	f7fb feb1 	bl	80009f8 <__aeabi_dcmpgt>
 8004c96:	2800      	cmp	r0, #0
 8004c98:	f040 8298 	bne.w	80051cc <_dtoa_r+0x964>
 8004c9c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8004ca0:	462a      	mov	r2, r5
 8004ca2:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8004ca6:	f7fb fe89 	bl	80009bc <__aeabi_dcmplt>
 8004caa:	bb38      	cbnz	r0, 8004cfc <_dtoa_r+0x494>
 8004cac:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8004cb0:	e9cd 3406 	strd	r3, r4, [sp, #24]
 8004cb4:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8004cb6:	2b00      	cmp	r3, #0
 8004cb8:	f2c0 8157 	blt.w	8004f6a <_dtoa_r+0x702>
 8004cbc:	2f0e      	cmp	r7, #14
 8004cbe:	f300 8154 	bgt.w	8004f6a <_dtoa_r+0x702>
 8004cc2:	4b4b      	ldr	r3, [pc, #300]	@ (8004df0 <_dtoa_r+0x588>)
 8004cc4:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8004cc8:	e9d3 3400 	ldrd	r3, r4, [r3]
 8004ccc:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8004cd0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8004cd2:	2b00      	cmp	r3, #0
 8004cd4:	f280 80e5 	bge.w	8004ea2 <_dtoa_r+0x63a>
 8004cd8:	9b08      	ldr	r3, [sp, #32]
 8004cda:	2b00      	cmp	r3, #0
 8004cdc:	f300 80e1 	bgt.w	8004ea2 <_dtoa_r+0x63a>
 8004ce0:	d10c      	bne.n	8004cfc <_dtoa_r+0x494>
 8004ce2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004ce6:	2200      	movs	r2, #0
 8004ce8:	4b46      	ldr	r3, [pc, #280]	@ (8004e04 <_dtoa_r+0x59c>)
 8004cea:	f7fb fbf5 	bl	80004d8 <__aeabi_dmul>
 8004cee:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004cf2:	f7fb fe77 	bl	80009e4 <__aeabi_dcmpge>
 8004cf6:	2800      	cmp	r0, #0
 8004cf8:	f000 8266 	beq.w	80051c8 <_dtoa_r+0x960>
 8004cfc:	2400      	movs	r4, #0
 8004cfe:	4625      	mov	r5, r4
 8004d00:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8004d02:	4656      	mov	r6, sl
 8004d04:	ea6f 0803 	mvn.w	r8, r3
 8004d08:	2700      	movs	r7, #0
 8004d0a:	4621      	mov	r1, r4
 8004d0c:	4648      	mov	r0, r9
 8004d0e:	f001 f809 	bl	8005d24 <_Bfree>
 8004d12:	2d00      	cmp	r5, #0
 8004d14:	f000 80bd 	beq.w	8004e92 <_dtoa_r+0x62a>
 8004d18:	b12f      	cbz	r7, 8004d26 <_dtoa_r+0x4be>
 8004d1a:	42af      	cmp	r7, r5
 8004d1c:	d003      	beq.n	8004d26 <_dtoa_r+0x4be>
 8004d1e:	4639      	mov	r1, r7
 8004d20:	4648      	mov	r0, r9
 8004d22:	f000 ffff 	bl	8005d24 <_Bfree>
 8004d26:	4629      	mov	r1, r5
 8004d28:	4648      	mov	r0, r9
 8004d2a:	f000 fffb 	bl	8005d24 <_Bfree>
 8004d2e:	e0b0      	b.n	8004e92 <_dtoa_r+0x62a>
 8004d30:	07e2      	lsls	r2, r4, #31
 8004d32:	d505      	bpl.n	8004d40 <_dtoa_r+0x4d8>
 8004d34:	e9d5 2300 	ldrd	r2, r3, [r5]
 8004d38:	f7fb fbce 	bl	80004d8 <__aeabi_dmul>
 8004d3c:	2301      	movs	r3, #1
 8004d3e:	3601      	adds	r6, #1
 8004d40:	1064      	asrs	r4, r4, #1
 8004d42:	3508      	adds	r5, #8
 8004d44:	e762      	b.n	8004c0c <_dtoa_r+0x3a4>
 8004d46:	2602      	movs	r6, #2
 8004d48:	e765      	b.n	8004c16 <_dtoa_r+0x3ae>
 8004d4a:	46b8      	mov	r8, r7
 8004d4c:	9c08      	ldr	r4, [sp, #32]
 8004d4e:	e784      	b.n	8004c5a <_dtoa_r+0x3f2>
 8004d50:	4b27      	ldr	r3, [pc, #156]	@ (8004df0 <_dtoa_r+0x588>)
 8004d52:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8004d54:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8004d58:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8004d5c:	4454      	add	r4, sl
 8004d5e:	2900      	cmp	r1, #0
 8004d60:	d054      	beq.n	8004e0c <_dtoa_r+0x5a4>
 8004d62:	2000      	movs	r0, #0
 8004d64:	4928      	ldr	r1, [pc, #160]	@ (8004e08 <_dtoa_r+0x5a0>)
 8004d66:	f7fb fce1 	bl	800072c <__aeabi_ddiv>
 8004d6a:	4633      	mov	r3, r6
 8004d6c:	462a      	mov	r2, r5
 8004d6e:	f7fb f9fb 	bl	8000168 <__aeabi_dsub>
 8004d72:	4656      	mov	r6, sl
 8004d74:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8004d78:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8004d7c:	f7fb fe5c 	bl	8000a38 <__aeabi_d2iz>
 8004d80:	4605      	mov	r5, r0
 8004d82:	f7fb fb3f 	bl	8000404 <__aeabi_i2d>
 8004d86:	4602      	mov	r2, r0
 8004d88:	460b      	mov	r3, r1
 8004d8a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8004d8e:	f7fb f9eb 	bl	8000168 <__aeabi_dsub>
 8004d92:	4602      	mov	r2, r0
 8004d94:	460b      	mov	r3, r1
 8004d96:	3530      	adds	r5, #48	@ 0x30
 8004d98:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8004d9c:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8004da0:	f806 5b01 	strb.w	r5, [r6], #1
 8004da4:	f7fb fe0a 	bl	80009bc <__aeabi_dcmplt>
 8004da8:	2800      	cmp	r0, #0
 8004daa:	d172      	bne.n	8004e92 <_dtoa_r+0x62a>
 8004dac:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004db0:	2000      	movs	r0, #0
 8004db2:	4911      	ldr	r1, [pc, #68]	@ (8004df8 <_dtoa_r+0x590>)
 8004db4:	f7fb f9d8 	bl	8000168 <__aeabi_dsub>
 8004db8:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8004dbc:	f7fb fdfe 	bl	80009bc <__aeabi_dcmplt>
 8004dc0:	2800      	cmp	r0, #0
 8004dc2:	f040 80b4 	bne.w	8004f2e <_dtoa_r+0x6c6>
 8004dc6:	42a6      	cmp	r6, r4
 8004dc8:	f43f af70 	beq.w	8004cac <_dtoa_r+0x444>
 8004dcc:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8004dd0:	2200      	movs	r2, #0
 8004dd2:	4b0a      	ldr	r3, [pc, #40]	@ (8004dfc <_dtoa_r+0x594>)
 8004dd4:	f7fb fb80 	bl	80004d8 <__aeabi_dmul>
 8004dd8:	2200      	movs	r2, #0
 8004dda:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8004dde:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8004de2:	4b06      	ldr	r3, [pc, #24]	@ (8004dfc <_dtoa_r+0x594>)
 8004de4:	f7fb fb78 	bl	80004d8 <__aeabi_dmul>
 8004de8:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8004dec:	e7c4      	b.n	8004d78 <_dtoa_r+0x510>
 8004dee:	bf00      	nop
 8004df0:	08007758 	.word	0x08007758
 8004df4:	08007730 	.word	0x08007730
 8004df8:	3ff00000 	.word	0x3ff00000
 8004dfc:	40240000 	.word	0x40240000
 8004e00:	401c0000 	.word	0x401c0000
 8004e04:	40140000 	.word	0x40140000
 8004e08:	3fe00000 	.word	0x3fe00000
 8004e0c:	4631      	mov	r1, r6
 8004e0e:	4628      	mov	r0, r5
 8004e10:	f7fb fb62 	bl	80004d8 <__aeabi_dmul>
 8004e14:	4656      	mov	r6, sl
 8004e16:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8004e1a:	9413      	str	r4, [sp, #76]	@ 0x4c
 8004e1c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8004e20:	f7fb fe0a 	bl	8000a38 <__aeabi_d2iz>
 8004e24:	4605      	mov	r5, r0
 8004e26:	f7fb faed 	bl	8000404 <__aeabi_i2d>
 8004e2a:	4602      	mov	r2, r0
 8004e2c:	460b      	mov	r3, r1
 8004e2e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8004e32:	f7fb f999 	bl	8000168 <__aeabi_dsub>
 8004e36:	4602      	mov	r2, r0
 8004e38:	460b      	mov	r3, r1
 8004e3a:	3530      	adds	r5, #48	@ 0x30
 8004e3c:	f806 5b01 	strb.w	r5, [r6], #1
 8004e40:	42a6      	cmp	r6, r4
 8004e42:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8004e46:	f04f 0200 	mov.w	r2, #0
 8004e4a:	d124      	bne.n	8004e96 <_dtoa_r+0x62e>
 8004e4c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8004e50:	4bae      	ldr	r3, [pc, #696]	@ (800510c <_dtoa_r+0x8a4>)
 8004e52:	f7fb f98b 	bl	800016c <__adddf3>
 8004e56:	4602      	mov	r2, r0
 8004e58:	460b      	mov	r3, r1
 8004e5a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8004e5e:	f7fb fdcb 	bl	80009f8 <__aeabi_dcmpgt>
 8004e62:	2800      	cmp	r0, #0
 8004e64:	d163      	bne.n	8004f2e <_dtoa_r+0x6c6>
 8004e66:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8004e6a:	2000      	movs	r0, #0
 8004e6c:	49a7      	ldr	r1, [pc, #668]	@ (800510c <_dtoa_r+0x8a4>)
 8004e6e:	f7fb f97b 	bl	8000168 <__aeabi_dsub>
 8004e72:	4602      	mov	r2, r0
 8004e74:	460b      	mov	r3, r1
 8004e76:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8004e7a:	f7fb fd9f 	bl	80009bc <__aeabi_dcmplt>
 8004e7e:	2800      	cmp	r0, #0
 8004e80:	f43f af14 	beq.w	8004cac <_dtoa_r+0x444>
 8004e84:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8004e86:	1e73      	subs	r3, r6, #1
 8004e88:	9313      	str	r3, [sp, #76]	@ 0x4c
 8004e8a:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8004e8e:	2b30      	cmp	r3, #48	@ 0x30
 8004e90:	d0f8      	beq.n	8004e84 <_dtoa_r+0x61c>
 8004e92:	4647      	mov	r7, r8
 8004e94:	e03b      	b.n	8004f0e <_dtoa_r+0x6a6>
 8004e96:	4b9e      	ldr	r3, [pc, #632]	@ (8005110 <_dtoa_r+0x8a8>)
 8004e98:	f7fb fb1e 	bl	80004d8 <__aeabi_dmul>
 8004e9c:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8004ea0:	e7bc      	b.n	8004e1c <_dtoa_r+0x5b4>
 8004ea2:	4656      	mov	r6, sl
 8004ea4:	e9dd 4506 	ldrd	r4, r5, [sp, #24]
 8004ea8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8004eac:	4620      	mov	r0, r4
 8004eae:	4629      	mov	r1, r5
 8004eb0:	f7fb fc3c 	bl	800072c <__aeabi_ddiv>
 8004eb4:	f7fb fdc0 	bl	8000a38 <__aeabi_d2iz>
 8004eb8:	4680      	mov	r8, r0
 8004eba:	f7fb faa3 	bl	8000404 <__aeabi_i2d>
 8004ebe:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8004ec2:	f7fb fb09 	bl	80004d8 <__aeabi_dmul>
 8004ec6:	4602      	mov	r2, r0
 8004ec8:	460b      	mov	r3, r1
 8004eca:	4620      	mov	r0, r4
 8004ecc:	4629      	mov	r1, r5
 8004ece:	f7fb f94b 	bl	8000168 <__aeabi_dsub>
 8004ed2:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8004ed6:	9d08      	ldr	r5, [sp, #32]
 8004ed8:	f806 4b01 	strb.w	r4, [r6], #1
 8004edc:	eba6 040a 	sub.w	r4, r6, sl
 8004ee0:	42a5      	cmp	r5, r4
 8004ee2:	4602      	mov	r2, r0
 8004ee4:	460b      	mov	r3, r1
 8004ee6:	d133      	bne.n	8004f50 <_dtoa_r+0x6e8>
 8004ee8:	f7fb f940 	bl	800016c <__adddf3>
 8004eec:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8004ef0:	4604      	mov	r4, r0
 8004ef2:	460d      	mov	r5, r1
 8004ef4:	f7fb fd80 	bl	80009f8 <__aeabi_dcmpgt>
 8004ef8:	b9c0      	cbnz	r0, 8004f2c <_dtoa_r+0x6c4>
 8004efa:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8004efe:	4620      	mov	r0, r4
 8004f00:	4629      	mov	r1, r5
 8004f02:	f7fb fd51 	bl	80009a8 <__aeabi_dcmpeq>
 8004f06:	b110      	cbz	r0, 8004f0e <_dtoa_r+0x6a6>
 8004f08:	f018 0f01 	tst.w	r8, #1
 8004f0c:	d10e      	bne.n	8004f2c <_dtoa_r+0x6c4>
 8004f0e:	4648      	mov	r0, r9
 8004f10:	9903      	ldr	r1, [sp, #12]
 8004f12:	f000 ff07 	bl	8005d24 <_Bfree>
 8004f16:	2300      	movs	r3, #0
 8004f18:	7033      	strb	r3, [r6, #0]
 8004f1a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8004f1c:	3701      	adds	r7, #1
 8004f1e:	601f      	str	r7, [r3, #0]
 8004f20:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8004f22:	2b00      	cmp	r3, #0
 8004f24:	f000 824b 	beq.w	80053be <_dtoa_r+0xb56>
 8004f28:	601e      	str	r6, [r3, #0]
 8004f2a:	e248      	b.n	80053be <_dtoa_r+0xb56>
 8004f2c:	46b8      	mov	r8, r7
 8004f2e:	4633      	mov	r3, r6
 8004f30:	461e      	mov	r6, r3
 8004f32:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8004f36:	2a39      	cmp	r2, #57	@ 0x39
 8004f38:	d106      	bne.n	8004f48 <_dtoa_r+0x6e0>
 8004f3a:	459a      	cmp	sl, r3
 8004f3c:	d1f8      	bne.n	8004f30 <_dtoa_r+0x6c8>
 8004f3e:	2230      	movs	r2, #48	@ 0x30
 8004f40:	f108 0801 	add.w	r8, r8, #1
 8004f44:	f88a 2000 	strb.w	r2, [sl]
 8004f48:	781a      	ldrb	r2, [r3, #0]
 8004f4a:	3201      	adds	r2, #1
 8004f4c:	701a      	strb	r2, [r3, #0]
 8004f4e:	e7a0      	b.n	8004e92 <_dtoa_r+0x62a>
 8004f50:	2200      	movs	r2, #0
 8004f52:	4b6f      	ldr	r3, [pc, #444]	@ (8005110 <_dtoa_r+0x8a8>)
 8004f54:	f7fb fac0 	bl	80004d8 <__aeabi_dmul>
 8004f58:	2200      	movs	r2, #0
 8004f5a:	2300      	movs	r3, #0
 8004f5c:	4604      	mov	r4, r0
 8004f5e:	460d      	mov	r5, r1
 8004f60:	f7fb fd22 	bl	80009a8 <__aeabi_dcmpeq>
 8004f64:	2800      	cmp	r0, #0
 8004f66:	d09f      	beq.n	8004ea8 <_dtoa_r+0x640>
 8004f68:	e7d1      	b.n	8004f0e <_dtoa_r+0x6a6>
 8004f6a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8004f6c:	2a00      	cmp	r2, #0
 8004f6e:	f000 80ea 	beq.w	8005146 <_dtoa_r+0x8de>
 8004f72:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8004f74:	2a01      	cmp	r2, #1
 8004f76:	f300 80cd 	bgt.w	8005114 <_dtoa_r+0x8ac>
 8004f7a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8004f7c:	2a00      	cmp	r2, #0
 8004f7e:	f000 80c1 	beq.w	8005104 <_dtoa_r+0x89c>
 8004f82:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8004f86:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8004f88:	9e04      	ldr	r6, [sp, #16]
 8004f8a:	9a04      	ldr	r2, [sp, #16]
 8004f8c:	2101      	movs	r1, #1
 8004f8e:	441a      	add	r2, r3
 8004f90:	9204      	str	r2, [sp, #16]
 8004f92:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004f94:	4648      	mov	r0, r9
 8004f96:	441a      	add	r2, r3
 8004f98:	9209      	str	r2, [sp, #36]	@ 0x24
 8004f9a:	f000 ffc1 	bl	8005f20 <__i2b>
 8004f9e:	4605      	mov	r5, r0
 8004fa0:	b166      	cbz	r6, 8004fbc <_dtoa_r+0x754>
 8004fa2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004fa4:	2b00      	cmp	r3, #0
 8004fa6:	dd09      	ble.n	8004fbc <_dtoa_r+0x754>
 8004fa8:	42b3      	cmp	r3, r6
 8004faa:	bfa8      	it	ge
 8004fac:	4633      	movge	r3, r6
 8004fae:	9a04      	ldr	r2, [sp, #16]
 8004fb0:	1af6      	subs	r6, r6, r3
 8004fb2:	1ad2      	subs	r2, r2, r3
 8004fb4:	9204      	str	r2, [sp, #16]
 8004fb6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004fb8:	1ad3      	subs	r3, r2, r3
 8004fba:	9309      	str	r3, [sp, #36]	@ 0x24
 8004fbc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004fbe:	b30b      	cbz	r3, 8005004 <_dtoa_r+0x79c>
 8004fc0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004fc2:	2b00      	cmp	r3, #0
 8004fc4:	f000 80c6 	beq.w	8005154 <_dtoa_r+0x8ec>
 8004fc8:	2c00      	cmp	r4, #0
 8004fca:	f000 80c0 	beq.w	800514e <_dtoa_r+0x8e6>
 8004fce:	4629      	mov	r1, r5
 8004fd0:	4622      	mov	r2, r4
 8004fd2:	4648      	mov	r0, r9
 8004fd4:	f001 f85c 	bl	8006090 <__pow5mult>
 8004fd8:	9a03      	ldr	r2, [sp, #12]
 8004fda:	4601      	mov	r1, r0
 8004fdc:	4605      	mov	r5, r0
 8004fde:	4648      	mov	r0, r9
 8004fe0:	f000 ffb4 	bl	8005f4c <__multiply>
 8004fe4:	9903      	ldr	r1, [sp, #12]
 8004fe6:	4680      	mov	r8, r0
 8004fe8:	4648      	mov	r0, r9
 8004fea:	f000 fe9b 	bl	8005d24 <_Bfree>
 8004fee:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004ff0:	1b1b      	subs	r3, r3, r4
 8004ff2:	930a      	str	r3, [sp, #40]	@ 0x28
 8004ff4:	f000 80b1 	beq.w	800515a <_dtoa_r+0x8f2>
 8004ff8:	4641      	mov	r1, r8
 8004ffa:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8004ffc:	4648      	mov	r0, r9
 8004ffe:	f001 f847 	bl	8006090 <__pow5mult>
 8005002:	9003      	str	r0, [sp, #12]
 8005004:	2101      	movs	r1, #1
 8005006:	4648      	mov	r0, r9
 8005008:	f000 ff8a 	bl	8005f20 <__i2b>
 800500c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800500e:	4604      	mov	r4, r0
 8005010:	2b00      	cmp	r3, #0
 8005012:	f000 81d8 	beq.w	80053c6 <_dtoa_r+0xb5e>
 8005016:	461a      	mov	r2, r3
 8005018:	4601      	mov	r1, r0
 800501a:	4648      	mov	r0, r9
 800501c:	f001 f838 	bl	8006090 <__pow5mult>
 8005020:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8005022:	4604      	mov	r4, r0
 8005024:	2b01      	cmp	r3, #1
 8005026:	f300 809f 	bgt.w	8005168 <_dtoa_r+0x900>
 800502a:	9b06      	ldr	r3, [sp, #24]
 800502c:	2b00      	cmp	r3, #0
 800502e:	f040 8097 	bne.w	8005160 <_dtoa_r+0x8f8>
 8005032:	9b07      	ldr	r3, [sp, #28]
 8005034:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005038:	2b00      	cmp	r3, #0
 800503a:	f040 8093 	bne.w	8005164 <_dtoa_r+0x8fc>
 800503e:	9b07      	ldr	r3, [sp, #28]
 8005040:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8005044:	0d1b      	lsrs	r3, r3, #20
 8005046:	051b      	lsls	r3, r3, #20
 8005048:	b133      	cbz	r3, 8005058 <_dtoa_r+0x7f0>
 800504a:	9b04      	ldr	r3, [sp, #16]
 800504c:	3301      	adds	r3, #1
 800504e:	9304      	str	r3, [sp, #16]
 8005050:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005052:	3301      	adds	r3, #1
 8005054:	9309      	str	r3, [sp, #36]	@ 0x24
 8005056:	2301      	movs	r3, #1
 8005058:	930a      	str	r3, [sp, #40]	@ 0x28
 800505a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800505c:	2b00      	cmp	r3, #0
 800505e:	f000 81b8 	beq.w	80053d2 <_dtoa_r+0xb6a>
 8005062:	6923      	ldr	r3, [r4, #16]
 8005064:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8005068:	6918      	ldr	r0, [r3, #16]
 800506a:	f000 ff0d 	bl	8005e88 <__hi0bits>
 800506e:	f1c0 0020 	rsb	r0, r0, #32
 8005072:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005074:	4418      	add	r0, r3
 8005076:	f010 001f 	ands.w	r0, r0, #31
 800507a:	f000 8082 	beq.w	8005182 <_dtoa_r+0x91a>
 800507e:	f1c0 0320 	rsb	r3, r0, #32
 8005082:	2b04      	cmp	r3, #4
 8005084:	dd73      	ble.n	800516e <_dtoa_r+0x906>
 8005086:	9b04      	ldr	r3, [sp, #16]
 8005088:	f1c0 001c 	rsb	r0, r0, #28
 800508c:	4403      	add	r3, r0
 800508e:	9304      	str	r3, [sp, #16]
 8005090:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005092:	4406      	add	r6, r0
 8005094:	4403      	add	r3, r0
 8005096:	9309      	str	r3, [sp, #36]	@ 0x24
 8005098:	9b04      	ldr	r3, [sp, #16]
 800509a:	2b00      	cmp	r3, #0
 800509c:	dd05      	ble.n	80050aa <_dtoa_r+0x842>
 800509e:	461a      	mov	r2, r3
 80050a0:	4648      	mov	r0, r9
 80050a2:	9903      	ldr	r1, [sp, #12]
 80050a4:	f001 f84e 	bl	8006144 <__lshift>
 80050a8:	9003      	str	r0, [sp, #12]
 80050aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80050ac:	2b00      	cmp	r3, #0
 80050ae:	dd05      	ble.n	80050bc <_dtoa_r+0x854>
 80050b0:	4621      	mov	r1, r4
 80050b2:	461a      	mov	r2, r3
 80050b4:	4648      	mov	r0, r9
 80050b6:	f001 f845 	bl	8006144 <__lshift>
 80050ba:	4604      	mov	r4, r0
 80050bc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80050be:	2b00      	cmp	r3, #0
 80050c0:	d061      	beq.n	8005186 <_dtoa_r+0x91e>
 80050c2:	4621      	mov	r1, r4
 80050c4:	9803      	ldr	r0, [sp, #12]
 80050c6:	f001 f8a9 	bl	800621c <__mcmp>
 80050ca:	2800      	cmp	r0, #0
 80050cc:	da5b      	bge.n	8005186 <_dtoa_r+0x91e>
 80050ce:	2300      	movs	r3, #0
 80050d0:	220a      	movs	r2, #10
 80050d2:	4648      	mov	r0, r9
 80050d4:	9903      	ldr	r1, [sp, #12]
 80050d6:	f000 fe47 	bl	8005d68 <__multadd>
 80050da:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80050dc:	f107 38ff 	add.w	r8, r7, #4294967295
 80050e0:	9003      	str	r0, [sp, #12]
 80050e2:	2b00      	cmp	r3, #0
 80050e4:	f000 8177 	beq.w	80053d6 <_dtoa_r+0xb6e>
 80050e8:	4629      	mov	r1, r5
 80050ea:	2300      	movs	r3, #0
 80050ec:	220a      	movs	r2, #10
 80050ee:	4648      	mov	r0, r9
 80050f0:	f000 fe3a 	bl	8005d68 <__multadd>
 80050f4:	f1bb 0f00 	cmp.w	fp, #0
 80050f8:	4605      	mov	r5, r0
 80050fa:	dc6f      	bgt.n	80051dc <_dtoa_r+0x974>
 80050fc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80050fe:	2b02      	cmp	r3, #2
 8005100:	dc49      	bgt.n	8005196 <_dtoa_r+0x92e>
 8005102:	e06b      	b.n	80051dc <_dtoa_r+0x974>
 8005104:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8005106:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 800510a:	e73c      	b.n	8004f86 <_dtoa_r+0x71e>
 800510c:	3fe00000 	.word	0x3fe00000
 8005110:	40240000 	.word	0x40240000
 8005114:	9b08      	ldr	r3, [sp, #32]
 8005116:	1e5c      	subs	r4, r3, #1
 8005118:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800511a:	42a3      	cmp	r3, r4
 800511c:	db09      	blt.n	8005132 <_dtoa_r+0x8ca>
 800511e:	1b1c      	subs	r4, r3, r4
 8005120:	9b08      	ldr	r3, [sp, #32]
 8005122:	2b00      	cmp	r3, #0
 8005124:	f6bf af30 	bge.w	8004f88 <_dtoa_r+0x720>
 8005128:	9b04      	ldr	r3, [sp, #16]
 800512a:	9a08      	ldr	r2, [sp, #32]
 800512c:	1a9e      	subs	r6, r3, r2
 800512e:	2300      	movs	r3, #0
 8005130:	e72b      	b.n	8004f8a <_dtoa_r+0x722>
 8005132:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005134:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8005136:	1ae3      	subs	r3, r4, r3
 8005138:	441a      	add	r2, r3
 800513a:	940a      	str	r4, [sp, #40]	@ 0x28
 800513c:	9e04      	ldr	r6, [sp, #16]
 800513e:	2400      	movs	r4, #0
 8005140:	9b08      	ldr	r3, [sp, #32]
 8005142:	920e      	str	r2, [sp, #56]	@ 0x38
 8005144:	e721      	b.n	8004f8a <_dtoa_r+0x722>
 8005146:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8005148:	9e04      	ldr	r6, [sp, #16]
 800514a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 800514c:	e728      	b.n	8004fa0 <_dtoa_r+0x738>
 800514e:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8005152:	e751      	b.n	8004ff8 <_dtoa_r+0x790>
 8005154:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8005156:	9903      	ldr	r1, [sp, #12]
 8005158:	e750      	b.n	8004ffc <_dtoa_r+0x794>
 800515a:	f8cd 800c 	str.w	r8, [sp, #12]
 800515e:	e751      	b.n	8005004 <_dtoa_r+0x79c>
 8005160:	2300      	movs	r3, #0
 8005162:	e779      	b.n	8005058 <_dtoa_r+0x7f0>
 8005164:	9b06      	ldr	r3, [sp, #24]
 8005166:	e777      	b.n	8005058 <_dtoa_r+0x7f0>
 8005168:	2300      	movs	r3, #0
 800516a:	930a      	str	r3, [sp, #40]	@ 0x28
 800516c:	e779      	b.n	8005062 <_dtoa_r+0x7fa>
 800516e:	d093      	beq.n	8005098 <_dtoa_r+0x830>
 8005170:	9a04      	ldr	r2, [sp, #16]
 8005172:	331c      	adds	r3, #28
 8005174:	441a      	add	r2, r3
 8005176:	9204      	str	r2, [sp, #16]
 8005178:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800517a:	441e      	add	r6, r3
 800517c:	441a      	add	r2, r3
 800517e:	9209      	str	r2, [sp, #36]	@ 0x24
 8005180:	e78a      	b.n	8005098 <_dtoa_r+0x830>
 8005182:	4603      	mov	r3, r0
 8005184:	e7f4      	b.n	8005170 <_dtoa_r+0x908>
 8005186:	9b08      	ldr	r3, [sp, #32]
 8005188:	46b8      	mov	r8, r7
 800518a:	2b00      	cmp	r3, #0
 800518c:	dc20      	bgt.n	80051d0 <_dtoa_r+0x968>
 800518e:	469b      	mov	fp, r3
 8005190:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8005192:	2b02      	cmp	r3, #2
 8005194:	dd1e      	ble.n	80051d4 <_dtoa_r+0x96c>
 8005196:	f1bb 0f00 	cmp.w	fp, #0
 800519a:	f47f adb1 	bne.w	8004d00 <_dtoa_r+0x498>
 800519e:	4621      	mov	r1, r4
 80051a0:	465b      	mov	r3, fp
 80051a2:	2205      	movs	r2, #5
 80051a4:	4648      	mov	r0, r9
 80051a6:	f000 fddf 	bl	8005d68 <__multadd>
 80051aa:	4601      	mov	r1, r0
 80051ac:	4604      	mov	r4, r0
 80051ae:	9803      	ldr	r0, [sp, #12]
 80051b0:	f001 f834 	bl	800621c <__mcmp>
 80051b4:	2800      	cmp	r0, #0
 80051b6:	f77f ada3 	ble.w	8004d00 <_dtoa_r+0x498>
 80051ba:	4656      	mov	r6, sl
 80051bc:	2331      	movs	r3, #49	@ 0x31
 80051be:	f108 0801 	add.w	r8, r8, #1
 80051c2:	f806 3b01 	strb.w	r3, [r6], #1
 80051c6:	e59f      	b.n	8004d08 <_dtoa_r+0x4a0>
 80051c8:	46b8      	mov	r8, r7
 80051ca:	9c08      	ldr	r4, [sp, #32]
 80051cc:	4625      	mov	r5, r4
 80051ce:	e7f4      	b.n	80051ba <_dtoa_r+0x952>
 80051d0:	f8dd b020 	ldr.w	fp, [sp, #32]
 80051d4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80051d6:	2b00      	cmp	r3, #0
 80051d8:	f000 8101 	beq.w	80053de <_dtoa_r+0xb76>
 80051dc:	2e00      	cmp	r6, #0
 80051de:	dd05      	ble.n	80051ec <_dtoa_r+0x984>
 80051e0:	4629      	mov	r1, r5
 80051e2:	4632      	mov	r2, r6
 80051e4:	4648      	mov	r0, r9
 80051e6:	f000 ffad 	bl	8006144 <__lshift>
 80051ea:	4605      	mov	r5, r0
 80051ec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80051ee:	2b00      	cmp	r3, #0
 80051f0:	d05c      	beq.n	80052ac <_dtoa_r+0xa44>
 80051f2:	4648      	mov	r0, r9
 80051f4:	6869      	ldr	r1, [r5, #4]
 80051f6:	f000 fd55 	bl	8005ca4 <_Balloc>
 80051fa:	4606      	mov	r6, r0
 80051fc:	b928      	cbnz	r0, 800520a <_dtoa_r+0x9a2>
 80051fe:	4602      	mov	r2, r0
 8005200:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8005204:	4b80      	ldr	r3, [pc, #512]	@ (8005408 <_dtoa_r+0xba0>)
 8005206:	f7ff bb43 	b.w	8004890 <_dtoa_r+0x28>
 800520a:	692a      	ldr	r2, [r5, #16]
 800520c:	f105 010c 	add.w	r1, r5, #12
 8005210:	3202      	adds	r2, #2
 8005212:	0092      	lsls	r2, r2, #2
 8005214:	300c      	adds	r0, #12
 8005216:	f7ff fa8a 	bl	800472e <memcpy>
 800521a:	2201      	movs	r2, #1
 800521c:	4631      	mov	r1, r6
 800521e:	4648      	mov	r0, r9
 8005220:	f000 ff90 	bl	8006144 <__lshift>
 8005224:	462f      	mov	r7, r5
 8005226:	4605      	mov	r5, r0
 8005228:	f10a 0301 	add.w	r3, sl, #1
 800522c:	9304      	str	r3, [sp, #16]
 800522e:	eb0a 030b 	add.w	r3, sl, fp
 8005232:	930a      	str	r3, [sp, #40]	@ 0x28
 8005234:	9b06      	ldr	r3, [sp, #24]
 8005236:	f003 0301 	and.w	r3, r3, #1
 800523a:	9309      	str	r3, [sp, #36]	@ 0x24
 800523c:	9b04      	ldr	r3, [sp, #16]
 800523e:	4621      	mov	r1, r4
 8005240:	9803      	ldr	r0, [sp, #12]
 8005242:	f103 3bff 	add.w	fp, r3, #4294967295
 8005246:	f7ff fa87 	bl	8004758 <quorem>
 800524a:	4603      	mov	r3, r0
 800524c:	4639      	mov	r1, r7
 800524e:	3330      	adds	r3, #48	@ 0x30
 8005250:	9006      	str	r0, [sp, #24]
 8005252:	9803      	ldr	r0, [sp, #12]
 8005254:	930b      	str	r3, [sp, #44]	@ 0x2c
 8005256:	f000 ffe1 	bl	800621c <__mcmp>
 800525a:	462a      	mov	r2, r5
 800525c:	9008      	str	r0, [sp, #32]
 800525e:	4621      	mov	r1, r4
 8005260:	4648      	mov	r0, r9
 8005262:	f000 fff7 	bl	8006254 <__mdiff>
 8005266:	68c2      	ldr	r2, [r0, #12]
 8005268:	4606      	mov	r6, r0
 800526a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800526c:	bb02      	cbnz	r2, 80052b0 <_dtoa_r+0xa48>
 800526e:	4601      	mov	r1, r0
 8005270:	9803      	ldr	r0, [sp, #12]
 8005272:	f000 ffd3 	bl	800621c <__mcmp>
 8005276:	4602      	mov	r2, r0
 8005278:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800527a:	4631      	mov	r1, r6
 800527c:	4648      	mov	r0, r9
 800527e:	e9cd 320b 	strd	r3, r2, [sp, #44]	@ 0x2c
 8005282:	f000 fd4f 	bl	8005d24 <_Bfree>
 8005286:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8005288:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 800528a:	9e04      	ldr	r6, [sp, #16]
 800528c:	ea42 0103 	orr.w	r1, r2, r3
 8005290:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005292:	4319      	orrs	r1, r3
 8005294:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8005296:	d10d      	bne.n	80052b4 <_dtoa_r+0xa4c>
 8005298:	2b39      	cmp	r3, #57	@ 0x39
 800529a:	d027      	beq.n	80052ec <_dtoa_r+0xa84>
 800529c:	9a08      	ldr	r2, [sp, #32]
 800529e:	2a00      	cmp	r2, #0
 80052a0:	dd01      	ble.n	80052a6 <_dtoa_r+0xa3e>
 80052a2:	9b06      	ldr	r3, [sp, #24]
 80052a4:	3331      	adds	r3, #49	@ 0x31
 80052a6:	f88b 3000 	strb.w	r3, [fp]
 80052aa:	e52e      	b.n	8004d0a <_dtoa_r+0x4a2>
 80052ac:	4628      	mov	r0, r5
 80052ae:	e7b9      	b.n	8005224 <_dtoa_r+0x9bc>
 80052b0:	2201      	movs	r2, #1
 80052b2:	e7e2      	b.n	800527a <_dtoa_r+0xa12>
 80052b4:	9908      	ldr	r1, [sp, #32]
 80052b6:	2900      	cmp	r1, #0
 80052b8:	db04      	blt.n	80052c4 <_dtoa_r+0xa5c>
 80052ba:	9820      	ldr	r0, [sp, #128]	@ 0x80
 80052bc:	4301      	orrs	r1, r0
 80052be:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80052c0:	4301      	orrs	r1, r0
 80052c2:	d120      	bne.n	8005306 <_dtoa_r+0xa9e>
 80052c4:	2a00      	cmp	r2, #0
 80052c6:	ddee      	ble.n	80052a6 <_dtoa_r+0xa3e>
 80052c8:	2201      	movs	r2, #1
 80052ca:	9903      	ldr	r1, [sp, #12]
 80052cc:	4648      	mov	r0, r9
 80052ce:	9304      	str	r3, [sp, #16]
 80052d0:	f000 ff38 	bl	8006144 <__lshift>
 80052d4:	4621      	mov	r1, r4
 80052d6:	9003      	str	r0, [sp, #12]
 80052d8:	f000 ffa0 	bl	800621c <__mcmp>
 80052dc:	2800      	cmp	r0, #0
 80052de:	9b04      	ldr	r3, [sp, #16]
 80052e0:	dc02      	bgt.n	80052e8 <_dtoa_r+0xa80>
 80052e2:	d1e0      	bne.n	80052a6 <_dtoa_r+0xa3e>
 80052e4:	07da      	lsls	r2, r3, #31
 80052e6:	d5de      	bpl.n	80052a6 <_dtoa_r+0xa3e>
 80052e8:	2b39      	cmp	r3, #57	@ 0x39
 80052ea:	d1da      	bne.n	80052a2 <_dtoa_r+0xa3a>
 80052ec:	2339      	movs	r3, #57	@ 0x39
 80052ee:	f88b 3000 	strb.w	r3, [fp]
 80052f2:	4633      	mov	r3, r6
 80052f4:	461e      	mov	r6, r3
 80052f6:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 80052fa:	3b01      	subs	r3, #1
 80052fc:	2a39      	cmp	r2, #57	@ 0x39
 80052fe:	d04e      	beq.n	800539e <_dtoa_r+0xb36>
 8005300:	3201      	adds	r2, #1
 8005302:	701a      	strb	r2, [r3, #0]
 8005304:	e501      	b.n	8004d0a <_dtoa_r+0x4a2>
 8005306:	2a00      	cmp	r2, #0
 8005308:	dd03      	ble.n	8005312 <_dtoa_r+0xaaa>
 800530a:	2b39      	cmp	r3, #57	@ 0x39
 800530c:	d0ee      	beq.n	80052ec <_dtoa_r+0xa84>
 800530e:	3301      	adds	r3, #1
 8005310:	e7c9      	b.n	80052a6 <_dtoa_r+0xa3e>
 8005312:	9a04      	ldr	r2, [sp, #16]
 8005314:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005316:	f802 3c01 	strb.w	r3, [r2, #-1]
 800531a:	428a      	cmp	r2, r1
 800531c:	d028      	beq.n	8005370 <_dtoa_r+0xb08>
 800531e:	2300      	movs	r3, #0
 8005320:	220a      	movs	r2, #10
 8005322:	9903      	ldr	r1, [sp, #12]
 8005324:	4648      	mov	r0, r9
 8005326:	f000 fd1f 	bl	8005d68 <__multadd>
 800532a:	42af      	cmp	r7, r5
 800532c:	9003      	str	r0, [sp, #12]
 800532e:	f04f 0300 	mov.w	r3, #0
 8005332:	f04f 020a 	mov.w	r2, #10
 8005336:	4639      	mov	r1, r7
 8005338:	4648      	mov	r0, r9
 800533a:	d107      	bne.n	800534c <_dtoa_r+0xae4>
 800533c:	f000 fd14 	bl	8005d68 <__multadd>
 8005340:	4607      	mov	r7, r0
 8005342:	4605      	mov	r5, r0
 8005344:	9b04      	ldr	r3, [sp, #16]
 8005346:	3301      	adds	r3, #1
 8005348:	9304      	str	r3, [sp, #16]
 800534a:	e777      	b.n	800523c <_dtoa_r+0x9d4>
 800534c:	f000 fd0c 	bl	8005d68 <__multadd>
 8005350:	4629      	mov	r1, r5
 8005352:	4607      	mov	r7, r0
 8005354:	2300      	movs	r3, #0
 8005356:	220a      	movs	r2, #10
 8005358:	4648      	mov	r0, r9
 800535a:	f000 fd05 	bl	8005d68 <__multadd>
 800535e:	4605      	mov	r5, r0
 8005360:	e7f0      	b.n	8005344 <_dtoa_r+0xadc>
 8005362:	f1bb 0f00 	cmp.w	fp, #0
 8005366:	bfcc      	ite	gt
 8005368:	465e      	movgt	r6, fp
 800536a:	2601      	movle	r6, #1
 800536c:	2700      	movs	r7, #0
 800536e:	4456      	add	r6, sl
 8005370:	2201      	movs	r2, #1
 8005372:	9903      	ldr	r1, [sp, #12]
 8005374:	4648      	mov	r0, r9
 8005376:	9304      	str	r3, [sp, #16]
 8005378:	f000 fee4 	bl	8006144 <__lshift>
 800537c:	4621      	mov	r1, r4
 800537e:	9003      	str	r0, [sp, #12]
 8005380:	f000 ff4c 	bl	800621c <__mcmp>
 8005384:	2800      	cmp	r0, #0
 8005386:	dcb4      	bgt.n	80052f2 <_dtoa_r+0xa8a>
 8005388:	d102      	bne.n	8005390 <_dtoa_r+0xb28>
 800538a:	9b04      	ldr	r3, [sp, #16]
 800538c:	07db      	lsls	r3, r3, #31
 800538e:	d4b0      	bmi.n	80052f2 <_dtoa_r+0xa8a>
 8005390:	4633      	mov	r3, r6
 8005392:	461e      	mov	r6, r3
 8005394:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8005398:	2a30      	cmp	r2, #48	@ 0x30
 800539a:	d0fa      	beq.n	8005392 <_dtoa_r+0xb2a>
 800539c:	e4b5      	b.n	8004d0a <_dtoa_r+0x4a2>
 800539e:	459a      	cmp	sl, r3
 80053a0:	d1a8      	bne.n	80052f4 <_dtoa_r+0xa8c>
 80053a2:	2331      	movs	r3, #49	@ 0x31
 80053a4:	f108 0801 	add.w	r8, r8, #1
 80053a8:	f88a 3000 	strb.w	r3, [sl]
 80053ac:	e4ad      	b.n	8004d0a <_dtoa_r+0x4a2>
 80053ae:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80053b0:	f8df a058 	ldr.w	sl, [pc, #88]	@ 800540c <_dtoa_r+0xba4>
 80053b4:	b11b      	cbz	r3, 80053be <_dtoa_r+0xb56>
 80053b6:	f10a 0308 	add.w	r3, sl, #8
 80053ba:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 80053bc:	6013      	str	r3, [r2, #0]
 80053be:	4650      	mov	r0, sl
 80053c0:	b017      	add	sp, #92	@ 0x5c
 80053c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80053c6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80053c8:	2b01      	cmp	r3, #1
 80053ca:	f77f ae2e 	ble.w	800502a <_dtoa_r+0x7c2>
 80053ce:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80053d0:	930a      	str	r3, [sp, #40]	@ 0x28
 80053d2:	2001      	movs	r0, #1
 80053d4:	e64d      	b.n	8005072 <_dtoa_r+0x80a>
 80053d6:	f1bb 0f00 	cmp.w	fp, #0
 80053da:	f77f aed9 	ble.w	8005190 <_dtoa_r+0x928>
 80053de:	4656      	mov	r6, sl
 80053e0:	4621      	mov	r1, r4
 80053e2:	9803      	ldr	r0, [sp, #12]
 80053e4:	f7ff f9b8 	bl	8004758 <quorem>
 80053e8:	f100 0330 	add.w	r3, r0, #48	@ 0x30
 80053ec:	f806 3b01 	strb.w	r3, [r6], #1
 80053f0:	eba6 020a 	sub.w	r2, r6, sl
 80053f4:	4593      	cmp	fp, r2
 80053f6:	ddb4      	ble.n	8005362 <_dtoa_r+0xafa>
 80053f8:	2300      	movs	r3, #0
 80053fa:	220a      	movs	r2, #10
 80053fc:	4648      	mov	r0, r9
 80053fe:	9903      	ldr	r1, [sp, #12]
 8005400:	f000 fcb2 	bl	8005d68 <__multadd>
 8005404:	9003      	str	r0, [sp, #12]
 8005406:	e7eb      	b.n	80053e0 <_dtoa_r+0xb78>
 8005408:	080074b2 	.word	0x080074b2
 800540c:	08007436 	.word	0x08007436

08005410 <_free_r>:
 8005410:	b538      	push	{r3, r4, r5, lr}
 8005412:	4605      	mov	r5, r0
 8005414:	2900      	cmp	r1, #0
 8005416:	d040      	beq.n	800549a <_free_r+0x8a>
 8005418:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800541c:	1f0c      	subs	r4, r1, #4
 800541e:	2b00      	cmp	r3, #0
 8005420:	bfb8      	it	lt
 8005422:	18e4      	addlt	r4, r4, r3
 8005424:	f000 fc32 	bl	8005c8c <__malloc_lock>
 8005428:	4a1c      	ldr	r2, [pc, #112]	@ (800549c <_free_r+0x8c>)
 800542a:	6813      	ldr	r3, [r2, #0]
 800542c:	b933      	cbnz	r3, 800543c <_free_r+0x2c>
 800542e:	6063      	str	r3, [r4, #4]
 8005430:	6014      	str	r4, [r2, #0]
 8005432:	4628      	mov	r0, r5
 8005434:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005438:	f000 bc2e 	b.w	8005c98 <__malloc_unlock>
 800543c:	42a3      	cmp	r3, r4
 800543e:	d908      	bls.n	8005452 <_free_r+0x42>
 8005440:	6820      	ldr	r0, [r4, #0]
 8005442:	1821      	adds	r1, r4, r0
 8005444:	428b      	cmp	r3, r1
 8005446:	bf01      	itttt	eq
 8005448:	6819      	ldreq	r1, [r3, #0]
 800544a:	685b      	ldreq	r3, [r3, #4]
 800544c:	1809      	addeq	r1, r1, r0
 800544e:	6021      	streq	r1, [r4, #0]
 8005450:	e7ed      	b.n	800542e <_free_r+0x1e>
 8005452:	461a      	mov	r2, r3
 8005454:	685b      	ldr	r3, [r3, #4]
 8005456:	b10b      	cbz	r3, 800545c <_free_r+0x4c>
 8005458:	42a3      	cmp	r3, r4
 800545a:	d9fa      	bls.n	8005452 <_free_r+0x42>
 800545c:	6811      	ldr	r1, [r2, #0]
 800545e:	1850      	adds	r0, r2, r1
 8005460:	42a0      	cmp	r0, r4
 8005462:	d10b      	bne.n	800547c <_free_r+0x6c>
 8005464:	6820      	ldr	r0, [r4, #0]
 8005466:	4401      	add	r1, r0
 8005468:	1850      	adds	r0, r2, r1
 800546a:	4283      	cmp	r3, r0
 800546c:	6011      	str	r1, [r2, #0]
 800546e:	d1e0      	bne.n	8005432 <_free_r+0x22>
 8005470:	6818      	ldr	r0, [r3, #0]
 8005472:	685b      	ldr	r3, [r3, #4]
 8005474:	4408      	add	r0, r1
 8005476:	6010      	str	r0, [r2, #0]
 8005478:	6053      	str	r3, [r2, #4]
 800547a:	e7da      	b.n	8005432 <_free_r+0x22>
 800547c:	d902      	bls.n	8005484 <_free_r+0x74>
 800547e:	230c      	movs	r3, #12
 8005480:	602b      	str	r3, [r5, #0]
 8005482:	e7d6      	b.n	8005432 <_free_r+0x22>
 8005484:	6820      	ldr	r0, [r4, #0]
 8005486:	1821      	adds	r1, r4, r0
 8005488:	428b      	cmp	r3, r1
 800548a:	bf01      	itttt	eq
 800548c:	6819      	ldreq	r1, [r3, #0]
 800548e:	685b      	ldreq	r3, [r3, #4]
 8005490:	1809      	addeq	r1, r1, r0
 8005492:	6021      	streq	r1, [r4, #0]
 8005494:	6063      	str	r3, [r4, #4]
 8005496:	6054      	str	r4, [r2, #4]
 8005498:	e7cb      	b.n	8005432 <_free_r+0x22>
 800549a:	bd38      	pop	{r3, r4, r5, pc}
 800549c:	2000054c 	.word	0x2000054c

080054a0 <rshift>:
 80054a0:	6903      	ldr	r3, [r0, #16]
 80054a2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80054a6:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 80054aa:	f100 0414 	add.w	r4, r0, #20
 80054ae:	ea4f 1261 	mov.w	r2, r1, asr #5
 80054b2:	dd46      	ble.n	8005542 <rshift+0xa2>
 80054b4:	f011 011f 	ands.w	r1, r1, #31
 80054b8:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 80054bc:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 80054c0:	d10c      	bne.n	80054dc <rshift+0x3c>
 80054c2:	4629      	mov	r1, r5
 80054c4:	f100 0710 	add.w	r7, r0, #16
 80054c8:	42b1      	cmp	r1, r6
 80054ca:	d335      	bcc.n	8005538 <rshift+0x98>
 80054cc:	1a9b      	subs	r3, r3, r2
 80054ce:	009b      	lsls	r3, r3, #2
 80054d0:	1eea      	subs	r2, r5, #3
 80054d2:	4296      	cmp	r6, r2
 80054d4:	bf38      	it	cc
 80054d6:	2300      	movcc	r3, #0
 80054d8:	4423      	add	r3, r4
 80054da:	e015      	b.n	8005508 <rshift+0x68>
 80054dc:	46a1      	mov	r9, r4
 80054de:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 80054e2:	f1c1 0820 	rsb	r8, r1, #32
 80054e6:	40cf      	lsrs	r7, r1
 80054e8:	f105 0e04 	add.w	lr, r5, #4
 80054ec:	4576      	cmp	r6, lr
 80054ee:	46f4      	mov	ip, lr
 80054f0:	d816      	bhi.n	8005520 <rshift+0x80>
 80054f2:	1a9a      	subs	r2, r3, r2
 80054f4:	0092      	lsls	r2, r2, #2
 80054f6:	3a04      	subs	r2, #4
 80054f8:	3501      	adds	r5, #1
 80054fa:	42ae      	cmp	r6, r5
 80054fc:	bf38      	it	cc
 80054fe:	2200      	movcc	r2, #0
 8005500:	18a3      	adds	r3, r4, r2
 8005502:	50a7      	str	r7, [r4, r2]
 8005504:	b107      	cbz	r7, 8005508 <rshift+0x68>
 8005506:	3304      	adds	r3, #4
 8005508:	42a3      	cmp	r3, r4
 800550a:	eba3 0204 	sub.w	r2, r3, r4
 800550e:	bf08      	it	eq
 8005510:	2300      	moveq	r3, #0
 8005512:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8005516:	6102      	str	r2, [r0, #16]
 8005518:	bf08      	it	eq
 800551a:	6143      	streq	r3, [r0, #20]
 800551c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005520:	f8dc c000 	ldr.w	ip, [ip]
 8005524:	fa0c fc08 	lsl.w	ip, ip, r8
 8005528:	ea4c 0707 	orr.w	r7, ip, r7
 800552c:	f849 7b04 	str.w	r7, [r9], #4
 8005530:	f85e 7b04 	ldr.w	r7, [lr], #4
 8005534:	40cf      	lsrs	r7, r1
 8005536:	e7d9      	b.n	80054ec <rshift+0x4c>
 8005538:	f851 cb04 	ldr.w	ip, [r1], #4
 800553c:	f847 cf04 	str.w	ip, [r7, #4]!
 8005540:	e7c2      	b.n	80054c8 <rshift+0x28>
 8005542:	4623      	mov	r3, r4
 8005544:	e7e0      	b.n	8005508 <rshift+0x68>

08005546 <__hexdig_fun>:
 8005546:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 800554a:	2b09      	cmp	r3, #9
 800554c:	d802      	bhi.n	8005554 <__hexdig_fun+0xe>
 800554e:	3820      	subs	r0, #32
 8005550:	b2c0      	uxtb	r0, r0
 8005552:	4770      	bx	lr
 8005554:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 8005558:	2b05      	cmp	r3, #5
 800555a:	d801      	bhi.n	8005560 <__hexdig_fun+0x1a>
 800555c:	3847      	subs	r0, #71	@ 0x47
 800555e:	e7f7      	b.n	8005550 <__hexdig_fun+0xa>
 8005560:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 8005564:	2b05      	cmp	r3, #5
 8005566:	d801      	bhi.n	800556c <__hexdig_fun+0x26>
 8005568:	3827      	subs	r0, #39	@ 0x27
 800556a:	e7f1      	b.n	8005550 <__hexdig_fun+0xa>
 800556c:	2000      	movs	r0, #0
 800556e:	4770      	bx	lr

08005570 <__gethex>:
 8005570:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005574:	468a      	mov	sl, r1
 8005576:	4690      	mov	r8, r2
 8005578:	b085      	sub	sp, #20
 800557a:	9302      	str	r3, [sp, #8]
 800557c:	680b      	ldr	r3, [r1, #0]
 800557e:	9001      	str	r0, [sp, #4]
 8005580:	1c9c      	adds	r4, r3, #2
 8005582:	46a1      	mov	r9, r4
 8005584:	f814 0b01 	ldrb.w	r0, [r4], #1
 8005588:	2830      	cmp	r0, #48	@ 0x30
 800558a:	d0fa      	beq.n	8005582 <__gethex+0x12>
 800558c:	eba9 0303 	sub.w	r3, r9, r3
 8005590:	f1a3 0b02 	sub.w	fp, r3, #2
 8005594:	f7ff ffd7 	bl	8005546 <__hexdig_fun>
 8005598:	4605      	mov	r5, r0
 800559a:	2800      	cmp	r0, #0
 800559c:	d168      	bne.n	8005670 <__gethex+0x100>
 800559e:	2201      	movs	r2, #1
 80055a0:	4648      	mov	r0, r9
 80055a2:	499f      	ldr	r1, [pc, #636]	@ (8005820 <__gethex+0x2b0>)
 80055a4:	f7fe ffee 	bl	8004584 <strncmp>
 80055a8:	4607      	mov	r7, r0
 80055aa:	2800      	cmp	r0, #0
 80055ac:	d167      	bne.n	800567e <__gethex+0x10e>
 80055ae:	f899 0001 	ldrb.w	r0, [r9, #1]
 80055b2:	4626      	mov	r6, r4
 80055b4:	f7ff ffc7 	bl	8005546 <__hexdig_fun>
 80055b8:	2800      	cmp	r0, #0
 80055ba:	d062      	beq.n	8005682 <__gethex+0x112>
 80055bc:	4623      	mov	r3, r4
 80055be:	7818      	ldrb	r0, [r3, #0]
 80055c0:	4699      	mov	r9, r3
 80055c2:	2830      	cmp	r0, #48	@ 0x30
 80055c4:	f103 0301 	add.w	r3, r3, #1
 80055c8:	d0f9      	beq.n	80055be <__gethex+0x4e>
 80055ca:	f7ff ffbc 	bl	8005546 <__hexdig_fun>
 80055ce:	fab0 f580 	clz	r5, r0
 80055d2:	f04f 0b01 	mov.w	fp, #1
 80055d6:	096d      	lsrs	r5, r5, #5
 80055d8:	464a      	mov	r2, r9
 80055da:	4616      	mov	r6, r2
 80055dc:	7830      	ldrb	r0, [r6, #0]
 80055de:	3201      	adds	r2, #1
 80055e0:	f7ff ffb1 	bl	8005546 <__hexdig_fun>
 80055e4:	2800      	cmp	r0, #0
 80055e6:	d1f8      	bne.n	80055da <__gethex+0x6a>
 80055e8:	2201      	movs	r2, #1
 80055ea:	4630      	mov	r0, r6
 80055ec:	498c      	ldr	r1, [pc, #560]	@ (8005820 <__gethex+0x2b0>)
 80055ee:	f7fe ffc9 	bl	8004584 <strncmp>
 80055f2:	2800      	cmp	r0, #0
 80055f4:	d13f      	bne.n	8005676 <__gethex+0x106>
 80055f6:	b944      	cbnz	r4, 800560a <__gethex+0x9a>
 80055f8:	1c74      	adds	r4, r6, #1
 80055fa:	4622      	mov	r2, r4
 80055fc:	4616      	mov	r6, r2
 80055fe:	7830      	ldrb	r0, [r6, #0]
 8005600:	3201      	adds	r2, #1
 8005602:	f7ff ffa0 	bl	8005546 <__hexdig_fun>
 8005606:	2800      	cmp	r0, #0
 8005608:	d1f8      	bne.n	80055fc <__gethex+0x8c>
 800560a:	1ba4      	subs	r4, r4, r6
 800560c:	00a7      	lsls	r7, r4, #2
 800560e:	7833      	ldrb	r3, [r6, #0]
 8005610:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 8005614:	2b50      	cmp	r3, #80	@ 0x50
 8005616:	d13e      	bne.n	8005696 <__gethex+0x126>
 8005618:	7873      	ldrb	r3, [r6, #1]
 800561a:	2b2b      	cmp	r3, #43	@ 0x2b
 800561c:	d033      	beq.n	8005686 <__gethex+0x116>
 800561e:	2b2d      	cmp	r3, #45	@ 0x2d
 8005620:	d034      	beq.n	800568c <__gethex+0x11c>
 8005622:	2400      	movs	r4, #0
 8005624:	1c71      	adds	r1, r6, #1
 8005626:	7808      	ldrb	r0, [r1, #0]
 8005628:	f7ff ff8d 	bl	8005546 <__hexdig_fun>
 800562c:	1e43      	subs	r3, r0, #1
 800562e:	b2db      	uxtb	r3, r3
 8005630:	2b18      	cmp	r3, #24
 8005632:	d830      	bhi.n	8005696 <__gethex+0x126>
 8005634:	f1a0 0210 	sub.w	r2, r0, #16
 8005638:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800563c:	f7ff ff83 	bl	8005546 <__hexdig_fun>
 8005640:	f100 3cff 	add.w	ip, r0, #4294967295
 8005644:	fa5f fc8c 	uxtb.w	ip, ip
 8005648:	f1bc 0f18 	cmp.w	ip, #24
 800564c:	f04f 030a 	mov.w	r3, #10
 8005650:	d91e      	bls.n	8005690 <__gethex+0x120>
 8005652:	b104      	cbz	r4, 8005656 <__gethex+0xe6>
 8005654:	4252      	negs	r2, r2
 8005656:	4417      	add	r7, r2
 8005658:	f8ca 1000 	str.w	r1, [sl]
 800565c:	b1ed      	cbz	r5, 800569a <__gethex+0x12a>
 800565e:	f1bb 0f00 	cmp.w	fp, #0
 8005662:	bf0c      	ite	eq
 8005664:	2506      	moveq	r5, #6
 8005666:	2500      	movne	r5, #0
 8005668:	4628      	mov	r0, r5
 800566a:	b005      	add	sp, #20
 800566c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005670:	2500      	movs	r5, #0
 8005672:	462c      	mov	r4, r5
 8005674:	e7b0      	b.n	80055d8 <__gethex+0x68>
 8005676:	2c00      	cmp	r4, #0
 8005678:	d1c7      	bne.n	800560a <__gethex+0x9a>
 800567a:	4627      	mov	r7, r4
 800567c:	e7c7      	b.n	800560e <__gethex+0x9e>
 800567e:	464e      	mov	r6, r9
 8005680:	462f      	mov	r7, r5
 8005682:	2501      	movs	r5, #1
 8005684:	e7c3      	b.n	800560e <__gethex+0x9e>
 8005686:	2400      	movs	r4, #0
 8005688:	1cb1      	adds	r1, r6, #2
 800568a:	e7cc      	b.n	8005626 <__gethex+0xb6>
 800568c:	2401      	movs	r4, #1
 800568e:	e7fb      	b.n	8005688 <__gethex+0x118>
 8005690:	fb03 0002 	mla	r0, r3, r2, r0
 8005694:	e7ce      	b.n	8005634 <__gethex+0xc4>
 8005696:	4631      	mov	r1, r6
 8005698:	e7de      	b.n	8005658 <__gethex+0xe8>
 800569a:	4629      	mov	r1, r5
 800569c:	eba6 0309 	sub.w	r3, r6, r9
 80056a0:	3b01      	subs	r3, #1
 80056a2:	2b07      	cmp	r3, #7
 80056a4:	dc0a      	bgt.n	80056bc <__gethex+0x14c>
 80056a6:	9801      	ldr	r0, [sp, #4]
 80056a8:	f000 fafc 	bl	8005ca4 <_Balloc>
 80056ac:	4604      	mov	r4, r0
 80056ae:	b940      	cbnz	r0, 80056c2 <__gethex+0x152>
 80056b0:	4602      	mov	r2, r0
 80056b2:	21e4      	movs	r1, #228	@ 0xe4
 80056b4:	4b5b      	ldr	r3, [pc, #364]	@ (8005824 <__gethex+0x2b4>)
 80056b6:	485c      	ldr	r0, [pc, #368]	@ (8005828 <__gethex+0x2b8>)
 80056b8:	f001 f9ca 	bl	8006a50 <__assert_func>
 80056bc:	3101      	adds	r1, #1
 80056be:	105b      	asrs	r3, r3, #1
 80056c0:	e7ef      	b.n	80056a2 <__gethex+0x132>
 80056c2:	2300      	movs	r3, #0
 80056c4:	f100 0a14 	add.w	sl, r0, #20
 80056c8:	4655      	mov	r5, sl
 80056ca:	469b      	mov	fp, r3
 80056cc:	45b1      	cmp	r9, r6
 80056ce:	d337      	bcc.n	8005740 <__gethex+0x1d0>
 80056d0:	f845 bb04 	str.w	fp, [r5], #4
 80056d4:	eba5 050a 	sub.w	r5, r5, sl
 80056d8:	10ad      	asrs	r5, r5, #2
 80056da:	6125      	str	r5, [r4, #16]
 80056dc:	4658      	mov	r0, fp
 80056de:	f000 fbd3 	bl	8005e88 <__hi0bits>
 80056e2:	016d      	lsls	r5, r5, #5
 80056e4:	f8d8 6000 	ldr.w	r6, [r8]
 80056e8:	1a2d      	subs	r5, r5, r0
 80056ea:	42b5      	cmp	r5, r6
 80056ec:	dd54      	ble.n	8005798 <__gethex+0x228>
 80056ee:	1bad      	subs	r5, r5, r6
 80056f0:	4629      	mov	r1, r5
 80056f2:	4620      	mov	r0, r4
 80056f4:	f000 ff55 	bl	80065a2 <__any_on>
 80056f8:	4681      	mov	r9, r0
 80056fa:	b178      	cbz	r0, 800571c <__gethex+0x1ac>
 80056fc:	f04f 0901 	mov.w	r9, #1
 8005700:	1e6b      	subs	r3, r5, #1
 8005702:	1159      	asrs	r1, r3, #5
 8005704:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 8005708:	f003 021f 	and.w	r2, r3, #31
 800570c:	fa09 f202 	lsl.w	r2, r9, r2
 8005710:	420a      	tst	r2, r1
 8005712:	d003      	beq.n	800571c <__gethex+0x1ac>
 8005714:	454b      	cmp	r3, r9
 8005716:	dc36      	bgt.n	8005786 <__gethex+0x216>
 8005718:	f04f 0902 	mov.w	r9, #2
 800571c:	4629      	mov	r1, r5
 800571e:	4620      	mov	r0, r4
 8005720:	f7ff febe 	bl	80054a0 <rshift>
 8005724:	442f      	add	r7, r5
 8005726:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800572a:	42bb      	cmp	r3, r7
 800572c:	da42      	bge.n	80057b4 <__gethex+0x244>
 800572e:	4621      	mov	r1, r4
 8005730:	9801      	ldr	r0, [sp, #4]
 8005732:	f000 faf7 	bl	8005d24 <_Bfree>
 8005736:	2300      	movs	r3, #0
 8005738:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800573a:	25a3      	movs	r5, #163	@ 0xa3
 800573c:	6013      	str	r3, [r2, #0]
 800573e:	e793      	b.n	8005668 <__gethex+0xf8>
 8005740:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 8005744:	2a2e      	cmp	r2, #46	@ 0x2e
 8005746:	d012      	beq.n	800576e <__gethex+0x1fe>
 8005748:	2b20      	cmp	r3, #32
 800574a:	d104      	bne.n	8005756 <__gethex+0x1e6>
 800574c:	f845 bb04 	str.w	fp, [r5], #4
 8005750:	f04f 0b00 	mov.w	fp, #0
 8005754:	465b      	mov	r3, fp
 8005756:	7830      	ldrb	r0, [r6, #0]
 8005758:	9303      	str	r3, [sp, #12]
 800575a:	f7ff fef4 	bl	8005546 <__hexdig_fun>
 800575e:	9b03      	ldr	r3, [sp, #12]
 8005760:	f000 000f 	and.w	r0, r0, #15
 8005764:	4098      	lsls	r0, r3
 8005766:	ea4b 0b00 	orr.w	fp, fp, r0
 800576a:	3304      	adds	r3, #4
 800576c:	e7ae      	b.n	80056cc <__gethex+0x15c>
 800576e:	45b1      	cmp	r9, r6
 8005770:	d8ea      	bhi.n	8005748 <__gethex+0x1d8>
 8005772:	2201      	movs	r2, #1
 8005774:	4630      	mov	r0, r6
 8005776:	492a      	ldr	r1, [pc, #168]	@ (8005820 <__gethex+0x2b0>)
 8005778:	9303      	str	r3, [sp, #12]
 800577a:	f7fe ff03 	bl	8004584 <strncmp>
 800577e:	9b03      	ldr	r3, [sp, #12]
 8005780:	2800      	cmp	r0, #0
 8005782:	d1e1      	bne.n	8005748 <__gethex+0x1d8>
 8005784:	e7a2      	b.n	80056cc <__gethex+0x15c>
 8005786:	4620      	mov	r0, r4
 8005788:	1ea9      	subs	r1, r5, #2
 800578a:	f000 ff0a 	bl	80065a2 <__any_on>
 800578e:	2800      	cmp	r0, #0
 8005790:	d0c2      	beq.n	8005718 <__gethex+0x1a8>
 8005792:	f04f 0903 	mov.w	r9, #3
 8005796:	e7c1      	b.n	800571c <__gethex+0x1ac>
 8005798:	da09      	bge.n	80057ae <__gethex+0x23e>
 800579a:	1b75      	subs	r5, r6, r5
 800579c:	4621      	mov	r1, r4
 800579e:	462a      	mov	r2, r5
 80057a0:	9801      	ldr	r0, [sp, #4]
 80057a2:	f000 fccf 	bl	8006144 <__lshift>
 80057a6:	4604      	mov	r4, r0
 80057a8:	1b7f      	subs	r7, r7, r5
 80057aa:	f100 0a14 	add.w	sl, r0, #20
 80057ae:	f04f 0900 	mov.w	r9, #0
 80057b2:	e7b8      	b.n	8005726 <__gethex+0x1b6>
 80057b4:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80057b8:	42bd      	cmp	r5, r7
 80057ba:	dd6f      	ble.n	800589c <__gethex+0x32c>
 80057bc:	1bed      	subs	r5, r5, r7
 80057be:	42ae      	cmp	r6, r5
 80057c0:	dc34      	bgt.n	800582c <__gethex+0x2bc>
 80057c2:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80057c6:	2b02      	cmp	r3, #2
 80057c8:	d022      	beq.n	8005810 <__gethex+0x2a0>
 80057ca:	2b03      	cmp	r3, #3
 80057cc:	d024      	beq.n	8005818 <__gethex+0x2a8>
 80057ce:	2b01      	cmp	r3, #1
 80057d0:	d115      	bne.n	80057fe <__gethex+0x28e>
 80057d2:	42ae      	cmp	r6, r5
 80057d4:	d113      	bne.n	80057fe <__gethex+0x28e>
 80057d6:	2e01      	cmp	r6, #1
 80057d8:	d10b      	bne.n	80057f2 <__gethex+0x282>
 80057da:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80057de:	9a02      	ldr	r2, [sp, #8]
 80057e0:	2562      	movs	r5, #98	@ 0x62
 80057e2:	6013      	str	r3, [r2, #0]
 80057e4:	2301      	movs	r3, #1
 80057e6:	6123      	str	r3, [r4, #16]
 80057e8:	f8ca 3000 	str.w	r3, [sl]
 80057ec:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80057ee:	601c      	str	r4, [r3, #0]
 80057f0:	e73a      	b.n	8005668 <__gethex+0xf8>
 80057f2:	4620      	mov	r0, r4
 80057f4:	1e71      	subs	r1, r6, #1
 80057f6:	f000 fed4 	bl	80065a2 <__any_on>
 80057fa:	2800      	cmp	r0, #0
 80057fc:	d1ed      	bne.n	80057da <__gethex+0x26a>
 80057fe:	4621      	mov	r1, r4
 8005800:	9801      	ldr	r0, [sp, #4]
 8005802:	f000 fa8f 	bl	8005d24 <_Bfree>
 8005806:	2300      	movs	r3, #0
 8005808:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800580a:	2550      	movs	r5, #80	@ 0x50
 800580c:	6013      	str	r3, [r2, #0]
 800580e:	e72b      	b.n	8005668 <__gethex+0xf8>
 8005810:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005812:	2b00      	cmp	r3, #0
 8005814:	d1f3      	bne.n	80057fe <__gethex+0x28e>
 8005816:	e7e0      	b.n	80057da <__gethex+0x26a>
 8005818:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800581a:	2b00      	cmp	r3, #0
 800581c:	d1dd      	bne.n	80057da <__gethex+0x26a>
 800581e:	e7ee      	b.n	80057fe <__gethex+0x28e>
 8005820:	080073f8 	.word	0x080073f8
 8005824:	080074b2 	.word	0x080074b2
 8005828:	080074c3 	.word	0x080074c3
 800582c:	1e6f      	subs	r7, r5, #1
 800582e:	f1b9 0f00 	cmp.w	r9, #0
 8005832:	d130      	bne.n	8005896 <__gethex+0x326>
 8005834:	b127      	cbz	r7, 8005840 <__gethex+0x2d0>
 8005836:	4639      	mov	r1, r7
 8005838:	4620      	mov	r0, r4
 800583a:	f000 feb2 	bl	80065a2 <__any_on>
 800583e:	4681      	mov	r9, r0
 8005840:	2301      	movs	r3, #1
 8005842:	4629      	mov	r1, r5
 8005844:	1b76      	subs	r6, r6, r5
 8005846:	2502      	movs	r5, #2
 8005848:	117a      	asrs	r2, r7, #5
 800584a:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 800584e:	f007 071f 	and.w	r7, r7, #31
 8005852:	40bb      	lsls	r3, r7
 8005854:	4213      	tst	r3, r2
 8005856:	4620      	mov	r0, r4
 8005858:	bf18      	it	ne
 800585a:	f049 0902 	orrne.w	r9, r9, #2
 800585e:	f7ff fe1f 	bl	80054a0 <rshift>
 8005862:	f8d8 7004 	ldr.w	r7, [r8, #4]
 8005866:	f1b9 0f00 	cmp.w	r9, #0
 800586a:	d047      	beq.n	80058fc <__gethex+0x38c>
 800586c:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8005870:	2b02      	cmp	r3, #2
 8005872:	d015      	beq.n	80058a0 <__gethex+0x330>
 8005874:	2b03      	cmp	r3, #3
 8005876:	d017      	beq.n	80058a8 <__gethex+0x338>
 8005878:	2b01      	cmp	r3, #1
 800587a:	d109      	bne.n	8005890 <__gethex+0x320>
 800587c:	f019 0f02 	tst.w	r9, #2
 8005880:	d006      	beq.n	8005890 <__gethex+0x320>
 8005882:	f8da 3000 	ldr.w	r3, [sl]
 8005886:	ea49 0903 	orr.w	r9, r9, r3
 800588a:	f019 0f01 	tst.w	r9, #1
 800588e:	d10e      	bne.n	80058ae <__gethex+0x33e>
 8005890:	f045 0510 	orr.w	r5, r5, #16
 8005894:	e032      	b.n	80058fc <__gethex+0x38c>
 8005896:	f04f 0901 	mov.w	r9, #1
 800589a:	e7d1      	b.n	8005840 <__gethex+0x2d0>
 800589c:	2501      	movs	r5, #1
 800589e:	e7e2      	b.n	8005866 <__gethex+0x2f6>
 80058a0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80058a2:	f1c3 0301 	rsb	r3, r3, #1
 80058a6:	930f      	str	r3, [sp, #60]	@ 0x3c
 80058a8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80058aa:	2b00      	cmp	r3, #0
 80058ac:	d0f0      	beq.n	8005890 <__gethex+0x320>
 80058ae:	f04f 0c00 	mov.w	ip, #0
 80058b2:	f8d4 b010 	ldr.w	fp, [r4, #16]
 80058b6:	f104 0314 	add.w	r3, r4, #20
 80058ba:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 80058be:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 80058c2:	4618      	mov	r0, r3
 80058c4:	f853 2b04 	ldr.w	r2, [r3], #4
 80058c8:	f1b2 3fff 	cmp.w	r2, #4294967295
 80058cc:	d01b      	beq.n	8005906 <__gethex+0x396>
 80058ce:	3201      	adds	r2, #1
 80058d0:	6002      	str	r2, [r0, #0]
 80058d2:	2d02      	cmp	r5, #2
 80058d4:	f104 0314 	add.w	r3, r4, #20
 80058d8:	d13c      	bne.n	8005954 <__gethex+0x3e4>
 80058da:	f8d8 2000 	ldr.w	r2, [r8]
 80058de:	3a01      	subs	r2, #1
 80058e0:	42b2      	cmp	r2, r6
 80058e2:	d109      	bne.n	80058f8 <__gethex+0x388>
 80058e4:	2201      	movs	r2, #1
 80058e6:	1171      	asrs	r1, r6, #5
 80058e8:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80058ec:	f006 061f 	and.w	r6, r6, #31
 80058f0:	fa02 f606 	lsl.w	r6, r2, r6
 80058f4:	421e      	tst	r6, r3
 80058f6:	d13a      	bne.n	800596e <__gethex+0x3fe>
 80058f8:	f045 0520 	orr.w	r5, r5, #32
 80058fc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80058fe:	601c      	str	r4, [r3, #0]
 8005900:	9b02      	ldr	r3, [sp, #8]
 8005902:	601f      	str	r7, [r3, #0]
 8005904:	e6b0      	b.n	8005668 <__gethex+0xf8>
 8005906:	4299      	cmp	r1, r3
 8005908:	f843 cc04 	str.w	ip, [r3, #-4]
 800590c:	d8d9      	bhi.n	80058c2 <__gethex+0x352>
 800590e:	68a3      	ldr	r3, [r4, #8]
 8005910:	459b      	cmp	fp, r3
 8005912:	db17      	blt.n	8005944 <__gethex+0x3d4>
 8005914:	6861      	ldr	r1, [r4, #4]
 8005916:	9801      	ldr	r0, [sp, #4]
 8005918:	3101      	adds	r1, #1
 800591a:	f000 f9c3 	bl	8005ca4 <_Balloc>
 800591e:	4681      	mov	r9, r0
 8005920:	b918      	cbnz	r0, 800592a <__gethex+0x3ba>
 8005922:	4602      	mov	r2, r0
 8005924:	2184      	movs	r1, #132	@ 0x84
 8005926:	4b19      	ldr	r3, [pc, #100]	@ (800598c <__gethex+0x41c>)
 8005928:	e6c5      	b.n	80056b6 <__gethex+0x146>
 800592a:	6922      	ldr	r2, [r4, #16]
 800592c:	f104 010c 	add.w	r1, r4, #12
 8005930:	3202      	adds	r2, #2
 8005932:	0092      	lsls	r2, r2, #2
 8005934:	300c      	adds	r0, #12
 8005936:	f7fe fefa 	bl	800472e <memcpy>
 800593a:	4621      	mov	r1, r4
 800593c:	9801      	ldr	r0, [sp, #4]
 800593e:	f000 f9f1 	bl	8005d24 <_Bfree>
 8005942:	464c      	mov	r4, r9
 8005944:	6923      	ldr	r3, [r4, #16]
 8005946:	1c5a      	adds	r2, r3, #1
 8005948:	6122      	str	r2, [r4, #16]
 800594a:	2201      	movs	r2, #1
 800594c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8005950:	615a      	str	r2, [r3, #20]
 8005952:	e7be      	b.n	80058d2 <__gethex+0x362>
 8005954:	6922      	ldr	r2, [r4, #16]
 8005956:	455a      	cmp	r2, fp
 8005958:	dd0b      	ble.n	8005972 <__gethex+0x402>
 800595a:	2101      	movs	r1, #1
 800595c:	4620      	mov	r0, r4
 800595e:	f7ff fd9f 	bl	80054a0 <rshift>
 8005962:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005966:	3701      	adds	r7, #1
 8005968:	42bb      	cmp	r3, r7
 800596a:	f6ff aee0 	blt.w	800572e <__gethex+0x1be>
 800596e:	2501      	movs	r5, #1
 8005970:	e7c2      	b.n	80058f8 <__gethex+0x388>
 8005972:	f016 061f 	ands.w	r6, r6, #31
 8005976:	d0fa      	beq.n	800596e <__gethex+0x3fe>
 8005978:	4453      	add	r3, sl
 800597a:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800597e:	f000 fa83 	bl	8005e88 <__hi0bits>
 8005982:	f1c6 0620 	rsb	r6, r6, #32
 8005986:	42b0      	cmp	r0, r6
 8005988:	dbe7      	blt.n	800595a <__gethex+0x3ea>
 800598a:	e7f0      	b.n	800596e <__gethex+0x3fe>
 800598c:	080074b2 	.word	0x080074b2

08005990 <L_shift>:
 8005990:	f1c2 0208 	rsb	r2, r2, #8
 8005994:	0092      	lsls	r2, r2, #2
 8005996:	b570      	push	{r4, r5, r6, lr}
 8005998:	f1c2 0620 	rsb	r6, r2, #32
 800599c:	6843      	ldr	r3, [r0, #4]
 800599e:	6804      	ldr	r4, [r0, #0]
 80059a0:	fa03 f506 	lsl.w	r5, r3, r6
 80059a4:	432c      	orrs	r4, r5
 80059a6:	40d3      	lsrs	r3, r2
 80059a8:	6004      	str	r4, [r0, #0]
 80059aa:	f840 3f04 	str.w	r3, [r0, #4]!
 80059ae:	4288      	cmp	r0, r1
 80059b0:	d3f4      	bcc.n	800599c <L_shift+0xc>
 80059b2:	bd70      	pop	{r4, r5, r6, pc}

080059b4 <__match>:
 80059b4:	b530      	push	{r4, r5, lr}
 80059b6:	6803      	ldr	r3, [r0, #0]
 80059b8:	3301      	adds	r3, #1
 80059ba:	f811 4b01 	ldrb.w	r4, [r1], #1
 80059be:	b914      	cbnz	r4, 80059c6 <__match+0x12>
 80059c0:	6003      	str	r3, [r0, #0]
 80059c2:	2001      	movs	r0, #1
 80059c4:	bd30      	pop	{r4, r5, pc}
 80059c6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80059ca:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 80059ce:	2d19      	cmp	r5, #25
 80059d0:	bf98      	it	ls
 80059d2:	3220      	addls	r2, #32
 80059d4:	42a2      	cmp	r2, r4
 80059d6:	d0f0      	beq.n	80059ba <__match+0x6>
 80059d8:	2000      	movs	r0, #0
 80059da:	e7f3      	b.n	80059c4 <__match+0x10>

080059dc <__hexnan>:
 80059dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80059e0:	2500      	movs	r5, #0
 80059e2:	680b      	ldr	r3, [r1, #0]
 80059e4:	4682      	mov	sl, r0
 80059e6:	115e      	asrs	r6, r3, #5
 80059e8:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 80059ec:	f013 031f 	ands.w	r3, r3, #31
 80059f0:	bf18      	it	ne
 80059f2:	3604      	addne	r6, #4
 80059f4:	1f37      	subs	r7, r6, #4
 80059f6:	4690      	mov	r8, r2
 80059f8:	46b9      	mov	r9, r7
 80059fa:	463c      	mov	r4, r7
 80059fc:	46ab      	mov	fp, r5
 80059fe:	b087      	sub	sp, #28
 8005a00:	6801      	ldr	r1, [r0, #0]
 8005a02:	9301      	str	r3, [sp, #4]
 8005a04:	f846 5c04 	str.w	r5, [r6, #-4]
 8005a08:	9502      	str	r5, [sp, #8]
 8005a0a:	784a      	ldrb	r2, [r1, #1]
 8005a0c:	1c4b      	adds	r3, r1, #1
 8005a0e:	9303      	str	r3, [sp, #12]
 8005a10:	b342      	cbz	r2, 8005a64 <__hexnan+0x88>
 8005a12:	4610      	mov	r0, r2
 8005a14:	9105      	str	r1, [sp, #20]
 8005a16:	9204      	str	r2, [sp, #16]
 8005a18:	f7ff fd95 	bl	8005546 <__hexdig_fun>
 8005a1c:	2800      	cmp	r0, #0
 8005a1e:	d151      	bne.n	8005ac4 <__hexnan+0xe8>
 8005a20:	9a04      	ldr	r2, [sp, #16]
 8005a22:	9905      	ldr	r1, [sp, #20]
 8005a24:	2a20      	cmp	r2, #32
 8005a26:	d818      	bhi.n	8005a5a <__hexnan+0x7e>
 8005a28:	9b02      	ldr	r3, [sp, #8]
 8005a2a:	459b      	cmp	fp, r3
 8005a2c:	dd13      	ble.n	8005a56 <__hexnan+0x7a>
 8005a2e:	454c      	cmp	r4, r9
 8005a30:	d206      	bcs.n	8005a40 <__hexnan+0x64>
 8005a32:	2d07      	cmp	r5, #7
 8005a34:	dc04      	bgt.n	8005a40 <__hexnan+0x64>
 8005a36:	462a      	mov	r2, r5
 8005a38:	4649      	mov	r1, r9
 8005a3a:	4620      	mov	r0, r4
 8005a3c:	f7ff ffa8 	bl	8005990 <L_shift>
 8005a40:	4544      	cmp	r4, r8
 8005a42:	d952      	bls.n	8005aea <__hexnan+0x10e>
 8005a44:	2300      	movs	r3, #0
 8005a46:	f1a4 0904 	sub.w	r9, r4, #4
 8005a4a:	f844 3c04 	str.w	r3, [r4, #-4]
 8005a4e:	461d      	mov	r5, r3
 8005a50:	464c      	mov	r4, r9
 8005a52:	f8cd b008 	str.w	fp, [sp, #8]
 8005a56:	9903      	ldr	r1, [sp, #12]
 8005a58:	e7d7      	b.n	8005a0a <__hexnan+0x2e>
 8005a5a:	2a29      	cmp	r2, #41	@ 0x29
 8005a5c:	d157      	bne.n	8005b0e <__hexnan+0x132>
 8005a5e:	3102      	adds	r1, #2
 8005a60:	f8ca 1000 	str.w	r1, [sl]
 8005a64:	f1bb 0f00 	cmp.w	fp, #0
 8005a68:	d051      	beq.n	8005b0e <__hexnan+0x132>
 8005a6a:	454c      	cmp	r4, r9
 8005a6c:	d206      	bcs.n	8005a7c <__hexnan+0xa0>
 8005a6e:	2d07      	cmp	r5, #7
 8005a70:	dc04      	bgt.n	8005a7c <__hexnan+0xa0>
 8005a72:	462a      	mov	r2, r5
 8005a74:	4649      	mov	r1, r9
 8005a76:	4620      	mov	r0, r4
 8005a78:	f7ff ff8a 	bl	8005990 <L_shift>
 8005a7c:	4544      	cmp	r4, r8
 8005a7e:	d936      	bls.n	8005aee <__hexnan+0x112>
 8005a80:	4623      	mov	r3, r4
 8005a82:	f1a8 0204 	sub.w	r2, r8, #4
 8005a86:	f853 1b04 	ldr.w	r1, [r3], #4
 8005a8a:	429f      	cmp	r7, r3
 8005a8c:	f842 1f04 	str.w	r1, [r2, #4]!
 8005a90:	d2f9      	bcs.n	8005a86 <__hexnan+0xaa>
 8005a92:	1b3b      	subs	r3, r7, r4
 8005a94:	f023 0303 	bic.w	r3, r3, #3
 8005a98:	3304      	adds	r3, #4
 8005a9a:	3401      	adds	r4, #1
 8005a9c:	3e03      	subs	r6, #3
 8005a9e:	42b4      	cmp	r4, r6
 8005aa0:	bf88      	it	hi
 8005aa2:	2304      	movhi	r3, #4
 8005aa4:	2200      	movs	r2, #0
 8005aa6:	4443      	add	r3, r8
 8005aa8:	f843 2b04 	str.w	r2, [r3], #4
 8005aac:	429f      	cmp	r7, r3
 8005aae:	d2fb      	bcs.n	8005aa8 <__hexnan+0xcc>
 8005ab0:	683b      	ldr	r3, [r7, #0]
 8005ab2:	b91b      	cbnz	r3, 8005abc <__hexnan+0xe0>
 8005ab4:	4547      	cmp	r7, r8
 8005ab6:	d128      	bne.n	8005b0a <__hexnan+0x12e>
 8005ab8:	2301      	movs	r3, #1
 8005aba:	603b      	str	r3, [r7, #0]
 8005abc:	2005      	movs	r0, #5
 8005abe:	b007      	add	sp, #28
 8005ac0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005ac4:	3501      	adds	r5, #1
 8005ac6:	2d08      	cmp	r5, #8
 8005ac8:	f10b 0b01 	add.w	fp, fp, #1
 8005acc:	dd06      	ble.n	8005adc <__hexnan+0x100>
 8005ace:	4544      	cmp	r4, r8
 8005ad0:	d9c1      	bls.n	8005a56 <__hexnan+0x7a>
 8005ad2:	2300      	movs	r3, #0
 8005ad4:	2501      	movs	r5, #1
 8005ad6:	f844 3c04 	str.w	r3, [r4, #-4]
 8005ada:	3c04      	subs	r4, #4
 8005adc:	6822      	ldr	r2, [r4, #0]
 8005ade:	f000 000f 	and.w	r0, r0, #15
 8005ae2:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 8005ae6:	6020      	str	r0, [r4, #0]
 8005ae8:	e7b5      	b.n	8005a56 <__hexnan+0x7a>
 8005aea:	2508      	movs	r5, #8
 8005aec:	e7b3      	b.n	8005a56 <__hexnan+0x7a>
 8005aee:	9b01      	ldr	r3, [sp, #4]
 8005af0:	2b00      	cmp	r3, #0
 8005af2:	d0dd      	beq.n	8005ab0 <__hexnan+0xd4>
 8005af4:	f04f 32ff 	mov.w	r2, #4294967295
 8005af8:	f1c3 0320 	rsb	r3, r3, #32
 8005afc:	40da      	lsrs	r2, r3
 8005afe:	f856 3c04 	ldr.w	r3, [r6, #-4]
 8005b02:	4013      	ands	r3, r2
 8005b04:	f846 3c04 	str.w	r3, [r6, #-4]
 8005b08:	e7d2      	b.n	8005ab0 <__hexnan+0xd4>
 8005b0a:	3f04      	subs	r7, #4
 8005b0c:	e7d0      	b.n	8005ab0 <__hexnan+0xd4>
 8005b0e:	2004      	movs	r0, #4
 8005b10:	e7d5      	b.n	8005abe <__hexnan+0xe2>
	...

08005b14 <malloc>:
 8005b14:	4b02      	ldr	r3, [pc, #8]	@ (8005b20 <malloc+0xc>)
 8005b16:	4601      	mov	r1, r0
 8005b18:	6818      	ldr	r0, [r3, #0]
 8005b1a:	f000 b825 	b.w	8005b68 <_malloc_r>
 8005b1e:	bf00      	nop
 8005b20:	20000180 	.word	0x20000180

08005b24 <sbrk_aligned>:
 8005b24:	b570      	push	{r4, r5, r6, lr}
 8005b26:	4e0f      	ldr	r6, [pc, #60]	@ (8005b64 <sbrk_aligned+0x40>)
 8005b28:	460c      	mov	r4, r1
 8005b2a:	6831      	ldr	r1, [r6, #0]
 8005b2c:	4605      	mov	r5, r0
 8005b2e:	b911      	cbnz	r1, 8005b36 <sbrk_aligned+0x12>
 8005b30:	f000 ff7e 	bl	8006a30 <_sbrk_r>
 8005b34:	6030      	str	r0, [r6, #0]
 8005b36:	4621      	mov	r1, r4
 8005b38:	4628      	mov	r0, r5
 8005b3a:	f000 ff79 	bl	8006a30 <_sbrk_r>
 8005b3e:	1c43      	adds	r3, r0, #1
 8005b40:	d103      	bne.n	8005b4a <sbrk_aligned+0x26>
 8005b42:	f04f 34ff 	mov.w	r4, #4294967295
 8005b46:	4620      	mov	r0, r4
 8005b48:	bd70      	pop	{r4, r5, r6, pc}
 8005b4a:	1cc4      	adds	r4, r0, #3
 8005b4c:	f024 0403 	bic.w	r4, r4, #3
 8005b50:	42a0      	cmp	r0, r4
 8005b52:	d0f8      	beq.n	8005b46 <sbrk_aligned+0x22>
 8005b54:	1a21      	subs	r1, r4, r0
 8005b56:	4628      	mov	r0, r5
 8005b58:	f000 ff6a 	bl	8006a30 <_sbrk_r>
 8005b5c:	3001      	adds	r0, #1
 8005b5e:	d1f2      	bne.n	8005b46 <sbrk_aligned+0x22>
 8005b60:	e7ef      	b.n	8005b42 <sbrk_aligned+0x1e>
 8005b62:	bf00      	nop
 8005b64:	20000548 	.word	0x20000548

08005b68 <_malloc_r>:
 8005b68:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005b6c:	1ccd      	adds	r5, r1, #3
 8005b6e:	f025 0503 	bic.w	r5, r5, #3
 8005b72:	3508      	adds	r5, #8
 8005b74:	2d0c      	cmp	r5, #12
 8005b76:	bf38      	it	cc
 8005b78:	250c      	movcc	r5, #12
 8005b7a:	2d00      	cmp	r5, #0
 8005b7c:	4606      	mov	r6, r0
 8005b7e:	db01      	blt.n	8005b84 <_malloc_r+0x1c>
 8005b80:	42a9      	cmp	r1, r5
 8005b82:	d904      	bls.n	8005b8e <_malloc_r+0x26>
 8005b84:	230c      	movs	r3, #12
 8005b86:	6033      	str	r3, [r6, #0]
 8005b88:	2000      	movs	r0, #0
 8005b8a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005b8e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8005c64 <_malloc_r+0xfc>
 8005b92:	f000 f87b 	bl	8005c8c <__malloc_lock>
 8005b96:	f8d8 3000 	ldr.w	r3, [r8]
 8005b9a:	461c      	mov	r4, r3
 8005b9c:	bb44      	cbnz	r4, 8005bf0 <_malloc_r+0x88>
 8005b9e:	4629      	mov	r1, r5
 8005ba0:	4630      	mov	r0, r6
 8005ba2:	f7ff ffbf 	bl	8005b24 <sbrk_aligned>
 8005ba6:	1c43      	adds	r3, r0, #1
 8005ba8:	4604      	mov	r4, r0
 8005baa:	d158      	bne.n	8005c5e <_malloc_r+0xf6>
 8005bac:	f8d8 4000 	ldr.w	r4, [r8]
 8005bb0:	4627      	mov	r7, r4
 8005bb2:	2f00      	cmp	r7, #0
 8005bb4:	d143      	bne.n	8005c3e <_malloc_r+0xd6>
 8005bb6:	2c00      	cmp	r4, #0
 8005bb8:	d04b      	beq.n	8005c52 <_malloc_r+0xea>
 8005bba:	6823      	ldr	r3, [r4, #0]
 8005bbc:	4639      	mov	r1, r7
 8005bbe:	4630      	mov	r0, r6
 8005bc0:	eb04 0903 	add.w	r9, r4, r3
 8005bc4:	f000 ff34 	bl	8006a30 <_sbrk_r>
 8005bc8:	4581      	cmp	r9, r0
 8005bca:	d142      	bne.n	8005c52 <_malloc_r+0xea>
 8005bcc:	6821      	ldr	r1, [r4, #0]
 8005bce:	4630      	mov	r0, r6
 8005bd0:	1a6d      	subs	r5, r5, r1
 8005bd2:	4629      	mov	r1, r5
 8005bd4:	f7ff ffa6 	bl	8005b24 <sbrk_aligned>
 8005bd8:	3001      	adds	r0, #1
 8005bda:	d03a      	beq.n	8005c52 <_malloc_r+0xea>
 8005bdc:	6823      	ldr	r3, [r4, #0]
 8005bde:	442b      	add	r3, r5
 8005be0:	6023      	str	r3, [r4, #0]
 8005be2:	f8d8 3000 	ldr.w	r3, [r8]
 8005be6:	685a      	ldr	r2, [r3, #4]
 8005be8:	bb62      	cbnz	r2, 8005c44 <_malloc_r+0xdc>
 8005bea:	f8c8 7000 	str.w	r7, [r8]
 8005bee:	e00f      	b.n	8005c10 <_malloc_r+0xa8>
 8005bf0:	6822      	ldr	r2, [r4, #0]
 8005bf2:	1b52      	subs	r2, r2, r5
 8005bf4:	d420      	bmi.n	8005c38 <_malloc_r+0xd0>
 8005bf6:	2a0b      	cmp	r2, #11
 8005bf8:	d917      	bls.n	8005c2a <_malloc_r+0xc2>
 8005bfa:	1961      	adds	r1, r4, r5
 8005bfc:	42a3      	cmp	r3, r4
 8005bfe:	6025      	str	r5, [r4, #0]
 8005c00:	bf18      	it	ne
 8005c02:	6059      	strne	r1, [r3, #4]
 8005c04:	6863      	ldr	r3, [r4, #4]
 8005c06:	bf08      	it	eq
 8005c08:	f8c8 1000 	streq.w	r1, [r8]
 8005c0c:	5162      	str	r2, [r4, r5]
 8005c0e:	604b      	str	r3, [r1, #4]
 8005c10:	4630      	mov	r0, r6
 8005c12:	f000 f841 	bl	8005c98 <__malloc_unlock>
 8005c16:	f104 000b 	add.w	r0, r4, #11
 8005c1a:	1d23      	adds	r3, r4, #4
 8005c1c:	f020 0007 	bic.w	r0, r0, #7
 8005c20:	1ac2      	subs	r2, r0, r3
 8005c22:	bf1c      	itt	ne
 8005c24:	1a1b      	subne	r3, r3, r0
 8005c26:	50a3      	strne	r3, [r4, r2]
 8005c28:	e7af      	b.n	8005b8a <_malloc_r+0x22>
 8005c2a:	6862      	ldr	r2, [r4, #4]
 8005c2c:	42a3      	cmp	r3, r4
 8005c2e:	bf0c      	ite	eq
 8005c30:	f8c8 2000 	streq.w	r2, [r8]
 8005c34:	605a      	strne	r2, [r3, #4]
 8005c36:	e7eb      	b.n	8005c10 <_malloc_r+0xa8>
 8005c38:	4623      	mov	r3, r4
 8005c3a:	6864      	ldr	r4, [r4, #4]
 8005c3c:	e7ae      	b.n	8005b9c <_malloc_r+0x34>
 8005c3e:	463c      	mov	r4, r7
 8005c40:	687f      	ldr	r7, [r7, #4]
 8005c42:	e7b6      	b.n	8005bb2 <_malloc_r+0x4a>
 8005c44:	461a      	mov	r2, r3
 8005c46:	685b      	ldr	r3, [r3, #4]
 8005c48:	42a3      	cmp	r3, r4
 8005c4a:	d1fb      	bne.n	8005c44 <_malloc_r+0xdc>
 8005c4c:	2300      	movs	r3, #0
 8005c4e:	6053      	str	r3, [r2, #4]
 8005c50:	e7de      	b.n	8005c10 <_malloc_r+0xa8>
 8005c52:	230c      	movs	r3, #12
 8005c54:	4630      	mov	r0, r6
 8005c56:	6033      	str	r3, [r6, #0]
 8005c58:	f000 f81e 	bl	8005c98 <__malloc_unlock>
 8005c5c:	e794      	b.n	8005b88 <_malloc_r+0x20>
 8005c5e:	6005      	str	r5, [r0, #0]
 8005c60:	e7d6      	b.n	8005c10 <_malloc_r+0xa8>
 8005c62:	bf00      	nop
 8005c64:	2000054c 	.word	0x2000054c

08005c68 <__ascii_mbtowc>:
 8005c68:	b082      	sub	sp, #8
 8005c6a:	b901      	cbnz	r1, 8005c6e <__ascii_mbtowc+0x6>
 8005c6c:	a901      	add	r1, sp, #4
 8005c6e:	b142      	cbz	r2, 8005c82 <__ascii_mbtowc+0x1a>
 8005c70:	b14b      	cbz	r3, 8005c86 <__ascii_mbtowc+0x1e>
 8005c72:	7813      	ldrb	r3, [r2, #0]
 8005c74:	600b      	str	r3, [r1, #0]
 8005c76:	7812      	ldrb	r2, [r2, #0]
 8005c78:	1e10      	subs	r0, r2, #0
 8005c7a:	bf18      	it	ne
 8005c7c:	2001      	movne	r0, #1
 8005c7e:	b002      	add	sp, #8
 8005c80:	4770      	bx	lr
 8005c82:	4610      	mov	r0, r2
 8005c84:	e7fb      	b.n	8005c7e <__ascii_mbtowc+0x16>
 8005c86:	f06f 0001 	mvn.w	r0, #1
 8005c8a:	e7f8      	b.n	8005c7e <__ascii_mbtowc+0x16>

08005c8c <__malloc_lock>:
 8005c8c:	4801      	ldr	r0, [pc, #4]	@ (8005c94 <__malloc_lock+0x8>)
 8005c8e:	f7fe bd3e 	b.w	800470e <__retarget_lock_acquire_recursive>
 8005c92:	bf00      	nop
 8005c94:	20000544 	.word	0x20000544

08005c98 <__malloc_unlock>:
 8005c98:	4801      	ldr	r0, [pc, #4]	@ (8005ca0 <__malloc_unlock+0x8>)
 8005c9a:	f7fe bd39 	b.w	8004710 <__retarget_lock_release_recursive>
 8005c9e:	bf00      	nop
 8005ca0:	20000544 	.word	0x20000544

08005ca4 <_Balloc>:
 8005ca4:	b570      	push	{r4, r5, r6, lr}
 8005ca6:	69c6      	ldr	r6, [r0, #28]
 8005ca8:	4604      	mov	r4, r0
 8005caa:	460d      	mov	r5, r1
 8005cac:	b976      	cbnz	r6, 8005ccc <_Balloc+0x28>
 8005cae:	2010      	movs	r0, #16
 8005cb0:	f7ff ff30 	bl	8005b14 <malloc>
 8005cb4:	4602      	mov	r2, r0
 8005cb6:	61e0      	str	r0, [r4, #28]
 8005cb8:	b920      	cbnz	r0, 8005cc4 <_Balloc+0x20>
 8005cba:	216b      	movs	r1, #107	@ 0x6b
 8005cbc:	4b17      	ldr	r3, [pc, #92]	@ (8005d1c <_Balloc+0x78>)
 8005cbe:	4818      	ldr	r0, [pc, #96]	@ (8005d20 <_Balloc+0x7c>)
 8005cc0:	f000 fec6 	bl	8006a50 <__assert_func>
 8005cc4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8005cc8:	6006      	str	r6, [r0, #0]
 8005cca:	60c6      	str	r6, [r0, #12]
 8005ccc:	69e6      	ldr	r6, [r4, #28]
 8005cce:	68f3      	ldr	r3, [r6, #12]
 8005cd0:	b183      	cbz	r3, 8005cf4 <_Balloc+0x50>
 8005cd2:	69e3      	ldr	r3, [r4, #28]
 8005cd4:	68db      	ldr	r3, [r3, #12]
 8005cd6:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8005cda:	b9b8      	cbnz	r0, 8005d0c <_Balloc+0x68>
 8005cdc:	2101      	movs	r1, #1
 8005cde:	fa01 f605 	lsl.w	r6, r1, r5
 8005ce2:	1d72      	adds	r2, r6, #5
 8005ce4:	4620      	mov	r0, r4
 8005ce6:	0092      	lsls	r2, r2, #2
 8005ce8:	f000 fed0 	bl	8006a8c <_calloc_r>
 8005cec:	b160      	cbz	r0, 8005d08 <_Balloc+0x64>
 8005cee:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8005cf2:	e00e      	b.n	8005d12 <_Balloc+0x6e>
 8005cf4:	2221      	movs	r2, #33	@ 0x21
 8005cf6:	2104      	movs	r1, #4
 8005cf8:	4620      	mov	r0, r4
 8005cfa:	f000 fec7 	bl	8006a8c <_calloc_r>
 8005cfe:	69e3      	ldr	r3, [r4, #28]
 8005d00:	60f0      	str	r0, [r6, #12]
 8005d02:	68db      	ldr	r3, [r3, #12]
 8005d04:	2b00      	cmp	r3, #0
 8005d06:	d1e4      	bne.n	8005cd2 <_Balloc+0x2e>
 8005d08:	2000      	movs	r0, #0
 8005d0a:	bd70      	pop	{r4, r5, r6, pc}
 8005d0c:	6802      	ldr	r2, [r0, #0]
 8005d0e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8005d12:	2300      	movs	r3, #0
 8005d14:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8005d18:	e7f7      	b.n	8005d0a <_Balloc+0x66>
 8005d1a:	bf00      	nop
 8005d1c:	08007443 	.word	0x08007443
 8005d20:	08007523 	.word	0x08007523

08005d24 <_Bfree>:
 8005d24:	b570      	push	{r4, r5, r6, lr}
 8005d26:	69c6      	ldr	r6, [r0, #28]
 8005d28:	4605      	mov	r5, r0
 8005d2a:	460c      	mov	r4, r1
 8005d2c:	b976      	cbnz	r6, 8005d4c <_Bfree+0x28>
 8005d2e:	2010      	movs	r0, #16
 8005d30:	f7ff fef0 	bl	8005b14 <malloc>
 8005d34:	4602      	mov	r2, r0
 8005d36:	61e8      	str	r0, [r5, #28]
 8005d38:	b920      	cbnz	r0, 8005d44 <_Bfree+0x20>
 8005d3a:	218f      	movs	r1, #143	@ 0x8f
 8005d3c:	4b08      	ldr	r3, [pc, #32]	@ (8005d60 <_Bfree+0x3c>)
 8005d3e:	4809      	ldr	r0, [pc, #36]	@ (8005d64 <_Bfree+0x40>)
 8005d40:	f000 fe86 	bl	8006a50 <__assert_func>
 8005d44:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8005d48:	6006      	str	r6, [r0, #0]
 8005d4a:	60c6      	str	r6, [r0, #12]
 8005d4c:	b13c      	cbz	r4, 8005d5e <_Bfree+0x3a>
 8005d4e:	69eb      	ldr	r3, [r5, #28]
 8005d50:	6862      	ldr	r2, [r4, #4]
 8005d52:	68db      	ldr	r3, [r3, #12]
 8005d54:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8005d58:	6021      	str	r1, [r4, #0]
 8005d5a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8005d5e:	bd70      	pop	{r4, r5, r6, pc}
 8005d60:	08007443 	.word	0x08007443
 8005d64:	08007523 	.word	0x08007523

08005d68 <__multadd>:
 8005d68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005d6c:	4607      	mov	r7, r0
 8005d6e:	460c      	mov	r4, r1
 8005d70:	461e      	mov	r6, r3
 8005d72:	2000      	movs	r0, #0
 8005d74:	690d      	ldr	r5, [r1, #16]
 8005d76:	f101 0c14 	add.w	ip, r1, #20
 8005d7a:	f8dc 3000 	ldr.w	r3, [ip]
 8005d7e:	3001      	adds	r0, #1
 8005d80:	b299      	uxth	r1, r3
 8005d82:	fb02 6101 	mla	r1, r2, r1, r6
 8005d86:	0c1e      	lsrs	r6, r3, #16
 8005d88:	0c0b      	lsrs	r3, r1, #16
 8005d8a:	fb02 3306 	mla	r3, r2, r6, r3
 8005d8e:	b289      	uxth	r1, r1
 8005d90:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8005d94:	4285      	cmp	r5, r0
 8005d96:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8005d9a:	f84c 1b04 	str.w	r1, [ip], #4
 8005d9e:	dcec      	bgt.n	8005d7a <__multadd+0x12>
 8005da0:	b30e      	cbz	r6, 8005de6 <__multadd+0x7e>
 8005da2:	68a3      	ldr	r3, [r4, #8]
 8005da4:	42ab      	cmp	r3, r5
 8005da6:	dc19      	bgt.n	8005ddc <__multadd+0x74>
 8005da8:	6861      	ldr	r1, [r4, #4]
 8005daa:	4638      	mov	r0, r7
 8005dac:	3101      	adds	r1, #1
 8005dae:	f7ff ff79 	bl	8005ca4 <_Balloc>
 8005db2:	4680      	mov	r8, r0
 8005db4:	b928      	cbnz	r0, 8005dc2 <__multadd+0x5a>
 8005db6:	4602      	mov	r2, r0
 8005db8:	21ba      	movs	r1, #186	@ 0xba
 8005dba:	4b0c      	ldr	r3, [pc, #48]	@ (8005dec <__multadd+0x84>)
 8005dbc:	480c      	ldr	r0, [pc, #48]	@ (8005df0 <__multadd+0x88>)
 8005dbe:	f000 fe47 	bl	8006a50 <__assert_func>
 8005dc2:	6922      	ldr	r2, [r4, #16]
 8005dc4:	f104 010c 	add.w	r1, r4, #12
 8005dc8:	3202      	adds	r2, #2
 8005dca:	0092      	lsls	r2, r2, #2
 8005dcc:	300c      	adds	r0, #12
 8005dce:	f7fe fcae 	bl	800472e <memcpy>
 8005dd2:	4621      	mov	r1, r4
 8005dd4:	4638      	mov	r0, r7
 8005dd6:	f7ff ffa5 	bl	8005d24 <_Bfree>
 8005dda:	4644      	mov	r4, r8
 8005ddc:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8005de0:	3501      	adds	r5, #1
 8005de2:	615e      	str	r6, [r3, #20]
 8005de4:	6125      	str	r5, [r4, #16]
 8005de6:	4620      	mov	r0, r4
 8005de8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005dec:	080074b2 	.word	0x080074b2
 8005df0:	08007523 	.word	0x08007523

08005df4 <__s2b>:
 8005df4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005df8:	4615      	mov	r5, r2
 8005dfa:	2209      	movs	r2, #9
 8005dfc:	461f      	mov	r7, r3
 8005dfe:	3308      	adds	r3, #8
 8005e00:	460c      	mov	r4, r1
 8005e02:	fb93 f3f2 	sdiv	r3, r3, r2
 8005e06:	4606      	mov	r6, r0
 8005e08:	2201      	movs	r2, #1
 8005e0a:	2100      	movs	r1, #0
 8005e0c:	429a      	cmp	r2, r3
 8005e0e:	db09      	blt.n	8005e24 <__s2b+0x30>
 8005e10:	4630      	mov	r0, r6
 8005e12:	f7ff ff47 	bl	8005ca4 <_Balloc>
 8005e16:	b940      	cbnz	r0, 8005e2a <__s2b+0x36>
 8005e18:	4602      	mov	r2, r0
 8005e1a:	21d3      	movs	r1, #211	@ 0xd3
 8005e1c:	4b18      	ldr	r3, [pc, #96]	@ (8005e80 <__s2b+0x8c>)
 8005e1e:	4819      	ldr	r0, [pc, #100]	@ (8005e84 <__s2b+0x90>)
 8005e20:	f000 fe16 	bl	8006a50 <__assert_func>
 8005e24:	0052      	lsls	r2, r2, #1
 8005e26:	3101      	adds	r1, #1
 8005e28:	e7f0      	b.n	8005e0c <__s2b+0x18>
 8005e2a:	9b08      	ldr	r3, [sp, #32]
 8005e2c:	2d09      	cmp	r5, #9
 8005e2e:	6143      	str	r3, [r0, #20]
 8005e30:	f04f 0301 	mov.w	r3, #1
 8005e34:	6103      	str	r3, [r0, #16]
 8005e36:	dd16      	ble.n	8005e66 <__s2b+0x72>
 8005e38:	f104 0909 	add.w	r9, r4, #9
 8005e3c:	46c8      	mov	r8, r9
 8005e3e:	442c      	add	r4, r5
 8005e40:	f818 3b01 	ldrb.w	r3, [r8], #1
 8005e44:	4601      	mov	r1, r0
 8005e46:	220a      	movs	r2, #10
 8005e48:	4630      	mov	r0, r6
 8005e4a:	3b30      	subs	r3, #48	@ 0x30
 8005e4c:	f7ff ff8c 	bl	8005d68 <__multadd>
 8005e50:	45a0      	cmp	r8, r4
 8005e52:	d1f5      	bne.n	8005e40 <__s2b+0x4c>
 8005e54:	f1a5 0408 	sub.w	r4, r5, #8
 8005e58:	444c      	add	r4, r9
 8005e5a:	1b2d      	subs	r5, r5, r4
 8005e5c:	1963      	adds	r3, r4, r5
 8005e5e:	42bb      	cmp	r3, r7
 8005e60:	db04      	blt.n	8005e6c <__s2b+0x78>
 8005e62:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005e66:	2509      	movs	r5, #9
 8005e68:	340a      	adds	r4, #10
 8005e6a:	e7f6      	b.n	8005e5a <__s2b+0x66>
 8005e6c:	f814 3b01 	ldrb.w	r3, [r4], #1
 8005e70:	4601      	mov	r1, r0
 8005e72:	220a      	movs	r2, #10
 8005e74:	4630      	mov	r0, r6
 8005e76:	3b30      	subs	r3, #48	@ 0x30
 8005e78:	f7ff ff76 	bl	8005d68 <__multadd>
 8005e7c:	e7ee      	b.n	8005e5c <__s2b+0x68>
 8005e7e:	bf00      	nop
 8005e80:	080074b2 	.word	0x080074b2
 8005e84:	08007523 	.word	0x08007523

08005e88 <__hi0bits>:
 8005e88:	4603      	mov	r3, r0
 8005e8a:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8005e8e:	bf3a      	itte	cc
 8005e90:	0403      	lslcc	r3, r0, #16
 8005e92:	2010      	movcc	r0, #16
 8005e94:	2000      	movcs	r0, #0
 8005e96:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8005e9a:	bf3c      	itt	cc
 8005e9c:	021b      	lslcc	r3, r3, #8
 8005e9e:	3008      	addcc	r0, #8
 8005ea0:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8005ea4:	bf3c      	itt	cc
 8005ea6:	011b      	lslcc	r3, r3, #4
 8005ea8:	3004      	addcc	r0, #4
 8005eaa:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005eae:	bf3c      	itt	cc
 8005eb0:	009b      	lslcc	r3, r3, #2
 8005eb2:	3002      	addcc	r0, #2
 8005eb4:	2b00      	cmp	r3, #0
 8005eb6:	db05      	blt.n	8005ec4 <__hi0bits+0x3c>
 8005eb8:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8005ebc:	f100 0001 	add.w	r0, r0, #1
 8005ec0:	bf08      	it	eq
 8005ec2:	2020      	moveq	r0, #32
 8005ec4:	4770      	bx	lr

08005ec6 <__lo0bits>:
 8005ec6:	6803      	ldr	r3, [r0, #0]
 8005ec8:	4602      	mov	r2, r0
 8005eca:	f013 0007 	ands.w	r0, r3, #7
 8005ece:	d00b      	beq.n	8005ee8 <__lo0bits+0x22>
 8005ed0:	07d9      	lsls	r1, r3, #31
 8005ed2:	d421      	bmi.n	8005f18 <__lo0bits+0x52>
 8005ed4:	0798      	lsls	r0, r3, #30
 8005ed6:	bf49      	itett	mi
 8005ed8:	085b      	lsrmi	r3, r3, #1
 8005eda:	089b      	lsrpl	r3, r3, #2
 8005edc:	2001      	movmi	r0, #1
 8005ede:	6013      	strmi	r3, [r2, #0]
 8005ee0:	bf5c      	itt	pl
 8005ee2:	2002      	movpl	r0, #2
 8005ee4:	6013      	strpl	r3, [r2, #0]
 8005ee6:	4770      	bx	lr
 8005ee8:	b299      	uxth	r1, r3
 8005eea:	b909      	cbnz	r1, 8005ef0 <__lo0bits+0x2a>
 8005eec:	2010      	movs	r0, #16
 8005eee:	0c1b      	lsrs	r3, r3, #16
 8005ef0:	b2d9      	uxtb	r1, r3
 8005ef2:	b909      	cbnz	r1, 8005ef8 <__lo0bits+0x32>
 8005ef4:	3008      	adds	r0, #8
 8005ef6:	0a1b      	lsrs	r3, r3, #8
 8005ef8:	0719      	lsls	r1, r3, #28
 8005efa:	bf04      	itt	eq
 8005efc:	091b      	lsreq	r3, r3, #4
 8005efe:	3004      	addeq	r0, #4
 8005f00:	0799      	lsls	r1, r3, #30
 8005f02:	bf04      	itt	eq
 8005f04:	089b      	lsreq	r3, r3, #2
 8005f06:	3002      	addeq	r0, #2
 8005f08:	07d9      	lsls	r1, r3, #31
 8005f0a:	d403      	bmi.n	8005f14 <__lo0bits+0x4e>
 8005f0c:	085b      	lsrs	r3, r3, #1
 8005f0e:	f100 0001 	add.w	r0, r0, #1
 8005f12:	d003      	beq.n	8005f1c <__lo0bits+0x56>
 8005f14:	6013      	str	r3, [r2, #0]
 8005f16:	4770      	bx	lr
 8005f18:	2000      	movs	r0, #0
 8005f1a:	4770      	bx	lr
 8005f1c:	2020      	movs	r0, #32
 8005f1e:	4770      	bx	lr

08005f20 <__i2b>:
 8005f20:	b510      	push	{r4, lr}
 8005f22:	460c      	mov	r4, r1
 8005f24:	2101      	movs	r1, #1
 8005f26:	f7ff febd 	bl	8005ca4 <_Balloc>
 8005f2a:	4602      	mov	r2, r0
 8005f2c:	b928      	cbnz	r0, 8005f3a <__i2b+0x1a>
 8005f2e:	f240 1145 	movw	r1, #325	@ 0x145
 8005f32:	4b04      	ldr	r3, [pc, #16]	@ (8005f44 <__i2b+0x24>)
 8005f34:	4804      	ldr	r0, [pc, #16]	@ (8005f48 <__i2b+0x28>)
 8005f36:	f000 fd8b 	bl	8006a50 <__assert_func>
 8005f3a:	2301      	movs	r3, #1
 8005f3c:	6144      	str	r4, [r0, #20]
 8005f3e:	6103      	str	r3, [r0, #16]
 8005f40:	bd10      	pop	{r4, pc}
 8005f42:	bf00      	nop
 8005f44:	080074b2 	.word	0x080074b2
 8005f48:	08007523 	.word	0x08007523

08005f4c <__multiply>:
 8005f4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005f50:	4617      	mov	r7, r2
 8005f52:	690a      	ldr	r2, [r1, #16]
 8005f54:	693b      	ldr	r3, [r7, #16]
 8005f56:	4689      	mov	r9, r1
 8005f58:	429a      	cmp	r2, r3
 8005f5a:	bfa2      	ittt	ge
 8005f5c:	463b      	movge	r3, r7
 8005f5e:	460f      	movge	r7, r1
 8005f60:	4699      	movge	r9, r3
 8005f62:	693d      	ldr	r5, [r7, #16]
 8005f64:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8005f68:	68bb      	ldr	r3, [r7, #8]
 8005f6a:	6879      	ldr	r1, [r7, #4]
 8005f6c:	eb05 060a 	add.w	r6, r5, sl
 8005f70:	42b3      	cmp	r3, r6
 8005f72:	b085      	sub	sp, #20
 8005f74:	bfb8      	it	lt
 8005f76:	3101      	addlt	r1, #1
 8005f78:	f7ff fe94 	bl	8005ca4 <_Balloc>
 8005f7c:	b930      	cbnz	r0, 8005f8c <__multiply+0x40>
 8005f7e:	4602      	mov	r2, r0
 8005f80:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8005f84:	4b40      	ldr	r3, [pc, #256]	@ (8006088 <__multiply+0x13c>)
 8005f86:	4841      	ldr	r0, [pc, #260]	@ (800608c <__multiply+0x140>)
 8005f88:	f000 fd62 	bl	8006a50 <__assert_func>
 8005f8c:	f100 0414 	add.w	r4, r0, #20
 8005f90:	4623      	mov	r3, r4
 8005f92:	2200      	movs	r2, #0
 8005f94:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 8005f98:	4573      	cmp	r3, lr
 8005f9a:	d320      	bcc.n	8005fde <__multiply+0x92>
 8005f9c:	f107 0814 	add.w	r8, r7, #20
 8005fa0:	f109 0114 	add.w	r1, r9, #20
 8005fa4:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 8005fa8:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 8005fac:	9302      	str	r3, [sp, #8]
 8005fae:	1beb      	subs	r3, r5, r7
 8005fb0:	3b15      	subs	r3, #21
 8005fb2:	f023 0303 	bic.w	r3, r3, #3
 8005fb6:	3304      	adds	r3, #4
 8005fb8:	3715      	adds	r7, #21
 8005fba:	42bd      	cmp	r5, r7
 8005fbc:	bf38      	it	cc
 8005fbe:	2304      	movcc	r3, #4
 8005fc0:	9301      	str	r3, [sp, #4]
 8005fc2:	9b02      	ldr	r3, [sp, #8]
 8005fc4:	9103      	str	r1, [sp, #12]
 8005fc6:	428b      	cmp	r3, r1
 8005fc8:	d80c      	bhi.n	8005fe4 <__multiply+0x98>
 8005fca:	2e00      	cmp	r6, #0
 8005fcc:	dd03      	ble.n	8005fd6 <__multiply+0x8a>
 8005fce:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8005fd2:	2b00      	cmp	r3, #0
 8005fd4:	d055      	beq.n	8006082 <__multiply+0x136>
 8005fd6:	6106      	str	r6, [r0, #16]
 8005fd8:	b005      	add	sp, #20
 8005fda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005fde:	f843 2b04 	str.w	r2, [r3], #4
 8005fe2:	e7d9      	b.n	8005f98 <__multiply+0x4c>
 8005fe4:	f8b1 a000 	ldrh.w	sl, [r1]
 8005fe8:	f1ba 0f00 	cmp.w	sl, #0
 8005fec:	d01f      	beq.n	800602e <__multiply+0xe2>
 8005fee:	46c4      	mov	ip, r8
 8005ff0:	46a1      	mov	r9, r4
 8005ff2:	2700      	movs	r7, #0
 8005ff4:	f85c 2b04 	ldr.w	r2, [ip], #4
 8005ff8:	f8d9 3000 	ldr.w	r3, [r9]
 8005ffc:	fa1f fb82 	uxth.w	fp, r2
 8006000:	b29b      	uxth	r3, r3
 8006002:	fb0a 330b 	mla	r3, sl, fp, r3
 8006006:	443b      	add	r3, r7
 8006008:	f8d9 7000 	ldr.w	r7, [r9]
 800600c:	0c12      	lsrs	r2, r2, #16
 800600e:	0c3f      	lsrs	r7, r7, #16
 8006010:	fb0a 7202 	mla	r2, sl, r2, r7
 8006014:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 8006018:	b29b      	uxth	r3, r3
 800601a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800601e:	4565      	cmp	r5, ip
 8006020:	ea4f 4712 	mov.w	r7, r2, lsr #16
 8006024:	f849 3b04 	str.w	r3, [r9], #4
 8006028:	d8e4      	bhi.n	8005ff4 <__multiply+0xa8>
 800602a:	9b01      	ldr	r3, [sp, #4]
 800602c:	50e7      	str	r7, [r4, r3]
 800602e:	9b03      	ldr	r3, [sp, #12]
 8006030:	3104      	adds	r1, #4
 8006032:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8006036:	f1b9 0f00 	cmp.w	r9, #0
 800603a:	d020      	beq.n	800607e <__multiply+0x132>
 800603c:	4647      	mov	r7, r8
 800603e:	46a4      	mov	ip, r4
 8006040:	f04f 0a00 	mov.w	sl, #0
 8006044:	6823      	ldr	r3, [r4, #0]
 8006046:	f8b7 b000 	ldrh.w	fp, [r7]
 800604a:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 800604e:	b29b      	uxth	r3, r3
 8006050:	fb09 220b 	mla	r2, r9, fp, r2
 8006054:	4452      	add	r2, sl
 8006056:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800605a:	f84c 3b04 	str.w	r3, [ip], #4
 800605e:	f857 3b04 	ldr.w	r3, [r7], #4
 8006062:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8006066:	f8bc 3000 	ldrh.w	r3, [ip]
 800606a:	42bd      	cmp	r5, r7
 800606c:	fb09 330a 	mla	r3, r9, sl, r3
 8006070:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 8006074:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8006078:	d8e5      	bhi.n	8006046 <__multiply+0xfa>
 800607a:	9a01      	ldr	r2, [sp, #4]
 800607c:	50a3      	str	r3, [r4, r2]
 800607e:	3404      	adds	r4, #4
 8006080:	e79f      	b.n	8005fc2 <__multiply+0x76>
 8006082:	3e01      	subs	r6, #1
 8006084:	e7a1      	b.n	8005fca <__multiply+0x7e>
 8006086:	bf00      	nop
 8006088:	080074b2 	.word	0x080074b2
 800608c:	08007523 	.word	0x08007523

08006090 <__pow5mult>:
 8006090:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006094:	4615      	mov	r5, r2
 8006096:	f012 0203 	ands.w	r2, r2, #3
 800609a:	4607      	mov	r7, r0
 800609c:	460e      	mov	r6, r1
 800609e:	d007      	beq.n	80060b0 <__pow5mult+0x20>
 80060a0:	4c25      	ldr	r4, [pc, #148]	@ (8006138 <__pow5mult+0xa8>)
 80060a2:	3a01      	subs	r2, #1
 80060a4:	2300      	movs	r3, #0
 80060a6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80060aa:	f7ff fe5d 	bl	8005d68 <__multadd>
 80060ae:	4606      	mov	r6, r0
 80060b0:	10ad      	asrs	r5, r5, #2
 80060b2:	d03d      	beq.n	8006130 <__pow5mult+0xa0>
 80060b4:	69fc      	ldr	r4, [r7, #28]
 80060b6:	b97c      	cbnz	r4, 80060d8 <__pow5mult+0x48>
 80060b8:	2010      	movs	r0, #16
 80060ba:	f7ff fd2b 	bl	8005b14 <malloc>
 80060be:	4602      	mov	r2, r0
 80060c0:	61f8      	str	r0, [r7, #28]
 80060c2:	b928      	cbnz	r0, 80060d0 <__pow5mult+0x40>
 80060c4:	f240 11b3 	movw	r1, #435	@ 0x1b3
 80060c8:	4b1c      	ldr	r3, [pc, #112]	@ (800613c <__pow5mult+0xac>)
 80060ca:	481d      	ldr	r0, [pc, #116]	@ (8006140 <__pow5mult+0xb0>)
 80060cc:	f000 fcc0 	bl	8006a50 <__assert_func>
 80060d0:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80060d4:	6004      	str	r4, [r0, #0]
 80060d6:	60c4      	str	r4, [r0, #12]
 80060d8:	f8d7 801c 	ldr.w	r8, [r7, #28]
 80060dc:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80060e0:	b94c      	cbnz	r4, 80060f6 <__pow5mult+0x66>
 80060e2:	f240 2171 	movw	r1, #625	@ 0x271
 80060e6:	4638      	mov	r0, r7
 80060e8:	f7ff ff1a 	bl	8005f20 <__i2b>
 80060ec:	2300      	movs	r3, #0
 80060ee:	4604      	mov	r4, r0
 80060f0:	f8c8 0008 	str.w	r0, [r8, #8]
 80060f4:	6003      	str	r3, [r0, #0]
 80060f6:	f04f 0900 	mov.w	r9, #0
 80060fa:	07eb      	lsls	r3, r5, #31
 80060fc:	d50a      	bpl.n	8006114 <__pow5mult+0x84>
 80060fe:	4631      	mov	r1, r6
 8006100:	4622      	mov	r2, r4
 8006102:	4638      	mov	r0, r7
 8006104:	f7ff ff22 	bl	8005f4c <__multiply>
 8006108:	4680      	mov	r8, r0
 800610a:	4631      	mov	r1, r6
 800610c:	4638      	mov	r0, r7
 800610e:	f7ff fe09 	bl	8005d24 <_Bfree>
 8006112:	4646      	mov	r6, r8
 8006114:	106d      	asrs	r5, r5, #1
 8006116:	d00b      	beq.n	8006130 <__pow5mult+0xa0>
 8006118:	6820      	ldr	r0, [r4, #0]
 800611a:	b938      	cbnz	r0, 800612c <__pow5mult+0x9c>
 800611c:	4622      	mov	r2, r4
 800611e:	4621      	mov	r1, r4
 8006120:	4638      	mov	r0, r7
 8006122:	f7ff ff13 	bl	8005f4c <__multiply>
 8006126:	6020      	str	r0, [r4, #0]
 8006128:	f8c0 9000 	str.w	r9, [r0]
 800612c:	4604      	mov	r4, r0
 800612e:	e7e4      	b.n	80060fa <__pow5mult+0x6a>
 8006130:	4630      	mov	r0, r6
 8006132:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006136:	bf00      	nop
 8006138:	08007724 	.word	0x08007724
 800613c:	08007443 	.word	0x08007443
 8006140:	08007523 	.word	0x08007523

08006144 <__lshift>:
 8006144:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006148:	460c      	mov	r4, r1
 800614a:	4607      	mov	r7, r0
 800614c:	4691      	mov	r9, r2
 800614e:	6923      	ldr	r3, [r4, #16]
 8006150:	6849      	ldr	r1, [r1, #4]
 8006152:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8006156:	68a3      	ldr	r3, [r4, #8]
 8006158:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800615c:	f108 0601 	add.w	r6, r8, #1
 8006160:	42b3      	cmp	r3, r6
 8006162:	db0b      	blt.n	800617c <__lshift+0x38>
 8006164:	4638      	mov	r0, r7
 8006166:	f7ff fd9d 	bl	8005ca4 <_Balloc>
 800616a:	4605      	mov	r5, r0
 800616c:	b948      	cbnz	r0, 8006182 <__lshift+0x3e>
 800616e:	4602      	mov	r2, r0
 8006170:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8006174:	4b27      	ldr	r3, [pc, #156]	@ (8006214 <__lshift+0xd0>)
 8006176:	4828      	ldr	r0, [pc, #160]	@ (8006218 <__lshift+0xd4>)
 8006178:	f000 fc6a 	bl	8006a50 <__assert_func>
 800617c:	3101      	adds	r1, #1
 800617e:	005b      	lsls	r3, r3, #1
 8006180:	e7ee      	b.n	8006160 <__lshift+0x1c>
 8006182:	2300      	movs	r3, #0
 8006184:	f100 0114 	add.w	r1, r0, #20
 8006188:	f100 0210 	add.w	r2, r0, #16
 800618c:	4618      	mov	r0, r3
 800618e:	4553      	cmp	r3, sl
 8006190:	db33      	blt.n	80061fa <__lshift+0xb6>
 8006192:	6920      	ldr	r0, [r4, #16]
 8006194:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8006198:	f104 0314 	add.w	r3, r4, #20
 800619c:	f019 091f 	ands.w	r9, r9, #31
 80061a0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80061a4:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80061a8:	d02b      	beq.n	8006202 <__lshift+0xbe>
 80061aa:	468a      	mov	sl, r1
 80061ac:	2200      	movs	r2, #0
 80061ae:	f1c9 0e20 	rsb	lr, r9, #32
 80061b2:	6818      	ldr	r0, [r3, #0]
 80061b4:	fa00 f009 	lsl.w	r0, r0, r9
 80061b8:	4310      	orrs	r0, r2
 80061ba:	f84a 0b04 	str.w	r0, [sl], #4
 80061be:	f853 2b04 	ldr.w	r2, [r3], #4
 80061c2:	459c      	cmp	ip, r3
 80061c4:	fa22 f20e 	lsr.w	r2, r2, lr
 80061c8:	d8f3      	bhi.n	80061b2 <__lshift+0x6e>
 80061ca:	ebac 0304 	sub.w	r3, ip, r4
 80061ce:	3b15      	subs	r3, #21
 80061d0:	f023 0303 	bic.w	r3, r3, #3
 80061d4:	3304      	adds	r3, #4
 80061d6:	f104 0015 	add.w	r0, r4, #21
 80061da:	4560      	cmp	r0, ip
 80061dc:	bf88      	it	hi
 80061de:	2304      	movhi	r3, #4
 80061e0:	50ca      	str	r2, [r1, r3]
 80061e2:	b10a      	cbz	r2, 80061e8 <__lshift+0xa4>
 80061e4:	f108 0602 	add.w	r6, r8, #2
 80061e8:	3e01      	subs	r6, #1
 80061ea:	4638      	mov	r0, r7
 80061ec:	4621      	mov	r1, r4
 80061ee:	612e      	str	r6, [r5, #16]
 80061f0:	f7ff fd98 	bl	8005d24 <_Bfree>
 80061f4:	4628      	mov	r0, r5
 80061f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80061fa:	f842 0f04 	str.w	r0, [r2, #4]!
 80061fe:	3301      	adds	r3, #1
 8006200:	e7c5      	b.n	800618e <__lshift+0x4a>
 8006202:	3904      	subs	r1, #4
 8006204:	f853 2b04 	ldr.w	r2, [r3], #4
 8006208:	459c      	cmp	ip, r3
 800620a:	f841 2f04 	str.w	r2, [r1, #4]!
 800620e:	d8f9      	bhi.n	8006204 <__lshift+0xc0>
 8006210:	e7ea      	b.n	80061e8 <__lshift+0xa4>
 8006212:	bf00      	nop
 8006214:	080074b2 	.word	0x080074b2
 8006218:	08007523 	.word	0x08007523

0800621c <__mcmp>:
 800621c:	4603      	mov	r3, r0
 800621e:	690a      	ldr	r2, [r1, #16]
 8006220:	6900      	ldr	r0, [r0, #16]
 8006222:	b530      	push	{r4, r5, lr}
 8006224:	1a80      	subs	r0, r0, r2
 8006226:	d10e      	bne.n	8006246 <__mcmp+0x2a>
 8006228:	3314      	adds	r3, #20
 800622a:	3114      	adds	r1, #20
 800622c:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8006230:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8006234:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8006238:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 800623c:	4295      	cmp	r5, r2
 800623e:	d003      	beq.n	8006248 <__mcmp+0x2c>
 8006240:	d205      	bcs.n	800624e <__mcmp+0x32>
 8006242:	f04f 30ff 	mov.w	r0, #4294967295
 8006246:	bd30      	pop	{r4, r5, pc}
 8006248:	42a3      	cmp	r3, r4
 800624a:	d3f3      	bcc.n	8006234 <__mcmp+0x18>
 800624c:	e7fb      	b.n	8006246 <__mcmp+0x2a>
 800624e:	2001      	movs	r0, #1
 8006250:	e7f9      	b.n	8006246 <__mcmp+0x2a>
	...

08006254 <__mdiff>:
 8006254:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006258:	4689      	mov	r9, r1
 800625a:	4606      	mov	r6, r0
 800625c:	4611      	mov	r1, r2
 800625e:	4648      	mov	r0, r9
 8006260:	4614      	mov	r4, r2
 8006262:	f7ff ffdb 	bl	800621c <__mcmp>
 8006266:	1e05      	subs	r5, r0, #0
 8006268:	d112      	bne.n	8006290 <__mdiff+0x3c>
 800626a:	4629      	mov	r1, r5
 800626c:	4630      	mov	r0, r6
 800626e:	f7ff fd19 	bl	8005ca4 <_Balloc>
 8006272:	4602      	mov	r2, r0
 8006274:	b928      	cbnz	r0, 8006282 <__mdiff+0x2e>
 8006276:	f240 2137 	movw	r1, #567	@ 0x237
 800627a:	4b3e      	ldr	r3, [pc, #248]	@ (8006374 <__mdiff+0x120>)
 800627c:	483e      	ldr	r0, [pc, #248]	@ (8006378 <__mdiff+0x124>)
 800627e:	f000 fbe7 	bl	8006a50 <__assert_func>
 8006282:	2301      	movs	r3, #1
 8006284:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8006288:	4610      	mov	r0, r2
 800628a:	b003      	add	sp, #12
 800628c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006290:	bfbc      	itt	lt
 8006292:	464b      	movlt	r3, r9
 8006294:	46a1      	movlt	r9, r4
 8006296:	4630      	mov	r0, r6
 8006298:	f8d9 1004 	ldr.w	r1, [r9, #4]
 800629c:	bfba      	itte	lt
 800629e:	461c      	movlt	r4, r3
 80062a0:	2501      	movlt	r5, #1
 80062a2:	2500      	movge	r5, #0
 80062a4:	f7ff fcfe 	bl	8005ca4 <_Balloc>
 80062a8:	4602      	mov	r2, r0
 80062aa:	b918      	cbnz	r0, 80062b4 <__mdiff+0x60>
 80062ac:	f240 2145 	movw	r1, #581	@ 0x245
 80062b0:	4b30      	ldr	r3, [pc, #192]	@ (8006374 <__mdiff+0x120>)
 80062b2:	e7e3      	b.n	800627c <__mdiff+0x28>
 80062b4:	f100 0b14 	add.w	fp, r0, #20
 80062b8:	f8d9 7010 	ldr.w	r7, [r9, #16]
 80062bc:	f109 0310 	add.w	r3, r9, #16
 80062c0:	60c5      	str	r5, [r0, #12]
 80062c2:	f04f 0c00 	mov.w	ip, #0
 80062c6:	f109 0514 	add.w	r5, r9, #20
 80062ca:	46d9      	mov	r9, fp
 80062cc:	6926      	ldr	r6, [r4, #16]
 80062ce:	f104 0e14 	add.w	lr, r4, #20
 80062d2:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 80062d6:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 80062da:	9301      	str	r3, [sp, #4]
 80062dc:	9b01      	ldr	r3, [sp, #4]
 80062de:	f85e 0b04 	ldr.w	r0, [lr], #4
 80062e2:	f853 af04 	ldr.w	sl, [r3, #4]!
 80062e6:	b281      	uxth	r1, r0
 80062e8:	9301      	str	r3, [sp, #4]
 80062ea:	fa1f f38a 	uxth.w	r3, sl
 80062ee:	1a5b      	subs	r3, r3, r1
 80062f0:	0c00      	lsrs	r0, r0, #16
 80062f2:	4463      	add	r3, ip
 80062f4:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 80062f8:	eb00 4023 	add.w	r0, r0, r3, asr #16
 80062fc:	b29b      	uxth	r3, r3
 80062fe:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8006302:	4576      	cmp	r6, lr
 8006304:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8006308:	f849 3b04 	str.w	r3, [r9], #4
 800630c:	d8e6      	bhi.n	80062dc <__mdiff+0x88>
 800630e:	1b33      	subs	r3, r6, r4
 8006310:	3b15      	subs	r3, #21
 8006312:	f023 0303 	bic.w	r3, r3, #3
 8006316:	3415      	adds	r4, #21
 8006318:	3304      	adds	r3, #4
 800631a:	42a6      	cmp	r6, r4
 800631c:	bf38      	it	cc
 800631e:	2304      	movcc	r3, #4
 8006320:	441d      	add	r5, r3
 8006322:	445b      	add	r3, fp
 8006324:	461e      	mov	r6, r3
 8006326:	462c      	mov	r4, r5
 8006328:	4544      	cmp	r4, r8
 800632a:	d30e      	bcc.n	800634a <__mdiff+0xf6>
 800632c:	f108 0103 	add.w	r1, r8, #3
 8006330:	1b49      	subs	r1, r1, r5
 8006332:	f021 0103 	bic.w	r1, r1, #3
 8006336:	3d03      	subs	r5, #3
 8006338:	45a8      	cmp	r8, r5
 800633a:	bf38      	it	cc
 800633c:	2100      	movcc	r1, #0
 800633e:	440b      	add	r3, r1
 8006340:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8006344:	b199      	cbz	r1, 800636e <__mdiff+0x11a>
 8006346:	6117      	str	r7, [r2, #16]
 8006348:	e79e      	b.n	8006288 <__mdiff+0x34>
 800634a:	46e6      	mov	lr, ip
 800634c:	f854 1b04 	ldr.w	r1, [r4], #4
 8006350:	fa1f fc81 	uxth.w	ip, r1
 8006354:	44f4      	add	ip, lr
 8006356:	0c08      	lsrs	r0, r1, #16
 8006358:	4471      	add	r1, lr
 800635a:	eb00 402c 	add.w	r0, r0, ip, asr #16
 800635e:	b289      	uxth	r1, r1
 8006360:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8006364:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8006368:	f846 1b04 	str.w	r1, [r6], #4
 800636c:	e7dc      	b.n	8006328 <__mdiff+0xd4>
 800636e:	3f01      	subs	r7, #1
 8006370:	e7e6      	b.n	8006340 <__mdiff+0xec>
 8006372:	bf00      	nop
 8006374:	080074b2 	.word	0x080074b2
 8006378:	08007523 	.word	0x08007523

0800637c <__ulp>:
 800637c:	4b0e      	ldr	r3, [pc, #56]	@ (80063b8 <__ulp+0x3c>)
 800637e:	400b      	ands	r3, r1
 8006380:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 8006384:	2b00      	cmp	r3, #0
 8006386:	dc08      	bgt.n	800639a <__ulp+0x1e>
 8006388:	425b      	negs	r3, r3
 800638a:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 800638e:	ea4f 5223 	mov.w	r2, r3, asr #20
 8006392:	da04      	bge.n	800639e <__ulp+0x22>
 8006394:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 8006398:	4113      	asrs	r3, r2
 800639a:	2200      	movs	r2, #0
 800639c:	e008      	b.n	80063b0 <__ulp+0x34>
 800639e:	f1a2 0314 	sub.w	r3, r2, #20
 80063a2:	2b1e      	cmp	r3, #30
 80063a4:	bfd6      	itet	le
 80063a6:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 80063aa:	2201      	movgt	r2, #1
 80063ac:	40da      	lsrle	r2, r3
 80063ae:	2300      	movs	r3, #0
 80063b0:	4619      	mov	r1, r3
 80063b2:	4610      	mov	r0, r2
 80063b4:	4770      	bx	lr
 80063b6:	bf00      	nop
 80063b8:	7ff00000 	.word	0x7ff00000

080063bc <__b2d>:
 80063bc:	6902      	ldr	r2, [r0, #16]
 80063be:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80063c0:	f100 0614 	add.w	r6, r0, #20
 80063c4:	eb06 0282 	add.w	r2, r6, r2, lsl #2
 80063c8:	f852 4c04 	ldr.w	r4, [r2, #-4]
 80063cc:	4f1e      	ldr	r7, [pc, #120]	@ (8006448 <__b2d+0x8c>)
 80063ce:	4620      	mov	r0, r4
 80063d0:	f7ff fd5a 	bl	8005e88 <__hi0bits>
 80063d4:	4603      	mov	r3, r0
 80063d6:	f1c0 0020 	rsb	r0, r0, #32
 80063da:	2b0a      	cmp	r3, #10
 80063dc:	f1a2 0504 	sub.w	r5, r2, #4
 80063e0:	6008      	str	r0, [r1, #0]
 80063e2:	dc12      	bgt.n	800640a <__b2d+0x4e>
 80063e4:	42ae      	cmp	r6, r5
 80063e6:	bf2c      	ite	cs
 80063e8:	2200      	movcs	r2, #0
 80063ea:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
 80063ee:	f1c3 0c0b 	rsb	ip, r3, #11
 80063f2:	3315      	adds	r3, #21
 80063f4:	fa24 fe0c 	lsr.w	lr, r4, ip
 80063f8:	fa04 f303 	lsl.w	r3, r4, r3
 80063fc:	fa22 f20c 	lsr.w	r2, r2, ip
 8006400:	ea4e 0107 	orr.w	r1, lr, r7
 8006404:	431a      	orrs	r2, r3
 8006406:	4610      	mov	r0, r2
 8006408:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800640a:	42ae      	cmp	r6, r5
 800640c:	bf36      	itet	cc
 800640e:	f1a2 0508 	subcc.w	r5, r2, #8
 8006412:	2200      	movcs	r2, #0
 8006414:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
 8006418:	3b0b      	subs	r3, #11
 800641a:	d012      	beq.n	8006442 <__b2d+0x86>
 800641c:	f1c3 0720 	rsb	r7, r3, #32
 8006420:	fa22 f107 	lsr.w	r1, r2, r7
 8006424:	409c      	lsls	r4, r3
 8006426:	430c      	orrs	r4, r1
 8006428:	42b5      	cmp	r5, r6
 800642a:	f044 517f 	orr.w	r1, r4, #1069547520	@ 0x3fc00000
 800642e:	bf94      	ite	ls
 8006430:	2400      	movls	r4, #0
 8006432:	f855 4c04 	ldrhi.w	r4, [r5, #-4]
 8006436:	409a      	lsls	r2, r3
 8006438:	40fc      	lsrs	r4, r7
 800643a:	f441 1140 	orr.w	r1, r1, #3145728	@ 0x300000
 800643e:	4322      	orrs	r2, r4
 8006440:	e7e1      	b.n	8006406 <__b2d+0x4a>
 8006442:	ea44 0107 	orr.w	r1, r4, r7
 8006446:	e7de      	b.n	8006406 <__b2d+0x4a>
 8006448:	3ff00000 	.word	0x3ff00000

0800644c <__d2b>:
 800644c:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
 8006450:	2101      	movs	r1, #1
 8006452:	4690      	mov	r8, r2
 8006454:	4699      	mov	r9, r3
 8006456:	9e08      	ldr	r6, [sp, #32]
 8006458:	f7ff fc24 	bl	8005ca4 <_Balloc>
 800645c:	4604      	mov	r4, r0
 800645e:	b930      	cbnz	r0, 800646e <__d2b+0x22>
 8006460:	4602      	mov	r2, r0
 8006462:	f240 310f 	movw	r1, #783	@ 0x30f
 8006466:	4b23      	ldr	r3, [pc, #140]	@ (80064f4 <__d2b+0xa8>)
 8006468:	4823      	ldr	r0, [pc, #140]	@ (80064f8 <__d2b+0xac>)
 800646a:	f000 faf1 	bl	8006a50 <__assert_func>
 800646e:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8006472:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8006476:	b10d      	cbz	r5, 800647c <__d2b+0x30>
 8006478:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800647c:	9301      	str	r3, [sp, #4]
 800647e:	f1b8 0300 	subs.w	r3, r8, #0
 8006482:	d024      	beq.n	80064ce <__d2b+0x82>
 8006484:	4668      	mov	r0, sp
 8006486:	9300      	str	r3, [sp, #0]
 8006488:	f7ff fd1d 	bl	8005ec6 <__lo0bits>
 800648c:	e9dd 1200 	ldrd	r1, r2, [sp]
 8006490:	b1d8      	cbz	r0, 80064ca <__d2b+0x7e>
 8006492:	f1c0 0320 	rsb	r3, r0, #32
 8006496:	fa02 f303 	lsl.w	r3, r2, r3
 800649a:	430b      	orrs	r3, r1
 800649c:	40c2      	lsrs	r2, r0
 800649e:	6163      	str	r3, [r4, #20]
 80064a0:	9201      	str	r2, [sp, #4]
 80064a2:	9b01      	ldr	r3, [sp, #4]
 80064a4:	2b00      	cmp	r3, #0
 80064a6:	bf0c      	ite	eq
 80064a8:	2201      	moveq	r2, #1
 80064aa:	2202      	movne	r2, #2
 80064ac:	61a3      	str	r3, [r4, #24]
 80064ae:	6122      	str	r2, [r4, #16]
 80064b0:	b1ad      	cbz	r5, 80064de <__d2b+0x92>
 80064b2:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 80064b6:	4405      	add	r5, r0
 80064b8:	6035      	str	r5, [r6, #0]
 80064ba:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 80064be:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80064c0:	6018      	str	r0, [r3, #0]
 80064c2:	4620      	mov	r0, r4
 80064c4:	b002      	add	sp, #8
 80064c6:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 80064ca:	6161      	str	r1, [r4, #20]
 80064cc:	e7e9      	b.n	80064a2 <__d2b+0x56>
 80064ce:	a801      	add	r0, sp, #4
 80064d0:	f7ff fcf9 	bl	8005ec6 <__lo0bits>
 80064d4:	9b01      	ldr	r3, [sp, #4]
 80064d6:	2201      	movs	r2, #1
 80064d8:	6163      	str	r3, [r4, #20]
 80064da:	3020      	adds	r0, #32
 80064dc:	e7e7      	b.n	80064ae <__d2b+0x62>
 80064de:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 80064e2:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80064e6:	6030      	str	r0, [r6, #0]
 80064e8:	6918      	ldr	r0, [r3, #16]
 80064ea:	f7ff fccd 	bl	8005e88 <__hi0bits>
 80064ee:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 80064f2:	e7e4      	b.n	80064be <__d2b+0x72>
 80064f4:	080074b2 	.word	0x080074b2
 80064f8:	08007523 	.word	0x08007523

080064fc <__ratio>:
 80064fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006500:	b085      	sub	sp, #20
 8006502:	e9cd 1000 	strd	r1, r0, [sp]
 8006506:	a902      	add	r1, sp, #8
 8006508:	f7ff ff58 	bl	80063bc <__b2d>
 800650c:	468b      	mov	fp, r1
 800650e:	4606      	mov	r6, r0
 8006510:	460f      	mov	r7, r1
 8006512:	9800      	ldr	r0, [sp, #0]
 8006514:	a903      	add	r1, sp, #12
 8006516:	f7ff ff51 	bl	80063bc <__b2d>
 800651a:	460d      	mov	r5, r1
 800651c:	9b01      	ldr	r3, [sp, #4]
 800651e:	4689      	mov	r9, r1
 8006520:	6919      	ldr	r1, [r3, #16]
 8006522:	9b00      	ldr	r3, [sp, #0]
 8006524:	4604      	mov	r4, r0
 8006526:	691b      	ldr	r3, [r3, #16]
 8006528:	4630      	mov	r0, r6
 800652a:	1ac9      	subs	r1, r1, r3
 800652c:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 8006530:	1a9b      	subs	r3, r3, r2
 8006532:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 8006536:	2b00      	cmp	r3, #0
 8006538:	bfcd      	iteet	gt
 800653a:	463a      	movgt	r2, r7
 800653c:	462a      	movle	r2, r5
 800653e:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8006542:	eb02 5b03 	addgt.w	fp, r2, r3, lsl #20
 8006546:	bfd8      	it	le
 8006548:	eb02 5903 	addle.w	r9, r2, r3, lsl #20
 800654c:	464b      	mov	r3, r9
 800654e:	4622      	mov	r2, r4
 8006550:	4659      	mov	r1, fp
 8006552:	f7fa f8eb 	bl	800072c <__aeabi_ddiv>
 8006556:	b005      	add	sp, #20
 8006558:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800655c <__copybits>:
 800655c:	3901      	subs	r1, #1
 800655e:	b570      	push	{r4, r5, r6, lr}
 8006560:	1149      	asrs	r1, r1, #5
 8006562:	6914      	ldr	r4, [r2, #16]
 8006564:	3101      	adds	r1, #1
 8006566:	f102 0314 	add.w	r3, r2, #20
 800656a:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800656e:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8006572:	1f05      	subs	r5, r0, #4
 8006574:	42a3      	cmp	r3, r4
 8006576:	d30c      	bcc.n	8006592 <__copybits+0x36>
 8006578:	1aa3      	subs	r3, r4, r2
 800657a:	3b11      	subs	r3, #17
 800657c:	f023 0303 	bic.w	r3, r3, #3
 8006580:	3211      	adds	r2, #17
 8006582:	42a2      	cmp	r2, r4
 8006584:	bf88      	it	hi
 8006586:	2300      	movhi	r3, #0
 8006588:	4418      	add	r0, r3
 800658a:	2300      	movs	r3, #0
 800658c:	4288      	cmp	r0, r1
 800658e:	d305      	bcc.n	800659c <__copybits+0x40>
 8006590:	bd70      	pop	{r4, r5, r6, pc}
 8006592:	f853 6b04 	ldr.w	r6, [r3], #4
 8006596:	f845 6f04 	str.w	r6, [r5, #4]!
 800659a:	e7eb      	b.n	8006574 <__copybits+0x18>
 800659c:	f840 3b04 	str.w	r3, [r0], #4
 80065a0:	e7f4      	b.n	800658c <__copybits+0x30>

080065a2 <__any_on>:
 80065a2:	f100 0214 	add.w	r2, r0, #20
 80065a6:	6900      	ldr	r0, [r0, #16]
 80065a8:	114b      	asrs	r3, r1, #5
 80065aa:	4298      	cmp	r0, r3
 80065ac:	b510      	push	{r4, lr}
 80065ae:	db11      	blt.n	80065d4 <__any_on+0x32>
 80065b0:	dd0a      	ble.n	80065c8 <__any_on+0x26>
 80065b2:	f011 011f 	ands.w	r1, r1, #31
 80065b6:	d007      	beq.n	80065c8 <__any_on+0x26>
 80065b8:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 80065bc:	fa24 f001 	lsr.w	r0, r4, r1
 80065c0:	fa00 f101 	lsl.w	r1, r0, r1
 80065c4:	428c      	cmp	r4, r1
 80065c6:	d10b      	bne.n	80065e0 <__any_on+0x3e>
 80065c8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80065cc:	4293      	cmp	r3, r2
 80065ce:	d803      	bhi.n	80065d8 <__any_on+0x36>
 80065d0:	2000      	movs	r0, #0
 80065d2:	bd10      	pop	{r4, pc}
 80065d4:	4603      	mov	r3, r0
 80065d6:	e7f7      	b.n	80065c8 <__any_on+0x26>
 80065d8:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80065dc:	2900      	cmp	r1, #0
 80065de:	d0f5      	beq.n	80065cc <__any_on+0x2a>
 80065e0:	2001      	movs	r0, #1
 80065e2:	e7f6      	b.n	80065d2 <__any_on+0x30>

080065e4 <__ascii_wctomb>:
 80065e4:	4603      	mov	r3, r0
 80065e6:	4608      	mov	r0, r1
 80065e8:	b141      	cbz	r1, 80065fc <__ascii_wctomb+0x18>
 80065ea:	2aff      	cmp	r2, #255	@ 0xff
 80065ec:	d904      	bls.n	80065f8 <__ascii_wctomb+0x14>
 80065ee:	228a      	movs	r2, #138	@ 0x8a
 80065f0:	f04f 30ff 	mov.w	r0, #4294967295
 80065f4:	601a      	str	r2, [r3, #0]
 80065f6:	4770      	bx	lr
 80065f8:	2001      	movs	r0, #1
 80065fa:	700a      	strb	r2, [r1, #0]
 80065fc:	4770      	bx	lr

080065fe <__ssputs_r>:
 80065fe:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006602:	461f      	mov	r7, r3
 8006604:	688e      	ldr	r6, [r1, #8]
 8006606:	4682      	mov	sl, r0
 8006608:	42be      	cmp	r6, r7
 800660a:	460c      	mov	r4, r1
 800660c:	4690      	mov	r8, r2
 800660e:	680b      	ldr	r3, [r1, #0]
 8006610:	d82d      	bhi.n	800666e <__ssputs_r+0x70>
 8006612:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8006616:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 800661a:	d026      	beq.n	800666a <__ssputs_r+0x6c>
 800661c:	6965      	ldr	r5, [r4, #20]
 800661e:	6909      	ldr	r1, [r1, #16]
 8006620:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006624:	eba3 0901 	sub.w	r9, r3, r1
 8006628:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800662c:	1c7b      	adds	r3, r7, #1
 800662e:	444b      	add	r3, r9
 8006630:	106d      	asrs	r5, r5, #1
 8006632:	429d      	cmp	r5, r3
 8006634:	bf38      	it	cc
 8006636:	461d      	movcc	r5, r3
 8006638:	0553      	lsls	r3, r2, #21
 800663a:	d527      	bpl.n	800668c <__ssputs_r+0x8e>
 800663c:	4629      	mov	r1, r5
 800663e:	f7ff fa93 	bl	8005b68 <_malloc_r>
 8006642:	4606      	mov	r6, r0
 8006644:	b360      	cbz	r0, 80066a0 <__ssputs_r+0xa2>
 8006646:	464a      	mov	r2, r9
 8006648:	6921      	ldr	r1, [r4, #16]
 800664a:	f7fe f870 	bl	800472e <memcpy>
 800664e:	89a3      	ldrh	r3, [r4, #12]
 8006650:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8006654:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8006658:	81a3      	strh	r3, [r4, #12]
 800665a:	6126      	str	r6, [r4, #16]
 800665c:	444e      	add	r6, r9
 800665e:	6026      	str	r6, [r4, #0]
 8006660:	463e      	mov	r6, r7
 8006662:	6165      	str	r5, [r4, #20]
 8006664:	eba5 0509 	sub.w	r5, r5, r9
 8006668:	60a5      	str	r5, [r4, #8]
 800666a:	42be      	cmp	r6, r7
 800666c:	d900      	bls.n	8006670 <__ssputs_r+0x72>
 800666e:	463e      	mov	r6, r7
 8006670:	4632      	mov	r2, r6
 8006672:	4641      	mov	r1, r8
 8006674:	6820      	ldr	r0, [r4, #0]
 8006676:	f000 f9c1 	bl	80069fc <memmove>
 800667a:	2000      	movs	r0, #0
 800667c:	68a3      	ldr	r3, [r4, #8]
 800667e:	1b9b      	subs	r3, r3, r6
 8006680:	60a3      	str	r3, [r4, #8]
 8006682:	6823      	ldr	r3, [r4, #0]
 8006684:	4433      	add	r3, r6
 8006686:	6023      	str	r3, [r4, #0]
 8006688:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800668c:	462a      	mov	r2, r5
 800668e:	f000 fa11 	bl	8006ab4 <_realloc_r>
 8006692:	4606      	mov	r6, r0
 8006694:	2800      	cmp	r0, #0
 8006696:	d1e0      	bne.n	800665a <__ssputs_r+0x5c>
 8006698:	4650      	mov	r0, sl
 800669a:	6921      	ldr	r1, [r4, #16]
 800669c:	f7fe feb8 	bl	8005410 <_free_r>
 80066a0:	230c      	movs	r3, #12
 80066a2:	f8ca 3000 	str.w	r3, [sl]
 80066a6:	89a3      	ldrh	r3, [r4, #12]
 80066a8:	f04f 30ff 	mov.w	r0, #4294967295
 80066ac:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80066b0:	81a3      	strh	r3, [r4, #12]
 80066b2:	e7e9      	b.n	8006688 <__ssputs_r+0x8a>

080066b4 <_svfiprintf_r>:
 80066b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80066b8:	4698      	mov	r8, r3
 80066ba:	898b      	ldrh	r3, [r1, #12]
 80066bc:	4607      	mov	r7, r0
 80066be:	061b      	lsls	r3, r3, #24
 80066c0:	460d      	mov	r5, r1
 80066c2:	4614      	mov	r4, r2
 80066c4:	b09d      	sub	sp, #116	@ 0x74
 80066c6:	d510      	bpl.n	80066ea <_svfiprintf_r+0x36>
 80066c8:	690b      	ldr	r3, [r1, #16]
 80066ca:	b973      	cbnz	r3, 80066ea <_svfiprintf_r+0x36>
 80066cc:	2140      	movs	r1, #64	@ 0x40
 80066ce:	f7ff fa4b 	bl	8005b68 <_malloc_r>
 80066d2:	6028      	str	r0, [r5, #0]
 80066d4:	6128      	str	r0, [r5, #16]
 80066d6:	b930      	cbnz	r0, 80066e6 <_svfiprintf_r+0x32>
 80066d8:	230c      	movs	r3, #12
 80066da:	603b      	str	r3, [r7, #0]
 80066dc:	f04f 30ff 	mov.w	r0, #4294967295
 80066e0:	b01d      	add	sp, #116	@ 0x74
 80066e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80066e6:	2340      	movs	r3, #64	@ 0x40
 80066e8:	616b      	str	r3, [r5, #20]
 80066ea:	2300      	movs	r3, #0
 80066ec:	9309      	str	r3, [sp, #36]	@ 0x24
 80066ee:	2320      	movs	r3, #32
 80066f0:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80066f4:	2330      	movs	r3, #48	@ 0x30
 80066f6:	f04f 0901 	mov.w	r9, #1
 80066fa:	f8cd 800c 	str.w	r8, [sp, #12]
 80066fe:	f8df 8198 	ldr.w	r8, [pc, #408]	@ 8006898 <_svfiprintf_r+0x1e4>
 8006702:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8006706:	4623      	mov	r3, r4
 8006708:	469a      	mov	sl, r3
 800670a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800670e:	b10a      	cbz	r2, 8006714 <_svfiprintf_r+0x60>
 8006710:	2a25      	cmp	r2, #37	@ 0x25
 8006712:	d1f9      	bne.n	8006708 <_svfiprintf_r+0x54>
 8006714:	ebba 0b04 	subs.w	fp, sl, r4
 8006718:	d00b      	beq.n	8006732 <_svfiprintf_r+0x7e>
 800671a:	465b      	mov	r3, fp
 800671c:	4622      	mov	r2, r4
 800671e:	4629      	mov	r1, r5
 8006720:	4638      	mov	r0, r7
 8006722:	f7ff ff6c 	bl	80065fe <__ssputs_r>
 8006726:	3001      	adds	r0, #1
 8006728:	f000 80a7 	beq.w	800687a <_svfiprintf_r+0x1c6>
 800672c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800672e:	445a      	add	r2, fp
 8006730:	9209      	str	r2, [sp, #36]	@ 0x24
 8006732:	f89a 3000 	ldrb.w	r3, [sl]
 8006736:	2b00      	cmp	r3, #0
 8006738:	f000 809f 	beq.w	800687a <_svfiprintf_r+0x1c6>
 800673c:	2300      	movs	r3, #0
 800673e:	f04f 32ff 	mov.w	r2, #4294967295
 8006742:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8006746:	f10a 0a01 	add.w	sl, sl, #1
 800674a:	9304      	str	r3, [sp, #16]
 800674c:	9307      	str	r3, [sp, #28]
 800674e:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8006752:	931a      	str	r3, [sp, #104]	@ 0x68
 8006754:	4654      	mov	r4, sl
 8006756:	2205      	movs	r2, #5
 8006758:	f814 1b01 	ldrb.w	r1, [r4], #1
 800675c:	484e      	ldr	r0, [pc, #312]	@ (8006898 <_svfiprintf_r+0x1e4>)
 800675e:	f7fd ffd8 	bl	8004712 <memchr>
 8006762:	9a04      	ldr	r2, [sp, #16]
 8006764:	b9d8      	cbnz	r0, 800679e <_svfiprintf_r+0xea>
 8006766:	06d0      	lsls	r0, r2, #27
 8006768:	bf44      	itt	mi
 800676a:	2320      	movmi	r3, #32
 800676c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006770:	0711      	lsls	r1, r2, #28
 8006772:	bf44      	itt	mi
 8006774:	232b      	movmi	r3, #43	@ 0x2b
 8006776:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800677a:	f89a 3000 	ldrb.w	r3, [sl]
 800677e:	2b2a      	cmp	r3, #42	@ 0x2a
 8006780:	d015      	beq.n	80067ae <_svfiprintf_r+0xfa>
 8006782:	4654      	mov	r4, sl
 8006784:	2000      	movs	r0, #0
 8006786:	f04f 0c0a 	mov.w	ip, #10
 800678a:	9a07      	ldr	r2, [sp, #28]
 800678c:	4621      	mov	r1, r4
 800678e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006792:	3b30      	subs	r3, #48	@ 0x30
 8006794:	2b09      	cmp	r3, #9
 8006796:	d94b      	bls.n	8006830 <_svfiprintf_r+0x17c>
 8006798:	b1b0      	cbz	r0, 80067c8 <_svfiprintf_r+0x114>
 800679a:	9207      	str	r2, [sp, #28]
 800679c:	e014      	b.n	80067c8 <_svfiprintf_r+0x114>
 800679e:	eba0 0308 	sub.w	r3, r0, r8
 80067a2:	fa09 f303 	lsl.w	r3, r9, r3
 80067a6:	4313      	orrs	r3, r2
 80067a8:	46a2      	mov	sl, r4
 80067aa:	9304      	str	r3, [sp, #16]
 80067ac:	e7d2      	b.n	8006754 <_svfiprintf_r+0xa0>
 80067ae:	9b03      	ldr	r3, [sp, #12]
 80067b0:	1d19      	adds	r1, r3, #4
 80067b2:	681b      	ldr	r3, [r3, #0]
 80067b4:	9103      	str	r1, [sp, #12]
 80067b6:	2b00      	cmp	r3, #0
 80067b8:	bfbb      	ittet	lt
 80067ba:	425b      	neglt	r3, r3
 80067bc:	f042 0202 	orrlt.w	r2, r2, #2
 80067c0:	9307      	strge	r3, [sp, #28]
 80067c2:	9307      	strlt	r3, [sp, #28]
 80067c4:	bfb8      	it	lt
 80067c6:	9204      	strlt	r2, [sp, #16]
 80067c8:	7823      	ldrb	r3, [r4, #0]
 80067ca:	2b2e      	cmp	r3, #46	@ 0x2e
 80067cc:	d10a      	bne.n	80067e4 <_svfiprintf_r+0x130>
 80067ce:	7863      	ldrb	r3, [r4, #1]
 80067d0:	2b2a      	cmp	r3, #42	@ 0x2a
 80067d2:	d132      	bne.n	800683a <_svfiprintf_r+0x186>
 80067d4:	9b03      	ldr	r3, [sp, #12]
 80067d6:	3402      	adds	r4, #2
 80067d8:	1d1a      	adds	r2, r3, #4
 80067da:	681b      	ldr	r3, [r3, #0]
 80067dc:	9203      	str	r2, [sp, #12]
 80067de:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80067e2:	9305      	str	r3, [sp, #20]
 80067e4:	f8df a0b4 	ldr.w	sl, [pc, #180]	@ 800689c <_svfiprintf_r+0x1e8>
 80067e8:	2203      	movs	r2, #3
 80067ea:	4650      	mov	r0, sl
 80067ec:	7821      	ldrb	r1, [r4, #0]
 80067ee:	f7fd ff90 	bl	8004712 <memchr>
 80067f2:	b138      	cbz	r0, 8006804 <_svfiprintf_r+0x150>
 80067f4:	2240      	movs	r2, #64	@ 0x40
 80067f6:	9b04      	ldr	r3, [sp, #16]
 80067f8:	eba0 000a 	sub.w	r0, r0, sl
 80067fc:	4082      	lsls	r2, r0
 80067fe:	4313      	orrs	r3, r2
 8006800:	3401      	adds	r4, #1
 8006802:	9304      	str	r3, [sp, #16]
 8006804:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006808:	2206      	movs	r2, #6
 800680a:	4825      	ldr	r0, [pc, #148]	@ (80068a0 <_svfiprintf_r+0x1ec>)
 800680c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8006810:	f7fd ff7f 	bl	8004712 <memchr>
 8006814:	2800      	cmp	r0, #0
 8006816:	d036      	beq.n	8006886 <_svfiprintf_r+0x1d2>
 8006818:	4b22      	ldr	r3, [pc, #136]	@ (80068a4 <_svfiprintf_r+0x1f0>)
 800681a:	bb1b      	cbnz	r3, 8006864 <_svfiprintf_r+0x1b0>
 800681c:	9b03      	ldr	r3, [sp, #12]
 800681e:	3307      	adds	r3, #7
 8006820:	f023 0307 	bic.w	r3, r3, #7
 8006824:	3308      	adds	r3, #8
 8006826:	9303      	str	r3, [sp, #12]
 8006828:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800682a:	4433      	add	r3, r6
 800682c:	9309      	str	r3, [sp, #36]	@ 0x24
 800682e:	e76a      	b.n	8006706 <_svfiprintf_r+0x52>
 8006830:	460c      	mov	r4, r1
 8006832:	2001      	movs	r0, #1
 8006834:	fb0c 3202 	mla	r2, ip, r2, r3
 8006838:	e7a8      	b.n	800678c <_svfiprintf_r+0xd8>
 800683a:	2300      	movs	r3, #0
 800683c:	f04f 0c0a 	mov.w	ip, #10
 8006840:	4619      	mov	r1, r3
 8006842:	3401      	adds	r4, #1
 8006844:	9305      	str	r3, [sp, #20]
 8006846:	4620      	mov	r0, r4
 8006848:	f810 2b01 	ldrb.w	r2, [r0], #1
 800684c:	3a30      	subs	r2, #48	@ 0x30
 800684e:	2a09      	cmp	r2, #9
 8006850:	d903      	bls.n	800685a <_svfiprintf_r+0x1a6>
 8006852:	2b00      	cmp	r3, #0
 8006854:	d0c6      	beq.n	80067e4 <_svfiprintf_r+0x130>
 8006856:	9105      	str	r1, [sp, #20]
 8006858:	e7c4      	b.n	80067e4 <_svfiprintf_r+0x130>
 800685a:	4604      	mov	r4, r0
 800685c:	2301      	movs	r3, #1
 800685e:	fb0c 2101 	mla	r1, ip, r1, r2
 8006862:	e7f0      	b.n	8006846 <_svfiprintf_r+0x192>
 8006864:	ab03      	add	r3, sp, #12
 8006866:	9300      	str	r3, [sp, #0]
 8006868:	462a      	mov	r2, r5
 800686a:	4638      	mov	r0, r7
 800686c:	4b0e      	ldr	r3, [pc, #56]	@ (80068a8 <_svfiprintf_r+0x1f4>)
 800686e:	a904      	add	r1, sp, #16
 8006870:	f7fd f97c 	bl	8003b6c <_printf_float>
 8006874:	1c42      	adds	r2, r0, #1
 8006876:	4606      	mov	r6, r0
 8006878:	d1d6      	bne.n	8006828 <_svfiprintf_r+0x174>
 800687a:	89ab      	ldrh	r3, [r5, #12]
 800687c:	065b      	lsls	r3, r3, #25
 800687e:	f53f af2d 	bmi.w	80066dc <_svfiprintf_r+0x28>
 8006882:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006884:	e72c      	b.n	80066e0 <_svfiprintf_r+0x2c>
 8006886:	ab03      	add	r3, sp, #12
 8006888:	9300      	str	r3, [sp, #0]
 800688a:	462a      	mov	r2, r5
 800688c:	4638      	mov	r0, r7
 800688e:	4b06      	ldr	r3, [pc, #24]	@ (80068a8 <_svfiprintf_r+0x1f4>)
 8006890:	a904      	add	r1, sp, #16
 8006892:	f7fd fc09 	bl	80040a8 <_printf_i>
 8006896:	e7ed      	b.n	8006874 <_svfiprintf_r+0x1c0>
 8006898:	0800757c 	.word	0x0800757c
 800689c:	08007582 	.word	0x08007582
 80068a0:	08007586 	.word	0x08007586
 80068a4:	08003b6d 	.word	0x08003b6d
 80068a8:	080065ff 	.word	0x080065ff

080068ac <__sflush_r>:
 80068ac:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80068b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80068b2:	0716      	lsls	r6, r2, #28
 80068b4:	4605      	mov	r5, r0
 80068b6:	460c      	mov	r4, r1
 80068b8:	d454      	bmi.n	8006964 <__sflush_r+0xb8>
 80068ba:	684b      	ldr	r3, [r1, #4]
 80068bc:	2b00      	cmp	r3, #0
 80068be:	dc02      	bgt.n	80068c6 <__sflush_r+0x1a>
 80068c0:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80068c2:	2b00      	cmp	r3, #0
 80068c4:	dd48      	ble.n	8006958 <__sflush_r+0xac>
 80068c6:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80068c8:	2e00      	cmp	r6, #0
 80068ca:	d045      	beq.n	8006958 <__sflush_r+0xac>
 80068cc:	2300      	movs	r3, #0
 80068ce:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80068d2:	682f      	ldr	r7, [r5, #0]
 80068d4:	6a21      	ldr	r1, [r4, #32]
 80068d6:	602b      	str	r3, [r5, #0]
 80068d8:	d030      	beq.n	800693c <__sflush_r+0x90>
 80068da:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80068dc:	89a3      	ldrh	r3, [r4, #12]
 80068de:	0759      	lsls	r1, r3, #29
 80068e0:	d505      	bpl.n	80068ee <__sflush_r+0x42>
 80068e2:	6863      	ldr	r3, [r4, #4]
 80068e4:	1ad2      	subs	r2, r2, r3
 80068e6:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80068e8:	b10b      	cbz	r3, 80068ee <__sflush_r+0x42>
 80068ea:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80068ec:	1ad2      	subs	r2, r2, r3
 80068ee:	2300      	movs	r3, #0
 80068f0:	4628      	mov	r0, r5
 80068f2:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80068f4:	6a21      	ldr	r1, [r4, #32]
 80068f6:	47b0      	blx	r6
 80068f8:	1c43      	adds	r3, r0, #1
 80068fa:	89a3      	ldrh	r3, [r4, #12]
 80068fc:	d106      	bne.n	800690c <__sflush_r+0x60>
 80068fe:	6829      	ldr	r1, [r5, #0]
 8006900:	291d      	cmp	r1, #29
 8006902:	d82b      	bhi.n	800695c <__sflush_r+0xb0>
 8006904:	4a28      	ldr	r2, [pc, #160]	@ (80069a8 <__sflush_r+0xfc>)
 8006906:	40ca      	lsrs	r2, r1
 8006908:	07d6      	lsls	r6, r2, #31
 800690a:	d527      	bpl.n	800695c <__sflush_r+0xb0>
 800690c:	2200      	movs	r2, #0
 800690e:	6062      	str	r2, [r4, #4]
 8006910:	6922      	ldr	r2, [r4, #16]
 8006912:	04d9      	lsls	r1, r3, #19
 8006914:	6022      	str	r2, [r4, #0]
 8006916:	d504      	bpl.n	8006922 <__sflush_r+0x76>
 8006918:	1c42      	adds	r2, r0, #1
 800691a:	d101      	bne.n	8006920 <__sflush_r+0x74>
 800691c:	682b      	ldr	r3, [r5, #0]
 800691e:	b903      	cbnz	r3, 8006922 <__sflush_r+0x76>
 8006920:	6560      	str	r0, [r4, #84]	@ 0x54
 8006922:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8006924:	602f      	str	r7, [r5, #0]
 8006926:	b1b9      	cbz	r1, 8006958 <__sflush_r+0xac>
 8006928:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800692c:	4299      	cmp	r1, r3
 800692e:	d002      	beq.n	8006936 <__sflush_r+0x8a>
 8006930:	4628      	mov	r0, r5
 8006932:	f7fe fd6d 	bl	8005410 <_free_r>
 8006936:	2300      	movs	r3, #0
 8006938:	6363      	str	r3, [r4, #52]	@ 0x34
 800693a:	e00d      	b.n	8006958 <__sflush_r+0xac>
 800693c:	2301      	movs	r3, #1
 800693e:	4628      	mov	r0, r5
 8006940:	47b0      	blx	r6
 8006942:	4602      	mov	r2, r0
 8006944:	1c50      	adds	r0, r2, #1
 8006946:	d1c9      	bne.n	80068dc <__sflush_r+0x30>
 8006948:	682b      	ldr	r3, [r5, #0]
 800694a:	2b00      	cmp	r3, #0
 800694c:	d0c6      	beq.n	80068dc <__sflush_r+0x30>
 800694e:	2b1d      	cmp	r3, #29
 8006950:	d001      	beq.n	8006956 <__sflush_r+0xaa>
 8006952:	2b16      	cmp	r3, #22
 8006954:	d11d      	bne.n	8006992 <__sflush_r+0xe6>
 8006956:	602f      	str	r7, [r5, #0]
 8006958:	2000      	movs	r0, #0
 800695a:	e021      	b.n	80069a0 <__sflush_r+0xf4>
 800695c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006960:	b21b      	sxth	r3, r3
 8006962:	e01a      	b.n	800699a <__sflush_r+0xee>
 8006964:	690f      	ldr	r7, [r1, #16]
 8006966:	2f00      	cmp	r7, #0
 8006968:	d0f6      	beq.n	8006958 <__sflush_r+0xac>
 800696a:	0793      	lsls	r3, r2, #30
 800696c:	bf18      	it	ne
 800696e:	2300      	movne	r3, #0
 8006970:	680e      	ldr	r6, [r1, #0]
 8006972:	bf08      	it	eq
 8006974:	694b      	ldreq	r3, [r1, #20]
 8006976:	1bf6      	subs	r6, r6, r7
 8006978:	600f      	str	r7, [r1, #0]
 800697a:	608b      	str	r3, [r1, #8]
 800697c:	2e00      	cmp	r6, #0
 800697e:	ddeb      	ble.n	8006958 <__sflush_r+0xac>
 8006980:	4633      	mov	r3, r6
 8006982:	463a      	mov	r2, r7
 8006984:	4628      	mov	r0, r5
 8006986:	6a21      	ldr	r1, [r4, #32]
 8006988:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 800698c:	47e0      	blx	ip
 800698e:	2800      	cmp	r0, #0
 8006990:	dc07      	bgt.n	80069a2 <__sflush_r+0xf6>
 8006992:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006996:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800699a:	f04f 30ff 	mov.w	r0, #4294967295
 800699e:	81a3      	strh	r3, [r4, #12]
 80069a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80069a2:	4407      	add	r7, r0
 80069a4:	1a36      	subs	r6, r6, r0
 80069a6:	e7e9      	b.n	800697c <__sflush_r+0xd0>
 80069a8:	20400001 	.word	0x20400001

080069ac <_fflush_r>:
 80069ac:	b538      	push	{r3, r4, r5, lr}
 80069ae:	690b      	ldr	r3, [r1, #16]
 80069b0:	4605      	mov	r5, r0
 80069b2:	460c      	mov	r4, r1
 80069b4:	b913      	cbnz	r3, 80069bc <_fflush_r+0x10>
 80069b6:	2500      	movs	r5, #0
 80069b8:	4628      	mov	r0, r5
 80069ba:	bd38      	pop	{r3, r4, r5, pc}
 80069bc:	b118      	cbz	r0, 80069c6 <_fflush_r+0x1a>
 80069be:	6a03      	ldr	r3, [r0, #32]
 80069c0:	b90b      	cbnz	r3, 80069c6 <_fflush_r+0x1a>
 80069c2:	f7fd fd1b 	bl	80043fc <__sinit>
 80069c6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80069ca:	2b00      	cmp	r3, #0
 80069cc:	d0f3      	beq.n	80069b6 <_fflush_r+0xa>
 80069ce:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80069d0:	07d0      	lsls	r0, r2, #31
 80069d2:	d404      	bmi.n	80069de <_fflush_r+0x32>
 80069d4:	0599      	lsls	r1, r3, #22
 80069d6:	d402      	bmi.n	80069de <_fflush_r+0x32>
 80069d8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80069da:	f7fd fe98 	bl	800470e <__retarget_lock_acquire_recursive>
 80069de:	4628      	mov	r0, r5
 80069e0:	4621      	mov	r1, r4
 80069e2:	f7ff ff63 	bl	80068ac <__sflush_r>
 80069e6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80069e8:	4605      	mov	r5, r0
 80069ea:	07da      	lsls	r2, r3, #31
 80069ec:	d4e4      	bmi.n	80069b8 <_fflush_r+0xc>
 80069ee:	89a3      	ldrh	r3, [r4, #12]
 80069f0:	059b      	lsls	r3, r3, #22
 80069f2:	d4e1      	bmi.n	80069b8 <_fflush_r+0xc>
 80069f4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80069f6:	f7fd fe8b 	bl	8004710 <__retarget_lock_release_recursive>
 80069fa:	e7dd      	b.n	80069b8 <_fflush_r+0xc>

080069fc <memmove>:
 80069fc:	4288      	cmp	r0, r1
 80069fe:	b510      	push	{r4, lr}
 8006a00:	eb01 0402 	add.w	r4, r1, r2
 8006a04:	d902      	bls.n	8006a0c <memmove+0x10>
 8006a06:	4284      	cmp	r4, r0
 8006a08:	4623      	mov	r3, r4
 8006a0a:	d807      	bhi.n	8006a1c <memmove+0x20>
 8006a0c:	1e43      	subs	r3, r0, #1
 8006a0e:	42a1      	cmp	r1, r4
 8006a10:	d008      	beq.n	8006a24 <memmove+0x28>
 8006a12:	f811 2b01 	ldrb.w	r2, [r1], #1
 8006a16:	f803 2f01 	strb.w	r2, [r3, #1]!
 8006a1a:	e7f8      	b.n	8006a0e <memmove+0x12>
 8006a1c:	4601      	mov	r1, r0
 8006a1e:	4402      	add	r2, r0
 8006a20:	428a      	cmp	r2, r1
 8006a22:	d100      	bne.n	8006a26 <memmove+0x2a>
 8006a24:	bd10      	pop	{r4, pc}
 8006a26:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8006a2a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8006a2e:	e7f7      	b.n	8006a20 <memmove+0x24>

08006a30 <_sbrk_r>:
 8006a30:	b538      	push	{r3, r4, r5, lr}
 8006a32:	2300      	movs	r3, #0
 8006a34:	4d05      	ldr	r5, [pc, #20]	@ (8006a4c <_sbrk_r+0x1c>)
 8006a36:	4604      	mov	r4, r0
 8006a38:	4608      	mov	r0, r1
 8006a3a:	602b      	str	r3, [r5, #0]
 8006a3c:	f7fc f890 	bl	8002b60 <_sbrk>
 8006a40:	1c43      	adds	r3, r0, #1
 8006a42:	d102      	bne.n	8006a4a <_sbrk_r+0x1a>
 8006a44:	682b      	ldr	r3, [r5, #0]
 8006a46:	b103      	cbz	r3, 8006a4a <_sbrk_r+0x1a>
 8006a48:	6023      	str	r3, [r4, #0]
 8006a4a:	bd38      	pop	{r3, r4, r5, pc}
 8006a4c:	20000540 	.word	0x20000540

08006a50 <__assert_func>:
 8006a50:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8006a52:	4614      	mov	r4, r2
 8006a54:	461a      	mov	r2, r3
 8006a56:	4b09      	ldr	r3, [pc, #36]	@ (8006a7c <__assert_func+0x2c>)
 8006a58:	4605      	mov	r5, r0
 8006a5a:	681b      	ldr	r3, [r3, #0]
 8006a5c:	68d8      	ldr	r0, [r3, #12]
 8006a5e:	b14c      	cbz	r4, 8006a74 <__assert_func+0x24>
 8006a60:	4b07      	ldr	r3, [pc, #28]	@ (8006a80 <__assert_func+0x30>)
 8006a62:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8006a66:	9100      	str	r1, [sp, #0]
 8006a68:	462b      	mov	r3, r5
 8006a6a:	4906      	ldr	r1, [pc, #24]	@ (8006a84 <__assert_func+0x34>)
 8006a6c:	f000 f850 	bl	8006b10 <fiprintf>
 8006a70:	f000 f860 	bl	8006b34 <abort>
 8006a74:	4b04      	ldr	r3, [pc, #16]	@ (8006a88 <__assert_func+0x38>)
 8006a76:	461c      	mov	r4, r3
 8006a78:	e7f3      	b.n	8006a62 <__assert_func+0x12>
 8006a7a:	bf00      	nop
 8006a7c:	20000180 	.word	0x20000180
 8006a80:	0800758d 	.word	0x0800758d
 8006a84:	0800759a 	.word	0x0800759a
 8006a88:	080075c8 	.word	0x080075c8

08006a8c <_calloc_r>:
 8006a8c:	b570      	push	{r4, r5, r6, lr}
 8006a8e:	fba1 5402 	umull	r5, r4, r1, r2
 8006a92:	b934      	cbnz	r4, 8006aa2 <_calloc_r+0x16>
 8006a94:	4629      	mov	r1, r5
 8006a96:	f7ff f867 	bl	8005b68 <_malloc_r>
 8006a9a:	4606      	mov	r6, r0
 8006a9c:	b928      	cbnz	r0, 8006aaa <_calloc_r+0x1e>
 8006a9e:	4630      	mov	r0, r6
 8006aa0:	bd70      	pop	{r4, r5, r6, pc}
 8006aa2:	220c      	movs	r2, #12
 8006aa4:	2600      	movs	r6, #0
 8006aa6:	6002      	str	r2, [r0, #0]
 8006aa8:	e7f9      	b.n	8006a9e <_calloc_r+0x12>
 8006aaa:	462a      	mov	r2, r5
 8006aac:	4621      	mov	r1, r4
 8006aae:	f7fd fd54 	bl	800455a <memset>
 8006ab2:	e7f4      	b.n	8006a9e <_calloc_r+0x12>

08006ab4 <_realloc_r>:
 8006ab4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006ab8:	4607      	mov	r7, r0
 8006aba:	4614      	mov	r4, r2
 8006abc:	460d      	mov	r5, r1
 8006abe:	b921      	cbnz	r1, 8006aca <_realloc_r+0x16>
 8006ac0:	4611      	mov	r1, r2
 8006ac2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006ac6:	f7ff b84f 	b.w	8005b68 <_malloc_r>
 8006aca:	b92a      	cbnz	r2, 8006ad8 <_realloc_r+0x24>
 8006acc:	f7fe fca0 	bl	8005410 <_free_r>
 8006ad0:	4625      	mov	r5, r4
 8006ad2:	4628      	mov	r0, r5
 8006ad4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006ad8:	f000 f833 	bl	8006b42 <_malloc_usable_size_r>
 8006adc:	4284      	cmp	r4, r0
 8006ade:	4606      	mov	r6, r0
 8006ae0:	d802      	bhi.n	8006ae8 <_realloc_r+0x34>
 8006ae2:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8006ae6:	d8f4      	bhi.n	8006ad2 <_realloc_r+0x1e>
 8006ae8:	4621      	mov	r1, r4
 8006aea:	4638      	mov	r0, r7
 8006aec:	f7ff f83c 	bl	8005b68 <_malloc_r>
 8006af0:	4680      	mov	r8, r0
 8006af2:	b908      	cbnz	r0, 8006af8 <_realloc_r+0x44>
 8006af4:	4645      	mov	r5, r8
 8006af6:	e7ec      	b.n	8006ad2 <_realloc_r+0x1e>
 8006af8:	42b4      	cmp	r4, r6
 8006afa:	4622      	mov	r2, r4
 8006afc:	4629      	mov	r1, r5
 8006afe:	bf28      	it	cs
 8006b00:	4632      	movcs	r2, r6
 8006b02:	f7fd fe14 	bl	800472e <memcpy>
 8006b06:	4629      	mov	r1, r5
 8006b08:	4638      	mov	r0, r7
 8006b0a:	f7fe fc81 	bl	8005410 <_free_r>
 8006b0e:	e7f1      	b.n	8006af4 <_realloc_r+0x40>

08006b10 <fiprintf>:
 8006b10:	b40e      	push	{r1, r2, r3}
 8006b12:	b503      	push	{r0, r1, lr}
 8006b14:	4601      	mov	r1, r0
 8006b16:	ab03      	add	r3, sp, #12
 8006b18:	4805      	ldr	r0, [pc, #20]	@ (8006b30 <fiprintf+0x20>)
 8006b1a:	f853 2b04 	ldr.w	r2, [r3], #4
 8006b1e:	6800      	ldr	r0, [r0, #0]
 8006b20:	9301      	str	r3, [sp, #4]
 8006b22:	f000 f83d 	bl	8006ba0 <_vfiprintf_r>
 8006b26:	b002      	add	sp, #8
 8006b28:	f85d eb04 	ldr.w	lr, [sp], #4
 8006b2c:	b003      	add	sp, #12
 8006b2e:	4770      	bx	lr
 8006b30:	20000180 	.word	0x20000180

08006b34 <abort>:
 8006b34:	2006      	movs	r0, #6
 8006b36:	b508      	push	{r3, lr}
 8006b38:	f000 fa06 	bl	8006f48 <raise>
 8006b3c:	2001      	movs	r0, #1
 8006b3e:	f7fb ff9a 	bl	8002a76 <_exit>

08006b42 <_malloc_usable_size_r>:
 8006b42:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006b46:	1f18      	subs	r0, r3, #4
 8006b48:	2b00      	cmp	r3, #0
 8006b4a:	bfbc      	itt	lt
 8006b4c:	580b      	ldrlt	r3, [r1, r0]
 8006b4e:	18c0      	addlt	r0, r0, r3
 8006b50:	4770      	bx	lr

08006b52 <__sfputc_r>:
 8006b52:	6893      	ldr	r3, [r2, #8]
 8006b54:	b410      	push	{r4}
 8006b56:	3b01      	subs	r3, #1
 8006b58:	2b00      	cmp	r3, #0
 8006b5a:	6093      	str	r3, [r2, #8]
 8006b5c:	da07      	bge.n	8006b6e <__sfputc_r+0x1c>
 8006b5e:	6994      	ldr	r4, [r2, #24]
 8006b60:	42a3      	cmp	r3, r4
 8006b62:	db01      	blt.n	8006b68 <__sfputc_r+0x16>
 8006b64:	290a      	cmp	r1, #10
 8006b66:	d102      	bne.n	8006b6e <__sfputc_r+0x1c>
 8006b68:	bc10      	pop	{r4}
 8006b6a:	f000 b931 	b.w	8006dd0 <__swbuf_r>
 8006b6e:	6813      	ldr	r3, [r2, #0]
 8006b70:	1c58      	adds	r0, r3, #1
 8006b72:	6010      	str	r0, [r2, #0]
 8006b74:	7019      	strb	r1, [r3, #0]
 8006b76:	4608      	mov	r0, r1
 8006b78:	bc10      	pop	{r4}
 8006b7a:	4770      	bx	lr

08006b7c <__sfputs_r>:
 8006b7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006b7e:	4606      	mov	r6, r0
 8006b80:	460f      	mov	r7, r1
 8006b82:	4614      	mov	r4, r2
 8006b84:	18d5      	adds	r5, r2, r3
 8006b86:	42ac      	cmp	r4, r5
 8006b88:	d101      	bne.n	8006b8e <__sfputs_r+0x12>
 8006b8a:	2000      	movs	r0, #0
 8006b8c:	e007      	b.n	8006b9e <__sfputs_r+0x22>
 8006b8e:	463a      	mov	r2, r7
 8006b90:	4630      	mov	r0, r6
 8006b92:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006b96:	f7ff ffdc 	bl	8006b52 <__sfputc_r>
 8006b9a:	1c43      	adds	r3, r0, #1
 8006b9c:	d1f3      	bne.n	8006b86 <__sfputs_r+0xa>
 8006b9e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08006ba0 <_vfiprintf_r>:
 8006ba0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006ba4:	460d      	mov	r5, r1
 8006ba6:	4614      	mov	r4, r2
 8006ba8:	4698      	mov	r8, r3
 8006baa:	4606      	mov	r6, r0
 8006bac:	b09d      	sub	sp, #116	@ 0x74
 8006bae:	b118      	cbz	r0, 8006bb8 <_vfiprintf_r+0x18>
 8006bb0:	6a03      	ldr	r3, [r0, #32]
 8006bb2:	b90b      	cbnz	r3, 8006bb8 <_vfiprintf_r+0x18>
 8006bb4:	f7fd fc22 	bl	80043fc <__sinit>
 8006bb8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8006bba:	07d9      	lsls	r1, r3, #31
 8006bbc:	d405      	bmi.n	8006bca <_vfiprintf_r+0x2a>
 8006bbe:	89ab      	ldrh	r3, [r5, #12]
 8006bc0:	059a      	lsls	r2, r3, #22
 8006bc2:	d402      	bmi.n	8006bca <_vfiprintf_r+0x2a>
 8006bc4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8006bc6:	f7fd fda2 	bl	800470e <__retarget_lock_acquire_recursive>
 8006bca:	89ab      	ldrh	r3, [r5, #12]
 8006bcc:	071b      	lsls	r3, r3, #28
 8006bce:	d501      	bpl.n	8006bd4 <_vfiprintf_r+0x34>
 8006bd0:	692b      	ldr	r3, [r5, #16]
 8006bd2:	b99b      	cbnz	r3, 8006bfc <_vfiprintf_r+0x5c>
 8006bd4:	4629      	mov	r1, r5
 8006bd6:	4630      	mov	r0, r6
 8006bd8:	f000 f938 	bl	8006e4c <__swsetup_r>
 8006bdc:	b170      	cbz	r0, 8006bfc <_vfiprintf_r+0x5c>
 8006bde:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8006be0:	07dc      	lsls	r4, r3, #31
 8006be2:	d504      	bpl.n	8006bee <_vfiprintf_r+0x4e>
 8006be4:	f04f 30ff 	mov.w	r0, #4294967295
 8006be8:	b01d      	add	sp, #116	@ 0x74
 8006bea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006bee:	89ab      	ldrh	r3, [r5, #12]
 8006bf0:	0598      	lsls	r0, r3, #22
 8006bf2:	d4f7      	bmi.n	8006be4 <_vfiprintf_r+0x44>
 8006bf4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8006bf6:	f7fd fd8b 	bl	8004710 <__retarget_lock_release_recursive>
 8006bfa:	e7f3      	b.n	8006be4 <_vfiprintf_r+0x44>
 8006bfc:	2300      	movs	r3, #0
 8006bfe:	9309      	str	r3, [sp, #36]	@ 0x24
 8006c00:	2320      	movs	r3, #32
 8006c02:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8006c06:	2330      	movs	r3, #48	@ 0x30
 8006c08:	f04f 0901 	mov.w	r9, #1
 8006c0c:	f8cd 800c 	str.w	r8, [sp, #12]
 8006c10:	f8df 81a8 	ldr.w	r8, [pc, #424]	@ 8006dbc <_vfiprintf_r+0x21c>
 8006c14:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8006c18:	4623      	mov	r3, r4
 8006c1a:	469a      	mov	sl, r3
 8006c1c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006c20:	b10a      	cbz	r2, 8006c26 <_vfiprintf_r+0x86>
 8006c22:	2a25      	cmp	r2, #37	@ 0x25
 8006c24:	d1f9      	bne.n	8006c1a <_vfiprintf_r+0x7a>
 8006c26:	ebba 0b04 	subs.w	fp, sl, r4
 8006c2a:	d00b      	beq.n	8006c44 <_vfiprintf_r+0xa4>
 8006c2c:	465b      	mov	r3, fp
 8006c2e:	4622      	mov	r2, r4
 8006c30:	4629      	mov	r1, r5
 8006c32:	4630      	mov	r0, r6
 8006c34:	f7ff ffa2 	bl	8006b7c <__sfputs_r>
 8006c38:	3001      	adds	r0, #1
 8006c3a:	f000 80a7 	beq.w	8006d8c <_vfiprintf_r+0x1ec>
 8006c3e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8006c40:	445a      	add	r2, fp
 8006c42:	9209      	str	r2, [sp, #36]	@ 0x24
 8006c44:	f89a 3000 	ldrb.w	r3, [sl]
 8006c48:	2b00      	cmp	r3, #0
 8006c4a:	f000 809f 	beq.w	8006d8c <_vfiprintf_r+0x1ec>
 8006c4e:	2300      	movs	r3, #0
 8006c50:	f04f 32ff 	mov.w	r2, #4294967295
 8006c54:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8006c58:	f10a 0a01 	add.w	sl, sl, #1
 8006c5c:	9304      	str	r3, [sp, #16]
 8006c5e:	9307      	str	r3, [sp, #28]
 8006c60:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8006c64:	931a      	str	r3, [sp, #104]	@ 0x68
 8006c66:	4654      	mov	r4, sl
 8006c68:	2205      	movs	r2, #5
 8006c6a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006c6e:	4853      	ldr	r0, [pc, #332]	@ (8006dbc <_vfiprintf_r+0x21c>)
 8006c70:	f7fd fd4f 	bl	8004712 <memchr>
 8006c74:	9a04      	ldr	r2, [sp, #16]
 8006c76:	b9d8      	cbnz	r0, 8006cb0 <_vfiprintf_r+0x110>
 8006c78:	06d1      	lsls	r1, r2, #27
 8006c7a:	bf44      	itt	mi
 8006c7c:	2320      	movmi	r3, #32
 8006c7e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006c82:	0713      	lsls	r3, r2, #28
 8006c84:	bf44      	itt	mi
 8006c86:	232b      	movmi	r3, #43	@ 0x2b
 8006c88:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006c8c:	f89a 3000 	ldrb.w	r3, [sl]
 8006c90:	2b2a      	cmp	r3, #42	@ 0x2a
 8006c92:	d015      	beq.n	8006cc0 <_vfiprintf_r+0x120>
 8006c94:	4654      	mov	r4, sl
 8006c96:	2000      	movs	r0, #0
 8006c98:	f04f 0c0a 	mov.w	ip, #10
 8006c9c:	9a07      	ldr	r2, [sp, #28]
 8006c9e:	4621      	mov	r1, r4
 8006ca0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006ca4:	3b30      	subs	r3, #48	@ 0x30
 8006ca6:	2b09      	cmp	r3, #9
 8006ca8:	d94b      	bls.n	8006d42 <_vfiprintf_r+0x1a2>
 8006caa:	b1b0      	cbz	r0, 8006cda <_vfiprintf_r+0x13a>
 8006cac:	9207      	str	r2, [sp, #28]
 8006cae:	e014      	b.n	8006cda <_vfiprintf_r+0x13a>
 8006cb0:	eba0 0308 	sub.w	r3, r0, r8
 8006cb4:	fa09 f303 	lsl.w	r3, r9, r3
 8006cb8:	4313      	orrs	r3, r2
 8006cba:	46a2      	mov	sl, r4
 8006cbc:	9304      	str	r3, [sp, #16]
 8006cbe:	e7d2      	b.n	8006c66 <_vfiprintf_r+0xc6>
 8006cc0:	9b03      	ldr	r3, [sp, #12]
 8006cc2:	1d19      	adds	r1, r3, #4
 8006cc4:	681b      	ldr	r3, [r3, #0]
 8006cc6:	9103      	str	r1, [sp, #12]
 8006cc8:	2b00      	cmp	r3, #0
 8006cca:	bfbb      	ittet	lt
 8006ccc:	425b      	neglt	r3, r3
 8006cce:	f042 0202 	orrlt.w	r2, r2, #2
 8006cd2:	9307      	strge	r3, [sp, #28]
 8006cd4:	9307      	strlt	r3, [sp, #28]
 8006cd6:	bfb8      	it	lt
 8006cd8:	9204      	strlt	r2, [sp, #16]
 8006cda:	7823      	ldrb	r3, [r4, #0]
 8006cdc:	2b2e      	cmp	r3, #46	@ 0x2e
 8006cde:	d10a      	bne.n	8006cf6 <_vfiprintf_r+0x156>
 8006ce0:	7863      	ldrb	r3, [r4, #1]
 8006ce2:	2b2a      	cmp	r3, #42	@ 0x2a
 8006ce4:	d132      	bne.n	8006d4c <_vfiprintf_r+0x1ac>
 8006ce6:	9b03      	ldr	r3, [sp, #12]
 8006ce8:	3402      	adds	r4, #2
 8006cea:	1d1a      	adds	r2, r3, #4
 8006cec:	681b      	ldr	r3, [r3, #0]
 8006cee:	9203      	str	r2, [sp, #12]
 8006cf0:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8006cf4:	9305      	str	r3, [sp, #20]
 8006cf6:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8006dc0 <_vfiprintf_r+0x220>
 8006cfa:	2203      	movs	r2, #3
 8006cfc:	4650      	mov	r0, sl
 8006cfe:	7821      	ldrb	r1, [r4, #0]
 8006d00:	f7fd fd07 	bl	8004712 <memchr>
 8006d04:	b138      	cbz	r0, 8006d16 <_vfiprintf_r+0x176>
 8006d06:	2240      	movs	r2, #64	@ 0x40
 8006d08:	9b04      	ldr	r3, [sp, #16]
 8006d0a:	eba0 000a 	sub.w	r0, r0, sl
 8006d0e:	4082      	lsls	r2, r0
 8006d10:	4313      	orrs	r3, r2
 8006d12:	3401      	adds	r4, #1
 8006d14:	9304      	str	r3, [sp, #16]
 8006d16:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006d1a:	2206      	movs	r2, #6
 8006d1c:	4829      	ldr	r0, [pc, #164]	@ (8006dc4 <_vfiprintf_r+0x224>)
 8006d1e:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8006d22:	f7fd fcf6 	bl	8004712 <memchr>
 8006d26:	2800      	cmp	r0, #0
 8006d28:	d03f      	beq.n	8006daa <_vfiprintf_r+0x20a>
 8006d2a:	4b27      	ldr	r3, [pc, #156]	@ (8006dc8 <_vfiprintf_r+0x228>)
 8006d2c:	bb1b      	cbnz	r3, 8006d76 <_vfiprintf_r+0x1d6>
 8006d2e:	9b03      	ldr	r3, [sp, #12]
 8006d30:	3307      	adds	r3, #7
 8006d32:	f023 0307 	bic.w	r3, r3, #7
 8006d36:	3308      	adds	r3, #8
 8006d38:	9303      	str	r3, [sp, #12]
 8006d3a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006d3c:	443b      	add	r3, r7
 8006d3e:	9309      	str	r3, [sp, #36]	@ 0x24
 8006d40:	e76a      	b.n	8006c18 <_vfiprintf_r+0x78>
 8006d42:	460c      	mov	r4, r1
 8006d44:	2001      	movs	r0, #1
 8006d46:	fb0c 3202 	mla	r2, ip, r2, r3
 8006d4a:	e7a8      	b.n	8006c9e <_vfiprintf_r+0xfe>
 8006d4c:	2300      	movs	r3, #0
 8006d4e:	f04f 0c0a 	mov.w	ip, #10
 8006d52:	4619      	mov	r1, r3
 8006d54:	3401      	adds	r4, #1
 8006d56:	9305      	str	r3, [sp, #20]
 8006d58:	4620      	mov	r0, r4
 8006d5a:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006d5e:	3a30      	subs	r2, #48	@ 0x30
 8006d60:	2a09      	cmp	r2, #9
 8006d62:	d903      	bls.n	8006d6c <_vfiprintf_r+0x1cc>
 8006d64:	2b00      	cmp	r3, #0
 8006d66:	d0c6      	beq.n	8006cf6 <_vfiprintf_r+0x156>
 8006d68:	9105      	str	r1, [sp, #20]
 8006d6a:	e7c4      	b.n	8006cf6 <_vfiprintf_r+0x156>
 8006d6c:	4604      	mov	r4, r0
 8006d6e:	2301      	movs	r3, #1
 8006d70:	fb0c 2101 	mla	r1, ip, r1, r2
 8006d74:	e7f0      	b.n	8006d58 <_vfiprintf_r+0x1b8>
 8006d76:	ab03      	add	r3, sp, #12
 8006d78:	9300      	str	r3, [sp, #0]
 8006d7a:	462a      	mov	r2, r5
 8006d7c:	4630      	mov	r0, r6
 8006d7e:	4b13      	ldr	r3, [pc, #76]	@ (8006dcc <_vfiprintf_r+0x22c>)
 8006d80:	a904      	add	r1, sp, #16
 8006d82:	f7fc fef3 	bl	8003b6c <_printf_float>
 8006d86:	4607      	mov	r7, r0
 8006d88:	1c78      	adds	r0, r7, #1
 8006d8a:	d1d6      	bne.n	8006d3a <_vfiprintf_r+0x19a>
 8006d8c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8006d8e:	07d9      	lsls	r1, r3, #31
 8006d90:	d405      	bmi.n	8006d9e <_vfiprintf_r+0x1fe>
 8006d92:	89ab      	ldrh	r3, [r5, #12]
 8006d94:	059a      	lsls	r2, r3, #22
 8006d96:	d402      	bmi.n	8006d9e <_vfiprintf_r+0x1fe>
 8006d98:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8006d9a:	f7fd fcb9 	bl	8004710 <__retarget_lock_release_recursive>
 8006d9e:	89ab      	ldrh	r3, [r5, #12]
 8006da0:	065b      	lsls	r3, r3, #25
 8006da2:	f53f af1f 	bmi.w	8006be4 <_vfiprintf_r+0x44>
 8006da6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006da8:	e71e      	b.n	8006be8 <_vfiprintf_r+0x48>
 8006daa:	ab03      	add	r3, sp, #12
 8006dac:	9300      	str	r3, [sp, #0]
 8006dae:	462a      	mov	r2, r5
 8006db0:	4630      	mov	r0, r6
 8006db2:	4b06      	ldr	r3, [pc, #24]	@ (8006dcc <_vfiprintf_r+0x22c>)
 8006db4:	a904      	add	r1, sp, #16
 8006db6:	f7fd f977 	bl	80040a8 <_printf_i>
 8006dba:	e7e4      	b.n	8006d86 <_vfiprintf_r+0x1e6>
 8006dbc:	0800757c 	.word	0x0800757c
 8006dc0:	08007582 	.word	0x08007582
 8006dc4:	08007586 	.word	0x08007586
 8006dc8:	08003b6d 	.word	0x08003b6d
 8006dcc:	08006b7d 	.word	0x08006b7d

08006dd0 <__swbuf_r>:
 8006dd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006dd2:	460e      	mov	r6, r1
 8006dd4:	4614      	mov	r4, r2
 8006dd6:	4605      	mov	r5, r0
 8006dd8:	b118      	cbz	r0, 8006de2 <__swbuf_r+0x12>
 8006dda:	6a03      	ldr	r3, [r0, #32]
 8006ddc:	b90b      	cbnz	r3, 8006de2 <__swbuf_r+0x12>
 8006dde:	f7fd fb0d 	bl	80043fc <__sinit>
 8006de2:	69a3      	ldr	r3, [r4, #24]
 8006de4:	60a3      	str	r3, [r4, #8]
 8006de6:	89a3      	ldrh	r3, [r4, #12]
 8006de8:	071a      	lsls	r2, r3, #28
 8006dea:	d501      	bpl.n	8006df0 <__swbuf_r+0x20>
 8006dec:	6923      	ldr	r3, [r4, #16]
 8006dee:	b943      	cbnz	r3, 8006e02 <__swbuf_r+0x32>
 8006df0:	4621      	mov	r1, r4
 8006df2:	4628      	mov	r0, r5
 8006df4:	f000 f82a 	bl	8006e4c <__swsetup_r>
 8006df8:	b118      	cbz	r0, 8006e02 <__swbuf_r+0x32>
 8006dfa:	f04f 37ff 	mov.w	r7, #4294967295
 8006dfe:	4638      	mov	r0, r7
 8006e00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006e02:	6823      	ldr	r3, [r4, #0]
 8006e04:	6922      	ldr	r2, [r4, #16]
 8006e06:	b2f6      	uxtb	r6, r6
 8006e08:	1a98      	subs	r0, r3, r2
 8006e0a:	6963      	ldr	r3, [r4, #20]
 8006e0c:	4637      	mov	r7, r6
 8006e0e:	4283      	cmp	r3, r0
 8006e10:	dc05      	bgt.n	8006e1e <__swbuf_r+0x4e>
 8006e12:	4621      	mov	r1, r4
 8006e14:	4628      	mov	r0, r5
 8006e16:	f7ff fdc9 	bl	80069ac <_fflush_r>
 8006e1a:	2800      	cmp	r0, #0
 8006e1c:	d1ed      	bne.n	8006dfa <__swbuf_r+0x2a>
 8006e1e:	68a3      	ldr	r3, [r4, #8]
 8006e20:	3b01      	subs	r3, #1
 8006e22:	60a3      	str	r3, [r4, #8]
 8006e24:	6823      	ldr	r3, [r4, #0]
 8006e26:	1c5a      	adds	r2, r3, #1
 8006e28:	6022      	str	r2, [r4, #0]
 8006e2a:	701e      	strb	r6, [r3, #0]
 8006e2c:	6962      	ldr	r2, [r4, #20]
 8006e2e:	1c43      	adds	r3, r0, #1
 8006e30:	429a      	cmp	r2, r3
 8006e32:	d004      	beq.n	8006e3e <__swbuf_r+0x6e>
 8006e34:	89a3      	ldrh	r3, [r4, #12]
 8006e36:	07db      	lsls	r3, r3, #31
 8006e38:	d5e1      	bpl.n	8006dfe <__swbuf_r+0x2e>
 8006e3a:	2e0a      	cmp	r6, #10
 8006e3c:	d1df      	bne.n	8006dfe <__swbuf_r+0x2e>
 8006e3e:	4621      	mov	r1, r4
 8006e40:	4628      	mov	r0, r5
 8006e42:	f7ff fdb3 	bl	80069ac <_fflush_r>
 8006e46:	2800      	cmp	r0, #0
 8006e48:	d0d9      	beq.n	8006dfe <__swbuf_r+0x2e>
 8006e4a:	e7d6      	b.n	8006dfa <__swbuf_r+0x2a>

08006e4c <__swsetup_r>:
 8006e4c:	b538      	push	{r3, r4, r5, lr}
 8006e4e:	4b29      	ldr	r3, [pc, #164]	@ (8006ef4 <__swsetup_r+0xa8>)
 8006e50:	4605      	mov	r5, r0
 8006e52:	6818      	ldr	r0, [r3, #0]
 8006e54:	460c      	mov	r4, r1
 8006e56:	b118      	cbz	r0, 8006e60 <__swsetup_r+0x14>
 8006e58:	6a03      	ldr	r3, [r0, #32]
 8006e5a:	b90b      	cbnz	r3, 8006e60 <__swsetup_r+0x14>
 8006e5c:	f7fd face 	bl	80043fc <__sinit>
 8006e60:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006e64:	0719      	lsls	r1, r3, #28
 8006e66:	d422      	bmi.n	8006eae <__swsetup_r+0x62>
 8006e68:	06da      	lsls	r2, r3, #27
 8006e6a:	d407      	bmi.n	8006e7c <__swsetup_r+0x30>
 8006e6c:	2209      	movs	r2, #9
 8006e6e:	602a      	str	r2, [r5, #0]
 8006e70:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006e74:	f04f 30ff 	mov.w	r0, #4294967295
 8006e78:	81a3      	strh	r3, [r4, #12]
 8006e7a:	e033      	b.n	8006ee4 <__swsetup_r+0x98>
 8006e7c:	0758      	lsls	r0, r3, #29
 8006e7e:	d512      	bpl.n	8006ea6 <__swsetup_r+0x5a>
 8006e80:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8006e82:	b141      	cbz	r1, 8006e96 <__swsetup_r+0x4a>
 8006e84:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8006e88:	4299      	cmp	r1, r3
 8006e8a:	d002      	beq.n	8006e92 <__swsetup_r+0x46>
 8006e8c:	4628      	mov	r0, r5
 8006e8e:	f7fe fabf 	bl	8005410 <_free_r>
 8006e92:	2300      	movs	r3, #0
 8006e94:	6363      	str	r3, [r4, #52]	@ 0x34
 8006e96:	89a3      	ldrh	r3, [r4, #12]
 8006e98:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8006e9c:	81a3      	strh	r3, [r4, #12]
 8006e9e:	2300      	movs	r3, #0
 8006ea0:	6063      	str	r3, [r4, #4]
 8006ea2:	6923      	ldr	r3, [r4, #16]
 8006ea4:	6023      	str	r3, [r4, #0]
 8006ea6:	89a3      	ldrh	r3, [r4, #12]
 8006ea8:	f043 0308 	orr.w	r3, r3, #8
 8006eac:	81a3      	strh	r3, [r4, #12]
 8006eae:	6923      	ldr	r3, [r4, #16]
 8006eb0:	b94b      	cbnz	r3, 8006ec6 <__swsetup_r+0x7a>
 8006eb2:	89a3      	ldrh	r3, [r4, #12]
 8006eb4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8006eb8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8006ebc:	d003      	beq.n	8006ec6 <__swsetup_r+0x7a>
 8006ebe:	4621      	mov	r1, r4
 8006ec0:	4628      	mov	r0, r5
 8006ec2:	f000 f882 	bl	8006fca <__smakebuf_r>
 8006ec6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006eca:	f013 0201 	ands.w	r2, r3, #1
 8006ece:	d00a      	beq.n	8006ee6 <__swsetup_r+0x9a>
 8006ed0:	2200      	movs	r2, #0
 8006ed2:	60a2      	str	r2, [r4, #8]
 8006ed4:	6962      	ldr	r2, [r4, #20]
 8006ed6:	4252      	negs	r2, r2
 8006ed8:	61a2      	str	r2, [r4, #24]
 8006eda:	6922      	ldr	r2, [r4, #16]
 8006edc:	b942      	cbnz	r2, 8006ef0 <__swsetup_r+0xa4>
 8006ede:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8006ee2:	d1c5      	bne.n	8006e70 <__swsetup_r+0x24>
 8006ee4:	bd38      	pop	{r3, r4, r5, pc}
 8006ee6:	0799      	lsls	r1, r3, #30
 8006ee8:	bf58      	it	pl
 8006eea:	6962      	ldrpl	r2, [r4, #20]
 8006eec:	60a2      	str	r2, [r4, #8]
 8006eee:	e7f4      	b.n	8006eda <__swsetup_r+0x8e>
 8006ef0:	2000      	movs	r0, #0
 8006ef2:	e7f7      	b.n	8006ee4 <__swsetup_r+0x98>
 8006ef4:	20000180 	.word	0x20000180

08006ef8 <_raise_r>:
 8006ef8:	291f      	cmp	r1, #31
 8006efa:	b538      	push	{r3, r4, r5, lr}
 8006efc:	4605      	mov	r5, r0
 8006efe:	460c      	mov	r4, r1
 8006f00:	d904      	bls.n	8006f0c <_raise_r+0x14>
 8006f02:	2316      	movs	r3, #22
 8006f04:	6003      	str	r3, [r0, #0]
 8006f06:	f04f 30ff 	mov.w	r0, #4294967295
 8006f0a:	bd38      	pop	{r3, r4, r5, pc}
 8006f0c:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8006f0e:	b112      	cbz	r2, 8006f16 <_raise_r+0x1e>
 8006f10:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8006f14:	b94b      	cbnz	r3, 8006f2a <_raise_r+0x32>
 8006f16:	4628      	mov	r0, r5
 8006f18:	f000 f830 	bl	8006f7c <_getpid_r>
 8006f1c:	4622      	mov	r2, r4
 8006f1e:	4601      	mov	r1, r0
 8006f20:	4628      	mov	r0, r5
 8006f22:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006f26:	f000 b817 	b.w	8006f58 <_kill_r>
 8006f2a:	2b01      	cmp	r3, #1
 8006f2c:	d00a      	beq.n	8006f44 <_raise_r+0x4c>
 8006f2e:	1c59      	adds	r1, r3, #1
 8006f30:	d103      	bne.n	8006f3a <_raise_r+0x42>
 8006f32:	2316      	movs	r3, #22
 8006f34:	6003      	str	r3, [r0, #0]
 8006f36:	2001      	movs	r0, #1
 8006f38:	e7e7      	b.n	8006f0a <_raise_r+0x12>
 8006f3a:	2100      	movs	r1, #0
 8006f3c:	4620      	mov	r0, r4
 8006f3e:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8006f42:	4798      	blx	r3
 8006f44:	2000      	movs	r0, #0
 8006f46:	e7e0      	b.n	8006f0a <_raise_r+0x12>

08006f48 <raise>:
 8006f48:	4b02      	ldr	r3, [pc, #8]	@ (8006f54 <raise+0xc>)
 8006f4a:	4601      	mov	r1, r0
 8006f4c:	6818      	ldr	r0, [r3, #0]
 8006f4e:	f7ff bfd3 	b.w	8006ef8 <_raise_r>
 8006f52:	bf00      	nop
 8006f54:	20000180 	.word	0x20000180

08006f58 <_kill_r>:
 8006f58:	b538      	push	{r3, r4, r5, lr}
 8006f5a:	2300      	movs	r3, #0
 8006f5c:	4d06      	ldr	r5, [pc, #24]	@ (8006f78 <_kill_r+0x20>)
 8006f5e:	4604      	mov	r4, r0
 8006f60:	4608      	mov	r0, r1
 8006f62:	4611      	mov	r1, r2
 8006f64:	602b      	str	r3, [r5, #0]
 8006f66:	f7fb fd76 	bl	8002a56 <_kill>
 8006f6a:	1c43      	adds	r3, r0, #1
 8006f6c:	d102      	bne.n	8006f74 <_kill_r+0x1c>
 8006f6e:	682b      	ldr	r3, [r5, #0]
 8006f70:	b103      	cbz	r3, 8006f74 <_kill_r+0x1c>
 8006f72:	6023      	str	r3, [r4, #0]
 8006f74:	bd38      	pop	{r3, r4, r5, pc}
 8006f76:	bf00      	nop
 8006f78:	20000540 	.word	0x20000540

08006f7c <_getpid_r>:
 8006f7c:	f7fb bd64 	b.w	8002a48 <_getpid>

08006f80 <__swhatbuf_r>:
 8006f80:	b570      	push	{r4, r5, r6, lr}
 8006f82:	460c      	mov	r4, r1
 8006f84:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006f88:	4615      	mov	r5, r2
 8006f8a:	2900      	cmp	r1, #0
 8006f8c:	461e      	mov	r6, r3
 8006f8e:	b096      	sub	sp, #88	@ 0x58
 8006f90:	da0c      	bge.n	8006fac <__swhatbuf_r+0x2c>
 8006f92:	89a3      	ldrh	r3, [r4, #12]
 8006f94:	2100      	movs	r1, #0
 8006f96:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8006f9a:	bf14      	ite	ne
 8006f9c:	2340      	movne	r3, #64	@ 0x40
 8006f9e:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8006fa2:	2000      	movs	r0, #0
 8006fa4:	6031      	str	r1, [r6, #0]
 8006fa6:	602b      	str	r3, [r5, #0]
 8006fa8:	b016      	add	sp, #88	@ 0x58
 8006faa:	bd70      	pop	{r4, r5, r6, pc}
 8006fac:	466a      	mov	r2, sp
 8006fae:	f000 f849 	bl	8007044 <_fstat_r>
 8006fb2:	2800      	cmp	r0, #0
 8006fb4:	dbed      	blt.n	8006f92 <__swhatbuf_r+0x12>
 8006fb6:	9901      	ldr	r1, [sp, #4]
 8006fb8:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8006fbc:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8006fc0:	4259      	negs	r1, r3
 8006fc2:	4159      	adcs	r1, r3
 8006fc4:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8006fc8:	e7eb      	b.n	8006fa2 <__swhatbuf_r+0x22>

08006fca <__smakebuf_r>:
 8006fca:	898b      	ldrh	r3, [r1, #12]
 8006fcc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006fce:	079d      	lsls	r5, r3, #30
 8006fd0:	4606      	mov	r6, r0
 8006fd2:	460c      	mov	r4, r1
 8006fd4:	d507      	bpl.n	8006fe6 <__smakebuf_r+0x1c>
 8006fd6:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8006fda:	6023      	str	r3, [r4, #0]
 8006fdc:	6123      	str	r3, [r4, #16]
 8006fde:	2301      	movs	r3, #1
 8006fe0:	6163      	str	r3, [r4, #20]
 8006fe2:	b003      	add	sp, #12
 8006fe4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006fe6:	466a      	mov	r2, sp
 8006fe8:	ab01      	add	r3, sp, #4
 8006fea:	f7ff ffc9 	bl	8006f80 <__swhatbuf_r>
 8006fee:	9f00      	ldr	r7, [sp, #0]
 8006ff0:	4605      	mov	r5, r0
 8006ff2:	4639      	mov	r1, r7
 8006ff4:	4630      	mov	r0, r6
 8006ff6:	f7fe fdb7 	bl	8005b68 <_malloc_r>
 8006ffa:	b948      	cbnz	r0, 8007010 <__smakebuf_r+0x46>
 8006ffc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007000:	059a      	lsls	r2, r3, #22
 8007002:	d4ee      	bmi.n	8006fe2 <__smakebuf_r+0x18>
 8007004:	f023 0303 	bic.w	r3, r3, #3
 8007008:	f043 0302 	orr.w	r3, r3, #2
 800700c:	81a3      	strh	r3, [r4, #12]
 800700e:	e7e2      	b.n	8006fd6 <__smakebuf_r+0xc>
 8007010:	89a3      	ldrh	r3, [r4, #12]
 8007012:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8007016:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800701a:	81a3      	strh	r3, [r4, #12]
 800701c:	9b01      	ldr	r3, [sp, #4]
 800701e:	6020      	str	r0, [r4, #0]
 8007020:	b15b      	cbz	r3, 800703a <__smakebuf_r+0x70>
 8007022:	4630      	mov	r0, r6
 8007024:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8007028:	f000 f81e 	bl	8007068 <_isatty_r>
 800702c:	b128      	cbz	r0, 800703a <__smakebuf_r+0x70>
 800702e:	89a3      	ldrh	r3, [r4, #12]
 8007030:	f023 0303 	bic.w	r3, r3, #3
 8007034:	f043 0301 	orr.w	r3, r3, #1
 8007038:	81a3      	strh	r3, [r4, #12]
 800703a:	89a3      	ldrh	r3, [r4, #12]
 800703c:	431d      	orrs	r5, r3
 800703e:	81a5      	strh	r5, [r4, #12]
 8007040:	e7cf      	b.n	8006fe2 <__smakebuf_r+0x18>
	...

08007044 <_fstat_r>:
 8007044:	b538      	push	{r3, r4, r5, lr}
 8007046:	2300      	movs	r3, #0
 8007048:	4d06      	ldr	r5, [pc, #24]	@ (8007064 <_fstat_r+0x20>)
 800704a:	4604      	mov	r4, r0
 800704c:	4608      	mov	r0, r1
 800704e:	4611      	mov	r1, r2
 8007050:	602b      	str	r3, [r5, #0]
 8007052:	f7fb fd5f 	bl	8002b14 <_fstat>
 8007056:	1c43      	adds	r3, r0, #1
 8007058:	d102      	bne.n	8007060 <_fstat_r+0x1c>
 800705a:	682b      	ldr	r3, [r5, #0]
 800705c:	b103      	cbz	r3, 8007060 <_fstat_r+0x1c>
 800705e:	6023      	str	r3, [r4, #0]
 8007060:	bd38      	pop	{r3, r4, r5, pc}
 8007062:	bf00      	nop
 8007064:	20000540 	.word	0x20000540

08007068 <_isatty_r>:
 8007068:	b538      	push	{r3, r4, r5, lr}
 800706a:	2300      	movs	r3, #0
 800706c:	4d05      	ldr	r5, [pc, #20]	@ (8007084 <_isatty_r+0x1c>)
 800706e:	4604      	mov	r4, r0
 8007070:	4608      	mov	r0, r1
 8007072:	602b      	str	r3, [r5, #0]
 8007074:	f7fb fd5d 	bl	8002b32 <_isatty>
 8007078:	1c43      	adds	r3, r0, #1
 800707a:	d102      	bne.n	8007082 <_isatty_r+0x1a>
 800707c:	682b      	ldr	r3, [r5, #0]
 800707e:	b103      	cbz	r3, 8007082 <_isatty_r+0x1a>
 8007080:	6023      	str	r3, [r4, #0]
 8007082:	bd38      	pop	{r3, r4, r5, pc}
 8007084:	20000540 	.word	0x20000540

08007088 <_init>:
 8007088:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800708a:	bf00      	nop
 800708c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800708e:	bc08      	pop	{r3}
 8007090:	469e      	mov	lr, r3
 8007092:	4770      	bx	lr

08007094 <_fini>:
 8007094:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007096:	bf00      	nop
 8007098:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800709a:	bc08      	pop	{r3}
 800709c:	469e      	mov	lr, r3
 800709e:	4770      	bx	lr
