
LoRa-T.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006e78  08000110  08000110  00001110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000006f8  08006f88  08006f88  00007f88  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08007680  08007680  000091d0  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08007680  08007680  00008680  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08007688  08007688  000091d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08007688  08007688  00008688  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800768c  0800768c  0000868c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001d0  20000000  08007690  00009000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000380  200001d0  08007860  000091d0  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000550  08007860  00009550  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000091d0  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002c46  00000000  00000000  000091f9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000e96  00000000  00000000  0000be3f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000400  00000000  00000000  0000ccd8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000002d6  00000000  00000000  0000d0d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00017662  00000000  00000000  0000d3ae  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000576e  00000000  00000000  00024a10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00081a42  00000000  00000000  0002a17e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000abbc0  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002464  00000000  00000000  000abc04  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004e  00000000  00000000  000ae068  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	@ (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	@ (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200001d0 	.word	0x200001d0
 800012c:	00000000 	.word	0x00000000
 8000130:	08006f70 	.word	0x08006f70

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	@ (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	@ (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	@ (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200001d4 	.word	0x200001d4
 800014c:	08006f70 	.word	0x08006f70

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <__aeabi_drsub>:
 8000160:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000164:	e002      	b.n	800016c <__adddf3>
 8000166:	bf00      	nop

08000168 <__aeabi_dsub>:
 8000168:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800016c <__adddf3>:
 800016c:	b530      	push	{r4, r5, lr}
 800016e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000172:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000176:	ea94 0f05 	teq	r4, r5
 800017a:	bf08      	it	eq
 800017c:	ea90 0f02 	teqeq	r0, r2
 8000180:	bf1f      	itttt	ne
 8000182:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000186:	ea55 0c02 	orrsne.w	ip, r5, r2
 800018a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800018e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000192:	f000 80e2 	beq.w	800035a <__adddf3+0x1ee>
 8000196:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800019a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800019e:	bfb8      	it	lt
 80001a0:	426d      	neglt	r5, r5
 80001a2:	dd0c      	ble.n	80001be <__adddf3+0x52>
 80001a4:	442c      	add	r4, r5
 80001a6:	ea80 0202 	eor.w	r2, r0, r2
 80001aa:	ea81 0303 	eor.w	r3, r1, r3
 80001ae:	ea82 0000 	eor.w	r0, r2, r0
 80001b2:	ea83 0101 	eor.w	r1, r3, r1
 80001b6:	ea80 0202 	eor.w	r2, r0, r2
 80001ba:	ea81 0303 	eor.w	r3, r1, r3
 80001be:	2d36      	cmp	r5, #54	@ 0x36
 80001c0:	bf88      	it	hi
 80001c2:	bd30      	pophi	{r4, r5, pc}
 80001c4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80001c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001cc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80001d0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001d4:	d002      	beq.n	80001dc <__adddf3+0x70>
 80001d6:	4240      	negs	r0, r0
 80001d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001dc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 80001e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001e4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001e8:	d002      	beq.n	80001f0 <__adddf3+0x84>
 80001ea:	4252      	negs	r2, r2
 80001ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001f0:	ea94 0f05 	teq	r4, r5
 80001f4:	f000 80a7 	beq.w	8000346 <__adddf3+0x1da>
 80001f8:	f1a4 0401 	sub.w	r4, r4, #1
 80001fc:	f1d5 0e20 	rsbs	lr, r5, #32
 8000200:	db0d      	blt.n	800021e <__adddf3+0xb2>
 8000202:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000206:	fa22 f205 	lsr.w	r2, r2, r5
 800020a:	1880      	adds	r0, r0, r2
 800020c:	f141 0100 	adc.w	r1, r1, #0
 8000210:	fa03 f20e 	lsl.w	r2, r3, lr
 8000214:	1880      	adds	r0, r0, r2
 8000216:	fa43 f305 	asr.w	r3, r3, r5
 800021a:	4159      	adcs	r1, r3
 800021c:	e00e      	b.n	800023c <__adddf3+0xd0>
 800021e:	f1a5 0520 	sub.w	r5, r5, #32
 8000222:	f10e 0e20 	add.w	lr, lr, #32
 8000226:	2a01      	cmp	r2, #1
 8000228:	fa03 fc0e 	lsl.w	ip, r3, lr
 800022c:	bf28      	it	cs
 800022e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000232:	fa43 f305 	asr.w	r3, r3, r5
 8000236:	18c0      	adds	r0, r0, r3
 8000238:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800023c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000240:	d507      	bpl.n	8000252 <__adddf3+0xe6>
 8000242:	f04f 0e00 	mov.w	lr, #0
 8000246:	f1dc 0c00 	rsbs	ip, ip, #0
 800024a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800024e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000252:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000256:	d31b      	bcc.n	8000290 <__adddf3+0x124>
 8000258:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800025c:	d30c      	bcc.n	8000278 <__adddf3+0x10c>
 800025e:	0849      	lsrs	r1, r1, #1
 8000260:	ea5f 0030 	movs.w	r0, r0, rrx
 8000264:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000268:	f104 0401 	add.w	r4, r4, #1
 800026c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000270:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000274:	f080 809a 	bcs.w	80003ac <__adddf3+0x240>
 8000278:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800027c:	bf08      	it	eq
 800027e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000282:	f150 0000 	adcs.w	r0, r0, #0
 8000286:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800028a:	ea41 0105 	orr.w	r1, r1, r5
 800028e:	bd30      	pop	{r4, r5, pc}
 8000290:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000294:	4140      	adcs	r0, r0
 8000296:	eb41 0101 	adc.w	r1, r1, r1
 800029a:	3c01      	subs	r4, #1
 800029c:	bf28      	it	cs
 800029e:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80002a2:	d2e9      	bcs.n	8000278 <__adddf3+0x10c>
 80002a4:	f091 0f00 	teq	r1, #0
 80002a8:	bf04      	itt	eq
 80002aa:	4601      	moveq	r1, r0
 80002ac:	2000      	moveq	r0, #0
 80002ae:	fab1 f381 	clz	r3, r1
 80002b2:	bf08      	it	eq
 80002b4:	3320      	addeq	r3, #32
 80002b6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ba:	f1b3 0220 	subs.w	r2, r3, #32
 80002be:	da0c      	bge.n	80002da <__adddf3+0x16e>
 80002c0:	320c      	adds	r2, #12
 80002c2:	dd08      	ble.n	80002d6 <__adddf3+0x16a>
 80002c4:	f102 0c14 	add.w	ip, r2, #20
 80002c8:	f1c2 020c 	rsb	r2, r2, #12
 80002cc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002d0:	fa21 f102 	lsr.w	r1, r1, r2
 80002d4:	e00c      	b.n	80002f0 <__adddf3+0x184>
 80002d6:	f102 0214 	add.w	r2, r2, #20
 80002da:	bfd8      	it	le
 80002dc:	f1c2 0c20 	rsble	ip, r2, #32
 80002e0:	fa01 f102 	lsl.w	r1, r1, r2
 80002e4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002e8:	bfdc      	itt	le
 80002ea:	ea41 010c 	orrle.w	r1, r1, ip
 80002ee:	4090      	lslle	r0, r2
 80002f0:	1ae4      	subs	r4, r4, r3
 80002f2:	bfa2      	ittt	ge
 80002f4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002f8:	4329      	orrge	r1, r5
 80002fa:	bd30      	popge	{r4, r5, pc}
 80002fc:	ea6f 0404 	mvn.w	r4, r4
 8000300:	3c1f      	subs	r4, #31
 8000302:	da1c      	bge.n	800033e <__adddf3+0x1d2>
 8000304:	340c      	adds	r4, #12
 8000306:	dc0e      	bgt.n	8000326 <__adddf3+0x1ba>
 8000308:	f104 0414 	add.w	r4, r4, #20
 800030c:	f1c4 0220 	rsb	r2, r4, #32
 8000310:	fa20 f004 	lsr.w	r0, r0, r4
 8000314:	fa01 f302 	lsl.w	r3, r1, r2
 8000318:	ea40 0003 	orr.w	r0, r0, r3
 800031c:	fa21 f304 	lsr.w	r3, r1, r4
 8000320:	ea45 0103 	orr.w	r1, r5, r3
 8000324:	bd30      	pop	{r4, r5, pc}
 8000326:	f1c4 040c 	rsb	r4, r4, #12
 800032a:	f1c4 0220 	rsb	r2, r4, #32
 800032e:	fa20 f002 	lsr.w	r0, r0, r2
 8000332:	fa01 f304 	lsl.w	r3, r1, r4
 8000336:	ea40 0003 	orr.w	r0, r0, r3
 800033a:	4629      	mov	r1, r5
 800033c:	bd30      	pop	{r4, r5, pc}
 800033e:	fa21 f004 	lsr.w	r0, r1, r4
 8000342:	4629      	mov	r1, r5
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f094 0f00 	teq	r4, #0
 800034a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800034e:	bf06      	itte	eq
 8000350:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000354:	3401      	addeq	r4, #1
 8000356:	3d01      	subne	r5, #1
 8000358:	e74e      	b.n	80001f8 <__adddf3+0x8c>
 800035a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800035e:	bf18      	it	ne
 8000360:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000364:	d029      	beq.n	80003ba <__adddf3+0x24e>
 8000366:	ea94 0f05 	teq	r4, r5
 800036a:	bf08      	it	eq
 800036c:	ea90 0f02 	teqeq	r0, r2
 8000370:	d005      	beq.n	800037e <__adddf3+0x212>
 8000372:	ea54 0c00 	orrs.w	ip, r4, r0
 8000376:	bf04      	itt	eq
 8000378:	4619      	moveq	r1, r3
 800037a:	4610      	moveq	r0, r2
 800037c:	bd30      	pop	{r4, r5, pc}
 800037e:	ea91 0f03 	teq	r1, r3
 8000382:	bf1e      	ittt	ne
 8000384:	2100      	movne	r1, #0
 8000386:	2000      	movne	r0, #0
 8000388:	bd30      	popne	{r4, r5, pc}
 800038a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800038e:	d105      	bne.n	800039c <__adddf3+0x230>
 8000390:	0040      	lsls	r0, r0, #1
 8000392:	4149      	adcs	r1, r1
 8000394:	bf28      	it	cs
 8000396:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 800039a:	bd30      	pop	{r4, r5, pc}
 800039c:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80003a0:	bf3c      	itt	cc
 80003a2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80003a6:	bd30      	popcc	{r4, r5, pc}
 80003a8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003ac:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80003b0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80003b4:	f04f 0000 	mov.w	r0, #0
 80003b8:	bd30      	pop	{r4, r5, pc}
 80003ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003be:	bf1a      	itte	ne
 80003c0:	4619      	movne	r1, r3
 80003c2:	4610      	movne	r0, r2
 80003c4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003c8:	bf1c      	itt	ne
 80003ca:	460b      	movne	r3, r1
 80003cc:	4602      	movne	r2, r0
 80003ce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003d2:	bf06      	itte	eq
 80003d4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003d8:	ea91 0f03 	teqeq	r1, r3
 80003dc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 80003e0:	bd30      	pop	{r4, r5, pc}
 80003e2:	bf00      	nop

080003e4 <__aeabi_ui2d>:
 80003e4:	f090 0f00 	teq	r0, #0
 80003e8:	bf04      	itt	eq
 80003ea:	2100      	moveq	r1, #0
 80003ec:	4770      	bxeq	lr
 80003ee:	b530      	push	{r4, r5, lr}
 80003f0:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80003f4:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80003f8:	f04f 0500 	mov.w	r5, #0
 80003fc:	f04f 0100 	mov.w	r1, #0
 8000400:	e750      	b.n	80002a4 <__adddf3+0x138>
 8000402:	bf00      	nop

08000404 <__aeabi_i2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000418:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800041c:	bf48      	it	mi
 800041e:	4240      	negmi	r0, r0
 8000420:	f04f 0100 	mov.w	r1, #0
 8000424:	e73e      	b.n	80002a4 <__adddf3+0x138>
 8000426:	bf00      	nop

08000428 <__aeabi_f2d>:
 8000428:	0042      	lsls	r2, r0, #1
 800042a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800042e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000432:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000436:	bf1f      	itttt	ne
 8000438:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800043c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000440:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000444:	4770      	bxne	lr
 8000446:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800044a:	bf08      	it	eq
 800044c:	4770      	bxeq	lr
 800044e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000452:	bf04      	itt	eq
 8000454:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000458:	4770      	bxeq	lr
 800045a:	b530      	push	{r4, r5, lr}
 800045c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000460:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000464:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000468:	e71c      	b.n	80002a4 <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_ul2d>:
 800046c:	ea50 0201 	orrs.w	r2, r0, r1
 8000470:	bf08      	it	eq
 8000472:	4770      	bxeq	lr
 8000474:	b530      	push	{r4, r5, lr}
 8000476:	f04f 0500 	mov.w	r5, #0
 800047a:	e00a      	b.n	8000492 <__aeabi_l2d+0x16>

0800047c <__aeabi_l2d>:
 800047c:	ea50 0201 	orrs.w	r2, r0, r1
 8000480:	bf08      	it	eq
 8000482:	4770      	bxeq	lr
 8000484:	b530      	push	{r4, r5, lr}
 8000486:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 800048a:	d502      	bpl.n	8000492 <__aeabi_l2d+0x16>
 800048c:	4240      	negs	r0, r0
 800048e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000492:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000496:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800049a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800049e:	f43f aed8 	beq.w	8000252 <__adddf3+0xe6>
 80004a2:	f04f 0203 	mov.w	r2, #3
 80004a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004aa:	bf18      	it	ne
 80004ac:	3203      	addne	r2, #3
 80004ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004b2:	bf18      	it	ne
 80004b4:	3203      	addne	r2, #3
 80004b6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004ba:	f1c2 0320 	rsb	r3, r2, #32
 80004be:	fa00 fc03 	lsl.w	ip, r0, r3
 80004c2:	fa20 f002 	lsr.w	r0, r0, r2
 80004c6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ca:	ea40 000e 	orr.w	r0, r0, lr
 80004ce:	fa21 f102 	lsr.w	r1, r1, r2
 80004d2:	4414      	add	r4, r2
 80004d4:	e6bd      	b.n	8000252 <__adddf3+0xe6>
 80004d6:	bf00      	nop

080004d8 <__aeabi_dmul>:
 80004d8:	b570      	push	{r4, r5, r6, lr}
 80004da:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80004de:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80004e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004e6:	bf1d      	ittte	ne
 80004e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004ec:	ea94 0f0c 	teqne	r4, ip
 80004f0:	ea95 0f0c 	teqne	r5, ip
 80004f4:	f000 f8de 	bleq	80006b4 <__aeabi_dmul+0x1dc>
 80004f8:	442c      	add	r4, r5
 80004fa:	ea81 0603 	eor.w	r6, r1, r3
 80004fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000502:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000506:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800050a:	bf18      	it	ne
 800050c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000510:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000514:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000518:	d038      	beq.n	800058c <__aeabi_dmul+0xb4>
 800051a:	fba0 ce02 	umull	ip, lr, r0, r2
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000526:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800052a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800052e:	f04f 0600 	mov.w	r6, #0
 8000532:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000536:	f09c 0f00 	teq	ip, #0
 800053a:	bf18      	it	ne
 800053c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000540:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000544:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000548:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800054c:	d204      	bcs.n	8000558 <__aeabi_dmul+0x80>
 800054e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000552:	416d      	adcs	r5, r5
 8000554:	eb46 0606 	adc.w	r6, r6, r6
 8000558:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800055c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000560:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000564:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000568:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800056c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000570:	bf88      	it	hi
 8000572:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000576:	d81e      	bhi.n	80005b6 <__aeabi_dmul+0xde>
 8000578:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800057c:	bf08      	it	eq
 800057e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000582:	f150 0000 	adcs.w	r0, r0, #0
 8000586:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800058a:	bd70      	pop	{r4, r5, r6, pc}
 800058c:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000590:	ea46 0101 	orr.w	r1, r6, r1
 8000594:	ea40 0002 	orr.w	r0, r0, r2
 8000598:	ea81 0103 	eor.w	r1, r1, r3
 800059c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005a0:	bfc2      	ittt	gt
 80005a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	popgt	{r4, r5, r6, pc}
 80005ac:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80005b0:	f04f 0e00 	mov.w	lr, #0
 80005b4:	3c01      	subs	r4, #1
 80005b6:	f300 80ab 	bgt.w	8000710 <__aeabi_dmul+0x238>
 80005ba:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80005be:	bfde      	ittt	le
 80005c0:	2000      	movle	r0, #0
 80005c2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80005c6:	bd70      	pople	{r4, r5, r6, pc}
 80005c8:	f1c4 0400 	rsb	r4, r4, #0
 80005cc:	3c20      	subs	r4, #32
 80005ce:	da35      	bge.n	800063c <__aeabi_dmul+0x164>
 80005d0:	340c      	adds	r4, #12
 80005d2:	dc1b      	bgt.n	800060c <__aeabi_dmul+0x134>
 80005d4:	f104 0414 	add.w	r4, r4, #20
 80005d8:	f1c4 0520 	rsb	r5, r4, #32
 80005dc:	fa00 f305 	lsl.w	r3, r0, r5
 80005e0:	fa20 f004 	lsr.w	r0, r0, r4
 80005e4:	fa01 f205 	lsl.w	r2, r1, r5
 80005e8:	ea40 0002 	orr.w	r0, r0, r2
 80005ec:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 80005f0:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80005f8:	fa21 f604 	lsr.w	r6, r1, r4
 80005fc:	eb42 0106 	adc.w	r1, r2, r6
 8000600:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000604:	bf08      	it	eq
 8000606:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800060a:	bd70      	pop	{r4, r5, r6, pc}
 800060c:	f1c4 040c 	rsb	r4, r4, #12
 8000610:	f1c4 0520 	rsb	r5, r4, #32
 8000614:	fa00 f304 	lsl.w	r3, r0, r4
 8000618:	fa20 f005 	lsr.w	r0, r0, r5
 800061c:	fa01 f204 	lsl.w	r2, r1, r4
 8000620:	ea40 0002 	orr.w	r0, r0, r2
 8000624:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000628:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800062c:	f141 0100 	adc.w	r1, r1, #0
 8000630:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000634:	bf08      	it	eq
 8000636:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800063a:	bd70      	pop	{r4, r5, r6, pc}
 800063c:	f1c4 0520 	rsb	r5, r4, #32
 8000640:	fa00 f205 	lsl.w	r2, r0, r5
 8000644:	ea4e 0e02 	orr.w	lr, lr, r2
 8000648:	fa20 f304 	lsr.w	r3, r0, r4
 800064c:	fa01 f205 	lsl.w	r2, r1, r5
 8000650:	ea43 0302 	orr.w	r3, r3, r2
 8000654:	fa21 f004 	lsr.w	r0, r1, r4
 8000658:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800065c:	fa21 f204 	lsr.w	r2, r1, r4
 8000660:	ea20 0002 	bic.w	r0, r0, r2
 8000664:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000668:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800066c:	bf08      	it	eq
 800066e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	f094 0f00 	teq	r4, #0
 8000678:	d10f      	bne.n	800069a <__aeabi_dmul+0x1c2>
 800067a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800067e:	0040      	lsls	r0, r0, #1
 8000680:	eb41 0101 	adc.w	r1, r1, r1
 8000684:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000688:	bf08      	it	eq
 800068a:	3c01      	subeq	r4, #1
 800068c:	d0f7      	beq.n	800067e <__aeabi_dmul+0x1a6>
 800068e:	ea41 0106 	orr.w	r1, r1, r6
 8000692:	f095 0f00 	teq	r5, #0
 8000696:	bf18      	it	ne
 8000698:	4770      	bxne	lr
 800069a:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 800069e:	0052      	lsls	r2, r2, #1
 80006a0:	eb43 0303 	adc.w	r3, r3, r3
 80006a4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3d01      	subeq	r5, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1c6>
 80006ae:	ea43 0306 	orr.w	r3, r3, r6
 80006b2:	4770      	bx	lr
 80006b4:	ea94 0f0c 	teq	r4, ip
 80006b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006bc:	bf18      	it	ne
 80006be:	ea95 0f0c 	teqne	r5, ip
 80006c2:	d00c      	beq.n	80006de <__aeabi_dmul+0x206>
 80006c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006c8:	bf18      	it	ne
 80006ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ce:	d1d1      	bne.n	8000674 <__aeabi_dmul+0x19c>
 80006d0:	ea81 0103 	eor.w	r1, r1, r3
 80006d4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006d8:	f04f 0000 	mov.w	r0, #0
 80006dc:	bd70      	pop	{r4, r5, r6, pc}
 80006de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e2:	bf06      	itte	eq
 80006e4:	4610      	moveq	r0, r2
 80006e6:	4619      	moveq	r1, r3
 80006e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ec:	d019      	beq.n	8000722 <__aeabi_dmul+0x24a>
 80006ee:	ea94 0f0c 	teq	r4, ip
 80006f2:	d102      	bne.n	80006fa <__aeabi_dmul+0x222>
 80006f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80006f8:	d113      	bne.n	8000722 <__aeabi_dmul+0x24a>
 80006fa:	ea95 0f0c 	teq	r5, ip
 80006fe:	d105      	bne.n	800070c <__aeabi_dmul+0x234>
 8000700:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000704:	bf1c      	itt	ne
 8000706:	4610      	movne	r0, r2
 8000708:	4619      	movne	r1, r3
 800070a:	d10a      	bne.n	8000722 <__aeabi_dmul+0x24a>
 800070c:	ea81 0103 	eor.w	r1, r1, r3
 8000710:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000718:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800071c:	f04f 0000 	mov.w	r0, #0
 8000720:	bd70      	pop	{r4, r5, r6, pc}
 8000722:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000726:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800072a:	bd70      	pop	{r4, r5, r6, pc}

0800072c <__aeabi_ddiv>:
 800072c:	b570      	push	{r4, r5, r6, lr}
 800072e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000732:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000736:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800073a:	bf1d      	ittte	ne
 800073c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000740:	ea94 0f0c 	teqne	r4, ip
 8000744:	ea95 0f0c 	teqne	r5, ip
 8000748:	f000 f8a7 	bleq	800089a <__aeabi_ddiv+0x16e>
 800074c:	eba4 0405 	sub.w	r4, r4, r5
 8000750:	ea81 0e03 	eor.w	lr, r1, r3
 8000754:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000758:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800075c:	f000 8088 	beq.w	8000870 <__aeabi_ddiv+0x144>
 8000760:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000764:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000768:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800076c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000770:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000774:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000778:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800077c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000780:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 8000784:	429d      	cmp	r5, r3
 8000786:	bf08      	it	eq
 8000788:	4296      	cmpeq	r6, r2
 800078a:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 800078e:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 8000792:	d202      	bcs.n	800079a <__aeabi_ddiv+0x6e>
 8000794:	085b      	lsrs	r3, r3, #1
 8000796:	ea4f 0232 	mov.w	r2, r2, rrx
 800079a:	1ab6      	subs	r6, r6, r2
 800079c:	eb65 0503 	sbc.w	r5, r5, r3
 80007a0:	085b      	lsrs	r3, r3, #1
 80007a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007a6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80007aa:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80007ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80007b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007b6:	bf22      	ittt	cs
 80007b8:	1ab6      	subcs	r6, r6, r2
 80007ba:	4675      	movcs	r5, lr
 80007bc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ce:	bf22      	ittt	cs
 80007d0:	1ab6      	subcs	r6, r6, r2
 80007d2:	4675      	movcs	r5, lr
 80007d4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007d8:	085b      	lsrs	r3, r3, #1
 80007da:	ea4f 0232 	mov.w	r2, r2, rrx
 80007de:	ebb6 0e02 	subs.w	lr, r6, r2
 80007e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007e6:	bf22      	ittt	cs
 80007e8:	1ab6      	subcs	r6, r6, r2
 80007ea:	4675      	movcs	r5, lr
 80007ec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80007f0:	085b      	lsrs	r3, r3, #1
 80007f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007fe:	bf22      	ittt	cs
 8000800:	1ab6      	subcs	r6, r6, r2
 8000802:	4675      	movcs	r5, lr
 8000804:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000808:	ea55 0e06 	orrs.w	lr, r5, r6
 800080c:	d018      	beq.n	8000840 <__aeabi_ddiv+0x114>
 800080e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000812:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000816:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800081a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800081e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000822:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000826:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800082a:	d1c0      	bne.n	80007ae <__aeabi_ddiv+0x82>
 800082c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000830:	d10b      	bne.n	800084a <__aeabi_ddiv+0x11e>
 8000832:	ea41 0100 	orr.w	r1, r1, r0
 8000836:	f04f 0000 	mov.w	r0, #0
 800083a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800083e:	e7b6      	b.n	80007ae <__aeabi_ddiv+0x82>
 8000840:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000844:	bf04      	itt	eq
 8000846:	4301      	orreq	r1, r0
 8000848:	2000      	moveq	r0, #0
 800084a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800084e:	bf88      	it	hi
 8000850:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000854:	f63f aeaf 	bhi.w	80005b6 <__aeabi_dmul+0xde>
 8000858:	ebb5 0c03 	subs.w	ip, r5, r3
 800085c:	bf04      	itt	eq
 800085e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000862:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000866:	f150 0000 	adcs.w	r0, r0, #0
 800086a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800086e:	bd70      	pop	{r4, r5, r6, pc}
 8000870:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000874:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000878:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800087c:	bfc2      	ittt	gt
 800087e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000882:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000886:	bd70      	popgt	{r4, r5, r6, pc}
 8000888:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800088c:	f04f 0e00 	mov.w	lr, #0
 8000890:	3c01      	subs	r4, #1
 8000892:	e690      	b.n	80005b6 <__aeabi_dmul+0xde>
 8000894:	ea45 0e06 	orr.w	lr, r5, r6
 8000898:	e68d      	b.n	80005b6 <__aeabi_dmul+0xde>
 800089a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800089e:	ea94 0f0c 	teq	r4, ip
 80008a2:	bf08      	it	eq
 80008a4:	ea95 0f0c 	teqeq	r5, ip
 80008a8:	f43f af3b 	beq.w	8000722 <__aeabi_dmul+0x24a>
 80008ac:	ea94 0f0c 	teq	r4, ip
 80008b0:	d10a      	bne.n	80008c8 <__aeabi_ddiv+0x19c>
 80008b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008b6:	f47f af34 	bne.w	8000722 <__aeabi_dmul+0x24a>
 80008ba:	ea95 0f0c 	teq	r5, ip
 80008be:	f47f af25 	bne.w	800070c <__aeabi_dmul+0x234>
 80008c2:	4610      	mov	r0, r2
 80008c4:	4619      	mov	r1, r3
 80008c6:	e72c      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008c8:	ea95 0f0c 	teq	r5, ip
 80008cc:	d106      	bne.n	80008dc <__aeabi_ddiv+0x1b0>
 80008ce:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008d2:	f43f aefd 	beq.w	80006d0 <__aeabi_dmul+0x1f8>
 80008d6:	4610      	mov	r0, r2
 80008d8:	4619      	mov	r1, r3
 80008da:	e722      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008dc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008e0:	bf18      	it	ne
 80008e2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008e6:	f47f aec5 	bne.w	8000674 <__aeabi_dmul+0x19c>
 80008ea:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008ee:	f47f af0d 	bne.w	800070c <__aeabi_dmul+0x234>
 80008f2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80008f6:	f47f aeeb 	bne.w	80006d0 <__aeabi_dmul+0x1f8>
 80008fa:	e712      	b.n	8000722 <__aeabi_dmul+0x24a>

080008fc <__gedf2>:
 80008fc:	f04f 3cff 	mov.w	ip, #4294967295
 8000900:	e006      	b.n	8000910 <__cmpdf2+0x4>
 8000902:	bf00      	nop

08000904 <__ledf2>:
 8000904:	f04f 0c01 	mov.w	ip, #1
 8000908:	e002      	b.n	8000910 <__cmpdf2+0x4>
 800090a:	bf00      	nop

0800090c <__cmpdf2>:
 800090c:	f04f 0c01 	mov.w	ip, #1
 8000910:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000914:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000918:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800091c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000920:	bf18      	it	ne
 8000922:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000926:	d01b      	beq.n	8000960 <__cmpdf2+0x54>
 8000928:	b001      	add	sp, #4
 800092a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800092e:	bf0c      	ite	eq
 8000930:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000934:	ea91 0f03 	teqne	r1, r3
 8000938:	bf02      	ittt	eq
 800093a:	ea90 0f02 	teqeq	r0, r2
 800093e:	2000      	moveq	r0, #0
 8000940:	4770      	bxeq	lr
 8000942:	f110 0f00 	cmn.w	r0, #0
 8000946:	ea91 0f03 	teq	r1, r3
 800094a:	bf58      	it	pl
 800094c:	4299      	cmppl	r1, r3
 800094e:	bf08      	it	eq
 8000950:	4290      	cmpeq	r0, r2
 8000952:	bf2c      	ite	cs
 8000954:	17d8      	asrcs	r0, r3, #31
 8000956:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800095a:	f040 0001 	orr.w	r0, r0, #1
 800095e:	4770      	bx	lr
 8000960:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000964:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000968:	d102      	bne.n	8000970 <__cmpdf2+0x64>
 800096a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800096e:	d107      	bne.n	8000980 <__cmpdf2+0x74>
 8000970:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000974:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000978:	d1d6      	bne.n	8000928 <__cmpdf2+0x1c>
 800097a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800097e:	d0d3      	beq.n	8000928 <__cmpdf2+0x1c>
 8000980:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000984:	4770      	bx	lr
 8000986:	bf00      	nop

08000988 <__aeabi_cdrcmple>:
 8000988:	4684      	mov	ip, r0
 800098a:	4610      	mov	r0, r2
 800098c:	4662      	mov	r2, ip
 800098e:	468c      	mov	ip, r1
 8000990:	4619      	mov	r1, r3
 8000992:	4663      	mov	r3, ip
 8000994:	e000      	b.n	8000998 <__aeabi_cdcmpeq>
 8000996:	bf00      	nop

08000998 <__aeabi_cdcmpeq>:
 8000998:	b501      	push	{r0, lr}
 800099a:	f7ff ffb7 	bl	800090c <__cmpdf2>
 800099e:	2800      	cmp	r0, #0
 80009a0:	bf48      	it	mi
 80009a2:	f110 0f00 	cmnmi.w	r0, #0
 80009a6:	bd01      	pop	{r0, pc}

080009a8 <__aeabi_dcmpeq>:
 80009a8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009ac:	f7ff fff4 	bl	8000998 <__aeabi_cdcmpeq>
 80009b0:	bf0c      	ite	eq
 80009b2:	2001      	moveq	r0, #1
 80009b4:	2000      	movne	r0, #0
 80009b6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ba:	bf00      	nop

080009bc <__aeabi_dcmplt>:
 80009bc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009c0:	f7ff ffea 	bl	8000998 <__aeabi_cdcmpeq>
 80009c4:	bf34      	ite	cc
 80009c6:	2001      	movcc	r0, #1
 80009c8:	2000      	movcs	r0, #0
 80009ca:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ce:	bf00      	nop

080009d0 <__aeabi_dcmple>:
 80009d0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009d4:	f7ff ffe0 	bl	8000998 <__aeabi_cdcmpeq>
 80009d8:	bf94      	ite	ls
 80009da:	2001      	movls	r0, #1
 80009dc:	2000      	movhi	r0, #0
 80009de:	f85d fb08 	ldr.w	pc, [sp], #8
 80009e2:	bf00      	nop

080009e4 <__aeabi_dcmpge>:
 80009e4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e8:	f7ff ffce 	bl	8000988 <__aeabi_cdrcmple>
 80009ec:	bf94      	ite	ls
 80009ee:	2001      	movls	r0, #1
 80009f0:	2000      	movhi	r0, #0
 80009f2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009f6:	bf00      	nop

080009f8 <__aeabi_dcmpgt>:
 80009f8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009fc:	f7ff ffc4 	bl	8000988 <__aeabi_cdrcmple>
 8000a00:	bf34      	ite	cc
 8000a02:	2001      	movcc	r0, #1
 8000a04:	2000      	movcs	r0, #0
 8000a06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a0a:	bf00      	nop

08000a0c <__aeabi_dcmpun>:
 8000a0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a14:	d102      	bne.n	8000a1c <__aeabi_dcmpun+0x10>
 8000a16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a1a:	d10a      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a24:	d102      	bne.n	8000a2c <__aeabi_dcmpun+0x20>
 8000a26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a2a:	d102      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a2c:	f04f 0000 	mov.w	r0, #0
 8000a30:	4770      	bx	lr
 8000a32:	f04f 0001 	mov.w	r0, #1
 8000a36:	4770      	bx	lr

08000a38 <__aeabi_d2iz>:
 8000a38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a3c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000a40:	d215      	bcs.n	8000a6e <__aeabi_d2iz+0x36>
 8000a42:	d511      	bpl.n	8000a68 <__aeabi_d2iz+0x30>
 8000a44:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000a48:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a4c:	d912      	bls.n	8000a74 <__aeabi_d2iz+0x3c>
 8000a4e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a52:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000a56:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a5a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000a5e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a62:	bf18      	it	ne
 8000a64:	4240      	negne	r0, r0
 8000a66:	4770      	bx	lr
 8000a68:	f04f 0000 	mov.w	r0, #0
 8000a6c:	4770      	bx	lr
 8000a6e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a72:	d105      	bne.n	8000a80 <__aeabi_d2iz+0x48>
 8000a74:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000a78:	bf08      	it	eq
 8000a7a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000a7e:	4770      	bx	lr
 8000a80:	f04f 0000 	mov.w	r0, #0
 8000a84:	4770      	bx	lr
 8000a86:	bf00      	nop

08000a88 <__aeabi_d2uiz>:
 8000a88:	004a      	lsls	r2, r1, #1
 8000a8a:	d211      	bcs.n	8000ab0 <__aeabi_d2uiz+0x28>
 8000a8c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000a90:	d211      	bcs.n	8000ab6 <__aeabi_d2uiz+0x2e>
 8000a92:	d50d      	bpl.n	8000ab0 <__aeabi_d2uiz+0x28>
 8000a94:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000a98:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a9c:	d40e      	bmi.n	8000abc <__aeabi_d2uiz+0x34>
 8000a9e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aa2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000aa6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000aaa:	fa23 f002 	lsr.w	r0, r3, r2
 8000aae:	4770      	bx	lr
 8000ab0:	f04f 0000 	mov.w	r0, #0
 8000ab4:	4770      	bx	lr
 8000ab6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000aba:	d102      	bne.n	8000ac2 <__aeabi_d2uiz+0x3a>
 8000abc:	f04f 30ff 	mov.w	r0, #4294967295
 8000ac0:	4770      	bx	lr
 8000ac2:	f04f 0000 	mov.w	r0, #0
 8000ac6:	4770      	bx	lr

08000ac8 <__aeabi_d2f>:
 8000ac8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000acc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000ad0:	bf24      	itt	cs
 8000ad2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000ad6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000ada:	d90d      	bls.n	8000af8 <__aeabi_d2f+0x30>
 8000adc:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000ae0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000ae4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000ae8:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000aec:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000af0:	bf08      	it	eq
 8000af2:	f020 0001 	biceq.w	r0, r0, #1
 8000af6:	4770      	bx	lr
 8000af8:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000afc:	d121      	bne.n	8000b42 <__aeabi_d2f+0x7a>
 8000afe:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000b02:	bfbc      	itt	lt
 8000b04:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000b08:	4770      	bxlt	lr
 8000b0a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000b0e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b12:	f1c2 0218 	rsb	r2, r2, #24
 8000b16:	f1c2 0c20 	rsb	ip, r2, #32
 8000b1a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b1e:	fa20 f002 	lsr.w	r0, r0, r2
 8000b22:	bf18      	it	ne
 8000b24:	f040 0001 	orrne.w	r0, r0, #1
 8000b28:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b2c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b30:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b34:	ea40 000c 	orr.w	r0, r0, ip
 8000b38:	fa23 f302 	lsr.w	r3, r3, r2
 8000b3c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b40:	e7cc      	b.n	8000adc <__aeabi_d2f+0x14>
 8000b42:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b46:	d107      	bne.n	8000b58 <__aeabi_d2f+0x90>
 8000b48:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b4c:	bf1e      	ittt	ne
 8000b4e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000b52:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000b56:	4770      	bxne	lr
 8000b58:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000b5c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000b60:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000b64:	4770      	bx	lr
 8000b66:	bf00      	nop

08000b68 <__aeabi_frsub>:
 8000b68:	f080 4000 	eor.w	r0, r0, #2147483648	@ 0x80000000
 8000b6c:	e002      	b.n	8000b74 <__addsf3>
 8000b6e:	bf00      	nop

08000b70 <__aeabi_fsub>:
 8000b70:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000

08000b74 <__addsf3>:
 8000b74:	0042      	lsls	r2, r0, #1
 8000b76:	bf1f      	itttt	ne
 8000b78:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000b7c:	ea92 0f03 	teqne	r2, r3
 8000b80:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000b84:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000b88:	d06a      	beq.n	8000c60 <__addsf3+0xec>
 8000b8a:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000b8e:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000b92:	bfc1      	itttt	gt
 8000b94:	18d2      	addgt	r2, r2, r3
 8000b96:	4041      	eorgt	r1, r0
 8000b98:	4048      	eorgt	r0, r1
 8000b9a:	4041      	eorgt	r1, r0
 8000b9c:	bfb8      	it	lt
 8000b9e:	425b      	neglt	r3, r3
 8000ba0:	2b19      	cmp	r3, #25
 8000ba2:	bf88      	it	hi
 8000ba4:	4770      	bxhi	lr
 8000ba6:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8000baa:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000bae:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 8000bb2:	bf18      	it	ne
 8000bb4:	4240      	negne	r0, r0
 8000bb6:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000bba:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8000bbe:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8000bc2:	bf18      	it	ne
 8000bc4:	4249      	negne	r1, r1
 8000bc6:	ea92 0f03 	teq	r2, r3
 8000bca:	d03f      	beq.n	8000c4c <__addsf3+0xd8>
 8000bcc:	f1a2 0201 	sub.w	r2, r2, #1
 8000bd0:	fa41 fc03 	asr.w	ip, r1, r3
 8000bd4:	eb10 000c 	adds.w	r0, r0, ip
 8000bd8:	f1c3 0320 	rsb	r3, r3, #32
 8000bdc:	fa01 f103 	lsl.w	r1, r1, r3
 8000be0:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000be4:	d502      	bpl.n	8000bec <__addsf3+0x78>
 8000be6:	4249      	negs	r1, r1
 8000be8:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000bec:	f5b0 0f00 	cmp.w	r0, #8388608	@ 0x800000
 8000bf0:	d313      	bcc.n	8000c1a <__addsf3+0xa6>
 8000bf2:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8000bf6:	d306      	bcc.n	8000c06 <__addsf3+0x92>
 8000bf8:	0840      	lsrs	r0, r0, #1
 8000bfa:	ea4f 0131 	mov.w	r1, r1, rrx
 8000bfe:	f102 0201 	add.w	r2, r2, #1
 8000c02:	2afe      	cmp	r2, #254	@ 0xfe
 8000c04:	d251      	bcs.n	8000caa <__addsf3+0x136>
 8000c06:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 8000c0a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000c0e:	bf08      	it	eq
 8000c10:	f020 0001 	biceq.w	r0, r0, #1
 8000c14:	ea40 0003 	orr.w	r0, r0, r3
 8000c18:	4770      	bx	lr
 8000c1a:	0049      	lsls	r1, r1, #1
 8000c1c:	eb40 0000 	adc.w	r0, r0, r0
 8000c20:	3a01      	subs	r2, #1
 8000c22:	bf28      	it	cs
 8000c24:	f5b0 0f00 	cmpcs.w	r0, #8388608	@ 0x800000
 8000c28:	d2ed      	bcs.n	8000c06 <__addsf3+0x92>
 8000c2a:	fab0 fc80 	clz	ip, r0
 8000c2e:	f1ac 0c08 	sub.w	ip, ip, #8
 8000c32:	ebb2 020c 	subs.w	r2, r2, ip
 8000c36:	fa00 f00c 	lsl.w	r0, r0, ip
 8000c3a:	bfaa      	itet	ge
 8000c3c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000c40:	4252      	neglt	r2, r2
 8000c42:	4318      	orrge	r0, r3
 8000c44:	bfbc      	itt	lt
 8000c46:	40d0      	lsrlt	r0, r2
 8000c48:	4318      	orrlt	r0, r3
 8000c4a:	4770      	bx	lr
 8000c4c:	f092 0f00 	teq	r2, #0
 8000c50:	f481 0100 	eor.w	r1, r1, #8388608	@ 0x800000
 8000c54:	bf06      	itte	eq
 8000c56:	f480 0000 	eoreq.w	r0, r0, #8388608	@ 0x800000
 8000c5a:	3201      	addeq	r2, #1
 8000c5c:	3b01      	subne	r3, #1
 8000c5e:	e7b5      	b.n	8000bcc <__addsf3+0x58>
 8000c60:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000c64:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000c68:	bf18      	it	ne
 8000c6a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000c6e:	d021      	beq.n	8000cb4 <__addsf3+0x140>
 8000c70:	ea92 0f03 	teq	r2, r3
 8000c74:	d004      	beq.n	8000c80 <__addsf3+0x10c>
 8000c76:	f092 0f00 	teq	r2, #0
 8000c7a:	bf08      	it	eq
 8000c7c:	4608      	moveq	r0, r1
 8000c7e:	4770      	bx	lr
 8000c80:	ea90 0f01 	teq	r0, r1
 8000c84:	bf1c      	itt	ne
 8000c86:	2000      	movne	r0, #0
 8000c88:	4770      	bxne	lr
 8000c8a:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8000c8e:	d104      	bne.n	8000c9a <__addsf3+0x126>
 8000c90:	0040      	lsls	r0, r0, #1
 8000c92:	bf28      	it	cs
 8000c94:	f040 4000 	orrcs.w	r0, r0, #2147483648	@ 0x80000000
 8000c98:	4770      	bx	lr
 8000c9a:	f112 7200 	adds.w	r2, r2, #33554432	@ 0x2000000
 8000c9e:	bf3c      	itt	cc
 8000ca0:	f500 0000 	addcc.w	r0, r0, #8388608	@ 0x800000
 8000ca4:	4770      	bxcc	lr
 8000ca6:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000caa:	f043 40fe 	orr.w	r0, r3, #2130706432	@ 0x7f000000
 8000cae:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000cb2:	4770      	bx	lr
 8000cb4:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000cb8:	bf16      	itet	ne
 8000cba:	4608      	movne	r0, r1
 8000cbc:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000cc0:	4601      	movne	r1, r0
 8000cc2:	0242      	lsls	r2, r0, #9
 8000cc4:	bf06      	itte	eq
 8000cc6:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000cca:	ea90 0f01 	teqeq	r0, r1
 8000cce:	f440 0080 	orrne.w	r0, r0, #4194304	@ 0x400000
 8000cd2:	4770      	bx	lr

08000cd4 <__aeabi_ui2f>:
 8000cd4:	f04f 0300 	mov.w	r3, #0
 8000cd8:	e004      	b.n	8000ce4 <__aeabi_i2f+0x8>
 8000cda:	bf00      	nop

08000cdc <__aeabi_i2f>:
 8000cdc:	f010 4300 	ands.w	r3, r0, #2147483648	@ 0x80000000
 8000ce0:	bf48      	it	mi
 8000ce2:	4240      	negmi	r0, r0
 8000ce4:	ea5f 0c00 	movs.w	ip, r0
 8000ce8:	bf08      	it	eq
 8000cea:	4770      	bxeq	lr
 8000cec:	f043 4396 	orr.w	r3, r3, #1258291200	@ 0x4b000000
 8000cf0:	4601      	mov	r1, r0
 8000cf2:	f04f 0000 	mov.w	r0, #0
 8000cf6:	e01c      	b.n	8000d32 <__aeabi_l2f+0x2a>

08000cf8 <__aeabi_ul2f>:
 8000cf8:	ea50 0201 	orrs.w	r2, r0, r1
 8000cfc:	bf08      	it	eq
 8000cfe:	4770      	bxeq	lr
 8000d00:	f04f 0300 	mov.w	r3, #0
 8000d04:	e00a      	b.n	8000d1c <__aeabi_l2f+0x14>
 8000d06:	bf00      	nop

08000d08 <__aeabi_l2f>:
 8000d08:	ea50 0201 	orrs.w	r2, r0, r1
 8000d0c:	bf08      	it	eq
 8000d0e:	4770      	bxeq	lr
 8000d10:	f011 4300 	ands.w	r3, r1, #2147483648	@ 0x80000000
 8000d14:	d502      	bpl.n	8000d1c <__aeabi_l2f+0x14>
 8000d16:	4240      	negs	r0, r0
 8000d18:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d1c:	ea5f 0c01 	movs.w	ip, r1
 8000d20:	bf02      	ittt	eq
 8000d22:	4684      	moveq	ip, r0
 8000d24:	4601      	moveq	r1, r0
 8000d26:	2000      	moveq	r0, #0
 8000d28:	f043 43b6 	orr.w	r3, r3, #1526726656	@ 0x5b000000
 8000d2c:	bf08      	it	eq
 8000d2e:	f1a3 5380 	subeq.w	r3, r3, #268435456	@ 0x10000000
 8000d32:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8000d36:	fabc f28c 	clz	r2, ip
 8000d3a:	3a08      	subs	r2, #8
 8000d3c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000d40:	db10      	blt.n	8000d64 <__aeabi_l2f+0x5c>
 8000d42:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d46:	4463      	add	r3, ip
 8000d48:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d4c:	f1c2 0220 	rsb	r2, r2, #32
 8000d50:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000d54:	fa20 f202 	lsr.w	r2, r0, r2
 8000d58:	eb43 0002 	adc.w	r0, r3, r2
 8000d5c:	bf08      	it	eq
 8000d5e:	f020 0001 	biceq.w	r0, r0, #1
 8000d62:	4770      	bx	lr
 8000d64:	f102 0220 	add.w	r2, r2, #32
 8000d68:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d6c:	f1c2 0220 	rsb	r2, r2, #32
 8000d70:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000d74:	fa21 f202 	lsr.w	r2, r1, r2
 8000d78:	eb43 0002 	adc.w	r0, r3, r2
 8000d7c:	bf08      	it	eq
 8000d7e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000d82:	4770      	bx	lr

08000d84 <__aeabi_fmul>:
 8000d84:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000d88:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000d8c:	bf1e      	ittt	ne
 8000d8e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000d92:	ea92 0f0c 	teqne	r2, ip
 8000d96:	ea93 0f0c 	teqne	r3, ip
 8000d9a:	d06f      	beq.n	8000e7c <__aeabi_fmul+0xf8>
 8000d9c:	441a      	add	r2, r3
 8000d9e:	ea80 0c01 	eor.w	ip, r0, r1
 8000da2:	0240      	lsls	r0, r0, #9
 8000da4:	bf18      	it	ne
 8000da6:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000daa:	d01e      	beq.n	8000dea <__aeabi_fmul+0x66>
 8000dac:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8000db0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000db4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000db8:	fba0 3101 	umull	r3, r1, r0, r1
 8000dbc:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000dc0:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
 8000dc4:	bf3e      	ittt	cc
 8000dc6:	0049      	lslcc	r1, r1, #1
 8000dc8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000dcc:	005b      	lslcc	r3, r3, #1
 8000dce:	ea40 0001 	orr.w	r0, r0, r1
 8000dd2:	f162 027f 	sbc.w	r2, r2, #127	@ 0x7f
 8000dd6:	2afd      	cmp	r2, #253	@ 0xfd
 8000dd8:	d81d      	bhi.n	8000e16 <__aeabi_fmul+0x92>
 8000dda:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8000dde:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000de2:	bf08      	it	eq
 8000de4:	f020 0001 	biceq.w	r0, r0, #1
 8000de8:	4770      	bx	lr
 8000dea:	f090 0f00 	teq	r0, #0
 8000dee:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000df2:	bf08      	it	eq
 8000df4:	0249      	lsleq	r1, r1, #9
 8000df6:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000dfa:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000dfe:	3a7f      	subs	r2, #127	@ 0x7f
 8000e00:	bfc2      	ittt	gt
 8000e02:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000e06:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000e0a:	4770      	bxgt	lr
 8000e0c:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000e10:	f04f 0300 	mov.w	r3, #0
 8000e14:	3a01      	subs	r2, #1
 8000e16:	dc5d      	bgt.n	8000ed4 <__aeabi_fmul+0x150>
 8000e18:	f112 0f19 	cmn.w	r2, #25
 8000e1c:	bfdc      	itt	le
 8000e1e:	f000 4000 	andle.w	r0, r0, #2147483648	@ 0x80000000
 8000e22:	4770      	bxle	lr
 8000e24:	f1c2 0200 	rsb	r2, r2, #0
 8000e28:	0041      	lsls	r1, r0, #1
 8000e2a:	fa21 f102 	lsr.w	r1, r1, r2
 8000e2e:	f1c2 0220 	rsb	r2, r2, #32
 8000e32:	fa00 fc02 	lsl.w	ip, r0, r2
 8000e36:	ea5f 0031 	movs.w	r0, r1, rrx
 8000e3a:	f140 0000 	adc.w	r0, r0, #0
 8000e3e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000e42:	bf08      	it	eq
 8000e44:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e48:	4770      	bx	lr
 8000e4a:	f092 0f00 	teq	r2, #0
 8000e4e:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000e52:	bf02      	ittt	eq
 8000e54:	0040      	lsleq	r0, r0, #1
 8000e56:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000e5a:	3a01      	subeq	r2, #1
 8000e5c:	d0f9      	beq.n	8000e52 <__aeabi_fmul+0xce>
 8000e5e:	ea40 000c 	orr.w	r0, r0, ip
 8000e62:	f093 0f00 	teq	r3, #0
 8000e66:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000e6a:	bf02      	ittt	eq
 8000e6c:	0049      	lsleq	r1, r1, #1
 8000e6e:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000e72:	3b01      	subeq	r3, #1
 8000e74:	d0f9      	beq.n	8000e6a <__aeabi_fmul+0xe6>
 8000e76:	ea41 010c 	orr.w	r1, r1, ip
 8000e7a:	e78f      	b.n	8000d9c <__aeabi_fmul+0x18>
 8000e7c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000e80:	ea92 0f0c 	teq	r2, ip
 8000e84:	bf18      	it	ne
 8000e86:	ea93 0f0c 	teqne	r3, ip
 8000e8a:	d00a      	beq.n	8000ea2 <__aeabi_fmul+0x11e>
 8000e8c:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8000e90:	bf18      	it	ne
 8000e92:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 8000e96:	d1d8      	bne.n	8000e4a <__aeabi_fmul+0xc6>
 8000e98:	ea80 0001 	eor.w	r0, r0, r1
 8000e9c:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000ea0:	4770      	bx	lr
 8000ea2:	f090 0f00 	teq	r0, #0
 8000ea6:	bf17      	itett	ne
 8000ea8:	f090 4f00 	teqne	r0, #2147483648	@ 0x80000000
 8000eac:	4608      	moveq	r0, r1
 8000eae:	f091 0f00 	teqne	r1, #0
 8000eb2:	f091 4f00 	teqne	r1, #2147483648	@ 0x80000000
 8000eb6:	d014      	beq.n	8000ee2 <__aeabi_fmul+0x15e>
 8000eb8:	ea92 0f0c 	teq	r2, ip
 8000ebc:	d101      	bne.n	8000ec2 <__aeabi_fmul+0x13e>
 8000ebe:	0242      	lsls	r2, r0, #9
 8000ec0:	d10f      	bne.n	8000ee2 <__aeabi_fmul+0x15e>
 8000ec2:	ea93 0f0c 	teq	r3, ip
 8000ec6:	d103      	bne.n	8000ed0 <__aeabi_fmul+0x14c>
 8000ec8:	024b      	lsls	r3, r1, #9
 8000eca:	bf18      	it	ne
 8000ecc:	4608      	movne	r0, r1
 8000ece:	d108      	bne.n	8000ee2 <__aeabi_fmul+0x15e>
 8000ed0:	ea80 0001 	eor.w	r0, r0, r1
 8000ed4:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000ed8:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000edc:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000ee0:	4770      	bx	lr
 8000ee2:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000ee6:	f440 0040 	orr.w	r0, r0, #12582912	@ 0xc00000
 8000eea:	4770      	bx	lr

08000eec <__aeabi_fdiv>:
 8000eec:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000ef0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000ef4:	bf1e      	ittt	ne
 8000ef6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000efa:	ea92 0f0c 	teqne	r2, ip
 8000efe:	ea93 0f0c 	teqne	r3, ip
 8000f02:	d069      	beq.n	8000fd8 <__aeabi_fdiv+0xec>
 8000f04:	eba2 0203 	sub.w	r2, r2, r3
 8000f08:	ea80 0c01 	eor.w	ip, r0, r1
 8000f0c:	0249      	lsls	r1, r1, #9
 8000f0e:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000f12:	d037      	beq.n	8000f84 <__aeabi_fdiv+0x98>
 8000f14:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
 8000f18:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000f1c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000f20:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000f24:	428b      	cmp	r3, r1
 8000f26:	bf38      	it	cc
 8000f28:	005b      	lslcc	r3, r3, #1
 8000f2a:	f142 027d 	adc.w	r2, r2, #125	@ 0x7d
 8000f2e:	f44f 0c00 	mov.w	ip, #8388608	@ 0x800000
 8000f32:	428b      	cmp	r3, r1
 8000f34:	bf24      	itt	cs
 8000f36:	1a5b      	subcs	r3, r3, r1
 8000f38:	ea40 000c 	orrcs.w	r0, r0, ip
 8000f3c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000f40:	bf24      	itt	cs
 8000f42:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000f46:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000f4a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000f4e:	bf24      	itt	cs
 8000f50:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000f54:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000f58:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000f5c:	bf24      	itt	cs
 8000f5e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000f62:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000f66:	011b      	lsls	r3, r3, #4
 8000f68:	bf18      	it	ne
 8000f6a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000f6e:	d1e0      	bne.n	8000f32 <__aeabi_fdiv+0x46>
 8000f70:	2afd      	cmp	r2, #253	@ 0xfd
 8000f72:	f63f af50 	bhi.w	8000e16 <__aeabi_fmul+0x92>
 8000f76:	428b      	cmp	r3, r1
 8000f78:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000f7c:	bf08      	it	eq
 8000f7e:	f020 0001 	biceq.w	r0, r0, #1
 8000f82:	4770      	bx	lr
 8000f84:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000f88:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000f8c:	327f      	adds	r2, #127	@ 0x7f
 8000f8e:	bfc2      	ittt	gt
 8000f90:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000f94:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000f98:	4770      	bxgt	lr
 8000f9a:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000f9e:	f04f 0300 	mov.w	r3, #0
 8000fa2:	3a01      	subs	r2, #1
 8000fa4:	e737      	b.n	8000e16 <__aeabi_fmul+0x92>
 8000fa6:	f092 0f00 	teq	r2, #0
 8000faa:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000fae:	bf02      	ittt	eq
 8000fb0:	0040      	lsleq	r0, r0, #1
 8000fb2:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000fb6:	3a01      	subeq	r2, #1
 8000fb8:	d0f9      	beq.n	8000fae <__aeabi_fdiv+0xc2>
 8000fba:	ea40 000c 	orr.w	r0, r0, ip
 8000fbe:	f093 0f00 	teq	r3, #0
 8000fc2:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000fc6:	bf02      	ittt	eq
 8000fc8:	0049      	lsleq	r1, r1, #1
 8000fca:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000fce:	3b01      	subeq	r3, #1
 8000fd0:	d0f9      	beq.n	8000fc6 <__aeabi_fdiv+0xda>
 8000fd2:	ea41 010c 	orr.w	r1, r1, ip
 8000fd6:	e795      	b.n	8000f04 <__aeabi_fdiv+0x18>
 8000fd8:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000fdc:	ea92 0f0c 	teq	r2, ip
 8000fe0:	d108      	bne.n	8000ff4 <__aeabi_fdiv+0x108>
 8000fe2:	0242      	lsls	r2, r0, #9
 8000fe4:	f47f af7d 	bne.w	8000ee2 <__aeabi_fmul+0x15e>
 8000fe8:	ea93 0f0c 	teq	r3, ip
 8000fec:	f47f af70 	bne.w	8000ed0 <__aeabi_fmul+0x14c>
 8000ff0:	4608      	mov	r0, r1
 8000ff2:	e776      	b.n	8000ee2 <__aeabi_fmul+0x15e>
 8000ff4:	ea93 0f0c 	teq	r3, ip
 8000ff8:	d104      	bne.n	8001004 <__aeabi_fdiv+0x118>
 8000ffa:	024b      	lsls	r3, r1, #9
 8000ffc:	f43f af4c 	beq.w	8000e98 <__aeabi_fmul+0x114>
 8001000:	4608      	mov	r0, r1
 8001002:	e76e      	b.n	8000ee2 <__aeabi_fmul+0x15e>
 8001004:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8001008:	bf18      	it	ne
 800100a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 800100e:	d1ca      	bne.n	8000fa6 <__aeabi_fdiv+0xba>
 8001010:	f030 4200 	bics.w	r2, r0, #2147483648	@ 0x80000000
 8001014:	f47f af5c 	bne.w	8000ed0 <__aeabi_fmul+0x14c>
 8001018:	f031 4300 	bics.w	r3, r1, #2147483648	@ 0x80000000
 800101c:	f47f af3c 	bne.w	8000e98 <__aeabi_fmul+0x114>
 8001020:	e75f      	b.n	8000ee2 <__aeabi_fmul+0x15e>
 8001022:	bf00      	nop

08001024 <__gesf2>:
 8001024:	f04f 3cff 	mov.w	ip, #4294967295
 8001028:	e006      	b.n	8001038 <__cmpsf2+0x4>
 800102a:	bf00      	nop

0800102c <__lesf2>:
 800102c:	f04f 0c01 	mov.w	ip, #1
 8001030:	e002      	b.n	8001038 <__cmpsf2+0x4>
 8001032:	bf00      	nop

08001034 <__cmpsf2>:
 8001034:	f04f 0c01 	mov.w	ip, #1
 8001038:	f84d cd04 	str.w	ip, [sp, #-4]!
 800103c:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8001040:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8001044:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8001048:	bf18      	it	ne
 800104a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 800104e:	d011      	beq.n	8001074 <__cmpsf2+0x40>
 8001050:	b001      	add	sp, #4
 8001052:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8001056:	bf18      	it	ne
 8001058:	ea90 0f01 	teqne	r0, r1
 800105c:	bf58      	it	pl
 800105e:	ebb2 0003 	subspl.w	r0, r2, r3
 8001062:	bf88      	it	hi
 8001064:	17c8      	asrhi	r0, r1, #31
 8001066:	bf38      	it	cc
 8001068:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 800106c:	bf18      	it	ne
 800106e:	f040 0001 	orrne.w	r0, r0, #1
 8001072:	4770      	bx	lr
 8001074:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8001078:	d102      	bne.n	8001080 <__cmpsf2+0x4c>
 800107a:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 800107e:	d105      	bne.n	800108c <__cmpsf2+0x58>
 8001080:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8001084:	d1e4      	bne.n	8001050 <__cmpsf2+0x1c>
 8001086:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 800108a:	d0e1      	beq.n	8001050 <__cmpsf2+0x1c>
 800108c:	f85d 0b04 	ldr.w	r0, [sp], #4
 8001090:	4770      	bx	lr
 8001092:	bf00      	nop

08001094 <__aeabi_cfrcmple>:
 8001094:	4684      	mov	ip, r0
 8001096:	4608      	mov	r0, r1
 8001098:	4661      	mov	r1, ip
 800109a:	e7ff      	b.n	800109c <__aeabi_cfcmpeq>

0800109c <__aeabi_cfcmpeq>:
 800109c:	b50f      	push	{r0, r1, r2, r3, lr}
 800109e:	f7ff ffc9 	bl	8001034 <__cmpsf2>
 80010a2:	2800      	cmp	r0, #0
 80010a4:	bf48      	it	mi
 80010a6:	f110 0f00 	cmnmi.w	r0, #0
 80010aa:	bd0f      	pop	{r0, r1, r2, r3, pc}

080010ac <__aeabi_fcmpeq>:
 80010ac:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010b0:	f7ff fff4 	bl	800109c <__aeabi_cfcmpeq>
 80010b4:	bf0c      	ite	eq
 80010b6:	2001      	moveq	r0, #1
 80010b8:	2000      	movne	r0, #0
 80010ba:	f85d fb08 	ldr.w	pc, [sp], #8
 80010be:	bf00      	nop

080010c0 <__aeabi_fcmplt>:
 80010c0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010c4:	f7ff ffea 	bl	800109c <__aeabi_cfcmpeq>
 80010c8:	bf34      	ite	cc
 80010ca:	2001      	movcc	r0, #1
 80010cc:	2000      	movcs	r0, #0
 80010ce:	f85d fb08 	ldr.w	pc, [sp], #8
 80010d2:	bf00      	nop

080010d4 <__aeabi_fcmple>:
 80010d4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010d8:	f7ff ffe0 	bl	800109c <__aeabi_cfcmpeq>
 80010dc:	bf94      	ite	ls
 80010de:	2001      	movls	r0, #1
 80010e0:	2000      	movhi	r0, #0
 80010e2:	f85d fb08 	ldr.w	pc, [sp], #8
 80010e6:	bf00      	nop

080010e8 <__aeabi_fcmpge>:
 80010e8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010ec:	f7ff ffd2 	bl	8001094 <__aeabi_cfrcmple>
 80010f0:	bf94      	ite	ls
 80010f2:	2001      	movls	r0, #1
 80010f4:	2000      	movhi	r0, #0
 80010f6:	f85d fb08 	ldr.w	pc, [sp], #8
 80010fa:	bf00      	nop

080010fc <__aeabi_fcmpgt>:
 80010fc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001100:	f7ff ffc8 	bl	8001094 <__aeabi_cfrcmple>
 8001104:	bf34      	ite	cc
 8001106:	2001      	movcc	r0, #1
 8001108:	2000      	movcs	r0, #0
 800110a:	f85d fb08 	ldr.w	pc, [sp], #8
 800110e:	bf00      	nop

08001110 <__aeabi_f2iz>:
 8001110:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8001114:	f1b2 4ffe 	cmp.w	r2, #2130706432	@ 0x7f000000
 8001118:	d30f      	bcc.n	800113a <__aeabi_f2iz+0x2a>
 800111a:	f04f 039e 	mov.w	r3, #158	@ 0x9e
 800111e:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8001122:	d90d      	bls.n	8001140 <__aeabi_f2iz+0x30>
 8001124:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8001128:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 800112c:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8001130:	fa23 f002 	lsr.w	r0, r3, r2
 8001134:	bf18      	it	ne
 8001136:	4240      	negne	r0, r0
 8001138:	4770      	bx	lr
 800113a:	f04f 0000 	mov.w	r0, #0
 800113e:	4770      	bx	lr
 8001140:	f112 0f61 	cmn.w	r2, #97	@ 0x61
 8001144:	d101      	bne.n	800114a <__aeabi_f2iz+0x3a>
 8001146:	0242      	lsls	r2, r0, #9
 8001148:	d105      	bne.n	8001156 <__aeabi_f2iz+0x46>
 800114a:	f010 4000 	ands.w	r0, r0, #2147483648	@ 0x80000000
 800114e:	bf08      	it	eq
 8001150:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8001154:	4770      	bx	lr
 8001156:	f04f 0000 	mov.w	r0, #0
 800115a:	4770      	bx	lr

0800115c <__aeabi_d2lz>:
 800115c:	b538      	push	{r3, r4, r5, lr}
 800115e:	2200      	movs	r2, #0
 8001160:	2300      	movs	r3, #0
 8001162:	4604      	mov	r4, r0
 8001164:	460d      	mov	r5, r1
 8001166:	f7ff fc29 	bl	80009bc <__aeabi_dcmplt>
 800116a:	b928      	cbnz	r0, 8001178 <__aeabi_d2lz+0x1c>
 800116c:	4620      	mov	r0, r4
 800116e:	4629      	mov	r1, r5
 8001170:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001174:	f000 b80a 	b.w	800118c <__aeabi_d2ulz>
 8001178:	4620      	mov	r0, r4
 800117a:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 800117e:	f000 f805 	bl	800118c <__aeabi_d2ulz>
 8001182:	4240      	negs	r0, r0
 8001184:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8001188:	bd38      	pop	{r3, r4, r5, pc}
 800118a:	bf00      	nop

0800118c <__aeabi_d2ulz>:
 800118c:	b5d0      	push	{r4, r6, r7, lr}
 800118e:	2200      	movs	r2, #0
 8001190:	4b0b      	ldr	r3, [pc, #44]	@ (80011c0 <__aeabi_d2ulz+0x34>)
 8001192:	4606      	mov	r6, r0
 8001194:	460f      	mov	r7, r1
 8001196:	f7ff f99f 	bl	80004d8 <__aeabi_dmul>
 800119a:	f7ff fc75 	bl	8000a88 <__aeabi_d2uiz>
 800119e:	4604      	mov	r4, r0
 80011a0:	f7ff f920 	bl	80003e4 <__aeabi_ui2d>
 80011a4:	2200      	movs	r2, #0
 80011a6:	4b07      	ldr	r3, [pc, #28]	@ (80011c4 <__aeabi_d2ulz+0x38>)
 80011a8:	f7ff f996 	bl	80004d8 <__aeabi_dmul>
 80011ac:	4602      	mov	r2, r0
 80011ae:	460b      	mov	r3, r1
 80011b0:	4630      	mov	r0, r6
 80011b2:	4639      	mov	r1, r7
 80011b4:	f7fe ffd8 	bl	8000168 <__aeabi_dsub>
 80011b8:	f7ff fc66 	bl	8000a88 <__aeabi_d2uiz>
 80011bc:	4621      	mov	r1, r4
 80011be:	bdd0      	pop	{r4, r6, r7, pc}
 80011c0:	3df00000 	.word	0x3df00000
 80011c4:	41f00000 	.word	0x41f00000

080011c8 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 80011c8:	b480      	push	{r7}
 80011ca:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80011cc:	4b04      	ldr	r3, [pc, #16]	@ (80011e0 <__NVIC_GetPriorityGrouping+0x18>)
 80011ce:	68db      	ldr	r3, [r3, #12]
 80011d0:	0a1b      	lsrs	r3, r3, #8
 80011d2:	f003 0307 	and.w	r3, r3, #7
}
 80011d6:	4618      	mov	r0, r3
 80011d8:	46bd      	mov	sp, r7
 80011da:	bc80      	pop	{r7}
 80011dc:	4770      	bx	lr
 80011de:	bf00      	nop
 80011e0:	e000ed00 	.word	0xe000ed00

080011e4 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80011e4:	b480      	push	{r7}
 80011e6:	b083      	sub	sp, #12
 80011e8:	af00      	add	r7, sp, #0
 80011ea:	4603      	mov	r3, r0
 80011ec:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80011ee:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80011f2:	2b00      	cmp	r3, #0
 80011f4:	db0b      	blt.n	800120e <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80011f6:	79fb      	ldrb	r3, [r7, #7]
 80011f8:	f003 021f 	and.w	r2, r3, #31
 80011fc:	4906      	ldr	r1, [pc, #24]	@ (8001218 <__NVIC_EnableIRQ+0x34>)
 80011fe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001202:	095b      	lsrs	r3, r3, #5
 8001204:	2001      	movs	r0, #1
 8001206:	fa00 f202 	lsl.w	r2, r0, r2
 800120a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 800120e:	bf00      	nop
 8001210:	370c      	adds	r7, #12
 8001212:	46bd      	mov	sp, r7
 8001214:	bc80      	pop	{r7}
 8001216:	4770      	bx	lr
 8001218:	e000e100 	.word	0xe000e100

0800121c <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 800121c:	b480      	push	{r7}
 800121e:	b083      	sub	sp, #12
 8001220:	af00      	add	r7, sp, #0
 8001222:	4603      	mov	r3, r0
 8001224:	6039      	str	r1, [r7, #0]
 8001226:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001228:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800122c:	2b00      	cmp	r3, #0
 800122e:	db0a      	blt.n	8001246 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001230:	683b      	ldr	r3, [r7, #0]
 8001232:	b2da      	uxtb	r2, r3
 8001234:	490c      	ldr	r1, [pc, #48]	@ (8001268 <__NVIC_SetPriority+0x4c>)
 8001236:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800123a:	0112      	lsls	r2, r2, #4
 800123c:	b2d2      	uxtb	r2, r2
 800123e:	440b      	add	r3, r1
 8001240:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8001244:	e00a      	b.n	800125c <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001246:	683b      	ldr	r3, [r7, #0]
 8001248:	b2da      	uxtb	r2, r3
 800124a:	4908      	ldr	r1, [pc, #32]	@ (800126c <__NVIC_SetPriority+0x50>)
 800124c:	79fb      	ldrb	r3, [r7, #7]
 800124e:	f003 030f 	and.w	r3, r3, #15
 8001252:	3b04      	subs	r3, #4
 8001254:	0112      	lsls	r2, r2, #4
 8001256:	b2d2      	uxtb	r2, r2
 8001258:	440b      	add	r3, r1
 800125a:	761a      	strb	r2, [r3, #24]
}
 800125c:	bf00      	nop
 800125e:	370c      	adds	r7, #12
 8001260:	46bd      	mov	sp, r7
 8001262:	bc80      	pop	{r7}
 8001264:	4770      	bx	lr
 8001266:	bf00      	nop
 8001268:	e000e100 	.word	0xe000e100
 800126c:	e000ed00 	.word	0xe000ed00

08001270 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8001270:	b480      	push	{r7}
 8001272:	b089      	sub	sp, #36	@ 0x24
 8001274:	af00      	add	r7, sp, #0
 8001276:	60f8      	str	r0, [r7, #12]
 8001278:	60b9      	str	r1, [r7, #8]
 800127a:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 800127c:	68fb      	ldr	r3, [r7, #12]
 800127e:	f003 0307 	and.w	r3, r3, #7
 8001282:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8001284:	69fb      	ldr	r3, [r7, #28]
 8001286:	f1c3 0307 	rsb	r3, r3, #7
 800128a:	2b04      	cmp	r3, #4
 800128c:	bf28      	it	cs
 800128e:	2304      	movcs	r3, #4
 8001290:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001292:	69fb      	ldr	r3, [r7, #28]
 8001294:	3304      	adds	r3, #4
 8001296:	2b06      	cmp	r3, #6
 8001298:	d902      	bls.n	80012a0 <NVIC_EncodePriority+0x30>
 800129a:	69fb      	ldr	r3, [r7, #28]
 800129c:	3b03      	subs	r3, #3
 800129e:	e000      	b.n	80012a2 <NVIC_EncodePriority+0x32>
 80012a0:	2300      	movs	r3, #0
 80012a2:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80012a4:	f04f 32ff 	mov.w	r2, #4294967295
 80012a8:	69bb      	ldr	r3, [r7, #24]
 80012aa:	fa02 f303 	lsl.w	r3, r2, r3
 80012ae:	43da      	mvns	r2, r3
 80012b0:	68bb      	ldr	r3, [r7, #8]
 80012b2:	401a      	ands	r2, r3
 80012b4:	697b      	ldr	r3, [r7, #20]
 80012b6:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80012b8:	f04f 31ff 	mov.w	r1, #4294967295
 80012bc:	697b      	ldr	r3, [r7, #20]
 80012be:	fa01 f303 	lsl.w	r3, r1, r3
 80012c2:	43d9      	mvns	r1, r3
 80012c4:	687b      	ldr	r3, [r7, #4]
 80012c6:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80012c8:	4313      	orrs	r3, r2
         );
}
 80012ca:	4618      	mov	r0, r3
 80012cc:	3724      	adds	r7, #36	@ 0x24
 80012ce:	46bd      	mov	sp, r7
 80012d0:	bc80      	pop	{r7}
 80012d2:	4770      	bx	lr

080012d4 <calculate_unix_timestamp>:

static float current_lat = 0.0f;
static float current_lon = 0.0f;
static uint32_t current_timestamp = 0;

static uint32_t calculate_unix_timestamp(int year, int month, int day, int hour, int min, int sec) {
 80012d4:	b480      	push	{r7}
 80012d6:	b089      	sub	sp, #36	@ 0x24
 80012d8:	af00      	add	r7, sp, #0
 80012da:	60f8      	str	r0, [r7, #12]
 80012dc:	60b9      	str	r1, [r7, #8]
 80012de:	607a      	str	r2, [r7, #4]
 80012e0:	603b      	str	r3, [r7, #0]
    int years = year - 1970;
 80012e2:	68fb      	ldr	r3, [r7, #12]
 80012e4:	f2a3 73b2 	subw	r3, r3, #1970	@ 0x7b2
 80012e8:	617b      	str	r3, [r7, #20]
    int leaps = (years + 1) / 4;
 80012ea:	697b      	ldr	r3, [r7, #20]
 80012ec:	3301      	adds	r3, #1
 80012ee:	2b00      	cmp	r3, #0
 80012f0:	da00      	bge.n	80012f4 <calculate_unix_timestamp+0x20>
 80012f2:	3303      	adds	r3, #3
 80012f4:	109b      	asrs	r3, r3, #2
 80012f6:	613b      	str	r3, [r7, #16]
    uint32_t days = years * 365 + leaps;
 80012f8:	697b      	ldr	r3, [r7, #20]
 80012fa:	f240 126d 	movw	r2, #365	@ 0x16d
 80012fe:	fb03 f202 	mul.w	r2, r3, r2
 8001302:	693b      	ldr	r3, [r7, #16]
 8001304:	4413      	add	r3, r2
 8001306:	61fb      	str	r3, [r7, #28]

    static const int days_in_month[] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
    for (int i = 0; i < month - 1; i++) {
 8001308:	2300      	movs	r3, #0
 800130a:	61bb      	str	r3, [r7, #24]
 800130c:	e00a      	b.n	8001324 <calculate_unix_timestamp+0x50>
        days += days_in_month[i];
 800130e:	4a1b      	ldr	r2, [pc, #108]	@ (800137c <calculate_unix_timestamp+0xa8>)
 8001310:	69bb      	ldr	r3, [r7, #24]
 8001312:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001316:	461a      	mov	r2, r3
 8001318:	69fb      	ldr	r3, [r7, #28]
 800131a:	4413      	add	r3, r2
 800131c:	61fb      	str	r3, [r7, #28]
    for (int i = 0; i < month - 1; i++) {
 800131e:	69bb      	ldr	r3, [r7, #24]
 8001320:	3301      	adds	r3, #1
 8001322:	61bb      	str	r3, [r7, #24]
 8001324:	68bb      	ldr	r3, [r7, #8]
 8001326:	3b01      	subs	r3, #1
 8001328:	69ba      	ldr	r2, [r7, #24]
 800132a:	429a      	cmp	r2, r3
 800132c:	dbef      	blt.n	800130e <calculate_unix_timestamp+0x3a>
    }
    if (month > 2 && year % 4 == 0) days++;
 800132e:	68bb      	ldr	r3, [r7, #8]
 8001330:	2b02      	cmp	r3, #2
 8001332:	dd07      	ble.n	8001344 <calculate_unix_timestamp+0x70>
 8001334:	68fb      	ldr	r3, [r7, #12]
 8001336:	f003 0303 	and.w	r3, r3, #3
 800133a:	2b00      	cmp	r3, #0
 800133c:	d102      	bne.n	8001344 <calculate_unix_timestamp+0x70>
 800133e:	69fb      	ldr	r3, [r7, #28]
 8001340:	3301      	adds	r3, #1
 8001342:	61fb      	str	r3, [r7, #28]
    days += day - 1;
 8001344:	687a      	ldr	r2, [r7, #4]
 8001346:	69fb      	ldr	r3, [r7, #28]
 8001348:	4413      	add	r3, r2
 800134a:	3b01      	subs	r3, #1
 800134c:	61fb      	str	r3, [r7, #28]

    return days * 86400UL + hour * 3600UL + min * 60UL + sec;
 800134e:	69fb      	ldr	r3, [r7, #28]
 8001350:	4a0b      	ldr	r2, [pc, #44]	@ (8001380 <calculate_unix_timestamp+0xac>)
 8001352:	fb03 f202 	mul.w	r2, r3, r2
 8001356:	683b      	ldr	r3, [r7, #0]
 8001358:	f44f 6161 	mov.w	r1, #3600	@ 0xe10
 800135c:	fb01 f303 	mul.w	r3, r1, r3
 8001360:	18d1      	adds	r1, r2, r3
 8001362:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8001364:	4613      	mov	r3, r2
 8001366:	011b      	lsls	r3, r3, #4
 8001368:	1a9b      	subs	r3, r3, r2
 800136a:	009b      	lsls	r3, r3, #2
 800136c:	18ca      	adds	r2, r1, r3
 800136e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001370:	4413      	add	r3, r2
}
 8001372:	4618      	mov	r0, r3
 8001374:	3724      	adds	r7, #36	@ 0x24
 8001376:	46bd      	mov	sp, r7
 8001378:	bc80      	pop	{r7}
 800137a:	4770      	bx	lr
 800137c:	08007228 	.word	0x08007228
 8001380:	00015180 	.word	0x00015180

08001384 <validate_nmea_checksum>:

static int validate_nmea_checksum(const char* nmea) {
 8001384:	b580      	push	{r7, lr}
 8001386:	b086      	sub	sp, #24
 8001388:	af00      	add	r7, sp, #0
 800138a:	6078      	str	r0, [r7, #4]
    if (nmea[0] != '$') return 0;
 800138c:	687b      	ldr	r3, [r7, #4]
 800138e:	781b      	ldrb	r3, [r3, #0]
 8001390:	2b24      	cmp	r3, #36	@ 0x24
 8001392:	d001      	beq.n	8001398 <validate_nmea_checksum+0x14>
 8001394:	2300      	movs	r3, #0
 8001396:	e040      	b.n	800141a <validate_nmea_checksum+0x96>
    const char* asterisk = strchr(nmea, '*');
 8001398:	212a      	movs	r1, #42	@ 0x2a
 800139a:	6878      	ldr	r0, [r7, #4]
 800139c:	f003 f859 	bl	8004452 <strchr>
 80013a0:	60f8      	str	r0, [r7, #12]
    if (!asterisk || strlen(asterisk) < 3) return 0;
 80013a2:	68fb      	ldr	r3, [r7, #12]
 80013a4:	2b00      	cmp	r3, #0
 80013a6:	d005      	beq.n	80013b4 <validate_nmea_checksum+0x30>
 80013a8:	68f8      	ldr	r0, [r7, #12]
 80013aa:	f7fe fed1 	bl	8000150 <strlen>
 80013ae:	4603      	mov	r3, r0
 80013b0:	2b02      	cmp	r3, #2
 80013b2:	d801      	bhi.n	80013b8 <validate_nmea_checksum+0x34>
 80013b4:	2300      	movs	r3, #0
 80013b6:	e030      	b.n	800141a <validate_nmea_checksum+0x96>

    uint8_t calculated_checksum = 0;
 80013b8:	2300      	movs	r3, #0
 80013ba:	75fb      	strb	r3, [r7, #23]
    for (const char* p = nmea + 1; p < asterisk; p++) {
 80013bc:	687b      	ldr	r3, [r7, #4]
 80013be:	3301      	adds	r3, #1
 80013c0:	613b      	str	r3, [r7, #16]
 80013c2:	e007      	b.n	80013d4 <validate_nmea_checksum+0x50>
        calculated_checksum ^= *p;
 80013c4:	693b      	ldr	r3, [r7, #16]
 80013c6:	781a      	ldrb	r2, [r3, #0]
 80013c8:	7dfb      	ldrb	r3, [r7, #23]
 80013ca:	4053      	eors	r3, r2
 80013cc:	75fb      	strb	r3, [r7, #23]
    for (const char* p = nmea + 1; p < asterisk; p++) {
 80013ce:	693b      	ldr	r3, [r7, #16]
 80013d0:	3301      	adds	r3, #1
 80013d2:	613b      	str	r3, [r7, #16]
 80013d4:	693a      	ldr	r2, [r7, #16]
 80013d6:	68fb      	ldr	r3, [r7, #12]
 80013d8:	429a      	cmp	r2, r3
 80013da:	d3f3      	bcc.n	80013c4 <validate_nmea_checksum+0x40>
    }

    char checksum_str[3] = {0};
 80013dc:	f107 0308 	add.w	r3, r7, #8
 80013e0:	2100      	movs	r1, #0
 80013e2:	460a      	mov	r2, r1
 80013e4:	801a      	strh	r2, [r3, #0]
 80013e6:	460a      	mov	r2, r1
 80013e8:	709a      	strb	r2, [r3, #2]
    strncpy(checksum_str, asterisk + 1, 2);
 80013ea:	68fb      	ldr	r3, [r7, #12]
 80013ec:	1c59      	adds	r1, r3, #1
 80013ee:	f107 0308 	add.w	r3, r7, #8
 80013f2:	2202      	movs	r2, #2
 80013f4:	4618      	mov	r0, r3
 80013f6:	f003 f84b 	bl	8004490 <strncpy>
    uint8_t received_checksum = (uint8_t)strtol(checksum_str, NULL, 16);
 80013fa:	f107 0308 	add.w	r3, r7, #8
 80013fe:	2210      	movs	r2, #16
 8001400:	2100      	movs	r1, #0
 8001402:	4618      	mov	r0, r3
 8001404:	f002 fa7e 	bl	8003904 <strtol>
 8001408:	4603      	mov	r3, r0
 800140a:	72fb      	strb	r3, [r7, #11]

    return calculated_checksum == received_checksum;
 800140c:	7dfa      	ldrb	r2, [r7, #23]
 800140e:	7afb      	ldrb	r3, [r7, #11]
 8001410:	429a      	cmp	r2, r3
 8001412:	bf0c      	ite	eq
 8001414:	2301      	moveq	r3, #1
 8001416:	2300      	movne	r3, #0
 8001418:	b2db      	uxtb	r3, r3
}
 800141a:	4618      	mov	r0, r3
 800141c:	3718      	adds	r7, #24
 800141e:	46bd      	mov	sp, r7
 8001420:	bd80      	pop	{r7, pc}
	...

08001424 <DEBUG_UART_Init>:

void DEBUG_UART_Init(void) {
 8001424:	b480      	push	{r7}
 8001426:	af00      	add	r7, sp, #0
    RCC->APB2ENR |= RCC_APB2ENR_IOPAEN | RCC_APB2ENR_AFIOEN;
 8001428:	4b13      	ldr	r3, [pc, #76]	@ (8001478 <DEBUG_UART_Init+0x54>)
 800142a:	699b      	ldr	r3, [r3, #24]
 800142c:	4a12      	ldr	r2, [pc, #72]	@ (8001478 <DEBUG_UART_Init+0x54>)
 800142e:	f043 0305 	orr.w	r3, r3, #5
 8001432:	6193      	str	r3, [r2, #24]
    RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 8001434:	4b10      	ldr	r3, [pc, #64]	@ (8001478 <DEBUG_UART_Init+0x54>)
 8001436:	699b      	ldr	r3, [r3, #24]
 8001438:	4a0f      	ldr	r2, [pc, #60]	@ (8001478 <DEBUG_UART_Init+0x54>)
 800143a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800143e:	6193      	str	r3, [r2, #24]

    GPIOA->CRH &= ~(GPIO_CRH_MODE9 | GPIO_CRH_CNF9);
 8001440:	4b0e      	ldr	r3, [pc, #56]	@ (800147c <DEBUG_UART_Init+0x58>)
 8001442:	685b      	ldr	r3, [r3, #4]
 8001444:	4a0d      	ldr	r2, [pc, #52]	@ (800147c <DEBUG_UART_Init+0x58>)
 8001446:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800144a:	6053      	str	r3, [r2, #4]
    GPIOA->CRH |= (GPIO_CRH_MODE9_1 | GPIO_CRH_CNF9_1); // PA9: TX
 800144c:	4b0b      	ldr	r3, [pc, #44]	@ (800147c <DEBUG_UART_Init+0x58>)
 800144e:	685b      	ldr	r3, [r3, #4]
 8001450:	4a0a      	ldr	r2, [pc, #40]	@ (800147c <DEBUG_UART_Init+0x58>)
 8001452:	f043 03a0 	orr.w	r3, r3, #160	@ 0xa0
 8001456:	6053      	str	r3, [r2, #4]

    USART1->BRR = SystemCoreClock / 115200; // Baud rate 115200
 8001458:	4b09      	ldr	r3, [pc, #36]	@ (8001480 <DEBUG_UART_Init+0x5c>)
 800145a:	681b      	ldr	r3, [r3, #0]
 800145c:	4a09      	ldr	r2, [pc, #36]	@ (8001484 <DEBUG_UART_Init+0x60>)
 800145e:	490a      	ldr	r1, [pc, #40]	@ (8001488 <DEBUG_UART_Init+0x64>)
 8001460:	fba1 1303 	umull	r1, r3, r1, r3
 8001464:	0c1b      	lsrs	r3, r3, #16
 8001466:	6093      	str	r3, [r2, #8]
    USART1->CR1 = USART_CR1_UE | USART_CR1_TE;
 8001468:	4b06      	ldr	r3, [pc, #24]	@ (8001484 <DEBUG_UART_Init+0x60>)
 800146a:	f242 0208 	movw	r2, #8200	@ 0x2008
 800146e:	60da      	str	r2, [r3, #12]
}
 8001470:	bf00      	nop
 8001472:	46bd      	mov	sp, r7
 8001474:	bc80      	pop	{r7}
 8001476:	4770      	bx	lr
 8001478:	40021000 	.word	0x40021000
 800147c:	40010800 	.word	0x40010800
 8001480:	20000000 	.word	0x20000000
 8001484:	40013800 	.word	0x40013800
 8001488:	91a2b3c5 	.word	0x91a2b3c5

0800148c <DEBUG_Print>:

void DEBUG_Print(const char* str) {
 800148c:	b480      	push	{r7}
 800148e:	b083      	sub	sp, #12
 8001490:	af00      	add	r7, sp, #0
 8001492:	6078      	str	r0, [r7, #4]
    while (*str) {
 8001494:	e00c      	b.n	80014b0 <DEBUG_Print+0x24>
        while (!(USART1->SR & USART_SR_TXE));
 8001496:	bf00      	nop
 8001498:	4b0a      	ldr	r3, [pc, #40]	@ (80014c4 <DEBUG_Print+0x38>)
 800149a:	681b      	ldr	r3, [r3, #0]
 800149c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80014a0:	2b00      	cmp	r3, #0
 80014a2:	d0f9      	beq.n	8001498 <DEBUG_Print+0xc>
        USART1->DR = *str++;
 80014a4:	687b      	ldr	r3, [r7, #4]
 80014a6:	1c5a      	adds	r2, r3, #1
 80014a8:	607a      	str	r2, [r7, #4]
 80014aa:	781a      	ldrb	r2, [r3, #0]
 80014ac:	4b05      	ldr	r3, [pc, #20]	@ (80014c4 <DEBUG_Print+0x38>)
 80014ae:	605a      	str	r2, [r3, #4]
    while (*str) {
 80014b0:	687b      	ldr	r3, [r7, #4]
 80014b2:	781b      	ldrb	r3, [r3, #0]
 80014b4:	2b00      	cmp	r3, #0
 80014b6:	d1ee      	bne.n	8001496 <DEBUG_Print+0xa>
    }
}
 80014b8:	bf00      	nop
 80014ba:	bf00      	nop
 80014bc:	370c      	adds	r7, #12
 80014be:	46bd      	mov	sp, r7
 80014c0:	bc80      	pop	{r7}
 80014c2:	4770      	bx	lr
 80014c4:	40013800 	.word	0x40013800

080014c8 <GPS_UART_Init>:

void GPS_UART_Init(void) {
 80014c8:	b580      	push	{r7, lr}
 80014ca:	af00      	add	r7, sp, #0
    RCC->APB2ENR |= RCC_APB2ENR_IOPAEN | RCC_APB2ENR_AFIOEN;
 80014cc:	4b20      	ldr	r3, [pc, #128]	@ (8001550 <GPS_UART_Init+0x88>)
 80014ce:	699b      	ldr	r3, [r3, #24]
 80014d0:	4a1f      	ldr	r2, [pc, #124]	@ (8001550 <GPS_UART_Init+0x88>)
 80014d2:	f043 0305 	orr.w	r3, r3, #5
 80014d6:	6193      	str	r3, [r2, #24]
    RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 80014d8:	4b1d      	ldr	r3, [pc, #116]	@ (8001550 <GPS_UART_Init+0x88>)
 80014da:	69db      	ldr	r3, [r3, #28]
 80014dc:	4a1c      	ldr	r2, [pc, #112]	@ (8001550 <GPS_UART_Init+0x88>)
 80014de:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80014e2:	61d3      	str	r3, [r2, #28]

    GPIOA->CRL &= ~(GPIO_CRL_MODE2 | GPIO_CRL_CNF2);
 80014e4:	4b1b      	ldr	r3, [pc, #108]	@ (8001554 <GPS_UART_Init+0x8c>)
 80014e6:	681b      	ldr	r3, [r3, #0]
 80014e8:	4a1a      	ldr	r2, [pc, #104]	@ (8001554 <GPS_UART_Init+0x8c>)
 80014ea:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 80014ee:	6013      	str	r3, [r2, #0]
    GPIOA->CRL |= (GPIO_CRL_MODE2_1 | GPIO_CRL_CNF2_1); // PA2: TX
 80014f0:	4b18      	ldr	r3, [pc, #96]	@ (8001554 <GPS_UART_Init+0x8c>)
 80014f2:	681b      	ldr	r3, [r3, #0]
 80014f4:	4a17      	ldr	r2, [pc, #92]	@ (8001554 <GPS_UART_Init+0x8c>)
 80014f6:	f443 6320 	orr.w	r3, r3, #2560	@ 0xa00
 80014fa:	6013      	str	r3, [r2, #0]
    GPIOA->CRL &= ~(GPIO_CRL_MODE3 | GPIO_CRL_CNF3);
 80014fc:	4b15      	ldr	r3, [pc, #84]	@ (8001554 <GPS_UART_Init+0x8c>)
 80014fe:	681b      	ldr	r3, [r3, #0]
 8001500:	4a14      	ldr	r2, [pc, #80]	@ (8001554 <GPS_UART_Init+0x8c>)
 8001502:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8001506:	6013      	str	r3, [r2, #0]
    GPIOA->CRL |= GPIO_CRL_CNF3_0; // PA3: RX
 8001508:	4b12      	ldr	r3, [pc, #72]	@ (8001554 <GPS_UART_Init+0x8c>)
 800150a:	681b      	ldr	r3, [r3, #0]
 800150c:	4a11      	ldr	r2, [pc, #68]	@ (8001554 <GPS_UART_Init+0x8c>)
 800150e:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001512:	6013      	str	r3, [r2, #0]

    USART2->BRR = SystemCoreClock / 9600; // Baud rate 9600
 8001514:	4b10      	ldr	r3, [pc, #64]	@ (8001558 <GPS_UART_Init+0x90>)
 8001516:	681b      	ldr	r3, [r3, #0]
 8001518:	4a10      	ldr	r2, [pc, #64]	@ (800155c <GPS_UART_Init+0x94>)
 800151a:	4911      	ldr	r1, [pc, #68]	@ (8001560 <GPS_UART_Init+0x98>)
 800151c:	fba1 1303 	umull	r1, r3, r1, r3
 8001520:	0a9b      	lsrs	r3, r3, #10
 8001522:	6093      	str	r3, [r2, #8]
    USART2->CR1 = USART_CR1_UE | USART_CR1_RE | USART_CR1_TE | USART_CR1_RXNEIE;
 8001524:	4b0d      	ldr	r3, [pc, #52]	@ (800155c <GPS_UART_Init+0x94>)
 8001526:	f242 022c 	movw	r2, #8236	@ 0x202c
 800152a:	60da      	str	r2, [r3, #12]
    NVIC_SetPriority(USART2_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(), 0, 0));
 800152c:	f7ff fe4c 	bl	80011c8 <__NVIC_GetPriorityGrouping>
 8001530:	4603      	mov	r3, r0
 8001532:	2200      	movs	r2, #0
 8001534:	2100      	movs	r1, #0
 8001536:	4618      	mov	r0, r3
 8001538:	f7ff fe9a 	bl	8001270 <NVIC_EncodePriority>
 800153c:	4603      	mov	r3, r0
 800153e:	4619      	mov	r1, r3
 8001540:	2026      	movs	r0, #38	@ 0x26
 8001542:	f7ff fe6b 	bl	800121c <__NVIC_SetPriority>
    NVIC_EnableIRQ(USART2_IRQn);
 8001546:	2026      	movs	r0, #38	@ 0x26
 8001548:	f7ff fe4c 	bl	80011e4 <__NVIC_EnableIRQ>
}
 800154c:	bf00      	nop
 800154e:	bd80      	pop	{r7, pc}
 8001550:	40021000 	.word	0x40021000
 8001554:	40010800 	.word	0x40010800
 8001558:	20000000 	.word	0x20000000
 800155c:	40004400 	.word	0x40004400
 8001560:	1b4e81b5 	.word	0x1b4e81b5

08001564 <USART2_IRQHandler>:

void USART2_IRQHandler(void) {
 8001564:	b580      	push	{r7, lr}
 8001566:	f5ad 7d02 	sub.w	sp, sp, #520	@ 0x208
 800156a:	af00      	add	r7, sp, #0
    if (USART2->SR & USART_SR_RXNE) {
 800156c:	4b50      	ldr	r3, [pc, #320]	@ (80016b0 <USART2_IRQHandler+0x14c>)
 800156e:	681b      	ldr	r3, [r3, #0]
 8001570:	f003 0320 	and.w	r3, r3, #32
 8001574:	2b00      	cmp	r3, #0
 8001576:	d07f      	beq.n	8001678 <USART2_IRQHandler+0x114>
        char c = (char)(USART2->DR & 0xFF);
 8001578:	4b4d      	ldr	r3, [pc, #308]	@ (80016b0 <USART2_IRQHandler+0x14c>)
 800157a:	685b      	ldr	r3, [r3, #4]
 800157c:	f887 3207 	strb.w	r3, [r7, #519]	@ 0x207
        if (uart_index < UART_BUFFER_SIZE - 1) {
            if (c == '$') {
 8001580:	f897 3207 	ldrb.w	r3, [r7, #519]	@ 0x207
 8001584:	2b24      	cmp	r3, #36	@ 0x24
 8001586:	d10e      	bne.n	80015a6 <USART2_IRQHandler+0x42>
                uart_index = 0;
 8001588:	4b4a      	ldr	r3, [pc, #296]	@ (80016b4 <USART2_IRQHandler+0x150>)
 800158a:	2200      	movs	r2, #0
 800158c:	701a      	strb	r2, [r3, #0]
                uart_buffer[uart_index++] = c;
 800158e:	4b49      	ldr	r3, [pc, #292]	@ (80016b4 <USART2_IRQHandler+0x150>)
 8001590:	781b      	ldrb	r3, [r3, #0]
 8001592:	1c5a      	adds	r2, r3, #1
 8001594:	b2d1      	uxtb	r1, r2
 8001596:	4a47      	ldr	r2, [pc, #284]	@ (80016b4 <USART2_IRQHandler+0x150>)
 8001598:	7011      	strb	r1, [r2, #0]
 800159a:	4619      	mov	r1, r3
 800159c:	4a46      	ldr	r2, [pc, #280]	@ (80016b8 <USART2_IRQHandler+0x154>)
 800159e:	f897 3207 	ldrb.w	r3, [r7, #519]	@ 0x207
 80015a2:	5453      	strb	r3, [r2, r1]
 80015a4:	e068      	b.n	8001678 <USART2_IRQHandler+0x114>
            } else if (c == '\n' && uart_index > 0) {
 80015a6:	f897 3207 	ldrb.w	r3, [r7, #519]	@ 0x207
 80015aa:	2b0a      	cmp	r3, #10
 80015ac:	d151      	bne.n	8001652 <USART2_IRQHandler+0xee>
 80015ae:	4b41      	ldr	r3, [pc, #260]	@ (80016b4 <USART2_IRQHandler+0x150>)
 80015b0:	781b      	ldrb	r3, [r3, #0]
 80015b2:	2b00      	cmp	r3, #0
 80015b4:	d04d      	beq.n	8001652 <USART2_IRQHandler+0xee>
                uart_buffer[uart_index] = '\0';
 80015b6:	4b3f      	ldr	r3, [pc, #252]	@ (80016b4 <USART2_IRQHandler+0x150>)
 80015b8:	781b      	ldrb	r3, [r3, #0]
 80015ba:	461a      	mov	r2, r3
 80015bc:	4b3e      	ldr	r3, [pc, #248]	@ (80016b8 <USART2_IRQHandler+0x154>)
 80015be:	2100      	movs	r1, #0
 80015c0:	5499      	strb	r1, [r3, r2]
                if (uart_index >= 6 && uart_buffer[0] == '$') {
 80015c2:	4b3c      	ldr	r3, [pc, #240]	@ (80016b4 <USART2_IRQHandler+0x150>)
 80015c4:	781b      	ldrb	r3, [r3, #0]
 80015c6:	2b05      	cmp	r3, #5
 80015c8:	d93f      	bls.n	800164a <USART2_IRQHandler+0xe6>
 80015ca:	4b3b      	ldr	r3, [pc, #236]	@ (80016b8 <USART2_IRQHandler+0x154>)
 80015cc:	781b      	ldrb	r3, [r3, #0]
 80015ce:	2b24      	cmp	r3, #36	@ 0x24
 80015d0:	d13b      	bne.n	800164a <USART2_IRQHandler+0xe6>
                    char debug_buf[512];
                    snprintf(debug_buf, sizeof(debug_buf), "NMEA: %s\r\n", uart_buffer);
 80015d2:	1d38      	adds	r0, r7, #4
 80015d4:	4b38      	ldr	r3, [pc, #224]	@ (80016b8 <USART2_IRQHandler+0x154>)
 80015d6:	4a39      	ldr	r2, [pc, #228]	@ (80016bc <USART2_IRQHandler+0x158>)
 80015d8:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80015dc:	f002 feb8 	bl	8004350 <sniprintf>
                    DEBUG_Print(debug_buf);
 80015e0:	1d3b      	adds	r3, r7, #4
 80015e2:	4618      	mov	r0, r3
 80015e4:	f7ff ff52 	bl	800148c <DEBUG_Print>
                    if (strncmp(uart_buffer, "$GPGGA", 6) == 0 || strncmp(uart_buffer, "$GPRMC", 6) == 0) {
 80015e8:	2206      	movs	r2, #6
 80015ea:	4935      	ldr	r1, [pc, #212]	@ (80016c0 <USART2_IRQHandler+0x15c>)
 80015ec:	4832      	ldr	r0, [pc, #200]	@ (80016b8 <USART2_IRQHandler+0x154>)
 80015ee:	f002 ff3d 	bl	800446c <strncmp>
 80015f2:	4603      	mov	r3, r0
 80015f4:	2b00      	cmp	r3, #0
 80015f6:	d007      	beq.n	8001608 <USART2_IRQHandler+0xa4>
 80015f8:	2206      	movs	r2, #6
 80015fa:	4932      	ldr	r1, [pc, #200]	@ (80016c4 <USART2_IRQHandler+0x160>)
 80015fc:	482e      	ldr	r0, [pc, #184]	@ (80016b8 <USART2_IRQHandler+0x154>)
 80015fe:	f002 ff35 	bl	800446c <strncmp>
 8001602:	4603      	mov	r3, r0
 8001604:	2b00      	cmp	r3, #0
 8001606:	d115      	bne.n	8001634 <USART2_IRQHandler+0xd0>
                        if (validate_nmea_checksum(uart_buffer)) {
 8001608:	482b      	ldr	r0, [pc, #172]	@ (80016b8 <USART2_IRQHandler+0x154>)
 800160a:	f7ff febb 	bl	8001384 <validate_nmea_checksum>
 800160e:	4603      	mov	r3, r0
 8001610:	2b00      	cmp	r3, #0
 8001612:	d003      	beq.n	800161c <USART2_IRQHandler+0xb8>
                            GPS_Parse_NMEA(uart_buffer);
 8001614:	4828      	ldr	r0, [pc, #160]	@ (80016b8 <USART2_IRQHandler+0x154>)
 8001616:	f000 f85d 	bl	80016d4 <GPS_Parse_NMEA>
                        if (validate_nmea_checksum(uart_buffer)) {
 800161a:	e016      	b.n	800164a <USART2_IRQHandler+0xe6>
                        } else {
                            snprintf(debug_buf, sizeof(debug_buf), "Checksum failed: %s\r\n", uart_buffer);
 800161c:	1d38      	adds	r0, r7, #4
 800161e:	4b26      	ldr	r3, [pc, #152]	@ (80016b8 <USART2_IRQHandler+0x154>)
 8001620:	4a29      	ldr	r2, [pc, #164]	@ (80016c8 <USART2_IRQHandler+0x164>)
 8001622:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001626:	f002 fe93 	bl	8004350 <sniprintf>
                            DEBUG_Print(debug_buf);
 800162a:	1d3b      	adds	r3, r7, #4
 800162c:	4618      	mov	r0, r3
 800162e:	f7ff ff2d 	bl	800148c <DEBUG_Print>
                        if (validate_nmea_checksum(uart_buffer)) {
 8001632:	e00a      	b.n	800164a <USART2_IRQHandler+0xe6>
                        }
                    } else {
                        snprintf(debug_buf, sizeof(debug_buf), "Non-GPGGA/GPRMC sentence: %s\r\n", uart_buffer);
 8001634:	1d38      	adds	r0, r7, #4
 8001636:	4b20      	ldr	r3, [pc, #128]	@ (80016b8 <USART2_IRQHandler+0x154>)
 8001638:	4a24      	ldr	r2, [pc, #144]	@ (80016cc <USART2_IRQHandler+0x168>)
 800163a:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800163e:	f002 fe87 	bl	8004350 <sniprintf>
                        DEBUG_Print(debug_buf);
 8001642:	1d3b      	adds	r3, r7, #4
 8001644:	4618      	mov	r0, r3
 8001646:	f7ff ff21 	bl	800148c <DEBUG_Print>
                    }
                }
                uart_index = 0;
 800164a:	4b1a      	ldr	r3, [pc, #104]	@ (80016b4 <USART2_IRQHandler+0x150>)
 800164c:	2200      	movs	r2, #0
 800164e:	701a      	strb	r2, [r3, #0]
 8001650:	e012      	b.n	8001678 <USART2_IRQHandler+0x114>
            } else if (c != '\r' && uart_index > 0) {
 8001652:	f897 3207 	ldrb.w	r3, [r7, #519]	@ 0x207
 8001656:	2b0d      	cmp	r3, #13
 8001658:	d00e      	beq.n	8001678 <USART2_IRQHandler+0x114>
 800165a:	4b16      	ldr	r3, [pc, #88]	@ (80016b4 <USART2_IRQHandler+0x150>)
 800165c:	781b      	ldrb	r3, [r3, #0]
 800165e:	2b00      	cmp	r3, #0
 8001660:	d00a      	beq.n	8001678 <USART2_IRQHandler+0x114>
                uart_buffer[uart_index++] = c;
 8001662:	4b14      	ldr	r3, [pc, #80]	@ (80016b4 <USART2_IRQHandler+0x150>)
 8001664:	781b      	ldrb	r3, [r3, #0]
 8001666:	1c5a      	adds	r2, r3, #1
 8001668:	b2d1      	uxtb	r1, r2
 800166a:	4a12      	ldr	r2, [pc, #72]	@ (80016b4 <USART2_IRQHandler+0x150>)
 800166c:	7011      	strb	r1, [r2, #0]
 800166e:	4619      	mov	r1, r3
 8001670:	4a11      	ldr	r2, [pc, #68]	@ (80016b8 <USART2_IRQHandler+0x154>)
 8001672:	f897 3207 	ldrb.w	r3, [r7, #519]	@ 0x207
 8001676:	5453      	strb	r3, [r2, r1]
            char debug_buf[128];
            snprintf(debug_buf, sizeof(debug_buf), "UART buffer overflow\r\n");
            DEBUG_Print(debug_buf);
        }
    }
    if (USART2->SR & (USART_SR_ORE | USART_SR_FE | USART_SR_NE)) {
 8001678:	4b0d      	ldr	r3, [pc, #52]	@ (80016b0 <USART2_IRQHandler+0x14c>)
 800167a:	681b      	ldr	r3, [r3, #0]
 800167c:	f003 030e 	and.w	r3, r3, #14
 8001680:	2b00      	cmp	r3, #0
 8001682:	d010      	beq.n	80016a6 <USART2_IRQHandler+0x142>
        USART2->SR;
 8001684:	4b0a      	ldr	r3, [pc, #40]	@ (80016b0 <USART2_IRQHandler+0x14c>)
 8001686:	681b      	ldr	r3, [r3, #0]
        USART2->DR;
 8001688:	4b09      	ldr	r3, [pc, #36]	@ (80016b0 <USART2_IRQHandler+0x14c>)
 800168a:	685b      	ldr	r3, [r3, #4]
        uart_index = 0;
 800168c:	4b09      	ldr	r3, [pc, #36]	@ (80016b4 <USART2_IRQHandler+0x150>)
 800168e:	2200      	movs	r2, #0
 8001690:	701a      	strb	r2, [r3, #0]
        char debug_buf[128];
        snprintf(debug_buf, sizeof(debug_buf), "UART error detected\r\n");
 8001692:	1d3b      	adds	r3, r7, #4
 8001694:	4a0e      	ldr	r2, [pc, #56]	@ (80016d0 <USART2_IRQHandler+0x16c>)
 8001696:	2180      	movs	r1, #128	@ 0x80
 8001698:	4618      	mov	r0, r3
 800169a:	f002 fe59 	bl	8004350 <sniprintf>
        DEBUG_Print(debug_buf);
 800169e:	1d3b      	adds	r3, r7, #4
 80016a0:	4618      	mov	r0, r3
 80016a2:	f7ff fef3 	bl	800148c <DEBUG_Print>
    }
}
 80016a6:	bf00      	nop
 80016a8:	f507 7702 	add.w	r7, r7, #520	@ 0x208
 80016ac:	46bd      	mov	sp, r7
 80016ae:	bd80      	pop	{r7, pc}
 80016b0:	40004400 	.word	0x40004400
 80016b4:	200003ec 	.word	0x200003ec
 80016b8:	200001ec 	.word	0x200001ec
 80016bc:	08006f88 	.word	0x08006f88
 80016c0:	08006f94 	.word	0x08006f94
 80016c4:	08006f9c 	.word	0x08006f9c
 80016c8:	08006fa4 	.word	0x08006fa4
 80016cc:	08006fbc 	.word	0x08006fbc
 80016d0:	08006fdc 	.word	0x08006fdc

080016d4 <GPS_Parse_NMEA>:

void GPS_Parse_NMEA(char* nmea) {
 80016d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80016d6:	b0d7      	sub	sp, #348	@ 0x15c
 80016d8:	af06      	add	r7, sp, #24
 80016da:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 80016de:	f5a3 739e 	sub.w	r3, r3, #316	@ 0x13c
 80016e2:	6018      	str	r0, [r3, #0]
    char debug_buf[128];
    char* saveptr;

    snprintf(debug_buf, sizeof(debug_buf), "Parsing NMEA: %s\r\n", nmea);
 80016e4:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 80016e8:	f5a3 739e 	sub.w	r3, r3, #316	@ 0x13c
 80016ec:	f107 0064 	add.w	r0, r7, #100	@ 0x64
 80016f0:	681b      	ldr	r3, [r3, #0]
 80016f2:	4aad      	ldr	r2, [pc, #692]	@ (80019a8 <GPS_Parse_NMEA+0x2d4>)
 80016f4:	2180      	movs	r1, #128	@ 0x80
 80016f6:	f002 fe2b 	bl	8004350 <sniprintf>
    DEBUG_Print(debug_buf);
 80016fa:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 80016fe:	4618      	mov	r0, r3
 8001700:	f7ff fec4 	bl	800148c <DEBUG_Print>

    if (strncmp(nmea, "$GPGGA", 6) == 0) {
 8001704:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001708:	f5a3 739e 	sub.w	r3, r3, #316	@ 0x13c
 800170c:	2206      	movs	r2, #6
 800170e:	49a7      	ldr	r1, [pc, #668]	@ (80019ac <GPS_Parse_NMEA+0x2d8>)
 8001710:	6818      	ldr	r0, [r3, #0]
 8001712:	f002 feab 	bl	800446c <strncmp>
 8001716:	4603      	mov	r3, r0
 8001718:	2b00      	cmp	r3, #0
 800171a:	f040 81e4 	bne.w	8001ae6 <GPS_Parse_NMEA+0x412>
        char* token = strtok_r(nmea, ",", &saveptr);
 800171e:	f107 0260 	add.w	r2, r7, #96	@ 0x60
 8001722:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001726:	f5a3 739e 	sub.w	r3, r3, #316	@ 0x13c
 800172a:	49a1      	ldr	r1, [pc, #644]	@ (80019b0 <GPS_Parse_NMEA+0x2dc>)
 800172c:	6818      	ldr	r0, [r3, #0]
 800172e:	f002 feea 	bl	8004506 <strtok_r>
 8001732:	f8c7 013c 	str.w	r0, [r7, #316]	@ 0x13c
        int field = 0;
 8001736:	2300      	movs	r3, #0
 8001738:	f8c7 3138 	str.w	r3, [r7, #312]	@ 0x138
        char lat_str[12] = {0}, lon_str[12] = {0}, lat_dir[2] = {0}, lon_dir[2] = {0};
 800173c:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8001740:	2200      	movs	r2, #0
 8001742:	601a      	str	r2, [r3, #0]
 8001744:	605a      	str	r2, [r3, #4]
 8001746:	609a      	str	r2, [r3, #8]
 8001748:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 800174c:	2200      	movs	r2, #0
 800174e:	601a      	str	r2, [r3, #0]
 8001750:	605a      	str	r2, [r3, #4]
 8001752:	609a      	str	r2, [r3, #8]
 8001754:	2300      	movs	r3, #0
 8001756:	f8a7 3044 	strh.w	r3, [r7, #68]	@ 0x44
 800175a:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 800175e:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8001762:	2200      	movs	r2, #0
 8001764:	801a      	strh	r2, [r3, #0]
        int fix_quality = 0;
 8001766:	2300      	movs	r3, #0
 8001768:	f8c7 3134 	str.w	r3, [r7, #308]	@ 0x134

        while (token != NULL && field <= 6) {
 800176c:	e05e      	b.n	800182c <GPS_Parse_NMEA+0x158>
            if (field == 0) { // $GPGGA
 800176e:	f8d7 3138 	ldr.w	r3, [r7, #312]	@ 0x138
 8001772:	2b00      	cmp	r3, #0
 8001774:	d10e      	bne.n	8001794 <GPS_Parse_NMEA+0xc0>
                token = strtok_r(NULL, ",", &saveptr);
 8001776:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 800177a:	461a      	mov	r2, r3
 800177c:	498c      	ldr	r1, [pc, #560]	@ (80019b0 <GPS_Parse_NMEA+0x2dc>)
 800177e:	2000      	movs	r0, #0
 8001780:	f002 fec1 	bl	8004506 <strtok_r>
 8001784:	f8c7 013c 	str.w	r0, [r7, #316]	@ 0x13c
                field++;
 8001788:	f8d7 3138 	ldr.w	r3, [r7, #312]	@ 0x138
 800178c:	3301      	adds	r3, #1
 800178e:	f8c7 3138 	str.w	r3, [r7, #312]	@ 0x138
                continue;
 8001792:	e04b      	b.n	800182c <GPS_Parse_NMEA+0x158>
            }
            else if (field == 2) strncpy(lat_str, token, sizeof(lat_str) - 1); // Latitude
 8001794:	f8d7 3138 	ldr.w	r3, [r7, #312]	@ 0x138
 8001798:	2b02      	cmp	r3, #2
 800179a:	d108      	bne.n	80017ae <GPS_Parse_NMEA+0xda>
 800179c:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 80017a0:	220b      	movs	r2, #11
 80017a2:	f8d7 113c 	ldr.w	r1, [r7, #316]	@ 0x13c
 80017a6:	4618      	mov	r0, r3
 80017a8:	f002 fe72 	bl	8004490 <strncpy>
 80017ac:	e030      	b.n	8001810 <GPS_Parse_NMEA+0x13c>
            else if (field == 3) strncpy(lat_dir, token, sizeof(lat_dir) - 1); // N/S
 80017ae:	f8d7 3138 	ldr.w	r3, [r7, #312]	@ 0x138
 80017b2:	2b03      	cmp	r3, #3
 80017b4:	d108      	bne.n	80017c8 <GPS_Parse_NMEA+0xf4>
 80017b6:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 80017ba:	2201      	movs	r2, #1
 80017bc:	f8d7 113c 	ldr.w	r1, [r7, #316]	@ 0x13c
 80017c0:	4618      	mov	r0, r3
 80017c2:	f002 fe65 	bl	8004490 <strncpy>
 80017c6:	e023      	b.n	8001810 <GPS_Parse_NMEA+0x13c>
            else if (field == 4) strncpy(lon_str, token, sizeof(lon_str) - 1); // Longitude
 80017c8:	f8d7 3138 	ldr.w	r3, [r7, #312]	@ 0x138
 80017cc:	2b04      	cmp	r3, #4
 80017ce:	d108      	bne.n	80017e2 <GPS_Parse_NMEA+0x10e>
 80017d0:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 80017d4:	220b      	movs	r2, #11
 80017d6:	f8d7 113c 	ldr.w	r1, [r7, #316]	@ 0x13c
 80017da:	4618      	mov	r0, r3
 80017dc:	f002 fe58 	bl	8004490 <strncpy>
 80017e0:	e016      	b.n	8001810 <GPS_Parse_NMEA+0x13c>
            else if (field == 5) strncpy(lon_dir, token, sizeof(lon_dir) - 1); // E/W
 80017e2:	f8d7 3138 	ldr.w	r3, [r7, #312]	@ 0x138
 80017e6:	2b05      	cmp	r3, #5
 80017e8:	d108      	bne.n	80017fc <GPS_Parse_NMEA+0x128>
 80017ea:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 80017ee:	2201      	movs	r2, #1
 80017f0:	f8d7 113c 	ldr.w	r1, [r7, #316]	@ 0x13c
 80017f4:	4618      	mov	r0, r3
 80017f6:	f002 fe4b 	bl	8004490 <strncpy>
 80017fa:	e009      	b.n	8001810 <GPS_Parse_NMEA+0x13c>
            else if (field == 6) fix_quality = atoi(token); // Fix quality
 80017fc:	f8d7 3138 	ldr.w	r3, [r7, #312]	@ 0x138
 8001800:	2b06      	cmp	r3, #6
 8001802:	d105      	bne.n	8001810 <GPS_Parse_NMEA+0x13c>
 8001804:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8001808:	f001 f9f7 	bl	8002bfa <atoi>
 800180c:	f8c7 0134 	str.w	r0, [r7, #308]	@ 0x134
            token = strtok_r(NULL, ",", &saveptr);
 8001810:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 8001814:	461a      	mov	r2, r3
 8001816:	4966      	ldr	r1, [pc, #408]	@ (80019b0 <GPS_Parse_NMEA+0x2dc>)
 8001818:	2000      	movs	r0, #0
 800181a:	f002 fe74 	bl	8004506 <strtok_r>
 800181e:	f8c7 013c 	str.w	r0, [r7, #316]	@ 0x13c
            field++;
 8001822:	f8d7 3138 	ldr.w	r3, [r7, #312]	@ 0x138
 8001826:	3301      	adds	r3, #1
 8001828:	f8c7 3138 	str.w	r3, [r7, #312]	@ 0x138
        while (token != NULL && field <= 6) {
 800182c:	f8d7 313c 	ldr.w	r3, [r7, #316]	@ 0x13c
 8001830:	2b00      	cmp	r3, #0
 8001832:	d003      	beq.n	800183c <GPS_Parse_NMEA+0x168>
 8001834:	f8d7 3138 	ldr.w	r3, [r7, #312]	@ 0x138
 8001838:	2b06      	cmp	r3, #6
 800183a:	dd98      	ble.n	800176e <GPS_Parse_NMEA+0x9a>
        }

        snprintf(debug_buf, sizeof(debug_buf), "Raw GPGGA: fix=%d, lat=%s, lon=%s, lat_dir=%s, lon_dir=%s\r\n",
 800183c:	f107 0064 	add.w	r0, r7, #100	@ 0x64
 8001840:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8001844:	9303      	str	r3, [sp, #12]
 8001846:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800184a:	9302      	str	r3, [sp, #8]
 800184c:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 8001850:	9301      	str	r3, [sp, #4]
 8001852:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8001856:	9300      	str	r3, [sp, #0]
 8001858:	f8d7 3134 	ldr.w	r3, [r7, #308]	@ 0x134
 800185c:	4a55      	ldr	r2, [pc, #340]	@ (80019b4 <GPS_Parse_NMEA+0x2e0>)
 800185e:	2180      	movs	r1, #128	@ 0x80
 8001860:	f002 fd76 	bl	8004350 <sniprintf>
                 fix_quality, lat_str, lon_str, lat_dir, lon_dir);
        DEBUG_Print(debug_buf);
 8001864:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 8001868:	4618      	mov	r0, r3
 800186a:	f7ff fe0f 	bl	800148c <DEBUG_Print>

        if (fix_quality == 0 || lat_str[0] == '\0' || lon_str[0] == '\0' || lat_dir[0] == '\0' || lon_dir[0] == '\0') {
 800186e:	f8d7 3134 	ldr.w	r3, [r7, #308]	@ 0x134
 8001872:	2b00      	cmp	r3, #0
 8001874:	d012      	beq.n	800189c <GPS_Parse_NMEA+0x1c8>
 8001876:	f897 3054 	ldrb.w	r3, [r7, #84]	@ 0x54
 800187a:	2b00      	cmp	r3, #0
 800187c:	d00e      	beq.n	800189c <GPS_Parse_NMEA+0x1c8>
 800187e:	f897 3048 	ldrb.w	r3, [r7, #72]	@ 0x48
 8001882:	2b00      	cmp	r3, #0
 8001884:	d00a      	beq.n	800189c <GPS_Parse_NMEA+0x1c8>
 8001886:	f897 3044 	ldrb.w	r3, [r7, #68]	@ 0x44
 800188a:	2b00      	cmp	r3, #0
 800188c:	d006      	beq.n	800189c <GPS_Parse_NMEA+0x1c8>
 800188e:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001892:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8001896:	781b      	ldrb	r3, [r3, #0]
 8001898:	2b00      	cmp	r3, #0
 800189a:	d119      	bne.n	80018d0 <GPS_Parse_NMEA+0x1fc>
            snprintf(debug_buf, sizeof(debug_buf), "Invalid GPGGA: fix=%d, lat=%s, lon=%s, lat_dir=%s, lon_dir=%s\r\n",
 800189c:	f107 0064 	add.w	r0, r7, #100	@ 0x64
 80018a0:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 80018a4:	9303      	str	r3, [sp, #12]
 80018a6:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 80018aa:	9302      	str	r3, [sp, #8]
 80018ac:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 80018b0:	9301      	str	r3, [sp, #4]
 80018b2:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 80018b6:	9300      	str	r3, [sp, #0]
 80018b8:	f8d7 3134 	ldr.w	r3, [r7, #308]	@ 0x134
 80018bc:	4a3e      	ldr	r2, [pc, #248]	@ (80019b8 <GPS_Parse_NMEA+0x2e4>)
 80018be:	2180      	movs	r1, #128	@ 0x80
 80018c0:	f002 fd46 	bl	8004350 <sniprintf>
                     fix_quality, lat_str, lon_str, lat_dir, lon_dir);
            DEBUG_Print(debug_buf);
 80018c4:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 80018c8:	4618      	mov	r0, r3
 80018ca:	f7ff fddf 	bl	800148c <DEBUG_Print>
            return;
 80018ce:	e3bf      	b.n	8002050 <GPS_Parse_NMEA+0x97c>
        }

        float lat = atof(lat_str);
 80018d0:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 80018d4:	4618      	mov	r0, r3
 80018d6:	f001 f98d 	bl	8002bf4 <atof>
 80018da:	4602      	mov	r2, r0
 80018dc:	460b      	mov	r3, r1
 80018de:	4610      	mov	r0, r2
 80018e0:	4619      	mov	r1, r3
 80018e2:	f7ff f8f1 	bl	8000ac8 <__aeabi_d2f>
 80018e6:	4603      	mov	r3, r0
 80018e8:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
        int lat_deg = (int)(lat / 100);
 80018ec:	4933      	ldr	r1, [pc, #204]	@ (80019bc <GPS_Parse_NMEA+0x2e8>)
 80018ee:	f8d7 00f8 	ldr.w	r0, [r7, #248]	@ 0xf8
 80018f2:	f7ff fafb 	bl	8000eec <__aeabi_fdiv>
 80018f6:	4603      	mov	r3, r0
 80018f8:	4618      	mov	r0, r3
 80018fa:	f7ff fc09 	bl	8001110 <__aeabi_f2iz>
 80018fe:	4603      	mov	r3, r0
 8001900:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
        float lat_min = lat - (lat_deg * 100);
 8001904:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8001908:	2264      	movs	r2, #100	@ 0x64
 800190a:	fb02 f303 	mul.w	r3, r2, r3
 800190e:	4618      	mov	r0, r3
 8001910:	f7ff f9e4 	bl	8000cdc <__aeabi_i2f>
 8001914:	4603      	mov	r3, r0
 8001916:	4619      	mov	r1, r3
 8001918:	f8d7 00f8 	ldr.w	r0, [r7, #248]	@ 0xf8
 800191c:	f7ff f928 	bl	8000b70 <__aeabi_fsub>
 8001920:	4603      	mov	r3, r0
 8001922:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
        if (lat_deg >= 0 && lat_min >= 0.0f) {
 8001926:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800192a:	2b00      	cmp	r3, #0
 800192c:	db26      	blt.n	800197c <GPS_Parse_NMEA+0x2a8>
 800192e:	f04f 0100 	mov.w	r1, #0
 8001932:	f8d7 00f0 	ldr.w	r0, [r7, #240]	@ 0xf0
 8001936:	f7ff fbd7 	bl	80010e8 <__aeabi_fcmpge>
 800193a:	4603      	mov	r3, r0
 800193c:	2b00      	cmp	r3, #0
 800193e:	d01d      	beq.n	800197c <GPS_Parse_NMEA+0x2a8>
            current_lat = lat_deg + lat_min / 60.0f;
 8001940:	f8d7 00f4 	ldr.w	r0, [r7, #244]	@ 0xf4
 8001944:	f7ff f9ca 	bl	8000cdc <__aeabi_i2f>
 8001948:	4604      	mov	r4, r0
 800194a:	491d      	ldr	r1, [pc, #116]	@ (80019c0 <GPS_Parse_NMEA+0x2ec>)
 800194c:	f8d7 00f0 	ldr.w	r0, [r7, #240]	@ 0xf0
 8001950:	f7ff facc 	bl	8000eec <__aeabi_fdiv>
 8001954:	4603      	mov	r3, r0
 8001956:	4619      	mov	r1, r3
 8001958:	4620      	mov	r0, r4
 800195a:	f7ff f90b 	bl	8000b74 <__addsf3>
 800195e:	4603      	mov	r3, r0
 8001960:	461a      	mov	r2, r3
 8001962:	4b18      	ldr	r3, [pc, #96]	@ (80019c4 <GPS_Parse_NMEA+0x2f0>)
 8001964:	601a      	str	r2, [r3, #0]
            if (lat_dir[0] == 'S') current_lat = -current_lat;
 8001966:	f897 3044 	ldrb.w	r3, [r7, #68]	@ 0x44
 800196a:	2b53      	cmp	r3, #83	@ 0x53
 800196c:	d12e      	bne.n	80019cc <GPS_Parse_NMEA+0x2f8>
 800196e:	4b15      	ldr	r3, [pc, #84]	@ (80019c4 <GPS_Parse_NMEA+0x2f0>)
 8001970:	681b      	ldr	r3, [r3, #0]
 8001972:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000
 8001976:	4a13      	ldr	r2, [pc, #76]	@ (80019c4 <GPS_Parse_NMEA+0x2f0>)
 8001978:	6013      	str	r3, [r2, #0]
 800197a:	e027      	b.n	80019cc <GPS_Parse_NMEA+0x2f8>
        } else {
            snprintf(debug_buf, sizeof(debug_buf), "Invalid latitude: deg=%d, min=%.2f\r\n", lat_deg, lat_min);
 800197c:	f8d7 00f0 	ldr.w	r0, [r7, #240]	@ 0xf0
 8001980:	f7fe fd52 	bl	8000428 <__aeabi_f2d>
 8001984:	4602      	mov	r2, r0
 8001986:	460b      	mov	r3, r1
 8001988:	f107 0064 	add.w	r0, r7, #100	@ 0x64
 800198c:	e9cd 2300 	strd	r2, r3, [sp]
 8001990:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8001994:	4a0c      	ldr	r2, [pc, #48]	@ (80019c8 <GPS_Parse_NMEA+0x2f4>)
 8001996:	2180      	movs	r1, #128	@ 0x80
 8001998:	f002 fcda 	bl	8004350 <sniprintf>
            DEBUG_Print(debug_buf);
 800199c:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 80019a0:	4618      	mov	r0, r3
 80019a2:	f7ff fd73 	bl	800148c <DEBUG_Print>
            return;
 80019a6:	e353      	b.n	8002050 <GPS_Parse_NMEA+0x97c>
 80019a8:	08006ff4 	.word	0x08006ff4
 80019ac:	08006f94 	.word	0x08006f94
 80019b0:	08007008 	.word	0x08007008
 80019b4:	0800700c 	.word	0x0800700c
 80019b8:	08007048 	.word	0x08007048
 80019bc:	42c80000 	.word	0x42c80000
 80019c0:	42700000 	.word	0x42700000
 80019c4:	200003f0 	.word	0x200003f0
 80019c8:	08007088 	.word	0x08007088
        }

        float lon = atof(lon_str);
 80019cc:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 80019d0:	4618      	mov	r0, r3
 80019d2:	f001 f90f 	bl	8002bf4 <atof>
 80019d6:	4602      	mov	r2, r0
 80019d8:	460b      	mov	r3, r1
 80019da:	4610      	mov	r0, r2
 80019dc:	4619      	mov	r1, r3
 80019de:	f7ff f873 	bl	8000ac8 <__aeabi_d2f>
 80019e2:	4603      	mov	r3, r0
 80019e4:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
        int lon_deg = (int)(lon / 100);
 80019e8:	49a0      	ldr	r1, [pc, #640]	@ (8001c6c <GPS_Parse_NMEA+0x598>)
 80019ea:	f8d7 00ec 	ldr.w	r0, [r7, #236]	@ 0xec
 80019ee:	f7ff fa7d 	bl	8000eec <__aeabi_fdiv>
 80019f2:	4603      	mov	r3, r0
 80019f4:	4618      	mov	r0, r3
 80019f6:	f7ff fb8b 	bl	8001110 <__aeabi_f2iz>
 80019fa:	4603      	mov	r3, r0
 80019fc:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
        float lon_min = lon - (lon_deg * 100);
 8001a00:	f8d7 30e8 	ldr.w	r3, [r7, #232]	@ 0xe8
 8001a04:	2264      	movs	r2, #100	@ 0x64
 8001a06:	fb02 f303 	mul.w	r3, r2, r3
 8001a0a:	4618      	mov	r0, r3
 8001a0c:	f7ff f966 	bl	8000cdc <__aeabi_i2f>
 8001a10:	4603      	mov	r3, r0
 8001a12:	4619      	mov	r1, r3
 8001a14:	f8d7 00ec 	ldr.w	r0, [r7, #236]	@ 0xec
 8001a18:	f7ff f8aa 	bl	8000b70 <__aeabi_fsub>
 8001a1c:	4603      	mov	r3, r0
 8001a1e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
        if (lon_deg >= 0 && lon_min >= 0.0f) {
 8001a22:	f8d7 30e8 	ldr.w	r3, [r7, #232]	@ 0xe8
 8001a26:	2b00      	cmp	r3, #0
 8001a28:	db29      	blt.n	8001a7e <GPS_Parse_NMEA+0x3aa>
 8001a2a:	f04f 0100 	mov.w	r1, #0
 8001a2e:	f8d7 00e4 	ldr.w	r0, [r7, #228]	@ 0xe4
 8001a32:	f7ff fb59 	bl	80010e8 <__aeabi_fcmpge>
 8001a36:	4603      	mov	r3, r0
 8001a38:	2b00      	cmp	r3, #0
 8001a3a:	d020      	beq.n	8001a7e <GPS_Parse_NMEA+0x3aa>
            current_lon = lon_deg + lon_min / 60.0f;
 8001a3c:	f8d7 00e8 	ldr.w	r0, [r7, #232]	@ 0xe8
 8001a40:	f7ff f94c 	bl	8000cdc <__aeabi_i2f>
 8001a44:	4604      	mov	r4, r0
 8001a46:	498a      	ldr	r1, [pc, #552]	@ (8001c70 <GPS_Parse_NMEA+0x59c>)
 8001a48:	f8d7 00e4 	ldr.w	r0, [r7, #228]	@ 0xe4
 8001a4c:	f7ff fa4e 	bl	8000eec <__aeabi_fdiv>
 8001a50:	4603      	mov	r3, r0
 8001a52:	4619      	mov	r1, r3
 8001a54:	4620      	mov	r0, r4
 8001a56:	f7ff f88d 	bl	8000b74 <__addsf3>
 8001a5a:	4603      	mov	r3, r0
 8001a5c:	461a      	mov	r2, r3
 8001a5e:	4b85      	ldr	r3, [pc, #532]	@ (8001c74 <GPS_Parse_NMEA+0x5a0>)
 8001a60:	601a      	str	r2, [r3, #0]
            if (lon_dir[0] == 'W') current_lon = -current_lon;
 8001a62:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001a66:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8001a6a:	781b      	ldrb	r3, [r3, #0]
 8001a6c:	2b57      	cmp	r3, #87	@ 0x57
 8001a6e:	d11c      	bne.n	8001aaa <GPS_Parse_NMEA+0x3d6>
 8001a70:	4b80      	ldr	r3, [pc, #512]	@ (8001c74 <GPS_Parse_NMEA+0x5a0>)
 8001a72:	681b      	ldr	r3, [r3, #0]
 8001a74:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000
 8001a78:	4a7e      	ldr	r2, [pc, #504]	@ (8001c74 <GPS_Parse_NMEA+0x5a0>)
 8001a7a:	6013      	str	r3, [r2, #0]
 8001a7c:	e015      	b.n	8001aaa <GPS_Parse_NMEA+0x3d6>
        } else {
            snprintf(debug_buf, sizeof(debug_buf), "Invalid longitude: deg=%d, min=%.2f\r\n", lon_deg, lon_min);
 8001a7e:	f8d7 00e4 	ldr.w	r0, [r7, #228]	@ 0xe4
 8001a82:	f7fe fcd1 	bl	8000428 <__aeabi_f2d>
 8001a86:	4602      	mov	r2, r0
 8001a88:	460b      	mov	r3, r1
 8001a8a:	f107 0064 	add.w	r0, r7, #100	@ 0x64
 8001a8e:	e9cd 2300 	strd	r2, r3, [sp]
 8001a92:	f8d7 30e8 	ldr.w	r3, [r7, #232]	@ 0xe8
 8001a96:	4a78      	ldr	r2, [pc, #480]	@ (8001c78 <GPS_Parse_NMEA+0x5a4>)
 8001a98:	2180      	movs	r1, #128	@ 0x80
 8001a9a:	f002 fc59 	bl	8004350 <sniprintf>
            DEBUG_Print(debug_buf);
 8001a9e:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 8001aa2:	4618      	mov	r0, r3
 8001aa4:	f7ff fcf2 	bl	800148c <DEBUG_Print>
            return;
 8001aa8:	e2d2      	b.n	8002050 <GPS_Parse_NMEA+0x97c>
        }

        snprintf(debug_buf, sizeof(debug_buf), "Lat: %.6f, Lon: %.6f\r\n", current_lat, current_lon);
 8001aaa:	4b74      	ldr	r3, [pc, #464]	@ (8001c7c <GPS_Parse_NMEA+0x5a8>)
 8001aac:	681b      	ldr	r3, [r3, #0]
 8001aae:	4618      	mov	r0, r3
 8001ab0:	f7fe fcba 	bl	8000428 <__aeabi_f2d>
 8001ab4:	4604      	mov	r4, r0
 8001ab6:	460d      	mov	r5, r1
 8001ab8:	4b6e      	ldr	r3, [pc, #440]	@ (8001c74 <GPS_Parse_NMEA+0x5a0>)
 8001aba:	681b      	ldr	r3, [r3, #0]
 8001abc:	4618      	mov	r0, r3
 8001abe:	f7fe fcb3 	bl	8000428 <__aeabi_f2d>
 8001ac2:	4602      	mov	r2, r0
 8001ac4:	460b      	mov	r3, r1
 8001ac6:	f107 0064 	add.w	r0, r7, #100	@ 0x64
 8001aca:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8001ace:	e9cd 4500 	strd	r4, r5, [sp]
 8001ad2:	4a6b      	ldr	r2, [pc, #428]	@ (8001c80 <GPS_Parse_NMEA+0x5ac>)
 8001ad4:	2180      	movs	r1, #128	@ 0x80
 8001ad6:	f002 fc3b 	bl	8004350 <sniprintf>
        DEBUG_Print(debug_buf);
 8001ada:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 8001ade:	4618      	mov	r0, r3
 8001ae0:	f7ff fcd4 	bl	800148c <DEBUG_Print>
 8001ae4:	e2b4      	b.n	8002050 <GPS_Parse_NMEA+0x97c>
    } else if (strncmp(nmea, "$GPRMC", 6) == 0) {
 8001ae6:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001aea:	f5a3 739e 	sub.w	r3, r3, #316	@ 0x13c
 8001aee:	2206      	movs	r2, #6
 8001af0:	4964      	ldr	r1, [pc, #400]	@ (8001c84 <GPS_Parse_NMEA+0x5b0>)
 8001af2:	6818      	ldr	r0, [r3, #0]
 8001af4:	f002 fcba 	bl	800446c <strncmp>
 8001af8:	4603      	mov	r3, r0
 8001afa:	2b00      	cmp	r3, #0
 8001afc:	f040 82a8 	bne.w	8002050 <GPS_Parse_NMEA+0x97c>
        char* token = strtok_r(nmea, ",", &saveptr);
 8001b00:	f107 0260 	add.w	r2, r7, #96	@ 0x60
 8001b04:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001b08:	f5a3 739e 	sub.w	r3, r3, #316	@ 0x13c
 8001b0c:	495e      	ldr	r1, [pc, #376]	@ (8001c88 <GPS_Parse_NMEA+0x5b4>)
 8001b0e:	6818      	ldr	r0, [r3, #0]
 8001b10:	f002 fcf9 	bl	8004506 <strtok_r>
 8001b14:	f8c7 0130 	str.w	r0, [r7, #304]	@ 0x130
        int field = 0;
 8001b18:	2300      	movs	r3, #0
 8001b1a:	f8c7 312c 	str.w	r3, [r7, #300]	@ 0x12c
        char time_str[11] = {0}, date_str[7] = {0}, status[2] = {0}, lat_str[12] = {0}, lon_str[12] = {0}, lat_dir[2] = {0}, lon_dir[2] = {0};
 8001b1e:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001b22:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 8001b26:	461a      	mov	r2, r3
 8001b28:	2300      	movs	r3, #0
 8001b2a:	6013      	str	r3, [r2, #0]
 8001b2c:	6053      	str	r3, [r2, #4]
 8001b2e:	f8c2 3007 	str.w	r3, [r2, #7]
 8001b32:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001b36:	f5a3 738a 	sub.w	r3, r3, #276	@ 0x114
 8001b3a:	461a      	mov	r2, r3
 8001b3c:	2300      	movs	r3, #0
 8001b3e:	6013      	str	r3, [r2, #0]
 8001b40:	f8c2 3003 	str.w	r3, [r2, #3]
 8001b44:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001b48:	f5a3 738c 	sub.w	r3, r3, #280	@ 0x118
 8001b4c:	2200      	movs	r2, #0
 8001b4e:	801a      	strh	r2, [r3, #0]
 8001b50:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001b54:	f5a3 7392 	sub.w	r3, r3, #292	@ 0x124
 8001b58:	461a      	mov	r2, r3
 8001b5a:	2300      	movs	r3, #0
 8001b5c:	6013      	str	r3, [r2, #0]
 8001b5e:	6053      	str	r3, [r2, #4]
 8001b60:	6093      	str	r3, [r2, #8]
 8001b62:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001b66:	f5a3 7398 	sub.w	r3, r3, #304	@ 0x130
 8001b6a:	461a      	mov	r2, r3
 8001b6c:	2300      	movs	r3, #0
 8001b6e:	6013      	str	r3, [r2, #0]
 8001b70:	6053      	str	r3, [r2, #4]
 8001b72:	6093      	str	r3, [r2, #8]
 8001b74:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001b78:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 8001b7c:	2200      	movs	r2, #0
 8001b7e:	801a      	strh	r2, [r3, #0]
 8001b80:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001b84:	f5a3 739c 	sub.w	r3, r3, #312	@ 0x138
 8001b88:	2200      	movs	r2, #0
 8001b8a:	801a      	strh	r2, [r3, #0]

        while (token != NULL && field <= 9) {
 8001b8c:	e08c      	b.n	8001ca8 <GPS_Parse_NMEA+0x5d4>
            if (field == 0) { // $GPRMC
 8001b8e:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 8001b92:	2b00      	cmp	r3, #0
 8001b94:	d10e      	bne.n	8001bb4 <GPS_Parse_NMEA+0x4e0>
                token = strtok_r(NULL, ",", &saveptr);
 8001b96:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 8001b9a:	461a      	mov	r2, r3
 8001b9c:	493a      	ldr	r1, [pc, #232]	@ (8001c88 <GPS_Parse_NMEA+0x5b4>)
 8001b9e:	2000      	movs	r0, #0
 8001ba0:	f002 fcb1 	bl	8004506 <strtok_r>
 8001ba4:	f8c7 0130 	str.w	r0, [r7, #304]	@ 0x130
                field++;
 8001ba8:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 8001bac:	3301      	adds	r3, #1
 8001bae:	f8c7 312c 	str.w	r3, [r7, #300]	@ 0x12c
                continue;
 8001bb2:	e079      	b.n	8001ca8 <GPS_Parse_NMEA+0x5d4>
            }
            else if (field == 1) strncpy(time_str, token, sizeof(time_str) - 1); // Time
 8001bb4:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 8001bb8:	2b01      	cmp	r3, #1
 8001bba:	d108      	bne.n	8001bce <GPS_Parse_NMEA+0x4fa>
 8001bbc:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8001bc0:	220a      	movs	r2, #10
 8001bc2:	f8d7 1130 	ldr.w	r1, [r7, #304]	@ 0x130
 8001bc6:	4618      	mov	r0, r3
 8001bc8:	f002 fc62 	bl	8004490 <strncpy>
 8001bcc:	e05e      	b.n	8001c8c <GPS_Parse_NMEA+0x5b8>
            else if (field == 2) strncpy(status, token, sizeof(status) - 1); // Status
 8001bce:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 8001bd2:	2b02      	cmp	r3, #2
 8001bd4:	d108      	bne.n	8001be8 <GPS_Parse_NMEA+0x514>
 8001bd6:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001bda:	2201      	movs	r2, #1
 8001bdc:	f8d7 1130 	ldr.w	r1, [r7, #304]	@ 0x130
 8001be0:	4618      	mov	r0, r3
 8001be2:	f002 fc55 	bl	8004490 <strncpy>
 8001be6:	e051      	b.n	8001c8c <GPS_Parse_NMEA+0x5b8>
            else if (field == 3) strncpy(lat_str, token, sizeof(lat_str) - 1); // Latitude
 8001be8:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 8001bec:	2b03      	cmp	r3, #3
 8001bee:	d108      	bne.n	8001c02 <GPS_Parse_NMEA+0x52e>
 8001bf0:	f107 031c 	add.w	r3, r7, #28
 8001bf4:	220b      	movs	r2, #11
 8001bf6:	f8d7 1130 	ldr.w	r1, [r7, #304]	@ 0x130
 8001bfa:	4618      	mov	r0, r3
 8001bfc:	f002 fc48 	bl	8004490 <strncpy>
 8001c00:	e044      	b.n	8001c8c <GPS_Parse_NMEA+0x5b8>
            else if (field == 4) strncpy(lat_dir, token, sizeof(lat_dir) - 1); // N/S
 8001c02:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 8001c06:	2b04      	cmp	r3, #4
 8001c08:	d108      	bne.n	8001c1c <GPS_Parse_NMEA+0x548>
 8001c0a:	f107 030c 	add.w	r3, r7, #12
 8001c0e:	2201      	movs	r2, #1
 8001c10:	f8d7 1130 	ldr.w	r1, [r7, #304]	@ 0x130
 8001c14:	4618      	mov	r0, r3
 8001c16:	f002 fc3b 	bl	8004490 <strncpy>
 8001c1a:	e037      	b.n	8001c8c <GPS_Parse_NMEA+0x5b8>
            else if (field == 5) strncpy(lon_str, token, sizeof(lon_str) - 1); // Longitude
 8001c1c:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 8001c20:	2b05      	cmp	r3, #5
 8001c22:	d108      	bne.n	8001c36 <GPS_Parse_NMEA+0x562>
 8001c24:	f107 0310 	add.w	r3, r7, #16
 8001c28:	220b      	movs	r2, #11
 8001c2a:	f8d7 1130 	ldr.w	r1, [r7, #304]	@ 0x130
 8001c2e:	4618      	mov	r0, r3
 8001c30:	f002 fc2e 	bl	8004490 <strncpy>
 8001c34:	e02a      	b.n	8001c8c <GPS_Parse_NMEA+0x5b8>
            else if (field == 6) strncpy(lon_dir, token, sizeof(lon_dir) - 1); // E/W
 8001c36:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 8001c3a:	2b06      	cmp	r3, #6
 8001c3c:	d108      	bne.n	8001c50 <GPS_Parse_NMEA+0x57c>
 8001c3e:	f107 0308 	add.w	r3, r7, #8
 8001c42:	2201      	movs	r2, #1
 8001c44:	f8d7 1130 	ldr.w	r1, [r7, #304]	@ 0x130
 8001c48:	4618      	mov	r0, r3
 8001c4a:	f002 fc21 	bl	8004490 <strncpy>
 8001c4e:	e01d      	b.n	8001c8c <GPS_Parse_NMEA+0x5b8>
            else if (field == 9) {
 8001c50:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 8001c54:	2b09      	cmp	r3, #9
 8001c56:	d119      	bne.n	8001c8c <GPS_Parse_NMEA+0x5b8>
                strncpy(date_str, token, sizeof(date_str) - 1); // Date
 8001c58:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8001c5c:	2206      	movs	r2, #6
 8001c5e:	f8d7 1130 	ldr.w	r1, [r7, #304]	@ 0x130
 8001c62:	4618      	mov	r0, r3
 8001c64:	f002 fc14 	bl	8004490 <strncpy>
                break;
 8001c68:	e027      	b.n	8001cba <GPS_Parse_NMEA+0x5e6>
 8001c6a:	bf00      	nop
 8001c6c:	42c80000 	.word	0x42c80000
 8001c70:	42700000 	.word	0x42700000
 8001c74:	200003f4 	.word	0x200003f4
 8001c78:	080070b0 	.word	0x080070b0
 8001c7c:	200003f0 	.word	0x200003f0
 8001c80:	080070d8 	.word	0x080070d8
 8001c84:	08006f9c 	.word	0x08006f9c
 8001c88:	08007008 	.word	0x08007008
            }
            token = strtok_r(NULL, ",", &saveptr);
 8001c8c:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 8001c90:	461a      	mov	r2, r3
 8001c92:	4930      	ldr	r1, [pc, #192]	@ (8001d54 <GPS_Parse_NMEA+0x680>)
 8001c94:	2000      	movs	r0, #0
 8001c96:	f002 fc36 	bl	8004506 <strtok_r>
 8001c9a:	f8c7 0130 	str.w	r0, [r7, #304]	@ 0x130
            field++;
 8001c9e:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 8001ca2:	3301      	adds	r3, #1
 8001ca4:	f8c7 312c 	str.w	r3, [r7, #300]	@ 0x12c
        while (token != NULL && field <= 9) {
 8001ca8:	f8d7 3130 	ldr.w	r3, [r7, #304]	@ 0x130
 8001cac:	2b00      	cmp	r3, #0
 8001cae:	d004      	beq.n	8001cba <GPS_Parse_NMEA+0x5e6>
 8001cb0:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 8001cb4:	2b09      	cmp	r3, #9
 8001cb6:	f77f af6a 	ble.w	8001b8e <GPS_Parse_NMEA+0x4ba>
        }

        snprintf(debug_buf, sizeof(debug_buf), "Raw GPRMC: status=%s, time=%s, date=%s, lat=%s, lon=%s, lat_dir=%s, lon_dir=%s\r\n",
 8001cba:	f107 0228 	add.w	r2, r7, #40	@ 0x28
 8001cbe:	f107 0064 	add.w	r0, r7, #100	@ 0x64
 8001cc2:	f107 0308 	add.w	r3, r7, #8
 8001cc6:	9305      	str	r3, [sp, #20]
 8001cc8:	f107 030c 	add.w	r3, r7, #12
 8001ccc:	9304      	str	r3, [sp, #16]
 8001cce:	f107 0310 	add.w	r3, r7, #16
 8001cd2:	9303      	str	r3, [sp, #12]
 8001cd4:	f107 031c 	add.w	r3, r7, #28
 8001cd8:	9302      	str	r3, [sp, #8]
 8001cda:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8001cde:	9301      	str	r3, [sp, #4]
 8001ce0:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8001ce4:	9300      	str	r3, [sp, #0]
 8001ce6:	4613      	mov	r3, r2
 8001ce8:	4a1b      	ldr	r2, [pc, #108]	@ (8001d58 <GPS_Parse_NMEA+0x684>)
 8001cea:	2180      	movs	r1, #128	@ 0x80
 8001cec:	f002 fb30 	bl	8004350 <sniprintf>
                 status, time_str, date_str, lat_str, lon_str, lat_dir, lon_dir);
        DEBUG_Print(debug_buf);
 8001cf0:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 8001cf4:	4618      	mov	r0, r3
 8001cf6:	f7ff fbc9 	bl	800148c <DEBUG_Print>

        if (status[0] != 'A' || strlen(time_str) < 6 || strlen(date_str) != 6) {
 8001cfa:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001cfe:	f5a3 738c 	sub.w	r3, r3, #280	@ 0x118
 8001d02:	781b      	ldrb	r3, [r3, #0]
 8001d04:	2b41      	cmp	r3, #65	@ 0x41
 8001d06:	d10f      	bne.n	8001d28 <GPS_Parse_NMEA+0x654>
 8001d08:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8001d0c:	4618      	mov	r0, r3
 8001d0e:	f7fe fa1f 	bl	8000150 <strlen>
 8001d12:	4603      	mov	r3, r0
 8001d14:	2b05      	cmp	r3, #5
 8001d16:	d907      	bls.n	8001d28 <GPS_Parse_NMEA+0x654>
 8001d18:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8001d1c:	4618      	mov	r0, r3
 8001d1e:	f7fe fa17 	bl	8000150 <strlen>
 8001d22:	4603      	mov	r3, r0
 8001d24:	2b06      	cmp	r3, #6
 8001d26:	d01b      	beq.n	8001d60 <GPS_Parse_NMEA+0x68c>
            snprintf(debug_buf, sizeof(debug_buf), "Invalid GPRMC: status=%s, time=%s, date=%s\r\n",
 8001d28:	f107 0228 	add.w	r2, r7, #40	@ 0x28
 8001d2c:	f107 0064 	add.w	r0, r7, #100	@ 0x64
 8001d30:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8001d34:	9301      	str	r3, [sp, #4]
 8001d36:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8001d3a:	9300      	str	r3, [sp, #0]
 8001d3c:	4613      	mov	r3, r2
 8001d3e:	4a07      	ldr	r2, [pc, #28]	@ (8001d5c <GPS_Parse_NMEA+0x688>)
 8001d40:	2180      	movs	r1, #128	@ 0x80
 8001d42:	f002 fb05 	bl	8004350 <sniprintf>
                     status, time_str, date_str);
            DEBUG_Print(debug_buf);
 8001d46:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 8001d4a:	4618      	mov	r0, r3
 8001d4c:	f7ff fb9e 	bl	800148c <DEBUG_Print>
 8001d50:	e17e      	b.n	8002050 <GPS_Parse_NMEA+0x97c>
 8001d52:	bf00      	nop
 8001d54:	08007008 	.word	0x08007008
 8001d58:	080070f0 	.word	0x080070f0
 8001d5c:	08007144 	.word	0x08007144
            return;
        }

        int hour = (time_str[0] - '0') * 10 + (time_str[1] - '0');
 8001d60:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001d64:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 8001d68:	781b      	ldrb	r3, [r3, #0]
 8001d6a:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
 8001d6e:	4613      	mov	r3, r2
 8001d70:	009b      	lsls	r3, r3, #2
 8001d72:	4413      	add	r3, r2
 8001d74:	005b      	lsls	r3, r3, #1
 8001d76:	461a      	mov	r2, r3
 8001d78:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001d7c:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 8001d80:	785b      	ldrb	r3, [r3, #1]
 8001d82:	3b30      	subs	r3, #48	@ 0x30
 8001d84:	4413      	add	r3, r2
 8001d86:	f8c7 3128 	str.w	r3, [r7, #296]	@ 0x128
        int min = (time_str[2] - '0') * 10 + (time_str[3] - '0');
 8001d8a:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001d8e:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 8001d92:	789b      	ldrb	r3, [r3, #2]
 8001d94:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
 8001d98:	4613      	mov	r3, r2
 8001d9a:	009b      	lsls	r3, r3, #2
 8001d9c:	4413      	add	r3, r2
 8001d9e:	005b      	lsls	r3, r3, #1
 8001da0:	461a      	mov	r2, r3
 8001da2:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001da6:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 8001daa:	78db      	ldrb	r3, [r3, #3]
 8001dac:	3b30      	subs	r3, #48	@ 0x30
 8001dae:	4413      	add	r3, r2
 8001db0:	f8c7 3124 	str.w	r3, [r7, #292]	@ 0x124
        int sec = (time_str[4] - '0') * 10 + (time_str[5] - '0');
 8001db4:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001db8:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 8001dbc:	791b      	ldrb	r3, [r3, #4]
 8001dbe:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
 8001dc2:	4613      	mov	r3, r2
 8001dc4:	009b      	lsls	r3, r3, #2
 8001dc6:	4413      	add	r3, r2
 8001dc8:	005b      	lsls	r3, r3, #1
 8001dca:	461a      	mov	r2, r3
 8001dcc:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001dd0:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 8001dd4:	795b      	ldrb	r3, [r3, #5]
 8001dd6:	3b30      	subs	r3, #48	@ 0x30
 8001dd8:	4413      	add	r3, r2
 8001dda:	f8c7 3120 	str.w	r3, [r7, #288]	@ 0x120

        int day = (date_str[0] - '0') * 10 + (date_str[1] - '0');
 8001dde:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001de2:	f5a3 738a 	sub.w	r3, r3, #276	@ 0x114
 8001de6:	781b      	ldrb	r3, [r3, #0]
 8001de8:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
 8001dec:	4613      	mov	r3, r2
 8001dee:	009b      	lsls	r3, r3, #2
 8001df0:	4413      	add	r3, r2
 8001df2:	005b      	lsls	r3, r3, #1
 8001df4:	461a      	mov	r2, r3
 8001df6:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001dfa:	f5a3 738a 	sub.w	r3, r3, #276	@ 0x114
 8001dfe:	785b      	ldrb	r3, [r3, #1]
 8001e00:	3b30      	subs	r3, #48	@ 0x30
 8001e02:	4413      	add	r3, r2
 8001e04:	f8c7 311c 	str.w	r3, [r7, #284]	@ 0x11c
        int month = (date_str[2] - '0') * 10 + (date_str[3] - '0');
 8001e08:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001e0c:	f5a3 738a 	sub.w	r3, r3, #276	@ 0x114
 8001e10:	789b      	ldrb	r3, [r3, #2]
 8001e12:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
 8001e16:	4613      	mov	r3, r2
 8001e18:	009b      	lsls	r3, r3, #2
 8001e1a:	4413      	add	r3, r2
 8001e1c:	005b      	lsls	r3, r3, #1
 8001e1e:	461a      	mov	r2, r3
 8001e20:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001e24:	f5a3 738a 	sub.w	r3, r3, #276	@ 0x114
 8001e28:	78db      	ldrb	r3, [r3, #3]
 8001e2a:	3b30      	subs	r3, #48	@ 0x30
 8001e2c:	4413      	add	r3, r2
 8001e2e:	f8c7 3118 	str.w	r3, [r7, #280]	@ 0x118
        int year = (date_str[4] - '0') * 10 + (date_str[5] - '0') + 2000;
 8001e32:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001e36:	f5a3 738a 	sub.w	r3, r3, #276	@ 0x114
 8001e3a:	791b      	ldrb	r3, [r3, #4]
 8001e3c:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
 8001e40:	4613      	mov	r3, r2
 8001e42:	009b      	lsls	r3, r3, #2
 8001e44:	4413      	add	r3, r2
 8001e46:	005b      	lsls	r3, r3, #1
 8001e48:	461a      	mov	r2, r3
 8001e4a:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001e4e:	f5a3 738a 	sub.w	r3, r3, #276	@ 0x114
 8001e52:	795b      	ldrb	r3, [r3, #5]
 8001e54:	3b30      	subs	r3, #48	@ 0x30
 8001e56:	4413      	add	r3, r2
 8001e58:	f503 63fa 	add.w	r3, r3, #2000	@ 0x7d0
 8001e5c:	f8c7 3114 	str.w	r3, [r7, #276]	@ 0x114

        current_timestamp = calculate_unix_timestamp(year, month, day, hour, min, sec);
 8001e60:	f8d7 3120 	ldr.w	r3, [r7, #288]	@ 0x120
 8001e64:	9301      	str	r3, [sp, #4]
 8001e66:	f8d7 3124 	ldr.w	r3, [r7, #292]	@ 0x124
 8001e6a:	9300      	str	r3, [sp, #0]
 8001e6c:	f8d7 3128 	ldr.w	r3, [r7, #296]	@ 0x128
 8001e70:	f8d7 211c 	ldr.w	r2, [r7, #284]	@ 0x11c
 8001e74:	f8d7 1118 	ldr.w	r1, [r7, #280]	@ 0x118
 8001e78:	f8d7 0114 	ldr.w	r0, [r7, #276]	@ 0x114
 8001e7c:	f7ff fa2a 	bl	80012d4 <calculate_unix_timestamp>
 8001e80:	4603      	mov	r3, r0
 8001e82:	4a75      	ldr	r2, [pc, #468]	@ (8002058 <GPS_Parse_NMEA+0x984>)
 8001e84:	6013      	str	r3, [r2, #0]

        // Update coordinates from GPRMC if GPGGA not available
        if (current_lat == 0.0f || current_lon == 0.0f) {
 8001e86:	4b75      	ldr	r3, [pc, #468]	@ (800205c <GPS_Parse_NMEA+0x988>)
 8001e88:	681b      	ldr	r3, [r3, #0]
 8001e8a:	f04f 0100 	mov.w	r1, #0
 8001e8e:	4618      	mov	r0, r3
 8001e90:	f7ff f90c 	bl	80010ac <__aeabi_fcmpeq>
 8001e94:	4603      	mov	r3, r0
 8001e96:	2b00      	cmp	r3, #0
 8001e98:	d10a      	bne.n	8001eb0 <GPS_Parse_NMEA+0x7dc>
 8001e9a:	4b71      	ldr	r3, [pc, #452]	@ (8002060 <GPS_Parse_NMEA+0x98c>)
 8001e9c:	681b      	ldr	r3, [r3, #0]
 8001e9e:	f04f 0100 	mov.w	r1, #0
 8001ea2:	4618      	mov	r0, r3
 8001ea4:	f7ff f902 	bl	80010ac <__aeabi_fcmpeq>
 8001ea8:	4603      	mov	r3, r0
 8001eaa:	2b00      	cmp	r3, #0
 8001eac:	f000 80b0 	beq.w	8002010 <GPS_Parse_NMEA+0x93c>
            float lat = atof(lat_str);
 8001eb0:	f107 031c 	add.w	r3, r7, #28
 8001eb4:	4618      	mov	r0, r3
 8001eb6:	f000 fe9d 	bl	8002bf4 <atof>
 8001eba:	4602      	mov	r2, r0
 8001ebc:	460b      	mov	r3, r1
 8001ebe:	4610      	mov	r0, r2
 8001ec0:	4619      	mov	r1, r3
 8001ec2:	f7fe fe01 	bl	8000ac8 <__aeabi_d2f>
 8001ec6:	4603      	mov	r3, r0
 8001ec8:	f8c7 3110 	str.w	r3, [r7, #272]	@ 0x110
            int lat_deg = (int)(lat / 100);
 8001ecc:	4965      	ldr	r1, [pc, #404]	@ (8002064 <GPS_Parse_NMEA+0x990>)
 8001ece:	f8d7 0110 	ldr.w	r0, [r7, #272]	@ 0x110
 8001ed2:	f7ff f80b 	bl	8000eec <__aeabi_fdiv>
 8001ed6:	4603      	mov	r3, r0
 8001ed8:	4618      	mov	r0, r3
 8001eda:	f7ff f919 	bl	8001110 <__aeabi_f2iz>
 8001ede:	4603      	mov	r3, r0
 8001ee0:	f8c7 310c 	str.w	r3, [r7, #268]	@ 0x10c
            float lat_min = lat - (lat_deg * 100);
 8001ee4:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8001ee8:	2264      	movs	r2, #100	@ 0x64
 8001eea:	fb02 f303 	mul.w	r3, r2, r3
 8001eee:	4618      	mov	r0, r3
 8001ef0:	f7fe fef4 	bl	8000cdc <__aeabi_i2f>
 8001ef4:	4603      	mov	r3, r0
 8001ef6:	4619      	mov	r1, r3
 8001ef8:	f8d7 0110 	ldr.w	r0, [r7, #272]	@ 0x110
 8001efc:	f7fe fe38 	bl	8000b70 <__aeabi_fsub>
 8001f00:	4603      	mov	r3, r0
 8001f02:	f8c7 3108 	str.w	r3, [r7, #264]	@ 0x108
            if (lat_deg >= 0 && lat_min >= 0.0f) {
 8001f06:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8001f0a:	2b00      	cmp	r3, #0
 8001f0c:	db28      	blt.n	8001f60 <GPS_Parse_NMEA+0x88c>
 8001f0e:	f04f 0100 	mov.w	r1, #0
 8001f12:	f8d7 0108 	ldr.w	r0, [r7, #264]	@ 0x108
 8001f16:	f7ff f8e7 	bl	80010e8 <__aeabi_fcmpge>
 8001f1a:	4603      	mov	r3, r0
 8001f1c:	2b00      	cmp	r3, #0
 8001f1e:	d01f      	beq.n	8001f60 <GPS_Parse_NMEA+0x88c>
                current_lat = lat_deg + lat_min / 60.0f;
 8001f20:	f8d7 010c 	ldr.w	r0, [r7, #268]	@ 0x10c
 8001f24:	f7fe feda 	bl	8000cdc <__aeabi_i2f>
 8001f28:	4604      	mov	r4, r0
 8001f2a:	494f      	ldr	r1, [pc, #316]	@ (8002068 <GPS_Parse_NMEA+0x994>)
 8001f2c:	f8d7 0108 	ldr.w	r0, [r7, #264]	@ 0x108
 8001f30:	f7fe ffdc 	bl	8000eec <__aeabi_fdiv>
 8001f34:	4603      	mov	r3, r0
 8001f36:	4619      	mov	r1, r3
 8001f38:	4620      	mov	r0, r4
 8001f3a:	f7fe fe1b 	bl	8000b74 <__addsf3>
 8001f3e:	4603      	mov	r3, r0
 8001f40:	461a      	mov	r2, r3
 8001f42:	4b46      	ldr	r3, [pc, #280]	@ (800205c <GPS_Parse_NMEA+0x988>)
 8001f44:	601a      	str	r2, [r3, #0]
                if (lat_dir[0] == 'S') current_lat = -current_lat;
 8001f46:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001f4a:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 8001f4e:	781b      	ldrb	r3, [r3, #0]
 8001f50:	2b53      	cmp	r3, #83	@ 0x53
 8001f52:	d105      	bne.n	8001f60 <GPS_Parse_NMEA+0x88c>
 8001f54:	4b41      	ldr	r3, [pc, #260]	@ (800205c <GPS_Parse_NMEA+0x988>)
 8001f56:	681b      	ldr	r3, [r3, #0]
 8001f58:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000
 8001f5c:	4a3f      	ldr	r2, [pc, #252]	@ (800205c <GPS_Parse_NMEA+0x988>)
 8001f5e:	6013      	str	r3, [r2, #0]
            }

            float lon = atof(lon_str);
 8001f60:	f107 0310 	add.w	r3, r7, #16
 8001f64:	4618      	mov	r0, r3
 8001f66:	f000 fe45 	bl	8002bf4 <atof>
 8001f6a:	4602      	mov	r2, r0
 8001f6c:	460b      	mov	r3, r1
 8001f6e:	4610      	mov	r0, r2
 8001f70:	4619      	mov	r1, r3
 8001f72:	f7fe fda9 	bl	8000ac8 <__aeabi_d2f>
 8001f76:	4603      	mov	r3, r0
 8001f78:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
            int lon_deg = (int)(lon / 100);
 8001f7c:	4939      	ldr	r1, [pc, #228]	@ (8002064 <GPS_Parse_NMEA+0x990>)
 8001f7e:	f8d7 0104 	ldr.w	r0, [r7, #260]	@ 0x104
 8001f82:	f7fe ffb3 	bl	8000eec <__aeabi_fdiv>
 8001f86:	4603      	mov	r3, r0
 8001f88:	4618      	mov	r0, r3
 8001f8a:	f7ff f8c1 	bl	8001110 <__aeabi_f2iz>
 8001f8e:	4603      	mov	r3, r0
 8001f90:	f8c7 3100 	str.w	r3, [r7, #256]	@ 0x100
            float lon_min = lon - (lon_deg * 100);
 8001f94:	f8d7 3100 	ldr.w	r3, [r7, #256]	@ 0x100
 8001f98:	2264      	movs	r2, #100	@ 0x64
 8001f9a:	fb02 f303 	mul.w	r3, r2, r3
 8001f9e:	4618      	mov	r0, r3
 8001fa0:	f7fe fe9c 	bl	8000cdc <__aeabi_i2f>
 8001fa4:	4603      	mov	r3, r0
 8001fa6:	4619      	mov	r1, r3
 8001fa8:	f8d7 0104 	ldr.w	r0, [r7, #260]	@ 0x104
 8001fac:	f7fe fde0 	bl	8000b70 <__aeabi_fsub>
 8001fb0:	4603      	mov	r3, r0
 8001fb2:	f8c7 30fc 	str.w	r3, [r7, #252]	@ 0xfc
            if (lon_deg >= 0 && lon_min >= 0.0f) {
 8001fb6:	f8d7 3100 	ldr.w	r3, [r7, #256]	@ 0x100
 8001fba:	2b00      	cmp	r3, #0
 8001fbc:	db28      	blt.n	8002010 <GPS_Parse_NMEA+0x93c>
 8001fbe:	f04f 0100 	mov.w	r1, #0
 8001fc2:	f8d7 00fc 	ldr.w	r0, [r7, #252]	@ 0xfc
 8001fc6:	f7ff f88f 	bl	80010e8 <__aeabi_fcmpge>
 8001fca:	4603      	mov	r3, r0
 8001fcc:	2b00      	cmp	r3, #0
 8001fce:	d01f      	beq.n	8002010 <GPS_Parse_NMEA+0x93c>
                current_lon = lon_deg + lon_min / 60.0f;
 8001fd0:	f8d7 0100 	ldr.w	r0, [r7, #256]	@ 0x100
 8001fd4:	f7fe fe82 	bl	8000cdc <__aeabi_i2f>
 8001fd8:	4604      	mov	r4, r0
 8001fda:	4923      	ldr	r1, [pc, #140]	@ (8002068 <GPS_Parse_NMEA+0x994>)
 8001fdc:	f8d7 00fc 	ldr.w	r0, [r7, #252]	@ 0xfc
 8001fe0:	f7fe ff84 	bl	8000eec <__aeabi_fdiv>
 8001fe4:	4603      	mov	r3, r0
 8001fe6:	4619      	mov	r1, r3
 8001fe8:	4620      	mov	r0, r4
 8001fea:	f7fe fdc3 	bl	8000b74 <__addsf3>
 8001fee:	4603      	mov	r3, r0
 8001ff0:	461a      	mov	r2, r3
 8001ff2:	4b1b      	ldr	r3, [pc, #108]	@ (8002060 <GPS_Parse_NMEA+0x98c>)
 8001ff4:	601a      	str	r2, [r3, #0]
                if (lon_dir[0] == 'W') current_lon = -current_lon;
 8001ff6:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8001ffa:	f5a3 739c 	sub.w	r3, r3, #312	@ 0x138
 8001ffe:	781b      	ldrb	r3, [r3, #0]
 8002000:	2b57      	cmp	r3, #87	@ 0x57
 8002002:	d105      	bne.n	8002010 <GPS_Parse_NMEA+0x93c>
 8002004:	4b16      	ldr	r3, [pc, #88]	@ (8002060 <GPS_Parse_NMEA+0x98c>)
 8002006:	681b      	ldr	r3, [r3, #0]
 8002008:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000
 800200c:	4a14      	ldr	r2, [pc, #80]	@ (8002060 <GPS_Parse_NMEA+0x98c>)
 800200e:	6013      	str	r3, [r2, #0]
            }
        }

        snprintf(debug_buf, sizeof(debug_buf), "Timestamp: %lu, Lat: %.6f, Lon: %.6f\r\n",
 8002010:	4b11      	ldr	r3, [pc, #68]	@ (8002058 <GPS_Parse_NMEA+0x984>)
 8002012:	681e      	ldr	r6, [r3, #0]
 8002014:	4b11      	ldr	r3, [pc, #68]	@ (800205c <GPS_Parse_NMEA+0x988>)
 8002016:	681b      	ldr	r3, [r3, #0]
 8002018:	4618      	mov	r0, r3
 800201a:	f7fe fa05 	bl	8000428 <__aeabi_f2d>
 800201e:	4604      	mov	r4, r0
 8002020:	460d      	mov	r5, r1
 8002022:	4b0f      	ldr	r3, [pc, #60]	@ (8002060 <GPS_Parse_NMEA+0x98c>)
 8002024:	681b      	ldr	r3, [r3, #0]
 8002026:	4618      	mov	r0, r3
 8002028:	f7fe f9fe 	bl	8000428 <__aeabi_f2d>
 800202c:	4602      	mov	r2, r0
 800202e:	460b      	mov	r3, r1
 8002030:	f107 0064 	add.w	r0, r7, #100	@ 0x64
 8002034:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002038:	e9cd 4500 	strd	r4, r5, [sp]
 800203c:	4633      	mov	r3, r6
 800203e:	4a0b      	ldr	r2, [pc, #44]	@ (800206c <GPS_Parse_NMEA+0x998>)
 8002040:	2180      	movs	r1, #128	@ 0x80
 8002042:	f002 f985 	bl	8004350 <sniprintf>
                 current_timestamp, current_lat, current_lon);
        DEBUG_Print(debug_buf);
 8002046:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 800204a:	4618      	mov	r0, r3
 800204c:	f7ff fa1e 	bl	800148c <DEBUG_Print>
    }
}
 8002050:	f507 77a2 	add.w	r7, r7, #324	@ 0x144
 8002054:	46bd      	mov	sp, r7
 8002056:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002058:	200003f8 	.word	0x200003f8
 800205c:	200003f0 	.word	0x200003f0
 8002060:	200003f4 	.word	0x200003f4
 8002064:	42c80000 	.word	0x42c80000
 8002068:	42700000 	.word	0x42700000
 800206c:	08007174 	.word	0x08007174

08002070 <is_point_in_polygon>:

static int is_point_in_polygon(Point p, const Point* poly, int n) {
 8002070:	b5b0      	push	{r4, r5, r7, lr}
 8002072:	b088      	sub	sp, #32
 8002074:	af00      	add	r7, sp, #0
 8002076:	f107 0408 	add.w	r4, r7, #8
 800207a:	e884 0003 	stmia.w	r4, {r0, r1}
 800207e:	607a      	str	r2, [r7, #4]
 8002080:	603b      	str	r3, [r7, #0]
    int i, j, c = 0;
 8002082:	2300      	movs	r3, #0
 8002084:	617b      	str	r3, [r7, #20]
    for (i = 0, j = n - 1; i < n; j = i++) {
 8002086:	2300      	movs	r3, #0
 8002088:	61fb      	str	r3, [r7, #28]
 800208a:	683b      	ldr	r3, [r7, #0]
 800208c:	3b01      	subs	r3, #1
 800208e:	61bb      	str	r3, [r7, #24]
 8002090:	e076      	b.n	8002180 <is_point_in_polygon+0x110>
        if (((poly[i].lat > p.lat) != (poly[j].lat > p.lat)) &&
 8002092:	69fb      	ldr	r3, [r7, #28]
 8002094:	00db      	lsls	r3, r3, #3
 8002096:	687a      	ldr	r2, [r7, #4]
 8002098:	4413      	add	r3, r2
 800209a:	681b      	ldr	r3, [r3, #0]
 800209c:	68ba      	ldr	r2, [r7, #8]
 800209e:	2101      	movs	r1, #1
 80020a0:	460c      	mov	r4, r1
 80020a2:	4611      	mov	r1, r2
 80020a4:	4618      	mov	r0, r3
 80020a6:	f7ff f829 	bl	80010fc <__aeabi_fcmpgt>
 80020aa:	4603      	mov	r3, r0
 80020ac:	2b00      	cmp	r3, #0
 80020ae:	d101      	bne.n	80020b4 <is_point_in_polygon+0x44>
 80020b0:	2300      	movs	r3, #0
 80020b2:	461c      	mov	r4, r3
 80020b4:	b2e4      	uxtb	r4, r4
 80020b6:	69bb      	ldr	r3, [r7, #24]
 80020b8:	00db      	lsls	r3, r3, #3
 80020ba:	687a      	ldr	r2, [r7, #4]
 80020bc:	4413      	add	r3, r2
 80020be:	681b      	ldr	r3, [r3, #0]
 80020c0:	68ba      	ldr	r2, [r7, #8]
 80020c2:	2101      	movs	r1, #1
 80020c4:	460d      	mov	r5, r1
 80020c6:	4611      	mov	r1, r2
 80020c8:	4618      	mov	r0, r3
 80020ca:	f7ff f817 	bl	80010fc <__aeabi_fcmpgt>
 80020ce:	4603      	mov	r3, r0
 80020d0:	2b00      	cmp	r3, #0
 80020d2:	d101      	bne.n	80020d8 <is_point_in_polygon+0x68>
 80020d4:	2300      	movs	r3, #0
 80020d6:	461d      	mov	r5, r3
 80020d8:	b2eb      	uxtb	r3, r5
 80020da:	4063      	eors	r3, r4
 80020dc:	b2db      	uxtb	r3, r3
 80020de:	2b00      	cmp	r3, #0
 80020e0:	d04a      	beq.n	8002178 <is_point_in_polygon+0x108>
            (p.lon < (poly[j].lon - poly[i].lon) * (p.lat - poly[i].lat) /
 80020e2:	68fc      	ldr	r4, [r7, #12]
 80020e4:	69bb      	ldr	r3, [r7, #24]
 80020e6:	00db      	lsls	r3, r3, #3
 80020e8:	687a      	ldr	r2, [r7, #4]
 80020ea:	4413      	add	r3, r2
 80020ec:	6858      	ldr	r0, [r3, #4]
 80020ee:	69fb      	ldr	r3, [r7, #28]
 80020f0:	00db      	lsls	r3, r3, #3
 80020f2:	687a      	ldr	r2, [r7, #4]
 80020f4:	4413      	add	r3, r2
 80020f6:	685b      	ldr	r3, [r3, #4]
 80020f8:	4619      	mov	r1, r3
 80020fa:	f7fe fd39 	bl	8000b70 <__aeabi_fsub>
 80020fe:	4603      	mov	r3, r0
 8002100:	461d      	mov	r5, r3
 8002102:	68b8      	ldr	r0, [r7, #8]
 8002104:	69fb      	ldr	r3, [r7, #28]
 8002106:	00db      	lsls	r3, r3, #3
 8002108:	687a      	ldr	r2, [r7, #4]
 800210a:	4413      	add	r3, r2
 800210c:	681b      	ldr	r3, [r3, #0]
 800210e:	4619      	mov	r1, r3
 8002110:	f7fe fd2e 	bl	8000b70 <__aeabi_fsub>
 8002114:	4603      	mov	r3, r0
 8002116:	4619      	mov	r1, r3
 8002118:	4628      	mov	r0, r5
 800211a:	f7fe fe33 	bl	8000d84 <__aeabi_fmul>
 800211e:	4603      	mov	r3, r0
 8002120:	461d      	mov	r5, r3
             (poly[j].lat - poly[i].lat) + poly[i].lon)) {
 8002122:	69bb      	ldr	r3, [r7, #24]
 8002124:	00db      	lsls	r3, r3, #3
 8002126:	687a      	ldr	r2, [r7, #4]
 8002128:	4413      	add	r3, r2
 800212a:	6818      	ldr	r0, [r3, #0]
 800212c:	69fb      	ldr	r3, [r7, #28]
 800212e:	00db      	lsls	r3, r3, #3
 8002130:	687a      	ldr	r2, [r7, #4]
 8002132:	4413      	add	r3, r2
 8002134:	681b      	ldr	r3, [r3, #0]
 8002136:	4619      	mov	r1, r3
 8002138:	f7fe fd1a 	bl	8000b70 <__aeabi_fsub>
 800213c:	4603      	mov	r3, r0
            (p.lon < (poly[j].lon - poly[i].lon) * (p.lat - poly[i].lat) /
 800213e:	4619      	mov	r1, r3
 8002140:	4628      	mov	r0, r5
 8002142:	f7fe fed3 	bl	8000eec <__aeabi_fdiv>
 8002146:	4603      	mov	r3, r0
 8002148:	4618      	mov	r0, r3
             (poly[j].lat - poly[i].lat) + poly[i].lon)) {
 800214a:	69fb      	ldr	r3, [r7, #28]
 800214c:	00db      	lsls	r3, r3, #3
 800214e:	687a      	ldr	r2, [r7, #4]
 8002150:	4413      	add	r3, r2
 8002152:	685b      	ldr	r3, [r3, #4]
 8002154:	4619      	mov	r1, r3
 8002156:	f7fe fd0d 	bl	8000b74 <__addsf3>
 800215a:	4603      	mov	r3, r0
        if (((poly[i].lat > p.lat) != (poly[j].lat > p.lat)) &&
 800215c:	4619      	mov	r1, r3
 800215e:	4620      	mov	r0, r4
 8002160:	f7fe ffae 	bl	80010c0 <__aeabi_fcmplt>
 8002164:	4603      	mov	r3, r0
 8002166:	2b00      	cmp	r3, #0
 8002168:	d006      	beq.n	8002178 <is_point_in_polygon+0x108>
            c = !c;
 800216a:	697b      	ldr	r3, [r7, #20]
 800216c:	2b00      	cmp	r3, #0
 800216e:	bf0c      	ite	eq
 8002170:	2301      	moveq	r3, #1
 8002172:	2300      	movne	r3, #0
 8002174:	b2db      	uxtb	r3, r3
 8002176:	617b      	str	r3, [r7, #20]
    for (i = 0, j = n - 1; i < n; j = i++) {
 8002178:	69fb      	ldr	r3, [r7, #28]
 800217a:	1c5a      	adds	r2, r3, #1
 800217c:	61fa      	str	r2, [r7, #28]
 800217e:	61bb      	str	r3, [r7, #24]
 8002180:	69fa      	ldr	r2, [r7, #28]
 8002182:	683b      	ldr	r3, [r7, #0]
 8002184:	429a      	cmp	r2, r3
 8002186:	db84      	blt.n	8002092 <is_point_in_polygon+0x22>
        }
    }
    return c;
 8002188:	697b      	ldr	r3, [r7, #20]
}
 800218a:	4618      	mov	r0, r3
 800218c:	3720      	adds	r7, #32
 800218e:	46bd      	mov	sp, r7
 8002190:	bdb0      	pop	{r4, r5, r7, pc}

08002192 <GPS_Init>:

void GPS_Init(void) {
 8002192:	b580      	push	{r7, lr}
 8002194:	af00      	add	r7, sp, #0
    DEBUG_UART_Init();
 8002196:	f7ff f945 	bl	8001424 <DEBUG_UART_Init>
    GPS_UART_Init();
 800219a:	f7ff f995 	bl	80014c8 <GPS_UART_Init>
}
 800219e:	bf00      	nop
 80021a0:	bd80      	pop	{r7, pc}
	...

080021a4 <GPS_Get_Timestamp>:

uint32_t GPS_Get_Timestamp(void) {
 80021a4:	b480      	push	{r7}
 80021a6:	af00      	add	r7, sp, #0
    return current_timestamp;
 80021a8:	4b02      	ldr	r3, [pc, #8]	@ (80021b4 <GPS_Get_Timestamp+0x10>)
 80021aa:	681b      	ldr	r3, [r3, #0]
}
 80021ac:	4618      	mov	r0, r3
 80021ae:	46bd      	mov	sp, r7
 80021b0:	bc80      	pop	{r7}
 80021b2:	4770      	bx	lr
 80021b4:	200003f8 	.word	0x200003f8

080021b8 <GPS_Check_Geofence>:

void GPS_Check_Geofence(uint8_t dev_id, uint32_t timestamp) {
 80021b8:	b5b0      	push	{r4, r5, r7, lr}
 80021ba:	b0aa      	sub	sp, #168	@ 0xa8
 80021bc:	af04      	add	r7, sp, #16
 80021be:	4603      	mov	r3, r0
 80021c0:	6039      	str	r1, [r7, #0]
 80021c2:	71fb      	strb	r3, [r7, #7]
    char debug_buf[128];
    Point p = {current_lat, current_lon};
 80021c4:	4b4b      	ldr	r3, [pc, #300]	@ (80022f4 <GPS_Check_Geofence+0x13c>)
 80021c6:	681b      	ldr	r3, [r3, #0]
 80021c8:	60fb      	str	r3, [r7, #12]
 80021ca:	4b4b      	ldr	r3, [pc, #300]	@ (80022f8 <GPS_Check_Geofence+0x140>)
 80021cc:	681b      	ldr	r3, [r3, #0]
 80021ce:	613b      	str	r3, [r7, #16]
    if (current_lat == 0.0f || current_lon == 0.0f) {
 80021d0:	4b48      	ldr	r3, [pc, #288]	@ (80022f4 <GPS_Check_Geofence+0x13c>)
 80021d2:	681b      	ldr	r3, [r3, #0]
 80021d4:	f04f 0100 	mov.w	r1, #0
 80021d8:	4618      	mov	r0, r3
 80021da:	f7fe ff67 	bl	80010ac <__aeabi_fcmpeq>
 80021de:	4603      	mov	r3, r0
 80021e0:	2b00      	cmp	r3, #0
 80021e2:	d109      	bne.n	80021f8 <GPS_Check_Geofence+0x40>
 80021e4:	4b44      	ldr	r3, [pc, #272]	@ (80022f8 <GPS_Check_Geofence+0x140>)
 80021e6:	681b      	ldr	r3, [r3, #0]
 80021e8:	f04f 0100 	mov.w	r1, #0
 80021ec:	4618      	mov	r0, r3
 80021ee:	f7fe ff5d 	bl	80010ac <__aeabi_fcmpeq>
 80021f2:	4603      	mov	r3, r0
 80021f4:	2b00      	cmp	r3, #0
 80021f6:	d021      	beq.n	800223c <GPS_Check_Geofence+0x84>
        LED_ERR_ON();
 80021f8:	f000 f8e6 	bl	80023c8 <LED_ERR_ON>
        LED_SEND_OFF();
 80021fc:	f000 f8fc 	bl	80023f8 <LED_SEND_OFF>
        snprintf(debug_buf, sizeof(debug_buf), "No GPS fix: lat=%.6f, lon=%.6f\r\n", current_lat, current_lon);
 8002200:	4b3c      	ldr	r3, [pc, #240]	@ (80022f4 <GPS_Check_Geofence+0x13c>)
 8002202:	681b      	ldr	r3, [r3, #0]
 8002204:	4618      	mov	r0, r3
 8002206:	f7fe f90f 	bl	8000428 <__aeabi_f2d>
 800220a:	4604      	mov	r4, r0
 800220c:	460d      	mov	r5, r1
 800220e:	4b3a      	ldr	r3, [pc, #232]	@ (80022f8 <GPS_Check_Geofence+0x140>)
 8002210:	681b      	ldr	r3, [r3, #0]
 8002212:	4618      	mov	r0, r3
 8002214:	f7fe f908 	bl	8000428 <__aeabi_f2d>
 8002218:	4602      	mov	r2, r0
 800221a:	460b      	mov	r3, r1
 800221c:	f107 0014 	add.w	r0, r7, #20
 8002220:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002224:	e9cd 4500 	strd	r4, r5, [sp]
 8002228:	4a34      	ldr	r2, [pc, #208]	@ (80022fc <GPS_Check_Geofence+0x144>)
 800222a:	2180      	movs	r1, #128	@ 0x80
 800222c:	f002 f890 	bl	8004350 <sniprintf>
        DEBUG_Print(debug_buf);
 8002230:	f107 0314 	add.w	r3, r7, #20
 8002234:	4618      	mov	r0, r3
 8002236:	f7ff f929 	bl	800148c <DEBUG_Print>
 800223a:	e058      	b.n	80022ee <GPS_Check_Geofence+0x136>
        return;
    }
    LED_ERR_OFF();
 800223c:	f000 f8d0 	bl	80023e0 <LED_ERR_OFF>
    int inside = is_point_in_polygon(p, fence, 4);
 8002240:	2304      	movs	r3, #4
 8002242:	4a2f      	ldr	r2, [pc, #188]	@ (8002300 <GPS_Check_Geofence+0x148>)
 8002244:	f107 010c 	add.w	r1, r7, #12
 8002248:	c903      	ldmia	r1, {r0, r1}
 800224a:	f7ff ff11 	bl	8002070 <is_point_in_polygon>
 800224e:	f8c7 0094 	str.w	r0, [r7, #148]	@ 0x94

    if (inside) {
 8002252:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 8002256:	2b00      	cmp	r3, #0
 8002258:	d01f      	beq.n	800229a <GPS_Check_Geofence+0xe2>
        LED_SEND_OFF();
 800225a:	f000 f8cd 	bl	80023f8 <LED_SEND_OFF>
        snprintf(debug_buf, sizeof(debug_buf), "Inside fence: lat=%.6f, lon=%.6f\r\n", current_lat, current_lon);
 800225e:	4b25      	ldr	r3, [pc, #148]	@ (80022f4 <GPS_Check_Geofence+0x13c>)
 8002260:	681b      	ldr	r3, [r3, #0]
 8002262:	4618      	mov	r0, r3
 8002264:	f7fe f8e0 	bl	8000428 <__aeabi_f2d>
 8002268:	4604      	mov	r4, r0
 800226a:	460d      	mov	r5, r1
 800226c:	4b22      	ldr	r3, [pc, #136]	@ (80022f8 <GPS_Check_Geofence+0x140>)
 800226e:	681b      	ldr	r3, [r3, #0]
 8002270:	4618      	mov	r0, r3
 8002272:	f7fe f8d9 	bl	8000428 <__aeabi_f2d>
 8002276:	4602      	mov	r2, r0
 8002278:	460b      	mov	r3, r1
 800227a:	f107 0014 	add.w	r0, r7, #20
 800227e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002282:	e9cd 4500 	strd	r4, r5, [sp]
 8002286:	4a1f      	ldr	r2, [pc, #124]	@ (8002304 <GPS_Check_Geofence+0x14c>)
 8002288:	2180      	movs	r1, #128	@ 0x80
 800228a:	f002 f861 	bl	8004350 <sniprintf>
        DEBUG_Print(debug_buf);
 800228e:	f107 0314 	add.w	r3, r7, #20
 8002292:	4618      	mov	r0, r3
 8002294:	f7ff f8fa 	bl	800148c <DEBUG_Print>
 8002298:	e029      	b.n	80022ee <GPS_Check_Geofence+0x136>
    } else {
        LED_SEND_TOGGLE();
 800229a:	f000 f8b9 	bl	8002410 <LED_SEND_TOGGLE>
        delay_ms(100);
 800229e:	2064      	movs	r0, #100	@ 0x64
 80022a0:	f000 fc5c 	bl	8002b5c <delay_ms>
        lora_prepare_and_send(dev_id, timestamp, current_lat, current_lon);
 80022a4:	4b13      	ldr	r3, [pc, #76]	@ (80022f4 <GPS_Check_Geofence+0x13c>)
 80022a6:	681a      	ldr	r2, [r3, #0]
 80022a8:	4b13      	ldr	r3, [pc, #76]	@ (80022f8 <GPS_Check_Geofence+0x140>)
 80022aa:	681b      	ldr	r3, [r3, #0]
 80022ac:	79f8      	ldrb	r0, [r7, #7]
 80022ae:	6839      	ldr	r1, [r7, #0]
 80022b0:	f000 fa20 	bl	80026f4 <lora_prepare_and_send>
        snprintf(debug_buf, sizeof(debug_buf), "Outside fence: lat=%.6f, lon=%.6f\r\n", current_lat, current_lon);
 80022b4:	4b0f      	ldr	r3, [pc, #60]	@ (80022f4 <GPS_Check_Geofence+0x13c>)
 80022b6:	681b      	ldr	r3, [r3, #0]
 80022b8:	4618      	mov	r0, r3
 80022ba:	f7fe f8b5 	bl	8000428 <__aeabi_f2d>
 80022be:	4604      	mov	r4, r0
 80022c0:	460d      	mov	r5, r1
 80022c2:	4b0d      	ldr	r3, [pc, #52]	@ (80022f8 <GPS_Check_Geofence+0x140>)
 80022c4:	681b      	ldr	r3, [r3, #0]
 80022c6:	4618      	mov	r0, r3
 80022c8:	f7fe f8ae 	bl	8000428 <__aeabi_f2d>
 80022cc:	4602      	mov	r2, r0
 80022ce:	460b      	mov	r3, r1
 80022d0:	f107 0014 	add.w	r0, r7, #20
 80022d4:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80022d8:	e9cd 4500 	strd	r4, r5, [sp]
 80022dc:	4a0a      	ldr	r2, [pc, #40]	@ (8002308 <GPS_Check_Geofence+0x150>)
 80022de:	2180      	movs	r1, #128	@ 0x80
 80022e0:	f002 f836 	bl	8004350 <sniprintf>
        DEBUG_Print(debug_buf);
 80022e4:	f107 0314 	add.w	r3, r7, #20
 80022e8:	4618      	mov	r0, r3
 80022ea:	f7ff f8cf 	bl	800148c <DEBUG_Print>
    }
}
 80022ee:	3798      	adds	r7, #152	@ 0x98
 80022f0:	46bd      	mov	sp, r7
 80022f2:	bdb0      	pop	{r4, r5, r7, pc}
 80022f4:	200003f0 	.word	0x200003f0
 80022f8:	200003f4 	.word	0x200003f4
 80022fc:	0800719c 	.word	0x0800719c
 8002300:	08007208 	.word	0x08007208
 8002304:	080071c0 	.word	0x080071c0
 8002308:	080071e4 	.word	0x080071e4

0800230c <LED_Init>:
#include "led.h"

void LED_Init(void) {
 800230c:	b480      	push	{r7}
 800230e:	af00      	add	r7, sp, #0
    RCC->APB2ENR |= RCC_APB2ENR_IOPBEN;
 8002310:	4b1e      	ldr	r3, [pc, #120]	@ (800238c <LED_Init+0x80>)
 8002312:	699b      	ldr	r3, [r3, #24]
 8002314:	4a1d      	ldr	r2, [pc, #116]	@ (800238c <LED_Init+0x80>)
 8002316:	f043 0308 	orr.w	r3, r3, #8
 800231a:	6193      	str	r3, [r2, #24]

    // PB0, PB1, PB10, PB11: output push-pull 2MHz
    GPIOB->CRL &= ~(GPIO_CRL_CNF0 | GPIO_CRL_MODE0);
 800231c:	4b1c      	ldr	r3, [pc, #112]	@ (8002390 <LED_Init+0x84>)
 800231e:	681b      	ldr	r3, [r3, #0]
 8002320:	4a1b      	ldr	r2, [pc, #108]	@ (8002390 <LED_Init+0x84>)
 8002322:	f023 030f 	bic.w	r3, r3, #15
 8002326:	6013      	str	r3, [r2, #0]
    GPIOB->CRL |=  (GPIO_CRL_MODE0_1); // PB0: LED_POWER
 8002328:	4b19      	ldr	r3, [pc, #100]	@ (8002390 <LED_Init+0x84>)
 800232a:	681b      	ldr	r3, [r3, #0]
 800232c:	4a18      	ldr	r2, [pc, #96]	@ (8002390 <LED_Init+0x84>)
 800232e:	f043 0302 	orr.w	r3, r3, #2
 8002332:	6013      	str	r3, [r2, #0]

    GPIOB->CRL &= ~(GPIO_CRL_CNF1 | GPIO_CRL_MODE1);
 8002334:	4b16      	ldr	r3, [pc, #88]	@ (8002390 <LED_Init+0x84>)
 8002336:	681b      	ldr	r3, [r3, #0]
 8002338:	4a15      	ldr	r2, [pc, #84]	@ (8002390 <LED_Init+0x84>)
 800233a:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800233e:	6013      	str	r3, [r2, #0]
    GPIOB->CRL |=  (GPIO_CRL_MODE1_1); // PB1: LED_OK
 8002340:	4b13      	ldr	r3, [pc, #76]	@ (8002390 <LED_Init+0x84>)
 8002342:	681b      	ldr	r3, [r3, #0]
 8002344:	4a12      	ldr	r2, [pc, #72]	@ (8002390 <LED_Init+0x84>)
 8002346:	f043 0320 	orr.w	r3, r3, #32
 800234a:	6013      	str	r3, [r2, #0]

    GPIOB->CRH &= ~(GPIO_CRH_CNF10 | GPIO_CRH_MODE10);
 800234c:	4b10      	ldr	r3, [pc, #64]	@ (8002390 <LED_Init+0x84>)
 800234e:	685b      	ldr	r3, [r3, #4]
 8002350:	4a0f      	ldr	r2, [pc, #60]	@ (8002390 <LED_Init+0x84>)
 8002352:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8002356:	6053      	str	r3, [r2, #4]
    GPIOB->CRH |=  (GPIO_CRH_MODE10_1); // PB10: LED_SEND
 8002358:	4b0d      	ldr	r3, [pc, #52]	@ (8002390 <LED_Init+0x84>)
 800235a:	685b      	ldr	r3, [r3, #4]
 800235c:	4a0c      	ldr	r2, [pc, #48]	@ (8002390 <LED_Init+0x84>)
 800235e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002362:	6053      	str	r3, [r2, #4]

    GPIOB->CRH &= ~(GPIO_CRH_CNF11 | GPIO_CRH_MODE11);
 8002364:	4b0a      	ldr	r3, [pc, #40]	@ (8002390 <LED_Init+0x84>)
 8002366:	685b      	ldr	r3, [r3, #4]
 8002368:	4a09      	ldr	r2, [pc, #36]	@ (8002390 <LED_Init+0x84>)
 800236a:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 800236e:	6053      	str	r3, [r2, #4]
    GPIOB->CRH |=  (GPIO_CRH_MODE11_1); // PB11: LED_ERR
 8002370:	4b07      	ldr	r3, [pc, #28]	@ (8002390 <LED_Init+0x84>)
 8002372:	685b      	ldr	r3, [r3, #4]
 8002374:	4a06      	ldr	r2, [pc, #24]	@ (8002390 <LED_Init+0x84>)
 8002376:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 800237a:	6053      	str	r3, [r2, #4]

    // Tắt tất cả LED ban đầu
    GPIOB->BSRR = GPIO_BSRR_BR0 | GPIO_BSRR_BR1 | GPIO_BSRR_BR10 | GPIO_BSRR_BR11;
 800237c:	4b04      	ldr	r3, [pc, #16]	@ (8002390 <LED_Init+0x84>)
 800237e:	4a05      	ldr	r2, [pc, #20]	@ (8002394 <LED_Init+0x88>)
 8002380:	611a      	str	r2, [r3, #16]
}
 8002382:	bf00      	nop
 8002384:	46bd      	mov	sp, r7
 8002386:	bc80      	pop	{r7}
 8002388:	4770      	bx	lr
 800238a:	bf00      	nop
 800238c:	40021000 	.word	0x40021000
 8002390:	40010c00 	.word	0x40010c00
 8002394:	0c030000 	.word	0x0c030000

08002398 <LED_POWER_ON>:

void LED_POWER_ON(void) {
 8002398:	b480      	push	{r7}
 800239a:	af00      	add	r7, sp, #0
    GPIOB->BSRR = GPIO_BSRR_BS0;
 800239c:	4b03      	ldr	r3, [pc, #12]	@ (80023ac <LED_POWER_ON+0x14>)
 800239e:	2201      	movs	r2, #1
 80023a0:	611a      	str	r2, [r3, #16]
}
 80023a2:	bf00      	nop
 80023a4:	46bd      	mov	sp, r7
 80023a6:	bc80      	pop	{r7}
 80023a8:	4770      	bx	lr
 80023aa:	bf00      	nop
 80023ac:	40010c00 	.word	0x40010c00

080023b0 <LED_OK_ON>:

void LED_POWER_OFF(void) {
    GPIOB->BSRR = GPIO_BSRR_BR0;
}

void LED_OK_ON(void) {
 80023b0:	b480      	push	{r7}
 80023b2:	af00      	add	r7, sp, #0
    GPIOB->BSRR = GPIO_BSRR_BS1;
 80023b4:	4b03      	ldr	r3, [pc, #12]	@ (80023c4 <LED_OK_ON+0x14>)
 80023b6:	2202      	movs	r2, #2
 80023b8:	611a      	str	r2, [r3, #16]
}
 80023ba:	bf00      	nop
 80023bc:	46bd      	mov	sp, r7
 80023be:	bc80      	pop	{r7}
 80023c0:	4770      	bx	lr
 80023c2:	bf00      	nop
 80023c4:	40010c00 	.word	0x40010c00

080023c8 <LED_ERR_ON>:

void LED_OK_OFF(void) {
    GPIOB->BSRR = GPIO_BSRR_BR1;
}

void LED_ERR_ON(void) {
 80023c8:	b480      	push	{r7}
 80023ca:	af00      	add	r7, sp, #0
    GPIOB->BSRR = GPIO_BSRR_BS11;
 80023cc:	4b03      	ldr	r3, [pc, #12]	@ (80023dc <LED_ERR_ON+0x14>)
 80023ce:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 80023d2:	611a      	str	r2, [r3, #16]
}
 80023d4:	bf00      	nop
 80023d6:	46bd      	mov	sp, r7
 80023d8:	bc80      	pop	{r7}
 80023da:	4770      	bx	lr
 80023dc:	40010c00 	.word	0x40010c00

080023e0 <LED_ERR_OFF>:

void LED_ERR_OFF(void) {
 80023e0:	b480      	push	{r7}
 80023e2:	af00      	add	r7, sp, #0
    GPIOB->BSRR = GPIO_BSRR_BR11;
 80023e4:	4b03      	ldr	r3, [pc, #12]	@ (80023f4 <LED_ERR_OFF+0x14>)
 80023e6:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 80023ea:	611a      	str	r2, [r3, #16]
}
 80023ec:	bf00      	nop
 80023ee:	46bd      	mov	sp, r7
 80023f0:	bc80      	pop	{r7}
 80023f2:	4770      	bx	lr
 80023f4:	40010c00 	.word	0x40010c00

080023f8 <LED_SEND_OFF>:

void LED_SEND_ON(void) {
    GPIOB->BSRR = GPIO_BSRR_BS10;
}

void LED_SEND_OFF(void) {
 80023f8:	b480      	push	{r7}
 80023fa:	af00      	add	r7, sp, #0
    GPIOB->BSRR = GPIO_BSRR_BR10;
 80023fc:	4b03      	ldr	r3, [pc, #12]	@ (800240c <LED_SEND_OFF+0x14>)
 80023fe:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8002402:	611a      	str	r2, [r3, #16]
}
 8002404:	bf00      	nop
 8002406:	46bd      	mov	sp, r7
 8002408:	bc80      	pop	{r7}
 800240a:	4770      	bx	lr
 800240c:	40010c00 	.word	0x40010c00

08002410 <LED_SEND_TOGGLE>:

void LED_SEND_TOGGLE(void) {
 8002410:	b480      	push	{r7}
 8002412:	af00      	add	r7, sp, #0
    GPIOB->ODR ^= (1 << 10); // Toggle PB10
 8002414:	4b04      	ldr	r3, [pc, #16]	@ (8002428 <LED_SEND_TOGGLE+0x18>)
 8002416:	68db      	ldr	r3, [r3, #12]
 8002418:	4a03      	ldr	r2, [pc, #12]	@ (8002428 <LED_SEND_TOGGLE+0x18>)
 800241a:	f483 6380 	eor.w	r3, r3, #1024	@ 0x400
 800241e:	60d3      	str	r3, [r2, #12]
}
 8002420:	bf00      	nop
 8002422:	46bd      	mov	sp, r7
 8002424:	bc80      	pop	{r7}
 8002426:	4770      	bx	lr
 8002428:	40010c00 	.word	0x40010c00

0800242c <SPI1_Init>:
#define LORA_NSS_LOW()   (GPIOA->BSRR = GPIO_BSRR_BR4)
#define LORA_NSS_HIGH()  (GPIOA->BSRR = GPIO_BSRR_BS4)
#define LORA_RST_LOW()   (GPIOA->BSRR = GPIO_BSRR_BR1)   // PA1: RST
#define LORA_RST_HIGH()  (GPIOA->BSRR = GPIO_BSRR_BS1)

void SPI1_Init(void) {
 800242c:	b480      	push	{r7}
 800242e:	af00      	add	r7, sp, #0
    RCC->APB2ENR |= RCC_APB2ENR_IOPAEN | RCC_APB2ENR_AFIOEN | RCC_APB2ENR_SPI1EN;
 8002430:	4b22      	ldr	r3, [pc, #136]	@ (80024bc <SPI1_Init+0x90>)
 8002432:	699b      	ldr	r3, [r3, #24]
 8002434:	4a21      	ldr	r2, [pc, #132]	@ (80024bc <SPI1_Init+0x90>)
 8002436:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800243a:	f043 0305 	orr.w	r3, r3, #5
 800243e:	6193      	str	r3, [r2, #24]

    GPIOA->CRL &= ~(GPIO_CRL_CNF5 | GPIO_CRL_MODE5);
 8002440:	4b1f      	ldr	r3, [pc, #124]	@ (80024c0 <SPI1_Init+0x94>)
 8002442:	681b      	ldr	r3, [r3, #0]
 8002444:	4a1e      	ldr	r2, [pc, #120]	@ (80024c0 <SPI1_Init+0x94>)
 8002446:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 800244a:	6013      	str	r3, [r2, #0]
    GPIOA->CRL |=  (GPIO_CRL_MODE5_1 | GPIO_CRL_MODE5_0 | GPIO_CRL_CNF5_1); // PA5: SCK
 800244c:	4b1c      	ldr	r3, [pc, #112]	@ (80024c0 <SPI1_Init+0x94>)
 800244e:	681b      	ldr	r3, [r3, #0]
 8002450:	4a1b      	ldr	r2, [pc, #108]	@ (80024c0 <SPI1_Init+0x94>)
 8002452:	f443 0330 	orr.w	r3, r3, #11534336	@ 0xb00000
 8002456:	6013      	str	r3, [r2, #0]

    GPIOA->CRL &= ~(GPIO_CRL_CNF7 | GPIO_CRL_MODE7);
 8002458:	4b19      	ldr	r3, [pc, #100]	@ (80024c0 <SPI1_Init+0x94>)
 800245a:	681b      	ldr	r3, [r3, #0]
 800245c:	4a18      	ldr	r2, [pc, #96]	@ (80024c0 <SPI1_Init+0x94>)
 800245e:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8002462:	6013      	str	r3, [r2, #0]
    GPIOA->CRL |=  (GPIO_CRL_MODE7_1 | GPIO_CRL_MODE7_0 | GPIO_CRL_CNF7_1); // PA7: MOSI
 8002464:	4b16      	ldr	r3, [pc, #88]	@ (80024c0 <SPI1_Init+0x94>)
 8002466:	681b      	ldr	r3, [r3, #0]
 8002468:	4a15      	ldr	r2, [pc, #84]	@ (80024c0 <SPI1_Init+0x94>)
 800246a:	f043 4330 	orr.w	r3, r3, #2952790016	@ 0xb0000000
 800246e:	6013      	str	r3, [r2, #0]

    GPIOA->CRL &= ~(GPIO_CRL_CNF6 | GPIO_CRL_MODE6);
 8002470:	4b13      	ldr	r3, [pc, #76]	@ (80024c0 <SPI1_Init+0x94>)
 8002472:	681b      	ldr	r3, [r3, #0]
 8002474:	4a12      	ldr	r2, [pc, #72]	@ (80024c0 <SPI1_Init+0x94>)
 8002476:	f023 6370 	bic.w	r3, r3, #251658240	@ 0xf000000
 800247a:	6013      	str	r3, [r2, #0]
    GPIOA->CRL |= GPIO_CRL_CNF6_0; // PA6: MISO
 800247c:	4b10      	ldr	r3, [pc, #64]	@ (80024c0 <SPI1_Init+0x94>)
 800247e:	681b      	ldr	r3, [r3, #0]
 8002480:	4a0f      	ldr	r2, [pc, #60]	@ (80024c0 <SPI1_Init+0x94>)
 8002482:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8002486:	6013      	str	r3, [r2, #0]

    GPIOA->CRL &= ~(GPIO_CRL_CNF4 | GPIO_CRL_MODE4);
 8002488:	4b0d      	ldr	r3, [pc, #52]	@ (80024c0 <SPI1_Init+0x94>)
 800248a:	681b      	ldr	r3, [r3, #0]
 800248c:	4a0c      	ldr	r2, [pc, #48]	@ (80024c0 <SPI1_Init+0x94>)
 800248e:	f423 2370 	bic.w	r3, r3, #983040	@ 0xf0000
 8002492:	6013      	str	r3, [r2, #0]
    GPIOA->CRL |= (GPIO_CRL_MODE4_1 | GPIO_CRL_MODE4_0); // PA4: NSS
 8002494:	4b0a      	ldr	r3, [pc, #40]	@ (80024c0 <SPI1_Init+0x94>)
 8002496:	681b      	ldr	r3, [r3, #0]
 8002498:	4a09      	ldr	r2, [pc, #36]	@ (80024c0 <SPI1_Init+0x94>)
 800249a:	f443 3340 	orr.w	r3, r3, #196608	@ 0x30000
 800249e:	6013      	str	r3, [r2, #0]

    SPI1->CR1 = SPI_CR1_MSTR | SPI_CR1_SSI | SPI_CR1_SSM | SPI_CR1_BR_1;
 80024a0:	4b08      	ldr	r3, [pc, #32]	@ (80024c4 <SPI1_Init+0x98>)
 80024a2:	f44f 7245 	mov.w	r2, #788	@ 0x314
 80024a6:	601a      	str	r2, [r3, #0]
    SPI1->CR1 |= SPI_CR1_SPE;
 80024a8:	4b06      	ldr	r3, [pc, #24]	@ (80024c4 <SPI1_Init+0x98>)
 80024aa:	681b      	ldr	r3, [r3, #0]
 80024ac:	4a05      	ldr	r2, [pc, #20]	@ (80024c4 <SPI1_Init+0x98>)
 80024ae:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80024b2:	6013      	str	r3, [r2, #0]
}
 80024b4:	bf00      	nop
 80024b6:	46bd      	mov	sp, r7
 80024b8:	bc80      	pop	{r7}
 80024ba:	4770      	bx	lr
 80024bc:	40021000 	.word	0x40021000
 80024c0:	40010800 	.word	0x40010800
 80024c4:	40013000 	.word	0x40013000

080024c8 <LORA_GPIO_Init>:

void LORA_GPIO_Init(void) {
 80024c8:	b480      	push	{r7}
 80024ca:	af00      	add	r7, sp, #0
    RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;
 80024cc:	4b13      	ldr	r3, [pc, #76]	@ (800251c <LORA_GPIO_Init+0x54>)
 80024ce:	699b      	ldr	r3, [r3, #24]
 80024d0:	4a12      	ldr	r2, [pc, #72]	@ (800251c <LORA_GPIO_Init+0x54>)
 80024d2:	f043 0304 	orr.w	r3, r3, #4
 80024d6:	6193      	str	r3, [r2, #24]

    GPIOA->CRL &= ~(GPIO_CRL_MODE1 | GPIO_CRL_CNF1);
 80024d8:	4b11      	ldr	r3, [pc, #68]	@ (8002520 <LORA_GPIO_Init+0x58>)
 80024da:	681b      	ldr	r3, [r3, #0]
 80024dc:	4a10      	ldr	r2, [pc, #64]	@ (8002520 <LORA_GPIO_Init+0x58>)
 80024de:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80024e2:	6013      	str	r3, [r2, #0]
    GPIOA->CRL |= (GPIO_CRL_MODE1_1 | GPIO_CRL_MODE1_0); // PA1: RST
 80024e4:	4b0e      	ldr	r3, [pc, #56]	@ (8002520 <LORA_GPIO_Init+0x58>)
 80024e6:	681b      	ldr	r3, [r3, #0]
 80024e8:	4a0d      	ldr	r2, [pc, #52]	@ (8002520 <LORA_GPIO_Init+0x58>)
 80024ea:	f043 0330 	orr.w	r3, r3, #48	@ 0x30
 80024ee:	6013      	str	r3, [r2, #0]

    GPIOA->CRL &= ~(GPIO_CRL_MODE4 | GPIO_CRL_CNF4);
 80024f0:	4b0b      	ldr	r3, [pc, #44]	@ (8002520 <LORA_GPIO_Init+0x58>)
 80024f2:	681b      	ldr	r3, [r3, #0]
 80024f4:	4a0a      	ldr	r2, [pc, #40]	@ (8002520 <LORA_GPIO_Init+0x58>)
 80024f6:	f423 2370 	bic.w	r3, r3, #983040	@ 0xf0000
 80024fa:	6013      	str	r3, [r2, #0]
    GPIOA->CRL |= (GPIO_CRL_MODE4_1 | GPIO_CRL_MODE4_0); // PA4: NSS
 80024fc:	4b08      	ldr	r3, [pc, #32]	@ (8002520 <LORA_GPIO_Init+0x58>)
 80024fe:	681b      	ldr	r3, [r3, #0]
 8002500:	4a07      	ldr	r2, [pc, #28]	@ (8002520 <LORA_GPIO_Init+0x58>)
 8002502:	f443 3340 	orr.w	r3, r3, #196608	@ 0x30000
 8002506:	6013      	str	r3, [r2, #0]

    LORA_NSS_HIGH();
 8002508:	4b05      	ldr	r3, [pc, #20]	@ (8002520 <LORA_GPIO_Init+0x58>)
 800250a:	2210      	movs	r2, #16
 800250c:	611a      	str	r2, [r3, #16]
    LORA_RST_HIGH();
 800250e:	4b04      	ldr	r3, [pc, #16]	@ (8002520 <LORA_GPIO_Init+0x58>)
 8002510:	2202      	movs	r2, #2
 8002512:	611a      	str	r2, [r3, #16]
}
 8002514:	bf00      	nop
 8002516:	46bd      	mov	sp, r7
 8002518:	bc80      	pop	{r7}
 800251a:	4770      	bx	lr
 800251c:	40021000 	.word	0x40021000
 8002520:	40010800 	.word	0x40010800

08002524 <spi1_write>:

static void spi1_write(uint8_t data) {
 8002524:	b480      	push	{r7}
 8002526:	b083      	sub	sp, #12
 8002528:	af00      	add	r7, sp, #0
 800252a:	4603      	mov	r3, r0
 800252c:	71fb      	strb	r3, [r7, #7]
    while (!(SPI1->SR & SPI_SR_TXE));
 800252e:	bf00      	nop
 8002530:	4b0b      	ldr	r3, [pc, #44]	@ (8002560 <spi1_write+0x3c>)
 8002532:	689b      	ldr	r3, [r3, #8]
 8002534:	f003 0302 	and.w	r3, r3, #2
 8002538:	2b00      	cmp	r3, #0
 800253a:	d0f9      	beq.n	8002530 <spi1_write+0xc>
    *(volatile uint8_t*)&SPI1->DR = data;
 800253c:	4a09      	ldr	r2, [pc, #36]	@ (8002564 <spi1_write+0x40>)
 800253e:	79fb      	ldrb	r3, [r7, #7]
 8002540:	7013      	strb	r3, [r2, #0]
    while (!(SPI1->SR & SPI_SR_RXNE));
 8002542:	bf00      	nop
 8002544:	4b06      	ldr	r3, [pc, #24]	@ (8002560 <spi1_write+0x3c>)
 8002546:	689b      	ldr	r3, [r3, #8]
 8002548:	f003 0301 	and.w	r3, r3, #1
 800254c:	2b00      	cmp	r3, #0
 800254e:	d0f9      	beq.n	8002544 <spi1_write+0x20>
    (void)SPI1->DR;
 8002550:	4b03      	ldr	r3, [pc, #12]	@ (8002560 <spi1_write+0x3c>)
 8002552:	68db      	ldr	r3, [r3, #12]
}
 8002554:	bf00      	nop
 8002556:	370c      	adds	r7, #12
 8002558:	46bd      	mov	sp, r7
 800255a:	bc80      	pop	{r7}
 800255c:	4770      	bx	lr
 800255e:	bf00      	nop
 8002560:	40013000 	.word	0x40013000
 8002564:	4001300c 	.word	0x4001300c

08002568 <spi1_transfer>:

static uint8_t spi1_transfer(uint8_t data) {
 8002568:	b480      	push	{r7}
 800256a:	b083      	sub	sp, #12
 800256c:	af00      	add	r7, sp, #0
 800256e:	4603      	mov	r3, r0
 8002570:	71fb      	strb	r3, [r7, #7]
    while (!(SPI1->SR & SPI_SR_TXE));
 8002572:	bf00      	nop
 8002574:	4b0b      	ldr	r3, [pc, #44]	@ (80025a4 <spi1_transfer+0x3c>)
 8002576:	689b      	ldr	r3, [r3, #8]
 8002578:	f003 0302 	and.w	r3, r3, #2
 800257c:	2b00      	cmp	r3, #0
 800257e:	d0f9      	beq.n	8002574 <spi1_transfer+0xc>
    *(volatile uint8_t*)&SPI1->DR = data;
 8002580:	4a09      	ldr	r2, [pc, #36]	@ (80025a8 <spi1_transfer+0x40>)
 8002582:	79fb      	ldrb	r3, [r7, #7]
 8002584:	7013      	strb	r3, [r2, #0]
    while (!(SPI1->SR & SPI_SR_RXNE));
 8002586:	bf00      	nop
 8002588:	4b06      	ldr	r3, [pc, #24]	@ (80025a4 <spi1_transfer+0x3c>)
 800258a:	689b      	ldr	r3, [r3, #8]
 800258c:	f003 0301 	and.w	r3, r3, #1
 8002590:	2b00      	cmp	r3, #0
 8002592:	d0f9      	beq.n	8002588 <spi1_transfer+0x20>
    return (uint8_t)SPI1->DR;
 8002594:	4b03      	ldr	r3, [pc, #12]	@ (80025a4 <spi1_transfer+0x3c>)
 8002596:	68db      	ldr	r3, [r3, #12]
 8002598:	b2db      	uxtb	r3, r3
}
 800259a:	4618      	mov	r0, r3
 800259c:	370c      	adds	r7, #12
 800259e:	46bd      	mov	sp, r7
 80025a0:	bc80      	pop	{r7}
 80025a2:	4770      	bx	lr
 80025a4:	40013000 	.word	0x40013000
 80025a8:	4001300c 	.word	0x4001300c

080025ac <lora_write_reg>:

static void lora_write_reg(uint8_t addr, uint8_t value) {
 80025ac:	b580      	push	{r7, lr}
 80025ae:	b082      	sub	sp, #8
 80025b0:	af00      	add	r7, sp, #0
 80025b2:	4603      	mov	r3, r0
 80025b4:	460a      	mov	r2, r1
 80025b6:	71fb      	strb	r3, [r7, #7]
 80025b8:	4613      	mov	r3, r2
 80025ba:	71bb      	strb	r3, [r7, #6]
    LORA_NSS_LOW();
 80025bc:	4b0a      	ldr	r3, [pc, #40]	@ (80025e8 <lora_write_reg+0x3c>)
 80025be:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 80025c2:	611a      	str	r2, [r3, #16]
    spi1_write(addr | 0x80);
 80025c4:	79fb      	ldrb	r3, [r7, #7]
 80025c6:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 80025ca:	b2db      	uxtb	r3, r3
 80025cc:	4618      	mov	r0, r3
 80025ce:	f7ff ffa9 	bl	8002524 <spi1_write>
    spi1_write(value);
 80025d2:	79bb      	ldrb	r3, [r7, #6]
 80025d4:	4618      	mov	r0, r3
 80025d6:	f7ff ffa5 	bl	8002524 <spi1_write>
    LORA_NSS_HIGH();
 80025da:	4b03      	ldr	r3, [pc, #12]	@ (80025e8 <lora_write_reg+0x3c>)
 80025dc:	2210      	movs	r2, #16
 80025de:	611a      	str	r2, [r3, #16]
}
 80025e0:	bf00      	nop
 80025e2:	3708      	adds	r7, #8
 80025e4:	46bd      	mov	sp, r7
 80025e6:	bd80      	pop	{r7, pc}
 80025e8:	40010800 	.word	0x40010800

080025ec <lora_read_reg>:

static uint8_t lora_read_reg(uint8_t addr) {
 80025ec:	b580      	push	{r7, lr}
 80025ee:	b084      	sub	sp, #16
 80025f0:	af00      	add	r7, sp, #0
 80025f2:	4603      	mov	r3, r0
 80025f4:	71fb      	strb	r3, [r7, #7]
    LORA_NSS_LOW();
 80025f6:	4b0c      	ldr	r3, [pc, #48]	@ (8002628 <lora_read_reg+0x3c>)
 80025f8:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 80025fc:	611a      	str	r2, [r3, #16]
    spi1_write(addr & 0x7F);
 80025fe:	79fb      	ldrb	r3, [r7, #7]
 8002600:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8002604:	b2db      	uxtb	r3, r3
 8002606:	4618      	mov	r0, r3
 8002608:	f7ff ff8c 	bl	8002524 <spi1_write>
    uint8_t val = spi1_transfer(0x00);
 800260c:	2000      	movs	r0, #0
 800260e:	f7ff ffab 	bl	8002568 <spi1_transfer>
 8002612:	4603      	mov	r3, r0
 8002614:	73fb      	strb	r3, [r7, #15]
    LORA_NSS_HIGH();
 8002616:	4b04      	ldr	r3, [pc, #16]	@ (8002628 <lora_read_reg+0x3c>)
 8002618:	2210      	movs	r2, #16
 800261a:	611a      	str	r2, [r3, #16]
    return val;
 800261c:	7bfb      	ldrb	r3, [r7, #15]
}
 800261e:	4618      	mov	r0, r3
 8002620:	3710      	adds	r7, #16
 8002622:	46bd      	mov	sp, r7
 8002624:	bd80      	pop	{r7, pc}
 8002626:	bf00      	nop
 8002628:	40010800 	.word	0x40010800

0800262c <lora_init>:

void lora_init(void) {
 800262c:	b580      	push	{r7, lr}
 800262e:	b084      	sub	sp, #16
 8002630:	af00      	add	r7, sp, #0
    LORA_RST_LOW();
 8002632:	4b2e      	ldr	r3, [pc, #184]	@ (80026ec <lora_init+0xc0>)
 8002634:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8002638:	611a      	str	r2, [r3, #16]
    for (volatile int i = 0; i < 100000; i++);
 800263a:	2300      	movs	r3, #0
 800263c:	60bb      	str	r3, [r7, #8]
 800263e:	e002      	b.n	8002646 <lora_init+0x1a>
 8002640:	68bb      	ldr	r3, [r7, #8]
 8002642:	3301      	adds	r3, #1
 8002644:	60bb      	str	r3, [r7, #8]
 8002646:	68bb      	ldr	r3, [r7, #8]
 8002648:	4a29      	ldr	r2, [pc, #164]	@ (80026f0 <lora_init+0xc4>)
 800264a:	4293      	cmp	r3, r2
 800264c:	ddf8      	ble.n	8002640 <lora_init+0x14>
    LORA_RST_HIGH();
 800264e:	4b27      	ldr	r3, [pc, #156]	@ (80026ec <lora_init+0xc0>)
 8002650:	2202      	movs	r2, #2
 8002652:	611a      	str	r2, [r3, #16]
    for (volatile int i = 0; i < 100000; i++);
 8002654:	2300      	movs	r3, #0
 8002656:	607b      	str	r3, [r7, #4]
 8002658:	e002      	b.n	8002660 <lora_init+0x34>
 800265a:	687b      	ldr	r3, [r7, #4]
 800265c:	3301      	adds	r3, #1
 800265e:	607b      	str	r3, [r7, #4]
 8002660:	687b      	ldr	r3, [r7, #4]
 8002662:	4a23      	ldr	r2, [pc, #140]	@ (80026f0 <lora_init+0xc4>)
 8002664:	4293      	cmp	r3, r2
 8002666:	ddf8      	ble.n	800265a <lora_init+0x2e>

    uint8_t version = lora_read_reg(0x42);
 8002668:	2042      	movs	r0, #66	@ 0x42
 800266a:	f7ff ffbf 	bl	80025ec <lora_read_reg>
 800266e:	4603      	mov	r3, r0
 8002670:	73fb      	strb	r3, [r7, #15]
    if (version == 0x12) {
 8002672:	7bfb      	ldrb	r3, [r7, #15]
 8002674:	2b12      	cmp	r3, #18
 8002676:	d132      	bne.n	80026de <lora_init+0xb2>
        LED_OK_ON();
 8002678:	f7ff fe9a 	bl	80023b0 <LED_OK_ON>
    } else {
        LED_ERR_ON();
        return; // Không treo
    }

    lora_write_reg(0x01, 0x80); // Sleep + LoRa
 800267c:	2180      	movs	r1, #128	@ 0x80
 800267e:	2001      	movs	r0, #1
 8002680:	f7ff ff94 	bl	80025ac <lora_write_reg>
    lora_write_reg(0x01, 0x81); // Standby + LoRa
 8002684:	2181      	movs	r1, #129	@ 0x81
 8002686:	2001      	movs	r0, #1
 8002688:	f7ff ff90 	bl	80025ac <lora_write_reg>

    lora_write_reg(0x06, 0x6C); // 433 MHz
 800268c:	216c      	movs	r1, #108	@ 0x6c
 800268e:	2006      	movs	r0, #6
 8002690:	f7ff ff8c 	bl	80025ac <lora_write_reg>
    lora_write_reg(0x07, 0x80);
 8002694:	2180      	movs	r1, #128	@ 0x80
 8002696:	2007      	movs	r0, #7
 8002698:	f7ff ff88 	bl	80025ac <lora_write_reg>
    lora_write_reg(0x08, 0x00);
 800269c:	2100      	movs	r1, #0
 800269e:	2008      	movs	r0, #8
 80026a0:	f7ff ff84 	bl	80025ac <lora_write_reg>

    lora_write_reg(0x20, 0x00); // Preamble
 80026a4:	2100      	movs	r1, #0
 80026a6:	2020      	movs	r0, #32
 80026a8:	f7ff ff80 	bl	80025ac <lora_write_reg>
    lora_write_reg(0x21, 0x08);
 80026ac:	2108      	movs	r1, #8
 80026ae:	2021      	movs	r0, #33	@ 0x21
 80026b0:	f7ff ff7c 	bl	80025ac <lora_write_reg>

    lora_write_reg(0x39, 0x12); // Sync word
 80026b4:	2112      	movs	r1, #18
 80026b6:	2039      	movs	r0, #57	@ 0x39
 80026b8:	f7ff ff78 	bl	80025ac <lora_write_reg>

    lora_write_reg(0x1D, 0x72); // BW 125 kHz, CR 4/5
 80026bc:	2172      	movs	r1, #114	@ 0x72
 80026be:	201d      	movs	r0, #29
 80026c0:	f7ff ff74 	bl	80025ac <lora_write_reg>
    lora_write_reg(0x1E, 0xC4); // SF12
 80026c4:	21c4      	movs	r1, #196	@ 0xc4
 80026c6:	201e      	movs	r0, #30
 80026c8:	f7ff ff70 	bl	80025ac <lora_write_reg>
    lora_write_reg(0x26, 0x04); // Low data rate
 80026cc:	2104      	movs	r1, #4
 80026ce:	2026      	movs	r0, #38	@ 0x26
 80026d0:	f7ff ff6c 	bl	80025ac <lora_write_reg>

    lora_write_reg(0x0E, 0x00); // FIFO TX base
 80026d4:	2100      	movs	r1, #0
 80026d6:	200e      	movs	r0, #14
 80026d8:	f7ff ff68 	bl	80025ac <lora_write_reg>
 80026dc:	e002      	b.n	80026e4 <lora_init+0xb8>
        LED_ERR_ON();
 80026de:	f7ff fe73 	bl	80023c8 <LED_ERR_ON>
        return; // Không treo
 80026e2:	bf00      	nop
}
 80026e4:	3710      	adds	r7, #16
 80026e6:	46bd      	mov	sp, r7
 80026e8:	bd80      	pop	{r7, pc}
 80026ea:	bf00      	nop
 80026ec:	40010800 	.word	0x40010800
 80026f0:	0001869f 	.word	0x0001869f

080026f4 <lora_prepare_and_send>:

void lora_prepare_and_send(uint8_t dev_id, uint32_t timestamp, float lat, float lon) {
 80026f4:	b580      	push	{r7, lr}
 80026f6:	b08e      	sub	sp, #56	@ 0x38
 80026f8:	af00      	add	r7, sp, #0
 80026fa:	60b9      	str	r1, [r7, #8]
 80026fc:	607a      	str	r2, [r7, #4]
 80026fe:	603b      	str	r3, [r7, #0]
 8002700:	4603      	mov	r3, r0
 8002702:	73fb      	strb	r3, [r7, #15]
    union {
        float f;
        uint8_t b[4];
    } lat_u, lon_u;

    packet[0] = dev_id;
 8002704:	7bfb      	ldrb	r3, [r7, #15]
 8002706:	763b      	strb	r3, [r7, #24]
    packet[1] = (uint8_t)(timestamp & 0xFF);
 8002708:	68bb      	ldr	r3, [r7, #8]
 800270a:	b2db      	uxtb	r3, r3
 800270c:	767b      	strb	r3, [r7, #25]
    packet[2] = (uint8_t)((timestamp >> 8) & 0xFF);
 800270e:	68bb      	ldr	r3, [r7, #8]
 8002710:	0a1b      	lsrs	r3, r3, #8
 8002712:	b2db      	uxtb	r3, r3
 8002714:	76bb      	strb	r3, [r7, #26]
    packet[3] = (uint8_t)((timestamp >> 16) & 0xFF);
 8002716:	68bb      	ldr	r3, [r7, #8]
 8002718:	0c1b      	lsrs	r3, r3, #16
 800271a:	b2db      	uxtb	r3, r3
 800271c:	76fb      	strb	r3, [r7, #27]
    packet[4] = (uint8_t)((timestamp >> 24) & 0xFF);
 800271e:	68bb      	ldr	r3, [r7, #8]
 8002720:	0e1b      	lsrs	r3, r3, #24
 8002722:	b2db      	uxtb	r3, r3
 8002724:	773b      	strb	r3, [r7, #28]

    lat_u.f = lat;
 8002726:	687b      	ldr	r3, [r7, #4]
 8002728:	617b      	str	r3, [r7, #20]
    for (int i = 0; i < 4; i++) packet[5 + i] = lat_u.b[i];
 800272a:	2300      	movs	r3, #0
 800272c:	637b      	str	r3, [r7, #52]	@ 0x34
 800272e:	e00d      	b.n	800274c <lora_prepare_and_send+0x58>
 8002730:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8002732:	3305      	adds	r3, #5
 8002734:	f107 0114 	add.w	r1, r7, #20
 8002738:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800273a:	440a      	add	r2, r1
 800273c:	7812      	ldrb	r2, [r2, #0]
 800273e:	3338      	adds	r3, #56	@ 0x38
 8002740:	443b      	add	r3, r7
 8002742:	f803 2c20 	strb.w	r2, [r3, #-32]
 8002746:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8002748:	3301      	adds	r3, #1
 800274a:	637b      	str	r3, [r7, #52]	@ 0x34
 800274c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800274e:	2b03      	cmp	r3, #3
 8002750:	ddee      	ble.n	8002730 <lora_prepare_and_send+0x3c>

    lon_u.f = lon;
 8002752:	683b      	ldr	r3, [r7, #0]
 8002754:	613b      	str	r3, [r7, #16]
    for (int i = 0; i < 4; i++) packet[9 + i] = lon_u.b[i];
 8002756:	2300      	movs	r3, #0
 8002758:	633b      	str	r3, [r7, #48]	@ 0x30
 800275a:	e00d      	b.n	8002778 <lora_prepare_and_send+0x84>
 800275c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800275e:	3309      	adds	r3, #9
 8002760:	f107 0110 	add.w	r1, r7, #16
 8002764:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8002766:	440a      	add	r2, r1
 8002768:	7812      	ldrb	r2, [r2, #0]
 800276a:	3338      	adds	r3, #56	@ 0x38
 800276c:	443b      	add	r3, r7
 800276e:	f803 2c20 	strb.w	r2, [r3, #-32]
 8002772:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8002774:	3301      	adds	r3, #1
 8002776:	633b      	str	r3, [r7, #48]	@ 0x30
 8002778:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800277a:	2b03      	cmp	r3, #3
 800277c:	ddee      	ble.n	800275c <lora_prepare_and_send+0x68>

    uint8_t crc = 0;
 800277e:	2300      	movs	r3, #0
 8002780:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
    for (int i = 0; i < 13; i++) crc ^= packet[i];
 8002784:	2300      	movs	r3, #0
 8002786:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002788:	e00c      	b.n	80027a4 <lora_prepare_and_send+0xb0>
 800278a:	f107 0218 	add.w	r2, r7, #24
 800278e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002790:	4413      	add	r3, r2
 8002792:	781a      	ldrb	r2, [r3, #0]
 8002794:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 8002798:	4053      	eors	r3, r2
 800279a:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 800279e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80027a0:	3301      	adds	r3, #1
 80027a2:	62bb      	str	r3, [r7, #40]	@ 0x28
 80027a4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80027a6:	2b0c      	cmp	r3, #12
 80027a8:	ddef      	ble.n	800278a <lora_prepare_and_send+0x96>
    packet[13] = crc;
 80027aa:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 80027ae:	f887 3025 	strb.w	r3, [r7, #37]	@ 0x25

    lora_send_packet(packet, 14);
 80027b2:	f107 0318 	add.w	r3, r7, #24
 80027b6:	210e      	movs	r1, #14
 80027b8:	4618      	mov	r0, r3
 80027ba:	f000 f805 	bl	80027c8 <lora_send_packet>
}
 80027be:	bf00      	nop
 80027c0:	3738      	adds	r7, #56	@ 0x38
 80027c2:	46bd      	mov	sp, r7
 80027c4:	bd80      	pop	{r7, pc}
	...

080027c8 <lora_send_packet>:

void lora_send_packet(uint8_t* data, uint8_t len) {
 80027c8:	b580      	push	{r7, lr}
 80027ca:	b084      	sub	sp, #16
 80027cc:	af00      	add	r7, sp, #0
 80027ce:	6078      	str	r0, [r7, #4]
 80027d0:	460b      	mov	r3, r1
 80027d2:	70fb      	strb	r3, [r7, #3]
    lora_write_reg(0x01, 0x81);
 80027d4:	2181      	movs	r1, #129	@ 0x81
 80027d6:	2001      	movs	r0, #1
 80027d8:	f7ff fee8 	bl	80025ac <lora_write_reg>
    lora_write_reg(0x0D, 0x00);
 80027dc:	2100      	movs	r1, #0
 80027de:	200d      	movs	r0, #13
 80027e0:	f7ff fee4 	bl	80025ac <lora_write_reg>
    lora_write_reg(0x0E, 0x00);
 80027e4:	2100      	movs	r1, #0
 80027e6:	200e      	movs	r0, #14
 80027e8:	f7ff fee0 	bl	80025ac <lora_write_reg>

    LORA_NSS_LOW();
 80027ec:	4b23      	ldr	r3, [pc, #140]	@ (800287c <lora_send_packet+0xb4>)
 80027ee:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 80027f2:	611a      	str	r2, [r3, #16]
    spi1_write(0x00 | 0x80);
 80027f4:	2080      	movs	r0, #128	@ 0x80
 80027f6:	f7ff fe95 	bl	8002524 <spi1_write>
    for (uint8_t i = 0; i < len; i++) {
 80027fa:	2300      	movs	r3, #0
 80027fc:	73fb      	strb	r3, [r7, #15]
 80027fe:	e009      	b.n	8002814 <lora_send_packet+0x4c>
        spi1_write(data[i]);
 8002800:	7bfb      	ldrb	r3, [r7, #15]
 8002802:	687a      	ldr	r2, [r7, #4]
 8002804:	4413      	add	r3, r2
 8002806:	781b      	ldrb	r3, [r3, #0]
 8002808:	4618      	mov	r0, r3
 800280a:	f7ff fe8b 	bl	8002524 <spi1_write>
    for (uint8_t i = 0; i < len; i++) {
 800280e:	7bfb      	ldrb	r3, [r7, #15]
 8002810:	3301      	adds	r3, #1
 8002812:	73fb      	strb	r3, [r7, #15]
 8002814:	7bfa      	ldrb	r2, [r7, #15]
 8002816:	78fb      	ldrb	r3, [r7, #3]
 8002818:	429a      	cmp	r2, r3
 800281a:	d3f1      	bcc.n	8002800 <lora_send_packet+0x38>
    }
    LORA_NSS_HIGH();
 800281c:	4b17      	ldr	r3, [pc, #92]	@ (800287c <lora_send_packet+0xb4>)
 800281e:	2210      	movs	r2, #16
 8002820:	611a      	str	r2, [r3, #16]

    lora_write_reg(0x22, len);
 8002822:	78fb      	ldrb	r3, [r7, #3]
 8002824:	4619      	mov	r1, r3
 8002826:	2022      	movs	r0, #34	@ 0x22
 8002828:	f7ff fec0 	bl	80025ac <lora_write_reg>
    lora_write_reg(0x01, 0x83);
 800282c:	2183      	movs	r1, #131	@ 0x83
 800282e:	2001      	movs	r0, #1
 8002830:	f7ff febc 	bl	80025ac <lora_write_reg>

    uint32_t timeout = 100000;
 8002834:	4b12      	ldr	r3, [pc, #72]	@ (8002880 <lora_send_packet+0xb8>)
 8002836:	60bb      	str	r3, [r7, #8]
    while ((lora_read_reg(0x12) & 0x08) == 0 && timeout--);
 8002838:	bf00      	nop
 800283a:	2012      	movs	r0, #18
 800283c:	f7ff fed6 	bl	80025ec <lora_read_reg>
 8002840:	4603      	mov	r3, r0
 8002842:	f003 0308 	and.w	r3, r3, #8
 8002846:	2b00      	cmp	r3, #0
 8002848:	d104      	bne.n	8002854 <lora_send_packet+0x8c>
 800284a:	68bb      	ldr	r3, [r7, #8]
 800284c:	1e5a      	subs	r2, r3, #1
 800284e:	60ba      	str	r2, [r7, #8]
 8002850:	2b00      	cmp	r3, #0
 8002852:	d1f2      	bne.n	800283a <lora_send_packet+0x72>
    if (timeout == 0) {
 8002854:	68bb      	ldr	r3, [r7, #8]
 8002856:	2b00      	cmp	r3, #0
 8002858:	d102      	bne.n	8002860 <lora_send_packet+0x98>
        LED_ERR_ON();
 800285a:	f7ff fdb5 	bl	80023c8 <LED_ERR_ON>
        return;
 800285e:	e009      	b.n	8002874 <lora_send_packet+0xac>
    }
    lora_write_reg(0x12, 0x08);
 8002860:	2108      	movs	r1, #8
 8002862:	2012      	movs	r0, #18
 8002864:	f7ff fea2 	bl	80025ac <lora_write_reg>
    LED_SEND_TOGGLE();
 8002868:	f7ff fdd2 	bl	8002410 <LED_SEND_TOGGLE>
    lora_write_reg(0x01, 0x80);
 800286c:	2180      	movs	r1, #128	@ 0x80
 800286e:	2001      	movs	r0, #1
 8002870:	f7ff fe9c 	bl	80025ac <lora_write_reg>
}
 8002874:	3710      	adds	r7, #16
 8002876:	46bd      	mov	sp, r7
 8002878:	bd80      	pop	{r7, pc}
 800287a:	bf00      	nop
 800287c:	40010800 	.word	0x40010800
 8002880:	000186a0 	.word	0x000186a0

08002884 <main>:
#include "lora.h"
#include "led.h"
#include "timer.h"
#include "gps.h"

int main(void) {
 8002884:	b580      	push	{r7, lr}
 8002886:	b082      	sub	sp, #8
 8002888:	af00      	add	r7, sp, #0
    timer_init();
 800288a:	f000 f919 	bl	8002ac0 <timer_init>
    LED_Init();
 800288e:	f7ff fd3d 	bl	800230c <LED_Init>
    SPI1_Init();
 8002892:	f7ff fdcb 	bl	800242c <SPI1_Init>
    LORA_GPIO_Init();
 8002896:	f7ff fe17 	bl	80024c8 <LORA_GPIO_Init>
    GPS_Init();
 800289a:	f7ff fc7a 	bl	8002192 <GPS_Init>
    LED_POWER_ON();
 800289e:	f7ff fd7b 	bl	8002398 <LED_POWER_ON>
    GPIOB->BSRR = GPIO_BSRR_BR10;
 80028a2:	4b0b      	ldr	r3, [pc, #44]	@ (80028d0 <main+0x4c>)
 80028a4:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80028a8:	611a      	str	r2, [r3, #16]
    lora_init();
 80028aa:	f7ff febf 	bl	800262c <lora_init>

    while (1) {
        uint32_t timestamp = GPS_Get_Timestamp();
 80028ae:	f7ff fc79 	bl	80021a4 <GPS_Get_Timestamp>
 80028b2:	6078      	str	r0, [r7, #4]
        if (timestamp == 0) {
 80028b4:	687b      	ldr	r3, [r7, #4]
 80028b6:	2b00      	cmp	r3, #0
 80028b8:	d101      	bne.n	80028be <main+0x3a>
            timestamp = 1717587397;
 80028ba:	4b06      	ldr	r3, [pc, #24]	@ (80028d4 <main+0x50>)
 80028bc:	607b      	str	r3, [r7, #4]
        }
        GPS_Check_Geofence(0x01, timestamp);
 80028be:	6879      	ldr	r1, [r7, #4]
 80028c0:	2001      	movs	r0, #1
 80028c2:	f7ff fc79 	bl	80021b8 <GPS_Check_Geofence>
        delay_ms(200);
 80028c6:	20c8      	movs	r0, #200	@ 0xc8
 80028c8:	f000 f948 	bl	8002b5c <delay_ms>
    while (1) {
 80028cc:	e7ef      	b.n	80028ae <main+0x2a>
 80028ce:	bf00      	nop
 80028d0:	40010c00 	.word	0x40010c00
 80028d4:	66604dc5 	.word	0x66604dc5

080028d8 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80028d8:	b480      	push	{r7}
 80028da:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80028dc:	bf00      	nop
 80028de:	e7fd      	b.n	80028dc <NMI_Handler+0x4>

080028e0 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80028e0:	b480      	push	{r7}
 80028e2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80028e4:	bf00      	nop
 80028e6:	e7fd      	b.n	80028e4 <HardFault_Handler+0x4>

080028e8 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80028e8:	b480      	push	{r7}
 80028ea:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80028ec:	bf00      	nop
 80028ee:	e7fd      	b.n	80028ec <MemManage_Handler+0x4>

080028f0 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80028f0:	b480      	push	{r7}
 80028f2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80028f4:	bf00      	nop
 80028f6:	e7fd      	b.n	80028f4 <BusFault_Handler+0x4>

080028f8 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80028f8:	b480      	push	{r7}
 80028fa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80028fc:	bf00      	nop
 80028fe:	e7fd      	b.n	80028fc <UsageFault_Handler+0x4>

08002900 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002900:	b480      	push	{r7}
 8002902:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002904:	bf00      	nop
 8002906:	46bd      	mov	sp, r7
 8002908:	bc80      	pop	{r7}
 800290a:	4770      	bx	lr

0800290c <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800290c:	b480      	push	{r7}
 800290e:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002910:	bf00      	nop
 8002912:	46bd      	mov	sp, r7
 8002914:	bc80      	pop	{r7}
 8002916:	4770      	bx	lr

08002918 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002918:	b480      	push	{r7}
 800291a:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800291c:	bf00      	nop
 800291e:	46bd      	mov	sp, r7
 8002920:	bc80      	pop	{r7}
 8002922:	4770      	bx	lr

08002924 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002924:	b580      	push	{r7, lr}
 8002926:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002928:	f000 f952 	bl	8002bd0 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800292c:	bf00      	nop
 800292e:	bd80      	pop	{r7, pc}

08002930 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002930:	b480      	push	{r7}
 8002932:	af00      	add	r7, sp, #0
  return 1;
 8002934:	2301      	movs	r3, #1
}
 8002936:	4618      	mov	r0, r3
 8002938:	46bd      	mov	sp, r7
 800293a:	bc80      	pop	{r7}
 800293c:	4770      	bx	lr

0800293e <_kill>:

int _kill(int pid, int sig)
{
 800293e:	b580      	push	{r7, lr}
 8002940:	b082      	sub	sp, #8
 8002942:	af00      	add	r7, sp, #0
 8002944:	6078      	str	r0, [r7, #4]
 8002946:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8002948:	f001 fe2a 	bl	80045a0 <__errno>
 800294c:	4603      	mov	r3, r0
 800294e:	2216      	movs	r2, #22
 8002950:	601a      	str	r2, [r3, #0]
  return -1;
 8002952:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002956:	4618      	mov	r0, r3
 8002958:	3708      	adds	r7, #8
 800295a:	46bd      	mov	sp, r7
 800295c:	bd80      	pop	{r7, pc}

0800295e <_exit>:

void _exit (int status)
{
 800295e:	b580      	push	{r7, lr}
 8002960:	b082      	sub	sp, #8
 8002962:	af00      	add	r7, sp, #0
 8002964:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8002966:	f04f 31ff 	mov.w	r1, #4294967295
 800296a:	6878      	ldr	r0, [r7, #4]
 800296c:	f7ff ffe7 	bl	800293e <_kill>
  while (1) {}    /* Make sure we hang here */
 8002970:	bf00      	nop
 8002972:	e7fd      	b.n	8002970 <_exit+0x12>

08002974 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002974:	b580      	push	{r7, lr}
 8002976:	b086      	sub	sp, #24
 8002978:	af00      	add	r7, sp, #0
 800297a:	60f8      	str	r0, [r7, #12]
 800297c:	60b9      	str	r1, [r7, #8]
 800297e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002980:	2300      	movs	r3, #0
 8002982:	617b      	str	r3, [r7, #20]
 8002984:	e00a      	b.n	800299c <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8002986:	f3af 8000 	nop.w
 800298a:	4601      	mov	r1, r0
 800298c:	68bb      	ldr	r3, [r7, #8]
 800298e:	1c5a      	adds	r2, r3, #1
 8002990:	60ba      	str	r2, [r7, #8]
 8002992:	b2ca      	uxtb	r2, r1
 8002994:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002996:	697b      	ldr	r3, [r7, #20]
 8002998:	3301      	adds	r3, #1
 800299a:	617b      	str	r3, [r7, #20]
 800299c:	697a      	ldr	r2, [r7, #20]
 800299e:	687b      	ldr	r3, [r7, #4]
 80029a0:	429a      	cmp	r2, r3
 80029a2:	dbf0      	blt.n	8002986 <_read+0x12>
  }

  return len;
 80029a4:	687b      	ldr	r3, [r7, #4]
}
 80029a6:	4618      	mov	r0, r3
 80029a8:	3718      	adds	r7, #24
 80029aa:	46bd      	mov	sp, r7
 80029ac:	bd80      	pop	{r7, pc}

080029ae <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80029ae:	b580      	push	{r7, lr}
 80029b0:	b086      	sub	sp, #24
 80029b2:	af00      	add	r7, sp, #0
 80029b4:	60f8      	str	r0, [r7, #12]
 80029b6:	60b9      	str	r1, [r7, #8]
 80029b8:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80029ba:	2300      	movs	r3, #0
 80029bc:	617b      	str	r3, [r7, #20]
 80029be:	e009      	b.n	80029d4 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80029c0:	68bb      	ldr	r3, [r7, #8]
 80029c2:	1c5a      	adds	r2, r3, #1
 80029c4:	60ba      	str	r2, [r7, #8]
 80029c6:	781b      	ldrb	r3, [r3, #0]
 80029c8:	4618      	mov	r0, r3
 80029ca:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80029ce:	697b      	ldr	r3, [r7, #20]
 80029d0:	3301      	adds	r3, #1
 80029d2:	617b      	str	r3, [r7, #20]
 80029d4:	697a      	ldr	r2, [r7, #20]
 80029d6:	687b      	ldr	r3, [r7, #4]
 80029d8:	429a      	cmp	r2, r3
 80029da:	dbf1      	blt.n	80029c0 <_write+0x12>
  }
  return len;
 80029dc:	687b      	ldr	r3, [r7, #4]
}
 80029de:	4618      	mov	r0, r3
 80029e0:	3718      	adds	r7, #24
 80029e2:	46bd      	mov	sp, r7
 80029e4:	bd80      	pop	{r7, pc}

080029e6 <_close>:

int _close(int file)
{
 80029e6:	b480      	push	{r7}
 80029e8:	b083      	sub	sp, #12
 80029ea:	af00      	add	r7, sp, #0
 80029ec:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80029ee:	f04f 33ff 	mov.w	r3, #4294967295
}
 80029f2:	4618      	mov	r0, r3
 80029f4:	370c      	adds	r7, #12
 80029f6:	46bd      	mov	sp, r7
 80029f8:	bc80      	pop	{r7}
 80029fa:	4770      	bx	lr

080029fc <_fstat>:


int _fstat(int file, struct stat *st)
{
 80029fc:	b480      	push	{r7}
 80029fe:	b083      	sub	sp, #12
 8002a00:	af00      	add	r7, sp, #0
 8002a02:	6078      	str	r0, [r7, #4]
 8002a04:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8002a06:	683b      	ldr	r3, [r7, #0]
 8002a08:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8002a0c:	605a      	str	r2, [r3, #4]
  return 0;
 8002a0e:	2300      	movs	r3, #0
}
 8002a10:	4618      	mov	r0, r3
 8002a12:	370c      	adds	r7, #12
 8002a14:	46bd      	mov	sp, r7
 8002a16:	bc80      	pop	{r7}
 8002a18:	4770      	bx	lr

08002a1a <_isatty>:

int _isatty(int file)
{
 8002a1a:	b480      	push	{r7}
 8002a1c:	b083      	sub	sp, #12
 8002a1e:	af00      	add	r7, sp, #0
 8002a20:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8002a22:	2301      	movs	r3, #1
}
 8002a24:	4618      	mov	r0, r3
 8002a26:	370c      	adds	r7, #12
 8002a28:	46bd      	mov	sp, r7
 8002a2a:	bc80      	pop	{r7}
 8002a2c:	4770      	bx	lr

08002a2e <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002a2e:	b480      	push	{r7}
 8002a30:	b085      	sub	sp, #20
 8002a32:	af00      	add	r7, sp, #0
 8002a34:	60f8      	str	r0, [r7, #12]
 8002a36:	60b9      	str	r1, [r7, #8]
 8002a38:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8002a3a:	2300      	movs	r3, #0
}
 8002a3c:	4618      	mov	r0, r3
 8002a3e:	3714      	adds	r7, #20
 8002a40:	46bd      	mov	sp, r7
 8002a42:	bc80      	pop	{r7}
 8002a44:	4770      	bx	lr
	...

08002a48 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002a48:	b580      	push	{r7, lr}
 8002a4a:	b086      	sub	sp, #24
 8002a4c:	af00      	add	r7, sp, #0
 8002a4e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002a50:	4a14      	ldr	r2, [pc, #80]	@ (8002aa4 <_sbrk+0x5c>)
 8002a52:	4b15      	ldr	r3, [pc, #84]	@ (8002aa8 <_sbrk+0x60>)
 8002a54:	1ad3      	subs	r3, r2, r3
 8002a56:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002a58:	697b      	ldr	r3, [r7, #20]
 8002a5a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002a5c:	4b13      	ldr	r3, [pc, #76]	@ (8002aac <_sbrk+0x64>)
 8002a5e:	681b      	ldr	r3, [r3, #0]
 8002a60:	2b00      	cmp	r3, #0
 8002a62:	d102      	bne.n	8002a6a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002a64:	4b11      	ldr	r3, [pc, #68]	@ (8002aac <_sbrk+0x64>)
 8002a66:	4a12      	ldr	r2, [pc, #72]	@ (8002ab0 <_sbrk+0x68>)
 8002a68:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002a6a:	4b10      	ldr	r3, [pc, #64]	@ (8002aac <_sbrk+0x64>)
 8002a6c:	681a      	ldr	r2, [r3, #0]
 8002a6e:	687b      	ldr	r3, [r7, #4]
 8002a70:	4413      	add	r3, r2
 8002a72:	693a      	ldr	r2, [r7, #16]
 8002a74:	429a      	cmp	r2, r3
 8002a76:	d207      	bcs.n	8002a88 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002a78:	f001 fd92 	bl	80045a0 <__errno>
 8002a7c:	4603      	mov	r3, r0
 8002a7e:	220c      	movs	r2, #12
 8002a80:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8002a82:	f04f 33ff 	mov.w	r3, #4294967295
 8002a86:	e009      	b.n	8002a9c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002a88:	4b08      	ldr	r3, [pc, #32]	@ (8002aac <_sbrk+0x64>)
 8002a8a:	681b      	ldr	r3, [r3, #0]
 8002a8c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8002a8e:	4b07      	ldr	r3, [pc, #28]	@ (8002aac <_sbrk+0x64>)
 8002a90:	681a      	ldr	r2, [r3, #0]
 8002a92:	687b      	ldr	r3, [r7, #4]
 8002a94:	4413      	add	r3, r2
 8002a96:	4a05      	ldr	r2, [pc, #20]	@ (8002aac <_sbrk+0x64>)
 8002a98:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8002a9a:	68fb      	ldr	r3, [r7, #12]
}
 8002a9c:	4618      	mov	r0, r3
 8002a9e:	3718      	adds	r7, #24
 8002aa0:	46bd      	mov	sp, r7
 8002aa2:	bd80      	pop	{r7, pc}
 8002aa4:	20005000 	.word	0x20005000
 8002aa8:	00000400 	.word	0x00000400
 8002aac:	200003fc 	.word	0x200003fc
 8002ab0:	20000550 	.word	0x20000550

08002ab4 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8002ab4:	b480      	push	{r7}
 8002ab6:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002ab8:	bf00      	nop
 8002aba:	46bd      	mov	sp, r7
 8002abc:	bc80      	pop	{r7}
 8002abe:	4770      	bx	lr

08002ac0 <timer_init>:
#include "stm32f1xx.h"
#include "timer.h"

void timer_init(void) {
 8002ac0:	b480      	push	{r7}
 8002ac2:	af00      	add	r7, sp, #0
    // Sử dụng HCLK = 72MHz
    SysTick->CTRL = 0;                   // Tắt SysTick
 8002ac4:	4b08      	ldr	r3, [pc, #32]	@ (8002ae8 <timer_init+0x28>)
 8002ac6:	2200      	movs	r2, #0
 8002ac8:	601a      	str	r2, [r3, #0]
    SysTick->LOAD = 0xFFFFFF;            // Max 24-bit (16,777,215)
 8002aca:	4b07      	ldr	r3, [pc, #28]	@ (8002ae8 <timer_init+0x28>)
 8002acc:	f06f 427f 	mvn.w	r2, #4278190080	@ 0xff000000
 8002ad0:	605a      	str	r2, [r3, #4]
    SysTick->VAL  = 0;                   // Reset bộ đếm
 8002ad2:	4b05      	ldr	r3, [pc, #20]	@ (8002ae8 <timer_init+0x28>)
 8002ad4:	2200      	movs	r2, #0
 8002ad6:	609a      	str	r2, [r3, #8]
    SysTick->CTRL = SysTick_CTRL_CLKSOURCE_Msk | SysTick_CTRL_ENABLE_Msk;
 8002ad8:	4b03      	ldr	r3, [pc, #12]	@ (8002ae8 <timer_init+0x28>)
 8002ada:	2205      	movs	r2, #5
 8002adc:	601a      	str	r2, [r3, #0]
    // Clock source = HCLK, Enable
}
 8002ade:	bf00      	nop
 8002ae0:	46bd      	mov	sp, r7
 8002ae2:	bc80      	pop	{r7}
 8002ae4:	4770      	bx	lr
 8002ae6:	bf00      	nop
 8002ae8:	e000e010 	.word	0xe000e010

08002aec <delay_us>:

void delay_us(uint32_t us) {
 8002aec:	b480      	push	{r7}
 8002aee:	b089      	sub	sp, #36	@ 0x24
 8002af0:	af00      	add	r7, sp, #0
 8002af2:	6078      	str	r0, [r7, #4]
    uint32_t ticks = us * 72;  // 1us = 72 ticks @72MHz
 8002af4:	687a      	ldr	r2, [r7, #4]
 8002af6:	4613      	mov	r3, r2
 8002af8:	00db      	lsls	r3, r3, #3
 8002afa:	4413      	add	r3, r2
 8002afc:	00db      	lsls	r3, r3, #3
 8002afe:	617b      	str	r3, [r7, #20]
    uint32_t start = SysTick->VAL;
 8002b00:	4b15      	ldr	r3, [pc, #84]	@ (8002b58 <delay_us+0x6c>)
 8002b02:	689b      	ldr	r3, [r3, #8]
 8002b04:	613b      	str	r3, [r7, #16]
    uint32_t elapsed = 0;
 8002b06:	2300      	movs	r3, #0
 8002b08:	61fb      	str	r3, [r7, #28]
    uint32_t prev = start;
 8002b0a:	693b      	ldr	r3, [r7, #16]
 8002b0c:	61bb      	str	r3, [r7, #24]

    while (elapsed < ticks) {
 8002b0e:	e018      	b.n	8002b42 <delay_us+0x56>
        uint32_t now = SysTick->VAL;
 8002b10:	4b11      	ldr	r3, [pc, #68]	@ (8002b58 <delay_us+0x6c>)
 8002b12:	689b      	ldr	r3, [r3, #8]
 8002b14:	60fb      	str	r3, [r7, #12]
        uint32_t diff = (prev >= now)
                        ? (prev - now)
                        : (prev + (SysTick->LOAD + 1) - now);
 8002b16:	69ba      	ldr	r2, [r7, #24]
 8002b18:	68fb      	ldr	r3, [r7, #12]
 8002b1a:	429a      	cmp	r2, r3
 8002b1c:	d303      	bcc.n	8002b26 <delay_us+0x3a>
 8002b1e:	69ba      	ldr	r2, [r7, #24]
 8002b20:	68fb      	ldr	r3, [r7, #12]
 8002b22:	1ad3      	subs	r3, r2, r3
 8002b24:	e006      	b.n	8002b34 <delay_us+0x48>
 8002b26:	4b0c      	ldr	r3, [pc, #48]	@ (8002b58 <delay_us+0x6c>)
 8002b28:	685a      	ldr	r2, [r3, #4]
 8002b2a:	69bb      	ldr	r3, [r7, #24]
 8002b2c:	441a      	add	r2, r3
 8002b2e:	68fb      	ldr	r3, [r7, #12]
 8002b30:	1ad3      	subs	r3, r2, r3
 8002b32:	3301      	adds	r3, #1
        uint32_t diff = (prev >= now)
 8002b34:	60bb      	str	r3, [r7, #8]
        elapsed += diff;
 8002b36:	69fa      	ldr	r2, [r7, #28]
 8002b38:	68bb      	ldr	r3, [r7, #8]
 8002b3a:	4413      	add	r3, r2
 8002b3c:	61fb      	str	r3, [r7, #28]
        prev = now;
 8002b3e:	68fb      	ldr	r3, [r7, #12]
 8002b40:	61bb      	str	r3, [r7, #24]
    while (elapsed < ticks) {
 8002b42:	69fa      	ldr	r2, [r7, #28]
 8002b44:	697b      	ldr	r3, [r7, #20]
 8002b46:	429a      	cmp	r2, r3
 8002b48:	d3e2      	bcc.n	8002b10 <delay_us+0x24>
    }
}
 8002b4a:	bf00      	nop
 8002b4c:	bf00      	nop
 8002b4e:	3724      	adds	r7, #36	@ 0x24
 8002b50:	46bd      	mov	sp, r7
 8002b52:	bc80      	pop	{r7}
 8002b54:	4770      	bx	lr
 8002b56:	bf00      	nop
 8002b58:	e000e010 	.word	0xe000e010

08002b5c <delay_ms>:

// 1s= 100ms
void delay_ms(uint32_t ms) {
 8002b5c:	b580      	push	{r7, lr}
 8002b5e:	b082      	sub	sp, #8
 8002b60:	af00      	add	r7, sp, #0
 8002b62:	6078      	str	r0, [r7, #4]
    while (ms--) {
 8002b64:	e003      	b.n	8002b6e <delay_ms+0x12>
        delay_us(1000);
 8002b66:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8002b6a:	f7ff ffbf 	bl	8002aec <delay_us>
    while (ms--) {
 8002b6e:	687b      	ldr	r3, [r7, #4]
 8002b70:	1e5a      	subs	r2, r3, #1
 8002b72:	607a      	str	r2, [r7, #4]
 8002b74:	2b00      	cmp	r3, #0
 8002b76:	d1f6      	bne.n	8002b66 <delay_ms+0xa>
    }
}
 8002b78:	bf00      	nop
 8002b7a:	bf00      	nop
 8002b7c:	3708      	adds	r7, #8
 8002b7e:	46bd      	mov	sp, r7
 8002b80:	bd80      	pop	{r7, pc}
	...

08002b84 <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Call the clock system initialization function.*/
    bl  SystemInit
 8002b84:	f7ff ff96 	bl	8002ab4 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002b88:	480b      	ldr	r0, [pc, #44]	@ (8002bb8 <LoopFillZerobss+0xe>)
  ldr r1, =_edata
 8002b8a:	490c      	ldr	r1, [pc, #48]	@ (8002bbc <LoopFillZerobss+0x12>)
  ldr r2, =_sidata
 8002b8c:	4a0c      	ldr	r2, [pc, #48]	@ (8002bc0 <LoopFillZerobss+0x16>)
  movs r3, #0
 8002b8e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002b90:	e002      	b.n	8002b98 <LoopCopyDataInit>

08002b92 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8002b92:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002b94:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002b96:	3304      	adds	r3, #4

08002b98 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002b98:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002b9a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002b9c:	d3f9      	bcc.n	8002b92 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8002b9e:	4a09      	ldr	r2, [pc, #36]	@ (8002bc4 <LoopFillZerobss+0x1a>)
  ldr r4, =_ebss
 8002ba0:	4c09      	ldr	r4, [pc, #36]	@ (8002bc8 <LoopFillZerobss+0x1e>)
  movs r3, #0
 8002ba2:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002ba4:	e001      	b.n	8002baa <LoopFillZerobss>

08002ba6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002ba6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002ba8:	3204      	adds	r2, #4

08002baa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002baa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002bac:	d3fb      	bcc.n	8002ba6 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8002bae:	f001 fcfd 	bl	80045ac <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8002bb2:	f7ff fe67 	bl	8002884 <main>
  bx lr
 8002bb6:	4770      	bx	lr
  ldr r0, =_sdata
 8002bb8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002bbc:	200001d0 	.word	0x200001d0
  ldr r2, =_sidata
 8002bc0:	08007690 	.word	0x08007690
  ldr r2, =_sbss
 8002bc4:	200001d0 	.word	0x200001d0
  ldr r4, =_ebss
 8002bc8:	20000550 	.word	0x20000550

08002bcc <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8002bcc:	e7fe      	b.n	8002bcc <ADC1_2_IRQHandler>
	...

08002bd0 <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8002bd0:	b480      	push	{r7}
 8002bd2:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8002bd4:	4b05      	ldr	r3, [pc, #20]	@ (8002bec <HAL_IncTick+0x1c>)
 8002bd6:	781b      	ldrb	r3, [r3, #0]
 8002bd8:	461a      	mov	r2, r3
 8002bda:	4b05      	ldr	r3, [pc, #20]	@ (8002bf0 <HAL_IncTick+0x20>)
 8002bdc:	681b      	ldr	r3, [r3, #0]
 8002bde:	4413      	add	r3, r2
 8002be0:	4a03      	ldr	r2, [pc, #12]	@ (8002bf0 <HAL_IncTick+0x20>)
 8002be2:	6013      	str	r3, [r2, #0]
}
 8002be4:	bf00      	nop
 8002be6:	46bd      	mov	sp, r7
 8002be8:	bc80      	pop	{r7}
 8002bea:	4770      	bx	lr
 8002bec:	20000004 	.word	0x20000004
 8002bf0:	20000400 	.word	0x20000400

08002bf4 <atof>:
 8002bf4:	2100      	movs	r1, #0
 8002bf6:	f000 bdff 	b.w	80037f8 <strtod>

08002bfa <atoi>:
 8002bfa:	220a      	movs	r2, #10
 8002bfc:	2100      	movs	r1, #0
 8002bfe:	f000 be81 	b.w	8003904 <strtol>

08002c02 <sulp>:
 8002c02:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002c06:	460f      	mov	r7, r1
 8002c08:	4690      	mov	r8, r2
 8002c0a:	f003 fb2b 	bl	8006264 <__ulp>
 8002c0e:	4604      	mov	r4, r0
 8002c10:	460d      	mov	r5, r1
 8002c12:	f1b8 0f00 	cmp.w	r8, #0
 8002c16:	d011      	beq.n	8002c3c <sulp+0x3a>
 8002c18:	f3c7 530a 	ubfx	r3, r7, #20, #11
 8002c1c:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8002c20:	2b00      	cmp	r3, #0
 8002c22:	dd0b      	ble.n	8002c3c <sulp+0x3a>
 8002c24:	2400      	movs	r4, #0
 8002c26:	051b      	lsls	r3, r3, #20
 8002c28:	f103 557f 	add.w	r5, r3, #1069547520	@ 0x3fc00000
 8002c2c:	f505 1540 	add.w	r5, r5, #3145728	@ 0x300000
 8002c30:	4622      	mov	r2, r4
 8002c32:	462b      	mov	r3, r5
 8002c34:	f7fd fc50 	bl	80004d8 <__aeabi_dmul>
 8002c38:	4604      	mov	r4, r0
 8002c3a:	460d      	mov	r5, r1
 8002c3c:	4620      	mov	r0, r4
 8002c3e:	4629      	mov	r1, r5
 8002c40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002c44:	0000      	movs	r0, r0
	...

08002c48 <_strtod_l>:
 8002c48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002c4c:	b09f      	sub	sp, #124	@ 0x7c
 8002c4e:	9217      	str	r2, [sp, #92]	@ 0x5c
 8002c50:	2200      	movs	r2, #0
 8002c52:	460c      	mov	r4, r1
 8002c54:	921a      	str	r2, [sp, #104]	@ 0x68
 8002c56:	f04f 0a00 	mov.w	sl, #0
 8002c5a:	f04f 0b00 	mov.w	fp, #0
 8002c5e:	460a      	mov	r2, r1
 8002c60:	9005      	str	r0, [sp, #20]
 8002c62:	9219      	str	r2, [sp, #100]	@ 0x64
 8002c64:	7811      	ldrb	r1, [r2, #0]
 8002c66:	292b      	cmp	r1, #43	@ 0x2b
 8002c68:	d048      	beq.n	8002cfc <_strtod_l+0xb4>
 8002c6a:	d836      	bhi.n	8002cda <_strtod_l+0x92>
 8002c6c:	290d      	cmp	r1, #13
 8002c6e:	d830      	bhi.n	8002cd2 <_strtod_l+0x8a>
 8002c70:	2908      	cmp	r1, #8
 8002c72:	d830      	bhi.n	8002cd6 <_strtod_l+0x8e>
 8002c74:	2900      	cmp	r1, #0
 8002c76:	d039      	beq.n	8002cec <_strtod_l+0xa4>
 8002c78:	2200      	movs	r2, #0
 8002c7a:	920e      	str	r2, [sp, #56]	@ 0x38
 8002c7c:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 8002c7e:	782a      	ldrb	r2, [r5, #0]
 8002c80:	2a30      	cmp	r2, #48	@ 0x30
 8002c82:	f040 80b0 	bne.w	8002de6 <_strtod_l+0x19e>
 8002c86:	786a      	ldrb	r2, [r5, #1]
 8002c88:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8002c8c:	2a58      	cmp	r2, #88	@ 0x58
 8002c8e:	d16c      	bne.n	8002d6a <_strtod_l+0x122>
 8002c90:	9302      	str	r3, [sp, #8]
 8002c92:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002c94:	4a8f      	ldr	r2, [pc, #572]	@ (8002ed4 <_strtod_l+0x28c>)
 8002c96:	9301      	str	r3, [sp, #4]
 8002c98:	ab1a      	add	r3, sp, #104	@ 0x68
 8002c9a:	9300      	str	r3, [sp, #0]
 8002c9c:	9805      	ldr	r0, [sp, #20]
 8002c9e:	ab1b      	add	r3, sp, #108	@ 0x6c
 8002ca0:	a919      	add	r1, sp, #100	@ 0x64
 8002ca2:	f002 fbd9 	bl	8005458 <__gethex>
 8002ca6:	f010 060f 	ands.w	r6, r0, #15
 8002caa:	4604      	mov	r4, r0
 8002cac:	d005      	beq.n	8002cba <_strtod_l+0x72>
 8002cae:	2e06      	cmp	r6, #6
 8002cb0:	d126      	bne.n	8002d00 <_strtod_l+0xb8>
 8002cb2:	2300      	movs	r3, #0
 8002cb4:	3501      	adds	r5, #1
 8002cb6:	9519      	str	r5, [sp, #100]	@ 0x64
 8002cb8:	930e      	str	r3, [sp, #56]	@ 0x38
 8002cba:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8002cbc:	2b00      	cmp	r3, #0
 8002cbe:	f040 8582 	bne.w	80037c6 <_strtod_l+0xb7e>
 8002cc2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002cc4:	b1bb      	cbz	r3, 8002cf6 <_strtod_l+0xae>
 8002cc6:	4650      	mov	r0, sl
 8002cc8:	f10b 4100 	add.w	r1, fp, #2147483648	@ 0x80000000
 8002ccc:	b01f      	add	sp, #124	@ 0x7c
 8002cce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002cd2:	2920      	cmp	r1, #32
 8002cd4:	d1d0      	bne.n	8002c78 <_strtod_l+0x30>
 8002cd6:	3201      	adds	r2, #1
 8002cd8:	e7c3      	b.n	8002c62 <_strtod_l+0x1a>
 8002cda:	292d      	cmp	r1, #45	@ 0x2d
 8002cdc:	d1cc      	bne.n	8002c78 <_strtod_l+0x30>
 8002cde:	2101      	movs	r1, #1
 8002ce0:	910e      	str	r1, [sp, #56]	@ 0x38
 8002ce2:	1c51      	adds	r1, r2, #1
 8002ce4:	9119      	str	r1, [sp, #100]	@ 0x64
 8002ce6:	7852      	ldrb	r2, [r2, #1]
 8002ce8:	2a00      	cmp	r2, #0
 8002cea:	d1c7      	bne.n	8002c7c <_strtod_l+0x34>
 8002cec:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8002cee:	9419      	str	r4, [sp, #100]	@ 0x64
 8002cf0:	2b00      	cmp	r3, #0
 8002cf2:	f040 8566 	bne.w	80037c2 <_strtod_l+0xb7a>
 8002cf6:	4650      	mov	r0, sl
 8002cf8:	4659      	mov	r1, fp
 8002cfa:	e7e7      	b.n	8002ccc <_strtod_l+0x84>
 8002cfc:	2100      	movs	r1, #0
 8002cfe:	e7ef      	b.n	8002ce0 <_strtod_l+0x98>
 8002d00:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8002d02:	b13a      	cbz	r2, 8002d14 <_strtod_l+0xcc>
 8002d04:	2135      	movs	r1, #53	@ 0x35
 8002d06:	a81c      	add	r0, sp, #112	@ 0x70
 8002d08:	f003 fb9c 	bl	8006444 <__copybits>
 8002d0c:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8002d0e:	9805      	ldr	r0, [sp, #20]
 8002d10:	f002 ff7c 	bl	8005c0c <_Bfree>
 8002d14:	3e01      	subs	r6, #1
 8002d16:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8002d18:	2e04      	cmp	r6, #4
 8002d1a:	d806      	bhi.n	8002d2a <_strtod_l+0xe2>
 8002d1c:	e8df f006 	tbb	[pc, r6]
 8002d20:	201d0314 	.word	0x201d0314
 8002d24:	14          	.byte	0x14
 8002d25:	00          	.byte	0x00
 8002d26:	e9dd ab1c 	ldrd	sl, fp, [sp, #112]	@ 0x70
 8002d2a:	05e1      	lsls	r1, r4, #23
 8002d2c:	bf48      	it	mi
 8002d2e:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 8002d32:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8002d36:	0d1b      	lsrs	r3, r3, #20
 8002d38:	051b      	lsls	r3, r3, #20
 8002d3a:	2b00      	cmp	r3, #0
 8002d3c:	d1bd      	bne.n	8002cba <_strtod_l+0x72>
 8002d3e:	f001 fc2f 	bl	80045a0 <__errno>
 8002d42:	2322      	movs	r3, #34	@ 0x22
 8002d44:	6003      	str	r3, [r0, #0]
 8002d46:	e7b8      	b.n	8002cba <_strtod_l+0x72>
 8002d48:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 8002d4c:	e9dd a31c 	ldrd	sl, r3, [sp, #112]	@ 0x70
 8002d50:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 8002d54:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8002d58:	e7e7      	b.n	8002d2a <_strtod_l+0xe2>
 8002d5a:	f8df b17c 	ldr.w	fp, [pc, #380]	@ 8002ed8 <_strtod_l+0x290>
 8002d5e:	e7e4      	b.n	8002d2a <_strtod_l+0xe2>
 8002d60:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 8002d64:	f04f 3aff 	mov.w	sl, #4294967295
 8002d68:	e7df      	b.n	8002d2a <_strtod_l+0xe2>
 8002d6a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8002d6c:	1c5a      	adds	r2, r3, #1
 8002d6e:	9219      	str	r2, [sp, #100]	@ 0x64
 8002d70:	785b      	ldrb	r3, [r3, #1]
 8002d72:	2b30      	cmp	r3, #48	@ 0x30
 8002d74:	d0f9      	beq.n	8002d6a <_strtod_l+0x122>
 8002d76:	2b00      	cmp	r3, #0
 8002d78:	d09f      	beq.n	8002cba <_strtod_l+0x72>
 8002d7a:	2301      	movs	r3, #1
 8002d7c:	2700      	movs	r7, #0
 8002d7e:	220a      	movs	r2, #10
 8002d80:	46b9      	mov	r9, r7
 8002d82:	9308      	str	r3, [sp, #32]
 8002d84:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8002d86:	970b      	str	r7, [sp, #44]	@ 0x2c
 8002d88:	930c      	str	r3, [sp, #48]	@ 0x30
 8002d8a:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8002d8c:	7805      	ldrb	r5, [r0, #0]
 8002d8e:	f1a5 0330 	sub.w	r3, r5, #48	@ 0x30
 8002d92:	b2d9      	uxtb	r1, r3
 8002d94:	2909      	cmp	r1, #9
 8002d96:	d928      	bls.n	8002dea <_strtod_l+0x1a2>
 8002d98:	2201      	movs	r2, #1
 8002d9a:	4950      	ldr	r1, [pc, #320]	@ (8002edc <_strtod_l+0x294>)
 8002d9c:	f001 fb66 	bl	800446c <strncmp>
 8002da0:	2800      	cmp	r0, #0
 8002da2:	d032      	beq.n	8002e0a <_strtod_l+0x1c2>
 8002da4:	2000      	movs	r0, #0
 8002da6:	462a      	mov	r2, r5
 8002da8:	4603      	mov	r3, r0
 8002daa:	464d      	mov	r5, r9
 8002dac:	900a      	str	r0, [sp, #40]	@ 0x28
 8002dae:	2a65      	cmp	r2, #101	@ 0x65
 8002db0:	d001      	beq.n	8002db6 <_strtod_l+0x16e>
 8002db2:	2a45      	cmp	r2, #69	@ 0x45
 8002db4:	d114      	bne.n	8002de0 <_strtod_l+0x198>
 8002db6:	b91d      	cbnz	r5, 8002dc0 <_strtod_l+0x178>
 8002db8:	9a08      	ldr	r2, [sp, #32]
 8002dba:	4302      	orrs	r2, r0
 8002dbc:	d096      	beq.n	8002cec <_strtod_l+0xa4>
 8002dbe:	2500      	movs	r5, #0
 8002dc0:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 8002dc2:	1c62      	adds	r2, r4, #1
 8002dc4:	9219      	str	r2, [sp, #100]	@ 0x64
 8002dc6:	7862      	ldrb	r2, [r4, #1]
 8002dc8:	2a2b      	cmp	r2, #43	@ 0x2b
 8002dca:	d07a      	beq.n	8002ec2 <_strtod_l+0x27a>
 8002dcc:	2a2d      	cmp	r2, #45	@ 0x2d
 8002dce:	d07e      	beq.n	8002ece <_strtod_l+0x286>
 8002dd0:	f04f 0c00 	mov.w	ip, #0
 8002dd4:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 8002dd8:	2909      	cmp	r1, #9
 8002dda:	f240 8085 	bls.w	8002ee8 <_strtod_l+0x2a0>
 8002dde:	9419      	str	r4, [sp, #100]	@ 0x64
 8002de0:	f04f 0800 	mov.w	r8, #0
 8002de4:	e0a5      	b.n	8002f32 <_strtod_l+0x2ea>
 8002de6:	2300      	movs	r3, #0
 8002de8:	e7c8      	b.n	8002d7c <_strtod_l+0x134>
 8002dea:	f1b9 0f08 	cmp.w	r9, #8
 8002dee:	bfd8      	it	le
 8002df0:	990b      	ldrle	r1, [sp, #44]	@ 0x2c
 8002df2:	f100 0001 	add.w	r0, r0, #1
 8002df6:	bfd6      	itet	le
 8002df8:	fb02 3301 	mlale	r3, r2, r1, r3
 8002dfc:	fb02 3707 	mlagt	r7, r2, r7, r3
 8002e00:	930b      	strle	r3, [sp, #44]	@ 0x2c
 8002e02:	f109 0901 	add.w	r9, r9, #1
 8002e06:	9019      	str	r0, [sp, #100]	@ 0x64
 8002e08:	e7bf      	b.n	8002d8a <_strtod_l+0x142>
 8002e0a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8002e0c:	1c5a      	adds	r2, r3, #1
 8002e0e:	9219      	str	r2, [sp, #100]	@ 0x64
 8002e10:	785a      	ldrb	r2, [r3, #1]
 8002e12:	f1b9 0f00 	cmp.w	r9, #0
 8002e16:	d03b      	beq.n	8002e90 <_strtod_l+0x248>
 8002e18:	464d      	mov	r5, r9
 8002e1a:	900a      	str	r0, [sp, #40]	@ 0x28
 8002e1c:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 8002e20:	2b09      	cmp	r3, #9
 8002e22:	d912      	bls.n	8002e4a <_strtod_l+0x202>
 8002e24:	2301      	movs	r3, #1
 8002e26:	e7c2      	b.n	8002dae <_strtod_l+0x166>
 8002e28:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8002e2a:	3001      	adds	r0, #1
 8002e2c:	1c5a      	adds	r2, r3, #1
 8002e2e:	9219      	str	r2, [sp, #100]	@ 0x64
 8002e30:	785a      	ldrb	r2, [r3, #1]
 8002e32:	2a30      	cmp	r2, #48	@ 0x30
 8002e34:	d0f8      	beq.n	8002e28 <_strtod_l+0x1e0>
 8002e36:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 8002e3a:	2b08      	cmp	r3, #8
 8002e3c:	f200 84c8 	bhi.w	80037d0 <_strtod_l+0xb88>
 8002e40:	900a      	str	r0, [sp, #40]	@ 0x28
 8002e42:	2000      	movs	r0, #0
 8002e44:	4605      	mov	r5, r0
 8002e46:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8002e48:	930c      	str	r3, [sp, #48]	@ 0x30
 8002e4a:	3a30      	subs	r2, #48	@ 0x30
 8002e4c:	f100 0301 	add.w	r3, r0, #1
 8002e50:	d018      	beq.n	8002e84 <_strtod_l+0x23c>
 8002e52:	462e      	mov	r6, r5
 8002e54:	f04f 0e0a 	mov.w	lr, #10
 8002e58:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8002e5a:	4419      	add	r1, r3
 8002e5c:	910a      	str	r1, [sp, #40]	@ 0x28
 8002e5e:	1c71      	adds	r1, r6, #1
 8002e60:	eba1 0c05 	sub.w	ip, r1, r5
 8002e64:	4563      	cmp	r3, ip
 8002e66:	dc15      	bgt.n	8002e94 <_strtod_l+0x24c>
 8002e68:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 8002e6c:	182b      	adds	r3, r5, r0
 8002e6e:	2b08      	cmp	r3, #8
 8002e70:	f105 0501 	add.w	r5, r5, #1
 8002e74:	4405      	add	r5, r0
 8002e76:	dc1a      	bgt.n	8002eae <_strtod_l+0x266>
 8002e78:	230a      	movs	r3, #10
 8002e7a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8002e7c:	fb03 2301 	mla	r3, r3, r1, r2
 8002e80:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002e82:	2300      	movs	r3, #0
 8002e84:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8002e86:	4618      	mov	r0, r3
 8002e88:	1c51      	adds	r1, r2, #1
 8002e8a:	9119      	str	r1, [sp, #100]	@ 0x64
 8002e8c:	7852      	ldrb	r2, [r2, #1]
 8002e8e:	e7c5      	b.n	8002e1c <_strtod_l+0x1d4>
 8002e90:	4648      	mov	r0, r9
 8002e92:	e7ce      	b.n	8002e32 <_strtod_l+0x1ea>
 8002e94:	2e08      	cmp	r6, #8
 8002e96:	dc05      	bgt.n	8002ea4 <_strtod_l+0x25c>
 8002e98:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8002e9a:	fb0e f606 	mul.w	r6, lr, r6
 8002e9e:	960b      	str	r6, [sp, #44]	@ 0x2c
 8002ea0:	460e      	mov	r6, r1
 8002ea2:	e7dc      	b.n	8002e5e <_strtod_l+0x216>
 8002ea4:	2910      	cmp	r1, #16
 8002ea6:	bfd8      	it	le
 8002ea8:	fb0e f707 	mulle.w	r7, lr, r7
 8002eac:	e7f8      	b.n	8002ea0 <_strtod_l+0x258>
 8002eae:	2b0f      	cmp	r3, #15
 8002eb0:	bfdc      	itt	le
 8002eb2:	230a      	movle	r3, #10
 8002eb4:	fb03 2707 	mlale	r7, r3, r7, r2
 8002eb8:	e7e3      	b.n	8002e82 <_strtod_l+0x23a>
 8002eba:	2300      	movs	r3, #0
 8002ebc:	930a      	str	r3, [sp, #40]	@ 0x28
 8002ebe:	2301      	movs	r3, #1
 8002ec0:	e77a      	b.n	8002db8 <_strtod_l+0x170>
 8002ec2:	f04f 0c00 	mov.w	ip, #0
 8002ec6:	1ca2      	adds	r2, r4, #2
 8002ec8:	9219      	str	r2, [sp, #100]	@ 0x64
 8002eca:	78a2      	ldrb	r2, [r4, #2]
 8002ecc:	e782      	b.n	8002dd4 <_strtod_l+0x18c>
 8002ece:	f04f 0c01 	mov.w	ip, #1
 8002ed2:	e7f8      	b.n	8002ec6 <_strtod_l+0x27e>
 8002ed4:	08007440 	.word	0x08007440
 8002ed8:	7ff00000 	.word	0x7ff00000
 8002edc:	08007258 	.word	0x08007258
 8002ee0:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8002ee2:	1c51      	adds	r1, r2, #1
 8002ee4:	9119      	str	r1, [sp, #100]	@ 0x64
 8002ee6:	7852      	ldrb	r2, [r2, #1]
 8002ee8:	2a30      	cmp	r2, #48	@ 0x30
 8002eea:	d0f9      	beq.n	8002ee0 <_strtod_l+0x298>
 8002eec:	f1a2 0131 	sub.w	r1, r2, #49	@ 0x31
 8002ef0:	2908      	cmp	r1, #8
 8002ef2:	f63f af75 	bhi.w	8002de0 <_strtod_l+0x198>
 8002ef6:	f04f 080a 	mov.w	r8, #10
 8002efa:	3a30      	subs	r2, #48	@ 0x30
 8002efc:	9209      	str	r2, [sp, #36]	@ 0x24
 8002efe:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8002f00:	920f      	str	r2, [sp, #60]	@ 0x3c
 8002f02:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8002f04:	1c56      	adds	r6, r2, #1
 8002f06:	9619      	str	r6, [sp, #100]	@ 0x64
 8002f08:	7852      	ldrb	r2, [r2, #1]
 8002f0a:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 8002f0e:	f1be 0f09 	cmp.w	lr, #9
 8002f12:	d939      	bls.n	8002f88 <_strtod_l+0x340>
 8002f14:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8002f16:	f644 681f 	movw	r8, #19999	@ 0x4e1f
 8002f1a:	1a76      	subs	r6, r6, r1
 8002f1c:	2e08      	cmp	r6, #8
 8002f1e:	dc03      	bgt.n	8002f28 <_strtod_l+0x2e0>
 8002f20:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8002f22:	4588      	cmp	r8, r1
 8002f24:	bfa8      	it	ge
 8002f26:	4688      	movge	r8, r1
 8002f28:	f1bc 0f00 	cmp.w	ip, #0
 8002f2c:	d001      	beq.n	8002f32 <_strtod_l+0x2ea>
 8002f2e:	f1c8 0800 	rsb	r8, r8, #0
 8002f32:	2d00      	cmp	r5, #0
 8002f34:	d14e      	bne.n	8002fd4 <_strtod_l+0x38c>
 8002f36:	9908      	ldr	r1, [sp, #32]
 8002f38:	4308      	orrs	r0, r1
 8002f3a:	f47f aebe 	bne.w	8002cba <_strtod_l+0x72>
 8002f3e:	2b00      	cmp	r3, #0
 8002f40:	f47f aed4 	bne.w	8002cec <_strtod_l+0xa4>
 8002f44:	2a69      	cmp	r2, #105	@ 0x69
 8002f46:	d028      	beq.n	8002f9a <_strtod_l+0x352>
 8002f48:	dc25      	bgt.n	8002f96 <_strtod_l+0x34e>
 8002f4a:	2a49      	cmp	r2, #73	@ 0x49
 8002f4c:	d025      	beq.n	8002f9a <_strtod_l+0x352>
 8002f4e:	2a4e      	cmp	r2, #78	@ 0x4e
 8002f50:	f47f aecc 	bne.w	8002cec <_strtod_l+0xa4>
 8002f54:	4999      	ldr	r1, [pc, #612]	@ (80031bc <_strtod_l+0x574>)
 8002f56:	a819      	add	r0, sp, #100	@ 0x64
 8002f58:	f002 fca0 	bl	800589c <__match>
 8002f5c:	2800      	cmp	r0, #0
 8002f5e:	f43f aec5 	beq.w	8002cec <_strtod_l+0xa4>
 8002f62:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8002f64:	781b      	ldrb	r3, [r3, #0]
 8002f66:	2b28      	cmp	r3, #40	@ 0x28
 8002f68:	d12e      	bne.n	8002fc8 <_strtod_l+0x380>
 8002f6a:	4995      	ldr	r1, [pc, #596]	@ (80031c0 <_strtod_l+0x578>)
 8002f6c:	aa1c      	add	r2, sp, #112	@ 0x70
 8002f6e:	a819      	add	r0, sp, #100	@ 0x64
 8002f70:	f002 fca8 	bl	80058c4 <__hexnan>
 8002f74:	2805      	cmp	r0, #5
 8002f76:	d127      	bne.n	8002fc8 <_strtod_l+0x380>
 8002f78:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8002f7a:	f8dd a070 	ldr.w	sl, [sp, #112]	@ 0x70
 8002f7e:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 8002f82:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 8002f86:	e698      	b.n	8002cba <_strtod_l+0x72>
 8002f88:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8002f8a:	fb08 2101 	mla	r1, r8, r1, r2
 8002f8e:	f1a1 0230 	sub.w	r2, r1, #48	@ 0x30
 8002f92:	9209      	str	r2, [sp, #36]	@ 0x24
 8002f94:	e7b5      	b.n	8002f02 <_strtod_l+0x2ba>
 8002f96:	2a6e      	cmp	r2, #110	@ 0x6e
 8002f98:	e7da      	b.n	8002f50 <_strtod_l+0x308>
 8002f9a:	498a      	ldr	r1, [pc, #552]	@ (80031c4 <_strtod_l+0x57c>)
 8002f9c:	a819      	add	r0, sp, #100	@ 0x64
 8002f9e:	f002 fc7d 	bl	800589c <__match>
 8002fa2:	2800      	cmp	r0, #0
 8002fa4:	f43f aea2 	beq.w	8002cec <_strtod_l+0xa4>
 8002fa8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8002faa:	4987      	ldr	r1, [pc, #540]	@ (80031c8 <_strtod_l+0x580>)
 8002fac:	3b01      	subs	r3, #1
 8002fae:	a819      	add	r0, sp, #100	@ 0x64
 8002fb0:	9319      	str	r3, [sp, #100]	@ 0x64
 8002fb2:	f002 fc73 	bl	800589c <__match>
 8002fb6:	b910      	cbnz	r0, 8002fbe <_strtod_l+0x376>
 8002fb8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8002fba:	3301      	adds	r3, #1
 8002fbc:	9319      	str	r3, [sp, #100]	@ 0x64
 8002fbe:	f04f 0a00 	mov.w	sl, #0
 8002fc2:	f8df b208 	ldr.w	fp, [pc, #520]	@ 80031cc <_strtod_l+0x584>
 8002fc6:	e678      	b.n	8002cba <_strtod_l+0x72>
 8002fc8:	4881      	ldr	r0, [pc, #516]	@ (80031d0 <_strtod_l+0x588>)
 8002fca:	f001 fb33 	bl	8004634 <nan>
 8002fce:	4682      	mov	sl, r0
 8002fd0:	468b      	mov	fp, r1
 8002fd2:	e672      	b.n	8002cba <_strtod_l+0x72>
 8002fd4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002fd6:	f1b9 0f00 	cmp.w	r9, #0
 8002fda:	bf08      	it	eq
 8002fdc:	46a9      	moveq	r9, r5
 8002fde:	eba8 0303 	sub.w	r3, r8, r3
 8002fe2:	2d10      	cmp	r5, #16
 8002fe4:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8002fe6:	462c      	mov	r4, r5
 8002fe8:	9309      	str	r3, [sp, #36]	@ 0x24
 8002fea:	bfa8      	it	ge
 8002fec:	2410      	movge	r4, #16
 8002fee:	f7fd f9f9 	bl	80003e4 <__aeabi_ui2d>
 8002ff2:	2d09      	cmp	r5, #9
 8002ff4:	4682      	mov	sl, r0
 8002ff6:	468b      	mov	fp, r1
 8002ff8:	dc11      	bgt.n	800301e <_strtod_l+0x3d6>
 8002ffa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002ffc:	2b00      	cmp	r3, #0
 8002ffe:	f43f ae5c 	beq.w	8002cba <_strtod_l+0x72>
 8003002:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003004:	dd76      	ble.n	80030f4 <_strtod_l+0x4ac>
 8003006:	2b16      	cmp	r3, #22
 8003008:	dc5d      	bgt.n	80030c6 <_strtod_l+0x47e>
 800300a:	4972      	ldr	r1, [pc, #456]	@ (80031d4 <_strtod_l+0x58c>)
 800300c:	4652      	mov	r2, sl
 800300e:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8003012:	465b      	mov	r3, fp
 8003014:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003018:	f7fd fa5e 	bl	80004d8 <__aeabi_dmul>
 800301c:	e7d7      	b.n	8002fce <_strtod_l+0x386>
 800301e:	4b6d      	ldr	r3, [pc, #436]	@ (80031d4 <_strtod_l+0x58c>)
 8003020:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8003024:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
 8003028:	f7fd fa56 	bl	80004d8 <__aeabi_dmul>
 800302c:	4682      	mov	sl, r0
 800302e:	4638      	mov	r0, r7
 8003030:	468b      	mov	fp, r1
 8003032:	f7fd f9d7 	bl	80003e4 <__aeabi_ui2d>
 8003036:	4602      	mov	r2, r0
 8003038:	460b      	mov	r3, r1
 800303a:	4650      	mov	r0, sl
 800303c:	4659      	mov	r1, fp
 800303e:	f7fd f895 	bl	800016c <__adddf3>
 8003042:	2d0f      	cmp	r5, #15
 8003044:	4682      	mov	sl, r0
 8003046:	468b      	mov	fp, r1
 8003048:	ddd7      	ble.n	8002ffa <_strtod_l+0x3b2>
 800304a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800304c:	1b2c      	subs	r4, r5, r4
 800304e:	441c      	add	r4, r3
 8003050:	2c00      	cmp	r4, #0
 8003052:	f340 8093 	ble.w	800317c <_strtod_l+0x534>
 8003056:	f014 030f 	ands.w	r3, r4, #15
 800305a:	d00a      	beq.n	8003072 <_strtod_l+0x42a>
 800305c:	495d      	ldr	r1, [pc, #372]	@ (80031d4 <_strtod_l+0x58c>)
 800305e:	4652      	mov	r2, sl
 8003060:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8003064:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003068:	465b      	mov	r3, fp
 800306a:	f7fd fa35 	bl	80004d8 <__aeabi_dmul>
 800306e:	4682      	mov	sl, r0
 8003070:	468b      	mov	fp, r1
 8003072:	f034 040f 	bics.w	r4, r4, #15
 8003076:	d073      	beq.n	8003160 <_strtod_l+0x518>
 8003078:	f5b4 7f9a 	cmp.w	r4, #308	@ 0x134
 800307c:	dd49      	ble.n	8003112 <_strtod_l+0x4ca>
 800307e:	2400      	movs	r4, #0
 8003080:	46a0      	mov	r8, r4
 8003082:	46a1      	mov	r9, r4
 8003084:	940b      	str	r4, [sp, #44]	@ 0x2c
 8003086:	2322      	movs	r3, #34	@ 0x22
 8003088:	f04f 0a00 	mov.w	sl, #0
 800308c:	9a05      	ldr	r2, [sp, #20]
 800308e:	f8df b13c 	ldr.w	fp, [pc, #316]	@ 80031cc <_strtod_l+0x584>
 8003092:	6013      	str	r3, [r2, #0]
 8003094:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003096:	2b00      	cmp	r3, #0
 8003098:	f43f ae0f 	beq.w	8002cba <_strtod_l+0x72>
 800309c:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800309e:	9805      	ldr	r0, [sp, #20]
 80030a0:	f002 fdb4 	bl	8005c0c <_Bfree>
 80030a4:	4649      	mov	r1, r9
 80030a6:	9805      	ldr	r0, [sp, #20]
 80030a8:	f002 fdb0 	bl	8005c0c <_Bfree>
 80030ac:	4641      	mov	r1, r8
 80030ae:	9805      	ldr	r0, [sp, #20]
 80030b0:	f002 fdac 	bl	8005c0c <_Bfree>
 80030b4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80030b6:	9805      	ldr	r0, [sp, #20]
 80030b8:	f002 fda8 	bl	8005c0c <_Bfree>
 80030bc:	4621      	mov	r1, r4
 80030be:	9805      	ldr	r0, [sp, #20]
 80030c0:	f002 fda4 	bl	8005c0c <_Bfree>
 80030c4:	e5f9      	b.n	8002cba <_strtod_l+0x72>
 80030c6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80030c8:	f1c5 0325 	rsb	r3, r5, #37	@ 0x25
 80030cc:	4293      	cmp	r3, r2
 80030ce:	dbbc      	blt.n	800304a <_strtod_l+0x402>
 80030d0:	4c40      	ldr	r4, [pc, #256]	@ (80031d4 <_strtod_l+0x58c>)
 80030d2:	f1c5 050f 	rsb	r5, r5, #15
 80030d6:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 80030da:	4652      	mov	r2, sl
 80030dc:	e9d1 0100 	ldrd	r0, r1, [r1]
 80030e0:	465b      	mov	r3, fp
 80030e2:	f7fd f9f9 	bl	80004d8 <__aeabi_dmul>
 80030e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80030e8:	1b5d      	subs	r5, r3, r5
 80030ea:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 80030ee:	e9d4 2300 	ldrd	r2, r3, [r4]
 80030f2:	e791      	b.n	8003018 <_strtod_l+0x3d0>
 80030f4:	3316      	adds	r3, #22
 80030f6:	dba8      	blt.n	800304a <_strtod_l+0x402>
 80030f8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80030fa:	4650      	mov	r0, sl
 80030fc:	eba3 0808 	sub.w	r8, r3, r8
 8003100:	4b34      	ldr	r3, [pc, #208]	@ (80031d4 <_strtod_l+0x58c>)
 8003102:	4659      	mov	r1, fp
 8003104:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
 8003108:	e9d8 2300 	ldrd	r2, r3, [r8]
 800310c:	f7fd fb0e 	bl	800072c <__aeabi_ddiv>
 8003110:	e75d      	b.n	8002fce <_strtod_l+0x386>
 8003112:	2300      	movs	r3, #0
 8003114:	4650      	mov	r0, sl
 8003116:	4659      	mov	r1, fp
 8003118:	461e      	mov	r6, r3
 800311a:	4f2f      	ldr	r7, [pc, #188]	@ (80031d8 <_strtod_l+0x590>)
 800311c:	1124      	asrs	r4, r4, #4
 800311e:	2c01      	cmp	r4, #1
 8003120:	dc21      	bgt.n	8003166 <_strtod_l+0x51e>
 8003122:	b10b      	cbz	r3, 8003128 <_strtod_l+0x4e0>
 8003124:	4682      	mov	sl, r0
 8003126:	468b      	mov	fp, r1
 8003128:	492b      	ldr	r1, [pc, #172]	@ (80031d8 <_strtod_l+0x590>)
 800312a:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 800312e:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 8003132:	4652      	mov	r2, sl
 8003134:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003138:	465b      	mov	r3, fp
 800313a:	f7fd f9cd 	bl	80004d8 <__aeabi_dmul>
 800313e:	4b23      	ldr	r3, [pc, #140]	@ (80031cc <_strtod_l+0x584>)
 8003140:	460a      	mov	r2, r1
 8003142:	400b      	ands	r3, r1
 8003144:	4925      	ldr	r1, [pc, #148]	@ (80031dc <_strtod_l+0x594>)
 8003146:	4682      	mov	sl, r0
 8003148:	428b      	cmp	r3, r1
 800314a:	d898      	bhi.n	800307e <_strtod_l+0x436>
 800314c:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
 8003150:	428b      	cmp	r3, r1
 8003152:	bf86      	itte	hi
 8003154:	f04f 3aff 	movhi.w	sl, #4294967295
 8003158:	f8df b084 	ldrhi.w	fp, [pc, #132]	@ 80031e0 <_strtod_l+0x598>
 800315c:	f102 7b54 	addls.w	fp, r2, #55574528	@ 0x3500000
 8003160:	2300      	movs	r3, #0
 8003162:	9308      	str	r3, [sp, #32]
 8003164:	e076      	b.n	8003254 <_strtod_l+0x60c>
 8003166:	07e2      	lsls	r2, r4, #31
 8003168:	d504      	bpl.n	8003174 <_strtod_l+0x52c>
 800316a:	e9d7 2300 	ldrd	r2, r3, [r7]
 800316e:	f7fd f9b3 	bl	80004d8 <__aeabi_dmul>
 8003172:	2301      	movs	r3, #1
 8003174:	3601      	adds	r6, #1
 8003176:	1064      	asrs	r4, r4, #1
 8003178:	3708      	adds	r7, #8
 800317a:	e7d0      	b.n	800311e <_strtod_l+0x4d6>
 800317c:	d0f0      	beq.n	8003160 <_strtod_l+0x518>
 800317e:	4264      	negs	r4, r4
 8003180:	f014 020f 	ands.w	r2, r4, #15
 8003184:	d00a      	beq.n	800319c <_strtod_l+0x554>
 8003186:	4b13      	ldr	r3, [pc, #76]	@ (80031d4 <_strtod_l+0x58c>)
 8003188:	4650      	mov	r0, sl
 800318a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800318e:	4659      	mov	r1, fp
 8003190:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003194:	f7fd faca 	bl	800072c <__aeabi_ddiv>
 8003198:	4682      	mov	sl, r0
 800319a:	468b      	mov	fp, r1
 800319c:	1124      	asrs	r4, r4, #4
 800319e:	d0df      	beq.n	8003160 <_strtod_l+0x518>
 80031a0:	2c1f      	cmp	r4, #31
 80031a2:	dd1f      	ble.n	80031e4 <_strtod_l+0x59c>
 80031a4:	2400      	movs	r4, #0
 80031a6:	46a0      	mov	r8, r4
 80031a8:	46a1      	mov	r9, r4
 80031aa:	940b      	str	r4, [sp, #44]	@ 0x2c
 80031ac:	2322      	movs	r3, #34	@ 0x22
 80031ae:	9a05      	ldr	r2, [sp, #20]
 80031b0:	f04f 0a00 	mov.w	sl, #0
 80031b4:	f04f 0b00 	mov.w	fp, #0
 80031b8:	6013      	str	r3, [r2, #0]
 80031ba:	e76b      	b.n	8003094 <_strtod_l+0x44c>
 80031bc:	08007267 	.word	0x08007267
 80031c0:	0800742c 	.word	0x0800742c
 80031c4:	0800725f 	.word	0x0800725f
 80031c8:	08007299 	.word	0x08007299
 80031cc:	7ff00000 	.word	0x7ff00000
 80031d0:	08007428 	.word	0x08007428
 80031d4:	080075b8 	.word	0x080075b8
 80031d8:	08007590 	.word	0x08007590
 80031dc:	7ca00000 	.word	0x7ca00000
 80031e0:	7fefffff 	.word	0x7fefffff
 80031e4:	f014 0310 	ands.w	r3, r4, #16
 80031e8:	bf18      	it	ne
 80031ea:	236a      	movne	r3, #106	@ 0x6a
 80031ec:	4650      	mov	r0, sl
 80031ee:	9308      	str	r3, [sp, #32]
 80031f0:	4659      	mov	r1, fp
 80031f2:	2300      	movs	r3, #0
 80031f4:	4e77      	ldr	r6, [pc, #476]	@ (80033d4 <_strtod_l+0x78c>)
 80031f6:	07e7      	lsls	r7, r4, #31
 80031f8:	d504      	bpl.n	8003204 <_strtod_l+0x5bc>
 80031fa:	e9d6 2300 	ldrd	r2, r3, [r6]
 80031fe:	f7fd f96b 	bl	80004d8 <__aeabi_dmul>
 8003202:	2301      	movs	r3, #1
 8003204:	1064      	asrs	r4, r4, #1
 8003206:	f106 0608 	add.w	r6, r6, #8
 800320a:	d1f4      	bne.n	80031f6 <_strtod_l+0x5ae>
 800320c:	b10b      	cbz	r3, 8003212 <_strtod_l+0x5ca>
 800320e:	4682      	mov	sl, r0
 8003210:	468b      	mov	fp, r1
 8003212:	9b08      	ldr	r3, [sp, #32]
 8003214:	b1b3      	cbz	r3, 8003244 <_strtod_l+0x5fc>
 8003216:	f3cb 520a 	ubfx	r2, fp, #20, #11
 800321a:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
 800321e:	2b00      	cmp	r3, #0
 8003220:	4659      	mov	r1, fp
 8003222:	dd0f      	ble.n	8003244 <_strtod_l+0x5fc>
 8003224:	2b1f      	cmp	r3, #31
 8003226:	dd58      	ble.n	80032da <_strtod_l+0x692>
 8003228:	2b34      	cmp	r3, #52	@ 0x34
 800322a:	bfd8      	it	le
 800322c:	f04f 33ff 	movle.w	r3, #4294967295
 8003230:	f04f 0a00 	mov.w	sl, #0
 8003234:	bfcf      	iteee	gt
 8003236:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 800323a:	f1c2 024b 	rsble	r2, r2, #75	@ 0x4b
 800323e:	4093      	lslle	r3, r2
 8003240:	ea03 0b01 	andle.w	fp, r3, r1
 8003244:	2200      	movs	r2, #0
 8003246:	2300      	movs	r3, #0
 8003248:	4650      	mov	r0, sl
 800324a:	4659      	mov	r1, fp
 800324c:	f7fd fbac 	bl	80009a8 <__aeabi_dcmpeq>
 8003250:	2800      	cmp	r0, #0
 8003252:	d1a7      	bne.n	80031a4 <_strtod_l+0x55c>
 8003254:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003256:	464a      	mov	r2, r9
 8003258:	9300      	str	r3, [sp, #0]
 800325a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800325c:	462b      	mov	r3, r5
 800325e:	9805      	ldr	r0, [sp, #20]
 8003260:	f002 fd3c 	bl	8005cdc <__s2b>
 8003264:	900b      	str	r0, [sp, #44]	@ 0x2c
 8003266:	2800      	cmp	r0, #0
 8003268:	f43f af09 	beq.w	800307e <_strtod_l+0x436>
 800326c:	2400      	movs	r4, #0
 800326e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003270:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003272:	2a00      	cmp	r2, #0
 8003274:	eba3 0308 	sub.w	r3, r3, r8
 8003278:	bfa8      	it	ge
 800327a:	2300      	movge	r3, #0
 800327c:	46a0      	mov	r8, r4
 800327e:	9312      	str	r3, [sp, #72]	@ 0x48
 8003280:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8003284:	9316      	str	r3, [sp, #88]	@ 0x58
 8003286:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003288:	9805      	ldr	r0, [sp, #20]
 800328a:	6859      	ldr	r1, [r3, #4]
 800328c:	f002 fc7e 	bl	8005b8c <_Balloc>
 8003290:	4681      	mov	r9, r0
 8003292:	2800      	cmp	r0, #0
 8003294:	f43f aef7 	beq.w	8003086 <_strtod_l+0x43e>
 8003298:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800329a:	300c      	adds	r0, #12
 800329c:	691a      	ldr	r2, [r3, #16]
 800329e:	f103 010c 	add.w	r1, r3, #12
 80032a2:	3202      	adds	r2, #2
 80032a4:	0092      	lsls	r2, r2, #2
 80032a6:	f001 f9b6 	bl	8004616 <memcpy>
 80032aa:	ab1c      	add	r3, sp, #112	@ 0x70
 80032ac:	9301      	str	r3, [sp, #4]
 80032ae:	ab1b      	add	r3, sp, #108	@ 0x6c
 80032b0:	9300      	str	r3, [sp, #0]
 80032b2:	4652      	mov	r2, sl
 80032b4:	465b      	mov	r3, fp
 80032b6:	9805      	ldr	r0, [sp, #20]
 80032b8:	e9cd ab0c 	strd	sl, fp, [sp, #48]	@ 0x30
 80032bc:	f003 f83a 	bl	8006334 <__d2b>
 80032c0:	901a      	str	r0, [sp, #104]	@ 0x68
 80032c2:	2800      	cmp	r0, #0
 80032c4:	f43f aedf 	beq.w	8003086 <_strtod_l+0x43e>
 80032c8:	2101      	movs	r1, #1
 80032ca:	9805      	ldr	r0, [sp, #20]
 80032cc:	f002 fd9c 	bl	8005e08 <__i2b>
 80032d0:	4680      	mov	r8, r0
 80032d2:	b948      	cbnz	r0, 80032e8 <_strtod_l+0x6a0>
 80032d4:	f04f 0800 	mov.w	r8, #0
 80032d8:	e6d5      	b.n	8003086 <_strtod_l+0x43e>
 80032da:	f04f 32ff 	mov.w	r2, #4294967295
 80032de:	fa02 f303 	lsl.w	r3, r2, r3
 80032e2:	ea03 0a0a 	and.w	sl, r3, sl
 80032e6:	e7ad      	b.n	8003244 <_strtod_l+0x5fc>
 80032e8:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 80032ea:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 80032ec:	2d00      	cmp	r5, #0
 80032ee:	bfab      	itete	ge
 80032f0:	9b12      	ldrge	r3, [sp, #72]	@ 0x48
 80032f2:	9b16      	ldrlt	r3, [sp, #88]	@ 0x58
 80032f4:	18ef      	addge	r7, r5, r3
 80032f6:	1b5e      	sublt	r6, r3, r5
 80032f8:	9b08      	ldr	r3, [sp, #32]
 80032fa:	bfa8      	it	ge
 80032fc:	9e16      	ldrge	r6, [sp, #88]	@ 0x58
 80032fe:	eba5 0503 	sub.w	r5, r5, r3
 8003302:	4415      	add	r5, r2
 8003304:	4b34      	ldr	r3, [pc, #208]	@ (80033d8 <_strtod_l+0x790>)
 8003306:	f105 35ff 	add.w	r5, r5, #4294967295
 800330a:	bfb8      	it	lt
 800330c:	9f12      	ldrlt	r7, [sp, #72]	@ 0x48
 800330e:	429d      	cmp	r5, r3
 8003310:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 8003314:	da50      	bge.n	80033b8 <_strtod_l+0x770>
 8003316:	1b5b      	subs	r3, r3, r5
 8003318:	2b1f      	cmp	r3, #31
 800331a:	f04f 0101 	mov.w	r1, #1
 800331e:	eba2 0203 	sub.w	r2, r2, r3
 8003322:	dc3d      	bgt.n	80033a0 <_strtod_l+0x758>
 8003324:	fa01 f303 	lsl.w	r3, r1, r3
 8003328:	9313      	str	r3, [sp, #76]	@ 0x4c
 800332a:	2300      	movs	r3, #0
 800332c:	9310      	str	r3, [sp, #64]	@ 0x40
 800332e:	18bd      	adds	r5, r7, r2
 8003330:	9b08      	ldr	r3, [sp, #32]
 8003332:	42af      	cmp	r7, r5
 8003334:	4416      	add	r6, r2
 8003336:	441e      	add	r6, r3
 8003338:	463b      	mov	r3, r7
 800333a:	bfa8      	it	ge
 800333c:	462b      	movge	r3, r5
 800333e:	42b3      	cmp	r3, r6
 8003340:	bfa8      	it	ge
 8003342:	4633      	movge	r3, r6
 8003344:	2b00      	cmp	r3, #0
 8003346:	bfc2      	ittt	gt
 8003348:	1aed      	subgt	r5, r5, r3
 800334a:	1af6      	subgt	r6, r6, r3
 800334c:	1aff      	subgt	r7, r7, r3
 800334e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8003350:	2b00      	cmp	r3, #0
 8003352:	dd16      	ble.n	8003382 <_strtod_l+0x73a>
 8003354:	4641      	mov	r1, r8
 8003356:	461a      	mov	r2, r3
 8003358:	9805      	ldr	r0, [sp, #20]
 800335a:	f002 fe0d 	bl	8005f78 <__pow5mult>
 800335e:	4680      	mov	r8, r0
 8003360:	2800      	cmp	r0, #0
 8003362:	d0b7      	beq.n	80032d4 <_strtod_l+0x68c>
 8003364:	4601      	mov	r1, r0
 8003366:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8003368:	9805      	ldr	r0, [sp, #20]
 800336a:	f002 fd63 	bl	8005e34 <__multiply>
 800336e:	900a      	str	r0, [sp, #40]	@ 0x28
 8003370:	2800      	cmp	r0, #0
 8003372:	f43f ae88 	beq.w	8003086 <_strtod_l+0x43e>
 8003376:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8003378:	9805      	ldr	r0, [sp, #20]
 800337a:	f002 fc47 	bl	8005c0c <_Bfree>
 800337e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003380:	931a      	str	r3, [sp, #104]	@ 0x68
 8003382:	2d00      	cmp	r5, #0
 8003384:	dc1d      	bgt.n	80033c2 <_strtod_l+0x77a>
 8003386:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003388:	2b00      	cmp	r3, #0
 800338a:	dd27      	ble.n	80033dc <_strtod_l+0x794>
 800338c:	4649      	mov	r1, r9
 800338e:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8003390:	9805      	ldr	r0, [sp, #20]
 8003392:	f002 fdf1 	bl	8005f78 <__pow5mult>
 8003396:	4681      	mov	r9, r0
 8003398:	bb00      	cbnz	r0, 80033dc <_strtod_l+0x794>
 800339a:	f04f 0900 	mov.w	r9, #0
 800339e:	e672      	b.n	8003086 <_strtod_l+0x43e>
 80033a0:	f1c5 457f 	rsb	r5, r5, #4278190080	@ 0xff000000
 80033a4:	f505 057f 	add.w	r5, r5, #16711680	@ 0xff0000
 80033a8:	f505 457b 	add.w	r5, r5, #64256	@ 0xfb00
 80033ac:	35e2      	adds	r5, #226	@ 0xe2
 80033ae:	fa01 f305 	lsl.w	r3, r1, r5
 80033b2:	9310      	str	r3, [sp, #64]	@ 0x40
 80033b4:	9113      	str	r1, [sp, #76]	@ 0x4c
 80033b6:	e7ba      	b.n	800332e <_strtod_l+0x6e6>
 80033b8:	2300      	movs	r3, #0
 80033ba:	9310      	str	r3, [sp, #64]	@ 0x40
 80033bc:	2301      	movs	r3, #1
 80033be:	9313      	str	r3, [sp, #76]	@ 0x4c
 80033c0:	e7b5      	b.n	800332e <_strtod_l+0x6e6>
 80033c2:	462a      	mov	r2, r5
 80033c4:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80033c6:	9805      	ldr	r0, [sp, #20]
 80033c8:	f002 fe30 	bl	800602c <__lshift>
 80033cc:	901a      	str	r0, [sp, #104]	@ 0x68
 80033ce:	2800      	cmp	r0, #0
 80033d0:	d1d9      	bne.n	8003386 <_strtod_l+0x73e>
 80033d2:	e658      	b.n	8003086 <_strtod_l+0x43e>
 80033d4:	08007458 	.word	0x08007458
 80033d8:	fffffc02 	.word	0xfffffc02
 80033dc:	2e00      	cmp	r6, #0
 80033de:	dd07      	ble.n	80033f0 <_strtod_l+0x7a8>
 80033e0:	4649      	mov	r1, r9
 80033e2:	4632      	mov	r2, r6
 80033e4:	9805      	ldr	r0, [sp, #20]
 80033e6:	f002 fe21 	bl	800602c <__lshift>
 80033ea:	4681      	mov	r9, r0
 80033ec:	2800      	cmp	r0, #0
 80033ee:	d0d4      	beq.n	800339a <_strtod_l+0x752>
 80033f0:	2f00      	cmp	r7, #0
 80033f2:	dd08      	ble.n	8003406 <_strtod_l+0x7be>
 80033f4:	4641      	mov	r1, r8
 80033f6:	463a      	mov	r2, r7
 80033f8:	9805      	ldr	r0, [sp, #20]
 80033fa:	f002 fe17 	bl	800602c <__lshift>
 80033fe:	4680      	mov	r8, r0
 8003400:	2800      	cmp	r0, #0
 8003402:	f43f ae40 	beq.w	8003086 <_strtod_l+0x43e>
 8003406:	464a      	mov	r2, r9
 8003408:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800340a:	9805      	ldr	r0, [sp, #20]
 800340c:	f002 fe96 	bl	800613c <__mdiff>
 8003410:	4604      	mov	r4, r0
 8003412:	2800      	cmp	r0, #0
 8003414:	f43f ae37 	beq.w	8003086 <_strtod_l+0x43e>
 8003418:	68c3      	ldr	r3, [r0, #12]
 800341a:	4641      	mov	r1, r8
 800341c:	930f      	str	r3, [sp, #60]	@ 0x3c
 800341e:	2300      	movs	r3, #0
 8003420:	60c3      	str	r3, [r0, #12]
 8003422:	f002 fe6f 	bl	8006104 <__mcmp>
 8003426:	2800      	cmp	r0, #0
 8003428:	da3d      	bge.n	80034a6 <_strtod_l+0x85e>
 800342a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800342c:	ea53 030a 	orrs.w	r3, r3, sl
 8003430:	d163      	bne.n	80034fa <_strtod_l+0x8b2>
 8003432:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8003436:	2b00      	cmp	r3, #0
 8003438:	d15f      	bne.n	80034fa <_strtod_l+0x8b2>
 800343a:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800343e:	0d1b      	lsrs	r3, r3, #20
 8003440:	051b      	lsls	r3, r3, #20
 8003442:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 8003446:	d958      	bls.n	80034fa <_strtod_l+0x8b2>
 8003448:	6963      	ldr	r3, [r4, #20]
 800344a:	b913      	cbnz	r3, 8003452 <_strtod_l+0x80a>
 800344c:	6923      	ldr	r3, [r4, #16]
 800344e:	2b01      	cmp	r3, #1
 8003450:	dd53      	ble.n	80034fa <_strtod_l+0x8b2>
 8003452:	4621      	mov	r1, r4
 8003454:	2201      	movs	r2, #1
 8003456:	9805      	ldr	r0, [sp, #20]
 8003458:	f002 fde8 	bl	800602c <__lshift>
 800345c:	4641      	mov	r1, r8
 800345e:	4604      	mov	r4, r0
 8003460:	f002 fe50 	bl	8006104 <__mcmp>
 8003464:	2800      	cmp	r0, #0
 8003466:	dd48      	ble.n	80034fa <_strtod_l+0x8b2>
 8003468:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800346c:	9a08      	ldr	r2, [sp, #32]
 800346e:	0d1b      	lsrs	r3, r3, #20
 8003470:	051b      	lsls	r3, r3, #20
 8003472:	2a00      	cmp	r2, #0
 8003474:	d062      	beq.n	800353c <_strtod_l+0x8f4>
 8003476:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 800347a:	d85f      	bhi.n	800353c <_strtod_l+0x8f4>
 800347c:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 8003480:	f67f ae94 	bls.w	80031ac <_strtod_l+0x564>
 8003484:	4650      	mov	r0, sl
 8003486:	4659      	mov	r1, fp
 8003488:	4ba3      	ldr	r3, [pc, #652]	@ (8003718 <_strtod_l+0xad0>)
 800348a:	2200      	movs	r2, #0
 800348c:	f7fd f824 	bl	80004d8 <__aeabi_dmul>
 8003490:	4ba2      	ldr	r3, [pc, #648]	@ (800371c <_strtod_l+0xad4>)
 8003492:	4682      	mov	sl, r0
 8003494:	400b      	ands	r3, r1
 8003496:	468b      	mov	fp, r1
 8003498:	2b00      	cmp	r3, #0
 800349a:	f47f adff 	bne.w	800309c <_strtod_l+0x454>
 800349e:	2322      	movs	r3, #34	@ 0x22
 80034a0:	9a05      	ldr	r2, [sp, #20]
 80034a2:	6013      	str	r3, [r2, #0]
 80034a4:	e5fa      	b.n	800309c <_strtod_l+0x454>
 80034a6:	f8cd b028 	str.w	fp, [sp, #40]	@ 0x28
 80034aa:	d165      	bne.n	8003578 <_strtod_l+0x930>
 80034ac:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80034ae:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80034b2:	b35a      	cbz	r2, 800350c <_strtod_l+0x8c4>
 80034b4:	4a9a      	ldr	r2, [pc, #616]	@ (8003720 <_strtod_l+0xad8>)
 80034b6:	4293      	cmp	r3, r2
 80034b8:	d12b      	bne.n	8003512 <_strtod_l+0x8ca>
 80034ba:	9b08      	ldr	r3, [sp, #32]
 80034bc:	4651      	mov	r1, sl
 80034be:	b303      	cbz	r3, 8003502 <_strtod_l+0x8ba>
 80034c0:	465a      	mov	r2, fp
 80034c2:	4b96      	ldr	r3, [pc, #600]	@ (800371c <_strtod_l+0xad4>)
 80034c4:	4013      	ands	r3, r2
 80034c6:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 80034ca:	f04f 32ff 	mov.w	r2, #4294967295
 80034ce:	d81b      	bhi.n	8003508 <_strtod_l+0x8c0>
 80034d0:	0d1b      	lsrs	r3, r3, #20
 80034d2:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 80034d6:	fa02 f303 	lsl.w	r3, r2, r3
 80034da:	4299      	cmp	r1, r3
 80034dc:	d119      	bne.n	8003512 <_strtod_l+0x8ca>
 80034de:	4b91      	ldr	r3, [pc, #580]	@ (8003724 <_strtod_l+0xadc>)
 80034e0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80034e2:	429a      	cmp	r2, r3
 80034e4:	d102      	bne.n	80034ec <_strtod_l+0x8a4>
 80034e6:	3101      	adds	r1, #1
 80034e8:	f43f adcd 	beq.w	8003086 <_strtod_l+0x43e>
 80034ec:	f04f 0a00 	mov.w	sl, #0
 80034f0:	4b8a      	ldr	r3, [pc, #552]	@ (800371c <_strtod_l+0xad4>)
 80034f2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80034f4:	401a      	ands	r2, r3
 80034f6:	f502 1b80 	add.w	fp, r2, #1048576	@ 0x100000
 80034fa:	9b08      	ldr	r3, [sp, #32]
 80034fc:	2b00      	cmp	r3, #0
 80034fe:	d1c1      	bne.n	8003484 <_strtod_l+0x83c>
 8003500:	e5cc      	b.n	800309c <_strtod_l+0x454>
 8003502:	f04f 33ff 	mov.w	r3, #4294967295
 8003506:	e7e8      	b.n	80034da <_strtod_l+0x892>
 8003508:	4613      	mov	r3, r2
 800350a:	e7e6      	b.n	80034da <_strtod_l+0x892>
 800350c:	ea53 030a 	orrs.w	r3, r3, sl
 8003510:	d0aa      	beq.n	8003468 <_strtod_l+0x820>
 8003512:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8003514:	b1db      	cbz	r3, 800354e <_strtod_l+0x906>
 8003516:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8003518:	4213      	tst	r3, r2
 800351a:	d0ee      	beq.n	80034fa <_strtod_l+0x8b2>
 800351c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800351e:	4650      	mov	r0, sl
 8003520:	4659      	mov	r1, fp
 8003522:	9a08      	ldr	r2, [sp, #32]
 8003524:	b1bb      	cbz	r3, 8003556 <_strtod_l+0x90e>
 8003526:	f7ff fb6c 	bl	8002c02 <sulp>
 800352a:	4602      	mov	r2, r0
 800352c:	460b      	mov	r3, r1
 800352e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8003532:	f7fc fe1b 	bl	800016c <__adddf3>
 8003536:	4682      	mov	sl, r0
 8003538:	468b      	mov	fp, r1
 800353a:	e7de      	b.n	80034fa <_strtod_l+0x8b2>
 800353c:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 8003540:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 8003544:	f04f 3aff 	mov.w	sl, #4294967295
 8003548:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 800354c:	e7d5      	b.n	80034fa <_strtod_l+0x8b2>
 800354e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8003550:	ea13 0f0a 	tst.w	r3, sl
 8003554:	e7e1      	b.n	800351a <_strtod_l+0x8d2>
 8003556:	f7ff fb54 	bl	8002c02 <sulp>
 800355a:	4602      	mov	r2, r0
 800355c:	460b      	mov	r3, r1
 800355e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8003562:	f7fc fe01 	bl	8000168 <__aeabi_dsub>
 8003566:	2200      	movs	r2, #0
 8003568:	2300      	movs	r3, #0
 800356a:	4682      	mov	sl, r0
 800356c:	468b      	mov	fp, r1
 800356e:	f7fd fa1b 	bl	80009a8 <__aeabi_dcmpeq>
 8003572:	2800      	cmp	r0, #0
 8003574:	d0c1      	beq.n	80034fa <_strtod_l+0x8b2>
 8003576:	e619      	b.n	80031ac <_strtod_l+0x564>
 8003578:	4641      	mov	r1, r8
 800357a:	4620      	mov	r0, r4
 800357c:	f002 ff32 	bl	80063e4 <__ratio>
 8003580:	2200      	movs	r2, #0
 8003582:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8003586:	4606      	mov	r6, r0
 8003588:	460f      	mov	r7, r1
 800358a:	f7fd fa21 	bl	80009d0 <__aeabi_dcmple>
 800358e:	2800      	cmp	r0, #0
 8003590:	d06d      	beq.n	800366e <_strtod_l+0xa26>
 8003592:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003594:	2b00      	cmp	r3, #0
 8003596:	d178      	bne.n	800368a <_strtod_l+0xa42>
 8003598:	f1ba 0f00 	cmp.w	sl, #0
 800359c:	d156      	bne.n	800364c <_strtod_l+0xa04>
 800359e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80035a0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80035a4:	2b00      	cmp	r3, #0
 80035a6:	d158      	bne.n	800365a <_strtod_l+0xa12>
 80035a8:	2200      	movs	r2, #0
 80035aa:	4630      	mov	r0, r6
 80035ac:	4639      	mov	r1, r7
 80035ae:	4b5e      	ldr	r3, [pc, #376]	@ (8003728 <_strtod_l+0xae0>)
 80035b0:	f7fd fa04 	bl	80009bc <__aeabi_dcmplt>
 80035b4:	2800      	cmp	r0, #0
 80035b6:	d157      	bne.n	8003668 <_strtod_l+0xa20>
 80035b8:	4630      	mov	r0, r6
 80035ba:	4639      	mov	r1, r7
 80035bc:	2200      	movs	r2, #0
 80035be:	4b5b      	ldr	r3, [pc, #364]	@ (800372c <_strtod_l+0xae4>)
 80035c0:	f7fc ff8a 	bl	80004d8 <__aeabi_dmul>
 80035c4:	4606      	mov	r6, r0
 80035c6:	460f      	mov	r7, r1
 80035c8:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
 80035cc:	9606      	str	r6, [sp, #24]
 80035ce:	9307      	str	r3, [sp, #28]
 80035d0:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80035d4:	4d51      	ldr	r5, [pc, #324]	@ (800371c <_strtod_l+0xad4>)
 80035d6:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 80035da:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80035dc:	401d      	ands	r5, r3
 80035de:	4b54      	ldr	r3, [pc, #336]	@ (8003730 <_strtod_l+0xae8>)
 80035e0:	429d      	cmp	r5, r3
 80035e2:	f040 80ab 	bne.w	800373c <_strtod_l+0xaf4>
 80035e6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80035e8:	4650      	mov	r0, sl
 80035ea:	f1a3 7b54 	sub.w	fp, r3, #55574528	@ 0x3500000
 80035ee:	4659      	mov	r1, fp
 80035f0:	f002 fe38 	bl	8006264 <__ulp>
 80035f4:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80035f8:	f7fc ff6e 	bl	80004d8 <__aeabi_dmul>
 80035fc:	4652      	mov	r2, sl
 80035fe:	465b      	mov	r3, fp
 8003600:	f7fc fdb4 	bl	800016c <__adddf3>
 8003604:	460b      	mov	r3, r1
 8003606:	4945      	ldr	r1, [pc, #276]	@ (800371c <_strtod_l+0xad4>)
 8003608:	4a4a      	ldr	r2, [pc, #296]	@ (8003734 <_strtod_l+0xaec>)
 800360a:	4019      	ands	r1, r3
 800360c:	4291      	cmp	r1, r2
 800360e:	4682      	mov	sl, r0
 8003610:	d942      	bls.n	8003698 <_strtod_l+0xa50>
 8003612:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8003614:	4b43      	ldr	r3, [pc, #268]	@ (8003724 <_strtod_l+0xadc>)
 8003616:	429a      	cmp	r2, r3
 8003618:	d103      	bne.n	8003622 <_strtod_l+0x9da>
 800361a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800361c:	3301      	adds	r3, #1
 800361e:	f43f ad32 	beq.w	8003086 <_strtod_l+0x43e>
 8003622:	f04f 3aff 	mov.w	sl, #4294967295
 8003626:	f8df b0fc 	ldr.w	fp, [pc, #252]	@ 8003724 <_strtod_l+0xadc>
 800362a:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800362c:	9805      	ldr	r0, [sp, #20]
 800362e:	f002 faed 	bl	8005c0c <_Bfree>
 8003632:	4649      	mov	r1, r9
 8003634:	9805      	ldr	r0, [sp, #20]
 8003636:	f002 fae9 	bl	8005c0c <_Bfree>
 800363a:	4641      	mov	r1, r8
 800363c:	9805      	ldr	r0, [sp, #20]
 800363e:	f002 fae5 	bl	8005c0c <_Bfree>
 8003642:	4621      	mov	r1, r4
 8003644:	9805      	ldr	r0, [sp, #20]
 8003646:	f002 fae1 	bl	8005c0c <_Bfree>
 800364a:	e61c      	b.n	8003286 <_strtod_l+0x63e>
 800364c:	f1ba 0f01 	cmp.w	sl, #1
 8003650:	d103      	bne.n	800365a <_strtod_l+0xa12>
 8003652:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003654:	2b00      	cmp	r3, #0
 8003656:	f43f ada9 	beq.w	80031ac <_strtod_l+0x564>
 800365a:	2200      	movs	r2, #0
 800365c:	4b36      	ldr	r3, [pc, #216]	@ (8003738 <_strtod_l+0xaf0>)
 800365e:	2600      	movs	r6, #0
 8003660:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8003664:	4f30      	ldr	r7, [pc, #192]	@ (8003728 <_strtod_l+0xae0>)
 8003666:	e7b3      	b.n	80035d0 <_strtod_l+0x988>
 8003668:	2600      	movs	r6, #0
 800366a:	4f30      	ldr	r7, [pc, #192]	@ (800372c <_strtod_l+0xae4>)
 800366c:	e7ac      	b.n	80035c8 <_strtod_l+0x980>
 800366e:	4630      	mov	r0, r6
 8003670:	4639      	mov	r1, r7
 8003672:	4b2e      	ldr	r3, [pc, #184]	@ (800372c <_strtod_l+0xae4>)
 8003674:	2200      	movs	r2, #0
 8003676:	f7fc ff2f 	bl	80004d8 <__aeabi_dmul>
 800367a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800367c:	4606      	mov	r6, r0
 800367e:	460f      	mov	r7, r1
 8003680:	2b00      	cmp	r3, #0
 8003682:	d0a1      	beq.n	80035c8 <_strtod_l+0x980>
 8003684:	e9cd 6706 	strd	r6, r7, [sp, #24]
 8003688:	e7a2      	b.n	80035d0 <_strtod_l+0x988>
 800368a:	2200      	movs	r2, #0
 800368c:	4b26      	ldr	r3, [pc, #152]	@ (8003728 <_strtod_l+0xae0>)
 800368e:	4616      	mov	r6, r2
 8003690:	461f      	mov	r7, r3
 8003692:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8003696:	e79b      	b.n	80035d0 <_strtod_l+0x988>
 8003698:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 800369c:	9b08      	ldr	r3, [sp, #32]
 800369e:	f8cd b028 	str.w	fp, [sp, #40]	@ 0x28
 80036a2:	2b00      	cmp	r3, #0
 80036a4:	d1c1      	bne.n	800362a <_strtod_l+0x9e2>
 80036a6:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 80036aa:	0d1b      	lsrs	r3, r3, #20
 80036ac:	051b      	lsls	r3, r3, #20
 80036ae:	429d      	cmp	r5, r3
 80036b0:	d1bb      	bne.n	800362a <_strtod_l+0x9e2>
 80036b2:	4630      	mov	r0, r6
 80036b4:	4639      	mov	r1, r7
 80036b6:	f7fd fd51 	bl	800115c <__aeabi_d2lz>
 80036ba:	f7fc fedf 	bl	800047c <__aeabi_l2d>
 80036be:	4602      	mov	r2, r0
 80036c0:	460b      	mov	r3, r1
 80036c2:	4630      	mov	r0, r6
 80036c4:	4639      	mov	r1, r7
 80036c6:	f7fc fd4f 	bl	8000168 <__aeabi_dsub>
 80036ca:	460b      	mov	r3, r1
 80036cc:	4602      	mov	r2, r0
 80036ce:	f3cb 0613 	ubfx	r6, fp, #0, #20
 80036d2:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 80036d6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80036d8:	ea46 060a 	orr.w	r6, r6, sl
 80036dc:	431e      	orrs	r6, r3
 80036de:	d06a      	beq.n	80037b6 <_strtod_l+0xb6e>
 80036e0:	a309      	add	r3, pc, #36	@ (adr r3, 8003708 <_strtod_l+0xac0>)
 80036e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80036e6:	f7fd f969 	bl	80009bc <__aeabi_dcmplt>
 80036ea:	2800      	cmp	r0, #0
 80036ec:	f47f acd6 	bne.w	800309c <_strtod_l+0x454>
 80036f0:	a307      	add	r3, pc, #28	@ (adr r3, 8003710 <_strtod_l+0xac8>)
 80036f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80036f6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80036fa:	f7fd f97d 	bl	80009f8 <__aeabi_dcmpgt>
 80036fe:	2800      	cmp	r0, #0
 8003700:	d093      	beq.n	800362a <_strtod_l+0x9e2>
 8003702:	e4cb      	b.n	800309c <_strtod_l+0x454>
 8003704:	f3af 8000 	nop.w
 8003708:	94a03595 	.word	0x94a03595
 800370c:	3fdfffff 	.word	0x3fdfffff
 8003710:	35afe535 	.word	0x35afe535
 8003714:	3fe00000 	.word	0x3fe00000
 8003718:	39500000 	.word	0x39500000
 800371c:	7ff00000 	.word	0x7ff00000
 8003720:	000fffff 	.word	0x000fffff
 8003724:	7fefffff 	.word	0x7fefffff
 8003728:	3ff00000 	.word	0x3ff00000
 800372c:	3fe00000 	.word	0x3fe00000
 8003730:	7fe00000 	.word	0x7fe00000
 8003734:	7c9fffff 	.word	0x7c9fffff
 8003738:	bff00000 	.word	0xbff00000
 800373c:	9b08      	ldr	r3, [sp, #32]
 800373e:	b323      	cbz	r3, 800378a <_strtod_l+0xb42>
 8003740:	f1b5 6fd4 	cmp.w	r5, #111149056	@ 0x6a00000
 8003744:	d821      	bhi.n	800378a <_strtod_l+0xb42>
 8003746:	a328      	add	r3, pc, #160	@ (adr r3, 80037e8 <_strtod_l+0xba0>)
 8003748:	e9d3 2300 	ldrd	r2, r3, [r3]
 800374c:	4630      	mov	r0, r6
 800374e:	4639      	mov	r1, r7
 8003750:	f7fd f93e 	bl	80009d0 <__aeabi_dcmple>
 8003754:	b1a0      	cbz	r0, 8003780 <_strtod_l+0xb38>
 8003756:	4639      	mov	r1, r7
 8003758:	4630      	mov	r0, r6
 800375a:	f7fd f995 	bl	8000a88 <__aeabi_d2uiz>
 800375e:	2801      	cmp	r0, #1
 8003760:	bf38      	it	cc
 8003762:	2001      	movcc	r0, #1
 8003764:	f7fc fe3e 	bl	80003e4 <__aeabi_ui2d>
 8003768:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800376a:	4606      	mov	r6, r0
 800376c:	460f      	mov	r7, r1
 800376e:	b9fb      	cbnz	r3, 80037b0 <_strtod_l+0xb68>
 8003770:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8003774:	9014      	str	r0, [sp, #80]	@ 0x50
 8003776:	9315      	str	r3, [sp, #84]	@ 0x54
 8003778:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
 800377c:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 8003780:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8003782:	f103 63d6 	add.w	r3, r3, #112197632	@ 0x6b00000
 8003786:	1b5b      	subs	r3, r3, r5
 8003788:	9311      	str	r3, [sp, #68]	@ 0x44
 800378a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800378e:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	@ 0x40
 8003792:	f002 fd67 	bl	8006264 <__ulp>
 8003796:	4602      	mov	r2, r0
 8003798:	460b      	mov	r3, r1
 800379a:	4650      	mov	r0, sl
 800379c:	4659      	mov	r1, fp
 800379e:	f7fc fe9b 	bl	80004d8 <__aeabi_dmul>
 80037a2:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 80037a6:	f7fc fce1 	bl	800016c <__adddf3>
 80037aa:	4682      	mov	sl, r0
 80037ac:	468b      	mov	fp, r1
 80037ae:	e775      	b.n	800369c <_strtod_l+0xa54>
 80037b0:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
 80037b4:	e7e0      	b.n	8003778 <_strtod_l+0xb30>
 80037b6:	a30e      	add	r3, pc, #56	@ (adr r3, 80037f0 <_strtod_l+0xba8>)
 80037b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80037bc:	f7fd f8fe 	bl	80009bc <__aeabi_dcmplt>
 80037c0:	e79d      	b.n	80036fe <_strtod_l+0xab6>
 80037c2:	2300      	movs	r3, #0
 80037c4:	930e      	str	r3, [sp, #56]	@ 0x38
 80037c6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80037c8:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 80037ca:	6013      	str	r3, [r2, #0]
 80037cc:	f7ff ba79 	b.w	8002cc2 <_strtod_l+0x7a>
 80037d0:	2a65      	cmp	r2, #101	@ 0x65
 80037d2:	f43f ab72 	beq.w	8002eba <_strtod_l+0x272>
 80037d6:	2a45      	cmp	r2, #69	@ 0x45
 80037d8:	f43f ab6f 	beq.w	8002eba <_strtod_l+0x272>
 80037dc:	2301      	movs	r3, #1
 80037de:	f7ff bbaa 	b.w	8002f36 <_strtod_l+0x2ee>
 80037e2:	bf00      	nop
 80037e4:	f3af 8000 	nop.w
 80037e8:	ffc00000 	.word	0xffc00000
 80037ec:	41dfffff 	.word	0x41dfffff
 80037f0:	94a03595 	.word	0x94a03595
 80037f4:	3fcfffff 	.word	0x3fcfffff

080037f8 <strtod>:
 80037f8:	460a      	mov	r2, r1
 80037fa:	4601      	mov	r1, r0
 80037fc:	4802      	ldr	r0, [pc, #8]	@ (8003808 <strtod+0x10>)
 80037fe:	4b03      	ldr	r3, [pc, #12]	@ (800380c <strtod+0x14>)
 8003800:	6800      	ldr	r0, [r0, #0]
 8003802:	f7ff ba21 	b.w	8002c48 <_strtod_l>
 8003806:	bf00      	nop
 8003808:	20000180 	.word	0x20000180
 800380c:	20000014 	.word	0x20000014

08003810 <_strtol_l.isra.0>:
 8003810:	2b24      	cmp	r3, #36	@ 0x24
 8003812:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003816:	4686      	mov	lr, r0
 8003818:	4690      	mov	r8, r2
 800381a:	d801      	bhi.n	8003820 <_strtol_l.isra.0+0x10>
 800381c:	2b01      	cmp	r3, #1
 800381e:	d106      	bne.n	800382e <_strtol_l.isra.0+0x1e>
 8003820:	f000 febe 	bl	80045a0 <__errno>
 8003824:	2316      	movs	r3, #22
 8003826:	6003      	str	r3, [r0, #0]
 8003828:	2000      	movs	r0, #0
 800382a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800382e:	460d      	mov	r5, r1
 8003830:	4833      	ldr	r0, [pc, #204]	@ (8003900 <_strtol_l.isra.0+0xf0>)
 8003832:	462a      	mov	r2, r5
 8003834:	f815 4b01 	ldrb.w	r4, [r5], #1
 8003838:	5d06      	ldrb	r6, [r0, r4]
 800383a:	f016 0608 	ands.w	r6, r6, #8
 800383e:	d1f8      	bne.n	8003832 <_strtol_l.isra.0+0x22>
 8003840:	2c2d      	cmp	r4, #45	@ 0x2d
 8003842:	d110      	bne.n	8003866 <_strtol_l.isra.0+0x56>
 8003844:	2601      	movs	r6, #1
 8003846:	782c      	ldrb	r4, [r5, #0]
 8003848:	1c95      	adds	r5, r2, #2
 800384a:	f033 0210 	bics.w	r2, r3, #16
 800384e:	d115      	bne.n	800387c <_strtol_l.isra.0+0x6c>
 8003850:	2c30      	cmp	r4, #48	@ 0x30
 8003852:	d10d      	bne.n	8003870 <_strtol_l.isra.0+0x60>
 8003854:	782a      	ldrb	r2, [r5, #0]
 8003856:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 800385a:	2a58      	cmp	r2, #88	@ 0x58
 800385c:	d108      	bne.n	8003870 <_strtol_l.isra.0+0x60>
 800385e:	786c      	ldrb	r4, [r5, #1]
 8003860:	3502      	adds	r5, #2
 8003862:	2310      	movs	r3, #16
 8003864:	e00a      	b.n	800387c <_strtol_l.isra.0+0x6c>
 8003866:	2c2b      	cmp	r4, #43	@ 0x2b
 8003868:	bf04      	itt	eq
 800386a:	782c      	ldrbeq	r4, [r5, #0]
 800386c:	1c95      	addeq	r5, r2, #2
 800386e:	e7ec      	b.n	800384a <_strtol_l.isra.0+0x3a>
 8003870:	2b00      	cmp	r3, #0
 8003872:	d1f6      	bne.n	8003862 <_strtol_l.isra.0+0x52>
 8003874:	2c30      	cmp	r4, #48	@ 0x30
 8003876:	bf14      	ite	ne
 8003878:	230a      	movne	r3, #10
 800387a:	2308      	moveq	r3, #8
 800387c:	2200      	movs	r2, #0
 800387e:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 8003882:	f10c 3cff 	add.w	ip, ip, #4294967295
 8003886:	fbbc f9f3 	udiv	r9, ip, r3
 800388a:	4610      	mov	r0, r2
 800388c:	fb03 ca19 	mls	sl, r3, r9, ip
 8003890:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 8003894:	2f09      	cmp	r7, #9
 8003896:	d80f      	bhi.n	80038b8 <_strtol_l.isra.0+0xa8>
 8003898:	463c      	mov	r4, r7
 800389a:	42a3      	cmp	r3, r4
 800389c:	dd1b      	ble.n	80038d6 <_strtol_l.isra.0+0xc6>
 800389e:	1c57      	adds	r7, r2, #1
 80038a0:	d007      	beq.n	80038b2 <_strtol_l.isra.0+0xa2>
 80038a2:	4581      	cmp	r9, r0
 80038a4:	d314      	bcc.n	80038d0 <_strtol_l.isra.0+0xc0>
 80038a6:	d101      	bne.n	80038ac <_strtol_l.isra.0+0x9c>
 80038a8:	45a2      	cmp	sl, r4
 80038aa:	db11      	blt.n	80038d0 <_strtol_l.isra.0+0xc0>
 80038ac:	2201      	movs	r2, #1
 80038ae:	fb00 4003 	mla	r0, r0, r3, r4
 80038b2:	f815 4b01 	ldrb.w	r4, [r5], #1
 80038b6:	e7eb      	b.n	8003890 <_strtol_l.isra.0+0x80>
 80038b8:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 80038bc:	2f19      	cmp	r7, #25
 80038be:	d801      	bhi.n	80038c4 <_strtol_l.isra.0+0xb4>
 80038c0:	3c37      	subs	r4, #55	@ 0x37
 80038c2:	e7ea      	b.n	800389a <_strtol_l.isra.0+0x8a>
 80038c4:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 80038c8:	2f19      	cmp	r7, #25
 80038ca:	d804      	bhi.n	80038d6 <_strtol_l.isra.0+0xc6>
 80038cc:	3c57      	subs	r4, #87	@ 0x57
 80038ce:	e7e4      	b.n	800389a <_strtol_l.isra.0+0x8a>
 80038d0:	f04f 32ff 	mov.w	r2, #4294967295
 80038d4:	e7ed      	b.n	80038b2 <_strtol_l.isra.0+0xa2>
 80038d6:	1c53      	adds	r3, r2, #1
 80038d8:	d108      	bne.n	80038ec <_strtol_l.isra.0+0xdc>
 80038da:	2322      	movs	r3, #34	@ 0x22
 80038dc:	4660      	mov	r0, ip
 80038de:	f8ce 3000 	str.w	r3, [lr]
 80038e2:	f1b8 0f00 	cmp.w	r8, #0
 80038e6:	d0a0      	beq.n	800382a <_strtol_l.isra.0+0x1a>
 80038e8:	1e69      	subs	r1, r5, #1
 80038ea:	e006      	b.n	80038fa <_strtol_l.isra.0+0xea>
 80038ec:	b106      	cbz	r6, 80038f0 <_strtol_l.isra.0+0xe0>
 80038ee:	4240      	negs	r0, r0
 80038f0:	f1b8 0f00 	cmp.w	r8, #0
 80038f4:	d099      	beq.n	800382a <_strtol_l.isra.0+0x1a>
 80038f6:	2a00      	cmp	r2, #0
 80038f8:	d1f6      	bne.n	80038e8 <_strtol_l.isra.0+0xd8>
 80038fa:	f8c8 1000 	str.w	r1, [r8]
 80038fe:	e794      	b.n	800382a <_strtol_l.isra.0+0x1a>
 8003900:	08007481 	.word	0x08007481

08003904 <strtol>:
 8003904:	4613      	mov	r3, r2
 8003906:	460a      	mov	r2, r1
 8003908:	4601      	mov	r1, r0
 800390a:	4802      	ldr	r0, [pc, #8]	@ (8003914 <strtol+0x10>)
 800390c:	6800      	ldr	r0, [r0, #0]
 800390e:	f7ff bf7f 	b.w	8003810 <_strtol_l.isra.0>
 8003912:	bf00      	nop
 8003914:	20000180 	.word	0x20000180

08003918 <__cvt>:
 8003918:	2b00      	cmp	r3, #0
 800391a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800391e:	461d      	mov	r5, r3
 8003920:	bfbb      	ittet	lt
 8003922:	f103 4300 	addlt.w	r3, r3, #2147483648	@ 0x80000000
 8003926:	461d      	movlt	r5, r3
 8003928:	2300      	movge	r3, #0
 800392a:	232d      	movlt	r3, #45	@ 0x2d
 800392c:	b088      	sub	sp, #32
 800392e:	4614      	mov	r4, r2
 8003930:	bfb8      	it	lt
 8003932:	4614      	movlt	r4, r2
 8003934:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8003936:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 8003938:	7013      	strb	r3, [r2, #0]
 800393a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800393c:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 8003940:	f023 0820 	bic.w	r8, r3, #32
 8003944:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8003948:	d005      	beq.n	8003956 <__cvt+0x3e>
 800394a:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 800394e:	d100      	bne.n	8003952 <__cvt+0x3a>
 8003950:	3601      	adds	r6, #1
 8003952:	2302      	movs	r3, #2
 8003954:	e000      	b.n	8003958 <__cvt+0x40>
 8003956:	2303      	movs	r3, #3
 8003958:	aa07      	add	r2, sp, #28
 800395a:	9204      	str	r2, [sp, #16]
 800395c:	aa06      	add	r2, sp, #24
 800395e:	e9cd a202 	strd	sl, r2, [sp, #8]
 8003962:	e9cd 3600 	strd	r3, r6, [sp]
 8003966:	4622      	mov	r2, r4
 8003968:	462b      	mov	r3, r5
 800396a:	f000 fef1 	bl	8004750 <_dtoa_r>
 800396e:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8003972:	4607      	mov	r7, r0
 8003974:	d119      	bne.n	80039aa <__cvt+0x92>
 8003976:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8003978:	07db      	lsls	r3, r3, #31
 800397a:	d50e      	bpl.n	800399a <__cvt+0x82>
 800397c:	eb00 0906 	add.w	r9, r0, r6
 8003980:	2200      	movs	r2, #0
 8003982:	2300      	movs	r3, #0
 8003984:	4620      	mov	r0, r4
 8003986:	4629      	mov	r1, r5
 8003988:	f7fd f80e 	bl	80009a8 <__aeabi_dcmpeq>
 800398c:	b108      	cbz	r0, 8003992 <__cvt+0x7a>
 800398e:	f8cd 901c 	str.w	r9, [sp, #28]
 8003992:	2230      	movs	r2, #48	@ 0x30
 8003994:	9b07      	ldr	r3, [sp, #28]
 8003996:	454b      	cmp	r3, r9
 8003998:	d31e      	bcc.n	80039d8 <__cvt+0xc0>
 800399a:	4638      	mov	r0, r7
 800399c:	9b07      	ldr	r3, [sp, #28]
 800399e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 80039a0:	1bdb      	subs	r3, r3, r7
 80039a2:	6013      	str	r3, [r2, #0]
 80039a4:	b008      	add	sp, #32
 80039a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80039aa:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80039ae:	eb00 0906 	add.w	r9, r0, r6
 80039b2:	d1e5      	bne.n	8003980 <__cvt+0x68>
 80039b4:	7803      	ldrb	r3, [r0, #0]
 80039b6:	2b30      	cmp	r3, #48	@ 0x30
 80039b8:	d10a      	bne.n	80039d0 <__cvt+0xb8>
 80039ba:	2200      	movs	r2, #0
 80039bc:	2300      	movs	r3, #0
 80039be:	4620      	mov	r0, r4
 80039c0:	4629      	mov	r1, r5
 80039c2:	f7fc fff1 	bl	80009a8 <__aeabi_dcmpeq>
 80039c6:	b918      	cbnz	r0, 80039d0 <__cvt+0xb8>
 80039c8:	f1c6 0601 	rsb	r6, r6, #1
 80039cc:	f8ca 6000 	str.w	r6, [sl]
 80039d0:	f8da 3000 	ldr.w	r3, [sl]
 80039d4:	4499      	add	r9, r3
 80039d6:	e7d3      	b.n	8003980 <__cvt+0x68>
 80039d8:	1c59      	adds	r1, r3, #1
 80039da:	9107      	str	r1, [sp, #28]
 80039dc:	701a      	strb	r2, [r3, #0]
 80039de:	e7d9      	b.n	8003994 <__cvt+0x7c>

080039e0 <__exponent>:
 80039e0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80039e2:	2900      	cmp	r1, #0
 80039e4:	bfb6      	itet	lt
 80039e6:	232d      	movlt	r3, #45	@ 0x2d
 80039e8:	232b      	movge	r3, #43	@ 0x2b
 80039ea:	4249      	neglt	r1, r1
 80039ec:	2909      	cmp	r1, #9
 80039ee:	7002      	strb	r2, [r0, #0]
 80039f0:	7043      	strb	r3, [r0, #1]
 80039f2:	dd29      	ble.n	8003a48 <__exponent+0x68>
 80039f4:	f10d 0307 	add.w	r3, sp, #7
 80039f8:	461d      	mov	r5, r3
 80039fa:	270a      	movs	r7, #10
 80039fc:	fbb1 f6f7 	udiv	r6, r1, r7
 8003a00:	461a      	mov	r2, r3
 8003a02:	fb07 1416 	mls	r4, r7, r6, r1
 8003a06:	3430      	adds	r4, #48	@ 0x30
 8003a08:	f802 4c01 	strb.w	r4, [r2, #-1]
 8003a0c:	460c      	mov	r4, r1
 8003a0e:	2c63      	cmp	r4, #99	@ 0x63
 8003a10:	4631      	mov	r1, r6
 8003a12:	f103 33ff 	add.w	r3, r3, #4294967295
 8003a16:	dcf1      	bgt.n	80039fc <__exponent+0x1c>
 8003a18:	3130      	adds	r1, #48	@ 0x30
 8003a1a:	1e94      	subs	r4, r2, #2
 8003a1c:	f803 1c01 	strb.w	r1, [r3, #-1]
 8003a20:	4623      	mov	r3, r4
 8003a22:	1c41      	adds	r1, r0, #1
 8003a24:	42ab      	cmp	r3, r5
 8003a26:	d30a      	bcc.n	8003a3e <__exponent+0x5e>
 8003a28:	f10d 0309 	add.w	r3, sp, #9
 8003a2c:	1a9b      	subs	r3, r3, r2
 8003a2e:	42ac      	cmp	r4, r5
 8003a30:	bf88      	it	hi
 8003a32:	2300      	movhi	r3, #0
 8003a34:	3302      	adds	r3, #2
 8003a36:	4403      	add	r3, r0
 8003a38:	1a18      	subs	r0, r3, r0
 8003a3a:	b003      	add	sp, #12
 8003a3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003a3e:	f813 6b01 	ldrb.w	r6, [r3], #1
 8003a42:	f801 6f01 	strb.w	r6, [r1, #1]!
 8003a46:	e7ed      	b.n	8003a24 <__exponent+0x44>
 8003a48:	2330      	movs	r3, #48	@ 0x30
 8003a4a:	3130      	adds	r1, #48	@ 0x30
 8003a4c:	7083      	strb	r3, [r0, #2]
 8003a4e:	70c1      	strb	r1, [r0, #3]
 8003a50:	1d03      	adds	r3, r0, #4
 8003a52:	e7f1      	b.n	8003a38 <__exponent+0x58>

08003a54 <_printf_float>:
 8003a54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003a58:	b091      	sub	sp, #68	@ 0x44
 8003a5a:	460c      	mov	r4, r1
 8003a5c:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
 8003a60:	4616      	mov	r6, r2
 8003a62:	461f      	mov	r7, r3
 8003a64:	4605      	mov	r5, r0
 8003a66:	f000 fd51 	bl	800450c <_localeconv_r>
 8003a6a:	6803      	ldr	r3, [r0, #0]
 8003a6c:	4618      	mov	r0, r3
 8003a6e:	9308      	str	r3, [sp, #32]
 8003a70:	f7fc fb6e 	bl	8000150 <strlen>
 8003a74:	2300      	movs	r3, #0
 8003a76:	930e      	str	r3, [sp, #56]	@ 0x38
 8003a78:	f8d8 3000 	ldr.w	r3, [r8]
 8003a7c:	9009      	str	r0, [sp, #36]	@ 0x24
 8003a7e:	3307      	adds	r3, #7
 8003a80:	f023 0307 	bic.w	r3, r3, #7
 8003a84:	f103 0208 	add.w	r2, r3, #8
 8003a88:	f894 a018 	ldrb.w	sl, [r4, #24]
 8003a8c:	f8d4 b000 	ldr.w	fp, [r4]
 8003a90:	f8c8 2000 	str.w	r2, [r8]
 8003a94:	e9d3 8900 	ldrd	r8, r9, [r3]
 8003a98:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8003a9c:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003a9e:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 8003aa2:	f04f 32ff 	mov.w	r2, #4294967295
 8003aa6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8003aaa:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8003aae:	4b9c      	ldr	r3, [pc, #624]	@ (8003d20 <_printf_float+0x2cc>)
 8003ab0:	f7fc ffac 	bl	8000a0c <__aeabi_dcmpun>
 8003ab4:	bb70      	cbnz	r0, 8003b14 <_printf_float+0xc0>
 8003ab6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8003aba:	f04f 32ff 	mov.w	r2, #4294967295
 8003abe:	4b98      	ldr	r3, [pc, #608]	@ (8003d20 <_printf_float+0x2cc>)
 8003ac0:	f7fc ff86 	bl	80009d0 <__aeabi_dcmple>
 8003ac4:	bb30      	cbnz	r0, 8003b14 <_printf_float+0xc0>
 8003ac6:	2200      	movs	r2, #0
 8003ac8:	2300      	movs	r3, #0
 8003aca:	4640      	mov	r0, r8
 8003acc:	4649      	mov	r1, r9
 8003ace:	f7fc ff75 	bl	80009bc <__aeabi_dcmplt>
 8003ad2:	b110      	cbz	r0, 8003ada <_printf_float+0x86>
 8003ad4:	232d      	movs	r3, #45	@ 0x2d
 8003ad6:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8003ada:	4a92      	ldr	r2, [pc, #584]	@ (8003d24 <_printf_float+0x2d0>)
 8003adc:	4b92      	ldr	r3, [pc, #584]	@ (8003d28 <_printf_float+0x2d4>)
 8003ade:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8003ae2:	bf8c      	ite	hi
 8003ae4:	4690      	movhi	r8, r2
 8003ae6:	4698      	movls	r8, r3
 8003ae8:	2303      	movs	r3, #3
 8003aea:	f04f 0900 	mov.w	r9, #0
 8003aee:	6123      	str	r3, [r4, #16]
 8003af0:	f02b 0304 	bic.w	r3, fp, #4
 8003af4:	6023      	str	r3, [r4, #0]
 8003af6:	4633      	mov	r3, r6
 8003af8:	4621      	mov	r1, r4
 8003afa:	4628      	mov	r0, r5
 8003afc:	9700      	str	r7, [sp, #0]
 8003afe:	aa0f      	add	r2, sp, #60	@ 0x3c
 8003b00:	f000 f9d4 	bl	8003eac <_printf_common>
 8003b04:	3001      	adds	r0, #1
 8003b06:	f040 8090 	bne.w	8003c2a <_printf_float+0x1d6>
 8003b0a:	f04f 30ff 	mov.w	r0, #4294967295
 8003b0e:	b011      	add	sp, #68	@ 0x44
 8003b10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b14:	4642      	mov	r2, r8
 8003b16:	464b      	mov	r3, r9
 8003b18:	4640      	mov	r0, r8
 8003b1a:	4649      	mov	r1, r9
 8003b1c:	f7fc ff76 	bl	8000a0c <__aeabi_dcmpun>
 8003b20:	b148      	cbz	r0, 8003b36 <_printf_float+0xe2>
 8003b22:	464b      	mov	r3, r9
 8003b24:	2b00      	cmp	r3, #0
 8003b26:	bfb8      	it	lt
 8003b28:	232d      	movlt	r3, #45	@ 0x2d
 8003b2a:	4a80      	ldr	r2, [pc, #512]	@ (8003d2c <_printf_float+0x2d8>)
 8003b2c:	bfb8      	it	lt
 8003b2e:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8003b32:	4b7f      	ldr	r3, [pc, #508]	@ (8003d30 <_printf_float+0x2dc>)
 8003b34:	e7d3      	b.n	8003ade <_printf_float+0x8a>
 8003b36:	6863      	ldr	r3, [r4, #4]
 8003b38:	f00a 01df 	and.w	r1, sl, #223	@ 0xdf
 8003b3c:	1c5a      	adds	r2, r3, #1
 8003b3e:	d13f      	bne.n	8003bc0 <_printf_float+0x16c>
 8003b40:	2306      	movs	r3, #6
 8003b42:	6063      	str	r3, [r4, #4]
 8003b44:	2200      	movs	r2, #0
 8003b46:	f44b 6380 	orr.w	r3, fp, #1024	@ 0x400
 8003b4a:	6023      	str	r3, [r4, #0]
 8003b4c:	9206      	str	r2, [sp, #24]
 8003b4e:	aa0e      	add	r2, sp, #56	@ 0x38
 8003b50:	e9cd a204 	strd	sl, r2, [sp, #16]
 8003b54:	aa0d      	add	r2, sp, #52	@ 0x34
 8003b56:	9203      	str	r2, [sp, #12]
 8003b58:	f10d 0233 	add.w	r2, sp, #51	@ 0x33
 8003b5c:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8003b60:	6863      	ldr	r3, [r4, #4]
 8003b62:	4642      	mov	r2, r8
 8003b64:	9300      	str	r3, [sp, #0]
 8003b66:	4628      	mov	r0, r5
 8003b68:	464b      	mov	r3, r9
 8003b6a:	910a      	str	r1, [sp, #40]	@ 0x28
 8003b6c:	f7ff fed4 	bl	8003918 <__cvt>
 8003b70:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003b72:	4680      	mov	r8, r0
 8003b74:	2947      	cmp	r1, #71	@ 0x47
 8003b76:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8003b78:	d128      	bne.n	8003bcc <_printf_float+0x178>
 8003b7a:	1cc8      	adds	r0, r1, #3
 8003b7c:	db02      	blt.n	8003b84 <_printf_float+0x130>
 8003b7e:	6863      	ldr	r3, [r4, #4]
 8003b80:	4299      	cmp	r1, r3
 8003b82:	dd40      	ble.n	8003c06 <_printf_float+0x1b2>
 8003b84:	f1aa 0a02 	sub.w	sl, sl, #2
 8003b88:	fa5f fa8a 	uxtb.w	sl, sl
 8003b8c:	4652      	mov	r2, sl
 8003b8e:	3901      	subs	r1, #1
 8003b90:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8003b94:	910d      	str	r1, [sp, #52]	@ 0x34
 8003b96:	f7ff ff23 	bl	80039e0 <__exponent>
 8003b9a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8003b9c:	4681      	mov	r9, r0
 8003b9e:	1813      	adds	r3, r2, r0
 8003ba0:	2a01      	cmp	r2, #1
 8003ba2:	6123      	str	r3, [r4, #16]
 8003ba4:	dc02      	bgt.n	8003bac <_printf_float+0x158>
 8003ba6:	6822      	ldr	r2, [r4, #0]
 8003ba8:	07d2      	lsls	r2, r2, #31
 8003baa:	d501      	bpl.n	8003bb0 <_printf_float+0x15c>
 8003bac:	3301      	adds	r3, #1
 8003bae:	6123      	str	r3, [r4, #16]
 8003bb0:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 8003bb4:	2b00      	cmp	r3, #0
 8003bb6:	d09e      	beq.n	8003af6 <_printf_float+0xa2>
 8003bb8:	232d      	movs	r3, #45	@ 0x2d
 8003bba:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8003bbe:	e79a      	b.n	8003af6 <_printf_float+0xa2>
 8003bc0:	2947      	cmp	r1, #71	@ 0x47
 8003bc2:	d1bf      	bne.n	8003b44 <_printf_float+0xf0>
 8003bc4:	2b00      	cmp	r3, #0
 8003bc6:	d1bd      	bne.n	8003b44 <_printf_float+0xf0>
 8003bc8:	2301      	movs	r3, #1
 8003bca:	e7ba      	b.n	8003b42 <_printf_float+0xee>
 8003bcc:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8003bd0:	d9dc      	bls.n	8003b8c <_printf_float+0x138>
 8003bd2:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8003bd6:	d118      	bne.n	8003c0a <_printf_float+0x1b6>
 8003bd8:	2900      	cmp	r1, #0
 8003bda:	6863      	ldr	r3, [r4, #4]
 8003bdc:	dd0b      	ble.n	8003bf6 <_printf_float+0x1a2>
 8003bde:	6121      	str	r1, [r4, #16]
 8003be0:	b913      	cbnz	r3, 8003be8 <_printf_float+0x194>
 8003be2:	6822      	ldr	r2, [r4, #0]
 8003be4:	07d0      	lsls	r0, r2, #31
 8003be6:	d502      	bpl.n	8003bee <_printf_float+0x19a>
 8003be8:	3301      	adds	r3, #1
 8003bea:	440b      	add	r3, r1
 8003bec:	6123      	str	r3, [r4, #16]
 8003bee:	f04f 0900 	mov.w	r9, #0
 8003bf2:	65a1      	str	r1, [r4, #88]	@ 0x58
 8003bf4:	e7dc      	b.n	8003bb0 <_printf_float+0x15c>
 8003bf6:	b913      	cbnz	r3, 8003bfe <_printf_float+0x1aa>
 8003bf8:	6822      	ldr	r2, [r4, #0]
 8003bfa:	07d2      	lsls	r2, r2, #31
 8003bfc:	d501      	bpl.n	8003c02 <_printf_float+0x1ae>
 8003bfe:	3302      	adds	r3, #2
 8003c00:	e7f4      	b.n	8003bec <_printf_float+0x198>
 8003c02:	2301      	movs	r3, #1
 8003c04:	e7f2      	b.n	8003bec <_printf_float+0x198>
 8003c06:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8003c0a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003c0c:	4299      	cmp	r1, r3
 8003c0e:	db05      	blt.n	8003c1c <_printf_float+0x1c8>
 8003c10:	6823      	ldr	r3, [r4, #0]
 8003c12:	6121      	str	r1, [r4, #16]
 8003c14:	07d8      	lsls	r0, r3, #31
 8003c16:	d5ea      	bpl.n	8003bee <_printf_float+0x19a>
 8003c18:	1c4b      	adds	r3, r1, #1
 8003c1a:	e7e7      	b.n	8003bec <_printf_float+0x198>
 8003c1c:	2900      	cmp	r1, #0
 8003c1e:	bfcc      	ite	gt
 8003c20:	2201      	movgt	r2, #1
 8003c22:	f1c1 0202 	rsble	r2, r1, #2
 8003c26:	4413      	add	r3, r2
 8003c28:	e7e0      	b.n	8003bec <_printf_float+0x198>
 8003c2a:	6823      	ldr	r3, [r4, #0]
 8003c2c:	055a      	lsls	r2, r3, #21
 8003c2e:	d407      	bmi.n	8003c40 <_printf_float+0x1ec>
 8003c30:	6923      	ldr	r3, [r4, #16]
 8003c32:	4642      	mov	r2, r8
 8003c34:	4631      	mov	r1, r6
 8003c36:	4628      	mov	r0, r5
 8003c38:	47b8      	blx	r7
 8003c3a:	3001      	adds	r0, #1
 8003c3c:	d12b      	bne.n	8003c96 <_printf_float+0x242>
 8003c3e:	e764      	b.n	8003b0a <_printf_float+0xb6>
 8003c40:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8003c44:	f240 80dc 	bls.w	8003e00 <_printf_float+0x3ac>
 8003c48:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8003c4c:	2200      	movs	r2, #0
 8003c4e:	2300      	movs	r3, #0
 8003c50:	f7fc feaa 	bl	80009a8 <__aeabi_dcmpeq>
 8003c54:	2800      	cmp	r0, #0
 8003c56:	d033      	beq.n	8003cc0 <_printf_float+0x26c>
 8003c58:	2301      	movs	r3, #1
 8003c5a:	4631      	mov	r1, r6
 8003c5c:	4628      	mov	r0, r5
 8003c5e:	4a35      	ldr	r2, [pc, #212]	@ (8003d34 <_printf_float+0x2e0>)
 8003c60:	47b8      	blx	r7
 8003c62:	3001      	adds	r0, #1
 8003c64:	f43f af51 	beq.w	8003b0a <_printf_float+0xb6>
 8003c68:	e9dd 380d 	ldrd	r3, r8, [sp, #52]	@ 0x34
 8003c6c:	4543      	cmp	r3, r8
 8003c6e:	db02      	blt.n	8003c76 <_printf_float+0x222>
 8003c70:	6823      	ldr	r3, [r4, #0]
 8003c72:	07d8      	lsls	r0, r3, #31
 8003c74:	d50f      	bpl.n	8003c96 <_printf_float+0x242>
 8003c76:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8003c7a:	4631      	mov	r1, r6
 8003c7c:	4628      	mov	r0, r5
 8003c7e:	47b8      	blx	r7
 8003c80:	3001      	adds	r0, #1
 8003c82:	f43f af42 	beq.w	8003b0a <_printf_float+0xb6>
 8003c86:	f04f 0900 	mov.w	r9, #0
 8003c8a:	f108 38ff 	add.w	r8, r8, #4294967295
 8003c8e:	f104 0a1a 	add.w	sl, r4, #26
 8003c92:	45c8      	cmp	r8, r9
 8003c94:	dc09      	bgt.n	8003caa <_printf_float+0x256>
 8003c96:	6823      	ldr	r3, [r4, #0]
 8003c98:	079b      	lsls	r3, r3, #30
 8003c9a:	f100 8102 	bmi.w	8003ea2 <_printf_float+0x44e>
 8003c9e:	68e0      	ldr	r0, [r4, #12]
 8003ca0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003ca2:	4298      	cmp	r0, r3
 8003ca4:	bfb8      	it	lt
 8003ca6:	4618      	movlt	r0, r3
 8003ca8:	e731      	b.n	8003b0e <_printf_float+0xba>
 8003caa:	2301      	movs	r3, #1
 8003cac:	4652      	mov	r2, sl
 8003cae:	4631      	mov	r1, r6
 8003cb0:	4628      	mov	r0, r5
 8003cb2:	47b8      	blx	r7
 8003cb4:	3001      	adds	r0, #1
 8003cb6:	f43f af28 	beq.w	8003b0a <_printf_float+0xb6>
 8003cba:	f109 0901 	add.w	r9, r9, #1
 8003cbe:	e7e8      	b.n	8003c92 <_printf_float+0x23e>
 8003cc0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003cc2:	2b00      	cmp	r3, #0
 8003cc4:	dc38      	bgt.n	8003d38 <_printf_float+0x2e4>
 8003cc6:	2301      	movs	r3, #1
 8003cc8:	4631      	mov	r1, r6
 8003cca:	4628      	mov	r0, r5
 8003ccc:	4a19      	ldr	r2, [pc, #100]	@ (8003d34 <_printf_float+0x2e0>)
 8003cce:	47b8      	blx	r7
 8003cd0:	3001      	adds	r0, #1
 8003cd2:	f43f af1a 	beq.w	8003b0a <_printf_float+0xb6>
 8003cd6:	e9dd 390d 	ldrd	r3, r9, [sp, #52]	@ 0x34
 8003cda:	ea59 0303 	orrs.w	r3, r9, r3
 8003cde:	d102      	bne.n	8003ce6 <_printf_float+0x292>
 8003ce0:	6823      	ldr	r3, [r4, #0]
 8003ce2:	07d9      	lsls	r1, r3, #31
 8003ce4:	d5d7      	bpl.n	8003c96 <_printf_float+0x242>
 8003ce6:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8003cea:	4631      	mov	r1, r6
 8003cec:	4628      	mov	r0, r5
 8003cee:	47b8      	blx	r7
 8003cf0:	3001      	adds	r0, #1
 8003cf2:	f43f af0a 	beq.w	8003b0a <_printf_float+0xb6>
 8003cf6:	f04f 0a00 	mov.w	sl, #0
 8003cfa:	f104 0b1a 	add.w	fp, r4, #26
 8003cfe:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003d00:	425b      	negs	r3, r3
 8003d02:	4553      	cmp	r3, sl
 8003d04:	dc01      	bgt.n	8003d0a <_printf_float+0x2b6>
 8003d06:	464b      	mov	r3, r9
 8003d08:	e793      	b.n	8003c32 <_printf_float+0x1de>
 8003d0a:	2301      	movs	r3, #1
 8003d0c:	465a      	mov	r2, fp
 8003d0e:	4631      	mov	r1, r6
 8003d10:	4628      	mov	r0, r5
 8003d12:	47b8      	blx	r7
 8003d14:	3001      	adds	r0, #1
 8003d16:	f43f aef8 	beq.w	8003b0a <_printf_float+0xb6>
 8003d1a:	f10a 0a01 	add.w	sl, sl, #1
 8003d1e:	e7ee      	b.n	8003cfe <_printf_float+0x2aa>
 8003d20:	7fefffff 	.word	0x7fefffff
 8003d24:	0800725e 	.word	0x0800725e
 8003d28:	0800725a 	.word	0x0800725a
 8003d2c:	08007266 	.word	0x08007266
 8003d30:	08007262 	.word	0x08007262
 8003d34:	0800726a 	.word	0x0800726a
 8003d38:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8003d3a:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8003d3e:	4553      	cmp	r3, sl
 8003d40:	bfa8      	it	ge
 8003d42:	4653      	movge	r3, sl
 8003d44:	2b00      	cmp	r3, #0
 8003d46:	4699      	mov	r9, r3
 8003d48:	dc36      	bgt.n	8003db8 <_printf_float+0x364>
 8003d4a:	f04f 0b00 	mov.w	fp, #0
 8003d4e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8003d52:	f104 021a 	add.w	r2, r4, #26
 8003d56:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8003d58:	930a      	str	r3, [sp, #40]	@ 0x28
 8003d5a:	eba3 0309 	sub.w	r3, r3, r9
 8003d5e:	455b      	cmp	r3, fp
 8003d60:	dc31      	bgt.n	8003dc6 <_printf_float+0x372>
 8003d62:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003d64:	459a      	cmp	sl, r3
 8003d66:	dc3a      	bgt.n	8003dde <_printf_float+0x38a>
 8003d68:	6823      	ldr	r3, [r4, #0]
 8003d6a:	07da      	lsls	r2, r3, #31
 8003d6c:	d437      	bmi.n	8003dde <_printf_float+0x38a>
 8003d6e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003d70:	ebaa 0903 	sub.w	r9, sl, r3
 8003d74:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003d76:	ebaa 0303 	sub.w	r3, sl, r3
 8003d7a:	4599      	cmp	r9, r3
 8003d7c:	bfa8      	it	ge
 8003d7e:	4699      	movge	r9, r3
 8003d80:	f1b9 0f00 	cmp.w	r9, #0
 8003d84:	dc33      	bgt.n	8003dee <_printf_float+0x39a>
 8003d86:	f04f 0800 	mov.w	r8, #0
 8003d8a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8003d8e:	f104 0b1a 	add.w	fp, r4, #26
 8003d92:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003d94:	ebaa 0303 	sub.w	r3, sl, r3
 8003d98:	eba3 0309 	sub.w	r3, r3, r9
 8003d9c:	4543      	cmp	r3, r8
 8003d9e:	f77f af7a 	ble.w	8003c96 <_printf_float+0x242>
 8003da2:	2301      	movs	r3, #1
 8003da4:	465a      	mov	r2, fp
 8003da6:	4631      	mov	r1, r6
 8003da8:	4628      	mov	r0, r5
 8003daa:	47b8      	blx	r7
 8003dac:	3001      	adds	r0, #1
 8003dae:	f43f aeac 	beq.w	8003b0a <_printf_float+0xb6>
 8003db2:	f108 0801 	add.w	r8, r8, #1
 8003db6:	e7ec      	b.n	8003d92 <_printf_float+0x33e>
 8003db8:	4642      	mov	r2, r8
 8003dba:	4631      	mov	r1, r6
 8003dbc:	4628      	mov	r0, r5
 8003dbe:	47b8      	blx	r7
 8003dc0:	3001      	adds	r0, #1
 8003dc2:	d1c2      	bne.n	8003d4a <_printf_float+0x2f6>
 8003dc4:	e6a1      	b.n	8003b0a <_printf_float+0xb6>
 8003dc6:	2301      	movs	r3, #1
 8003dc8:	4631      	mov	r1, r6
 8003dca:	4628      	mov	r0, r5
 8003dcc:	920a      	str	r2, [sp, #40]	@ 0x28
 8003dce:	47b8      	blx	r7
 8003dd0:	3001      	adds	r0, #1
 8003dd2:	f43f ae9a 	beq.w	8003b0a <_printf_float+0xb6>
 8003dd6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8003dd8:	f10b 0b01 	add.w	fp, fp, #1
 8003ddc:	e7bb      	b.n	8003d56 <_printf_float+0x302>
 8003dde:	4631      	mov	r1, r6
 8003de0:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8003de4:	4628      	mov	r0, r5
 8003de6:	47b8      	blx	r7
 8003de8:	3001      	adds	r0, #1
 8003dea:	d1c0      	bne.n	8003d6e <_printf_float+0x31a>
 8003dec:	e68d      	b.n	8003b0a <_printf_float+0xb6>
 8003dee:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8003df0:	464b      	mov	r3, r9
 8003df2:	4631      	mov	r1, r6
 8003df4:	4628      	mov	r0, r5
 8003df6:	4442      	add	r2, r8
 8003df8:	47b8      	blx	r7
 8003dfa:	3001      	adds	r0, #1
 8003dfc:	d1c3      	bne.n	8003d86 <_printf_float+0x332>
 8003dfe:	e684      	b.n	8003b0a <_printf_float+0xb6>
 8003e00:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8003e04:	f1ba 0f01 	cmp.w	sl, #1
 8003e08:	dc01      	bgt.n	8003e0e <_printf_float+0x3ba>
 8003e0a:	07db      	lsls	r3, r3, #31
 8003e0c:	d536      	bpl.n	8003e7c <_printf_float+0x428>
 8003e0e:	2301      	movs	r3, #1
 8003e10:	4642      	mov	r2, r8
 8003e12:	4631      	mov	r1, r6
 8003e14:	4628      	mov	r0, r5
 8003e16:	47b8      	blx	r7
 8003e18:	3001      	adds	r0, #1
 8003e1a:	f43f ae76 	beq.w	8003b0a <_printf_float+0xb6>
 8003e1e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8003e22:	4631      	mov	r1, r6
 8003e24:	4628      	mov	r0, r5
 8003e26:	47b8      	blx	r7
 8003e28:	3001      	adds	r0, #1
 8003e2a:	f43f ae6e 	beq.w	8003b0a <_printf_float+0xb6>
 8003e2e:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8003e32:	2200      	movs	r2, #0
 8003e34:	2300      	movs	r3, #0
 8003e36:	f10a 3aff 	add.w	sl, sl, #4294967295
 8003e3a:	f7fc fdb5 	bl	80009a8 <__aeabi_dcmpeq>
 8003e3e:	b9c0      	cbnz	r0, 8003e72 <_printf_float+0x41e>
 8003e40:	4653      	mov	r3, sl
 8003e42:	f108 0201 	add.w	r2, r8, #1
 8003e46:	4631      	mov	r1, r6
 8003e48:	4628      	mov	r0, r5
 8003e4a:	47b8      	blx	r7
 8003e4c:	3001      	adds	r0, #1
 8003e4e:	d10c      	bne.n	8003e6a <_printf_float+0x416>
 8003e50:	e65b      	b.n	8003b0a <_printf_float+0xb6>
 8003e52:	2301      	movs	r3, #1
 8003e54:	465a      	mov	r2, fp
 8003e56:	4631      	mov	r1, r6
 8003e58:	4628      	mov	r0, r5
 8003e5a:	47b8      	blx	r7
 8003e5c:	3001      	adds	r0, #1
 8003e5e:	f43f ae54 	beq.w	8003b0a <_printf_float+0xb6>
 8003e62:	f108 0801 	add.w	r8, r8, #1
 8003e66:	45d0      	cmp	r8, sl
 8003e68:	dbf3      	blt.n	8003e52 <_printf_float+0x3fe>
 8003e6a:	464b      	mov	r3, r9
 8003e6c:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8003e70:	e6e0      	b.n	8003c34 <_printf_float+0x1e0>
 8003e72:	f04f 0800 	mov.w	r8, #0
 8003e76:	f104 0b1a 	add.w	fp, r4, #26
 8003e7a:	e7f4      	b.n	8003e66 <_printf_float+0x412>
 8003e7c:	2301      	movs	r3, #1
 8003e7e:	4642      	mov	r2, r8
 8003e80:	e7e1      	b.n	8003e46 <_printf_float+0x3f2>
 8003e82:	2301      	movs	r3, #1
 8003e84:	464a      	mov	r2, r9
 8003e86:	4631      	mov	r1, r6
 8003e88:	4628      	mov	r0, r5
 8003e8a:	47b8      	blx	r7
 8003e8c:	3001      	adds	r0, #1
 8003e8e:	f43f ae3c 	beq.w	8003b0a <_printf_float+0xb6>
 8003e92:	f108 0801 	add.w	r8, r8, #1
 8003e96:	68e3      	ldr	r3, [r4, #12]
 8003e98:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8003e9a:	1a5b      	subs	r3, r3, r1
 8003e9c:	4543      	cmp	r3, r8
 8003e9e:	dcf0      	bgt.n	8003e82 <_printf_float+0x42e>
 8003ea0:	e6fd      	b.n	8003c9e <_printf_float+0x24a>
 8003ea2:	f04f 0800 	mov.w	r8, #0
 8003ea6:	f104 0919 	add.w	r9, r4, #25
 8003eaa:	e7f4      	b.n	8003e96 <_printf_float+0x442>

08003eac <_printf_common>:
 8003eac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003eb0:	4616      	mov	r6, r2
 8003eb2:	4698      	mov	r8, r3
 8003eb4:	688a      	ldr	r2, [r1, #8]
 8003eb6:	690b      	ldr	r3, [r1, #16]
 8003eb8:	4607      	mov	r7, r0
 8003eba:	4293      	cmp	r3, r2
 8003ebc:	bfb8      	it	lt
 8003ebe:	4613      	movlt	r3, r2
 8003ec0:	6033      	str	r3, [r6, #0]
 8003ec2:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8003ec6:	460c      	mov	r4, r1
 8003ec8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8003ecc:	b10a      	cbz	r2, 8003ed2 <_printf_common+0x26>
 8003ece:	3301      	adds	r3, #1
 8003ed0:	6033      	str	r3, [r6, #0]
 8003ed2:	6823      	ldr	r3, [r4, #0]
 8003ed4:	0699      	lsls	r1, r3, #26
 8003ed6:	bf42      	ittt	mi
 8003ed8:	6833      	ldrmi	r3, [r6, #0]
 8003eda:	3302      	addmi	r3, #2
 8003edc:	6033      	strmi	r3, [r6, #0]
 8003ede:	6825      	ldr	r5, [r4, #0]
 8003ee0:	f015 0506 	ands.w	r5, r5, #6
 8003ee4:	d106      	bne.n	8003ef4 <_printf_common+0x48>
 8003ee6:	f104 0a19 	add.w	sl, r4, #25
 8003eea:	68e3      	ldr	r3, [r4, #12]
 8003eec:	6832      	ldr	r2, [r6, #0]
 8003eee:	1a9b      	subs	r3, r3, r2
 8003ef0:	42ab      	cmp	r3, r5
 8003ef2:	dc2b      	bgt.n	8003f4c <_printf_common+0xa0>
 8003ef4:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8003ef8:	6822      	ldr	r2, [r4, #0]
 8003efa:	3b00      	subs	r3, #0
 8003efc:	bf18      	it	ne
 8003efe:	2301      	movne	r3, #1
 8003f00:	0692      	lsls	r2, r2, #26
 8003f02:	d430      	bmi.n	8003f66 <_printf_common+0xba>
 8003f04:	4641      	mov	r1, r8
 8003f06:	4638      	mov	r0, r7
 8003f08:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8003f0c:	47c8      	blx	r9
 8003f0e:	3001      	adds	r0, #1
 8003f10:	d023      	beq.n	8003f5a <_printf_common+0xae>
 8003f12:	6823      	ldr	r3, [r4, #0]
 8003f14:	6922      	ldr	r2, [r4, #16]
 8003f16:	f003 0306 	and.w	r3, r3, #6
 8003f1a:	2b04      	cmp	r3, #4
 8003f1c:	bf14      	ite	ne
 8003f1e:	2500      	movne	r5, #0
 8003f20:	6833      	ldreq	r3, [r6, #0]
 8003f22:	f04f 0600 	mov.w	r6, #0
 8003f26:	bf08      	it	eq
 8003f28:	68e5      	ldreq	r5, [r4, #12]
 8003f2a:	f104 041a 	add.w	r4, r4, #26
 8003f2e:	bf08      	it	eq
 8003f30:	1aed      	subeq	r5, r5, r3
 8003f32:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8003f36:	bf08      	it	eq
 8003f38:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8003f3c:	4293      	cmp	r3, r2
 8003f3e:	bfc4      	itt	gt
 8003f40:	1a9b      	subgt	r3, r3, r2
 8003f42:	18ed      	addgt	r5, r5, r3
 8003f44:	42b5      	cmp	r5, r6
 8003f46:	d11a      	bne.n	8003f7e <_printf_common+0xd2>
 8003f48:	2000      	movs	r0, #0
 8003f4a:	e008      	b.n	8003f5e <_printf_common+0xb2>
 8003f4c:	2301      	movs	r3, #1
 8003f4e:	4652      	mov	r2, sl
 8003f50:	4641      	mov	r1, r8
 8003f52:	4638      	mov	r0, r7
 8003f54:	47c8      	blx	r9
 8003f56:	3001      	adds	r0, #1
 8003f58:	d103      	bne.n	8003f62 <_printf_common+0xb6>
 8003f5a:	f04f 30ff 	mov.w	r0, #4294967295
 8003f5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003f62:	3501      	adds	r5, #1
 8003f64:	e7c1      	b.n	8003eea <_printf_common+0x3e>
 8003f66:	2030      	movs	r0, #48	@ 0x30
 8003f68:	18e1      	adds	r1, r4, r3
 8003f6a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8003f6e:	1c5a      	adds	r2, r3, #1
 8003f70:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8003f74:	4422      	add	r2, r4
 8003f76:	3302      	adds	r3, #2
 8003f78:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8003f7c:	e7c2      	b.n	8003f04 <_printf_common+0x58>
 8003f7e:	2301      	movs	r3, #1
 8003f80:	4622      	mov	r2, r4
 8003f82:	4641      	mov	r1, r8
 8003f84:	4638      	mov	r0, r7
 8003f86:	47c8      	blx	r9
 8003f88:	3001      	adds	r0, #1
 8003f8a:	d0e6      	beq.n	8003f5a <_printf_common+0xae>
 8003f8c:	3601      	adds	r6, #1
 8003f8e:	e7d9      	b.n	8003f44 <_printf_common+0x98>

08003f90 <_printf_i>:
 8003f90:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8003f94:	7e0f      	ldrb	r7, [r1, #24]
 8003f96:	4691      	mov	r9, r2
 8003f98:	2f78      	cmp	r7, #120	@ 0x78
 8003f9a:	4680      	mov	r8, r0
 8003f9c:	460c      	mov	r4, r1
 8003f9e:	469a      	mov	sl, r3
 8003fa0:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8003fa2:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8003fa6:	d807      	bhi.n	8003fb8 <_printf_i+0x28>
 8003fa8:	2f62      	cmp	r7, #98	@ 0x62
 8003faa:	d80a      	bhi.n	8003fc2 <_printf_i+0x32>
 8003fac:	2f00      	cmp	r7, #0
 8003fae:	f000 80d1 	beq.w	8004154 <_printf_i+0x1c4>
 8003fb2:	2f58      	cmp	r7, #88	@ 0x58
 8003fb4:	f000 80b8 	beq.w	8004128 <_printf_i+0x198>
 8003fb8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8003fbc:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8003fc0:	e03a      	b.n	8004038 <_printf_i+0xa8>
 8003fc2:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8003fc6:	2b15      	cmp	r3, #21
 8003fc8:	d8f6      	bhi.n	8003fb8 <_printf_i+0x28>
 8003fca:	a101      	add	r1, pc, #4	@ (adr r1, 8003fd0 <_printf_i+0x40>)
 8003fcc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8003fd0:	08004029 	.word	0x08004029
 8003fd4:	0800403d 	.word	0x0800403d
 8003fd8:	08003fb9 	.word	0x08003fb9
 8003fdc:	08003fb9 	.word	0x08003fb9
 8003fe0:	08003fb9 	.word	0x08003fb9
 8003fe4:	08003fb9 	.word	0x08003fb9
 8003fe8:	0800403d 	.word	0x0800403d
 8003fec:	08003fb9 	.word	0x08003fb9
 8003ff0:	08003fb9 	.word	0x08003fb9
 8003ff4:	08003fb9 	.word	0x08003fb9
 8003ff8:	08003fb9 	.word	0x08003fb9
 8003ffc:	0800413b 	.word	0x0800413b
 8004000:	08004067 	.word	0x08004067
 8004004:	080040f5 	.word	0x080040f5
 8004008:	08003fb9 	.word	0x08003fb9
 800400c:	08003fb9 	.word	0x08003fb9
 8004010:	0800415d 	.word	0x0800415d
 8004014:	08003fb9 	.word	0x08003fb9
 8004018:	08004067 	.word	0x08004067
 800401c:	08003fb9 	.word	0x08003fb9
 8004020:	08003fb9 	.word	0x08003fb9
 8004024:	080040fd 	.word	0x080040fd
 8004028:	6833      	ldr	r3, [r6, #0]
 800402a:	1d1a      	adds	r2, r3, #4
 800402c:	681b      	ldr	r3, [r3, #0]
 800402e:	6032      	str	r2, [r6, #0]
 8004030:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8004034:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8004038:	2301      	movs	r3, #1
 800403a:	e09c      	b.n	8004176 <_printf_i+0x1e6>
 800403c:	6833      	ldr	r3, [r6, #0]
 800403e:	6820      	ldr	r0, [r4, #0]
 8004040:	1d19      	adds	r1, r3, #4
 8004042:	6031      	str	r1, [r6, #0]
 8004044:	0606      	lsls	r6, r0, #24
 8004046:	d501      	bpl.n	800404c <_printf_i+0xbc>
 8004048:	681d      	ldr	r5, [r3, #0]
 800404a:	e003      	b.n	8004054 <_printf_i+0xc4>
 800404c:	0645      	lsls	r5, r0, #25
 800404e:	d5fb      	bpl.n	8004048 <_printf_i+0xb8>
 8004050:	f9b3 5000 	ldrsh.w	r5, [r3]
 8004054:	2d00      	cmp	r5, #0
 8004056:	da03      	bge.n	8004060 <_printf_i+0xd0>
 8004058:	232d      	movs	r3, #45	@ 0x2d
 800405a:	426d      	negs	r5, r5
 800405c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8004060:	230a      	movs	r3, #10
 8004062:	4858      	ldr	r0, [pc, #352]	@ (80041c4 <_printf_i+0x234>)
 8004064:	e011      	b.n	800408a <_printf_i+0xfa>
 8004066:	6821      	ldr	r1, [r4, #0]
 8004068:	6833      	ldr	r3, [r6, #0]
 800406a:	0608      	lsls	r0, r1, #24
 800406c:	f853 5b04 	ldr.w	r5, [r3], #4
 8004070:	d402      	bmi.n	8004078 <_printf_i+0xe8>
 8004072:	0649      	lsls	r1, r1, #25
 8004074:	bf48      	it	mi
 8004076:	b2ad      	uxthmi	r5, r5
 8004078:	2f6f      	cmp	r7, #111	@ 0x6f
 800407a:	6033      	str	r3, [r6, #0]
 800407c:	bf14      	ite	ne
 800407e:	230a      	movne	r3, #10
 8004080:	2308      	moveq	r3, #8
 8004082:	4850      	ldr	r0, [pc, #320]	@ (80041c4 <_printf_i+0x234>)
 8004084:	2100      	movs	r1, #0
 8004086:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800408a:	6866      	ldr	r6, [r4, #4]
 800408c:	2e00      	cmp	r6, #0
 800408e:	60a6      	str	r6, [r4, #8]
 8004090:	db05      	blt.n	800409e <_printf_i+0x10e>
 8004092:	6821      	ldr	r1, [r4, #0]
 8004094:	432e      	orrs	r6, r5
 8004096:	f021 0104 	bic.w	r1, r1, #4
 800409a:	6021      	str	r1, [r4, #0]
 800409c:	d04b      	beq.n	8004136 <_printf_i+0x1a6>
 800409e:	4616      	mov	r6, r2
 80040a0:	fbb5 f1f3 	udiv	r1, r5, r3
 80040a4:	fb03 5711 	mls	r7, r3, r1, r5
 80040a8:	5dc7      	ldrb	r7, [r0, r7]
 80040aa:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80040ae:	462f      	mov	r7, r5
 80040b0:	42bb      	cmp	r3, r7
 80040b2:	460d      	mov	r5, r1
 80040b4:	d9f4      	bls.n	80040a0 <_printf_i+0x110>
 80040b6:	2b08      	cmp	r3, #8
 80040b8:	d10b      	bne.n	80040d2 <_printf_i+0x142>
 80040ba:	6823      	ldr	r3, [r4, #0]
 80040bc:	07df      	lsls	r7, r3, #31
 80040be:	d508      	bpl.n	80040d2 <_printf_i+0x142>
 80040c0:	6923      	ldr	r3, [r4, #16]
 80040c2:	6861      	ldr	r1, [r4, #4]
 80040c4:	4299      	cmp	r1, r3
 80040c6:	bfde      	ittt	le
 80040c8:	2330      	movle	r3, #48	@ 0x30
 80040ca:	f806 3c01 	strble.w	r3, [r6, #-1]
 80040ce:	f106 36ff 	addle.w	r6, r6, #4294967295
 80040d2:	1b92      	subs	r2, r2, r6
 80040d4:	6122      	str	r2, [r4, #16]
 80040d6:	464b      	mov	r3, r9
 80040d8:	4621      	mov	r1, r4
 80040da:	4640      	mov	r0, r8
 80040dc:	f8cd a000 	str.w	sl, [sp]
 80040e0:	aa03      	add	r2, sp, #12
 80040e2:	f7ff fee3 	bl	8003eac <_printf_common>
 80040e6:	3001      	adds	r0, #1
 80040e8:	d14a      	bne.n	8004180 <_printf_i+0x1f0>
 80040ea:	f04f 30ff 	mov.w	r0, #4294967295
 80040ee:	b004      	add	sp, #16
 80040f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80040f4:	6823      	ldr	r3, [r4, #0]
 80040f6:	f043 0320 	orr.w	r3, r3, #32
 80040fa:	6023      	str	r3, [r4, #0]
 80040fc:	2778      	movs	r7, #120	@ 0x78
 80040fe:	4832      	ldr	r0, [pc, #200]	@ (80041c8 <_printf_i+0x238>)
 8004100:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8004104:	6823      	ldr	r3, [r4, #0]
 8004106:	6831      	ldr	r1, [r6, #0]
 8004108:	061f      	lsls	r7, r3, #24
 800410a:	f851 5b04 	ldr.w	r5, [r1], #4
 800410e:	d402      	bmi.n	8004116 <_printf_i+0x186>
 8004110:	065f      	lsls	r7, r3, #25
 8004112:	bf48      	it	mi
 8004114:	b2ad      	uxthmi	r5, r5
 8004116:	6031      	str	r1, [r6, #0]
 8004118:	07d9      	lsls	r1, r3, #31
 800411a:	bf44      	itt	mi
 800411c:	f043 0320 	orrmi.w	r3, r3, #32
 8004120:	6023      	strmi	r3, [r4, #0]
 8004122:	b11d      	cbz	r5, 800412c <_printf_i+0x19c>
 8004124:	2310      	movs	r3, #16
 8004126:	e7ad      	b.n	8004084 <_printf_i+0xf4>
 8004128:	4826      	ldr	r0, [pc, #152]	@ (80041c4 <_printf_i+0x234>)
 800412a:	e7e9      	b.n	8004100 <_printf_i+0x170>
 800412c:	6823      	ldr	r3, [r4, #0]
 800412e:	f023 0320 	bic.w	r3, r3, #32
 8004132:	6023      	str	r3, [r4, #0]
 8004134:	e7f6      	b.n	8004124 <_printf_i+0x194>
 8004136:	4616      	mov	r6, r2
 8004138:	e7bd      	b.n	80040b6 <_printf_i+0x126>
 800413a:	6833      	ldr	r3, [r6, #0]
 800413c:	6825      	ldr	r5, [r4, #0]
 800413e:	1d18      	adds	r0, r3, #4
 8004140:	6961      	ldr	r1, [r4, #20]
 8004142:	6030      	str	r0, [r6, #0]
 8004144:	062e      	lsls	r6, r5, #24
 8004146:	681b      	ldr	r3, [r3, #0]
 8004148:	d501      	bpl.n	800414e <_printf_i+0x1be>
 800414a:	6019      	str	r1, [r3, #0]
 800414c:	e002      	b.n	8004154 <_printf_i+0x1c4>
 800414e:	0668      	lsls	r0, r5, #25
 8004150:	d5fb      	bpl.n	800414a <_printf_i+0x1ba>
 8004152:	8019      	strh	r1, [r3, #0]
 8004154:	2300      	movs	r3, #0
 8004156:	4616      	mov	r6, r2
 8004158:	6123      	str	r3, [r4, #16]
 800415a:	e7bc      	b.n	80040d6 <_printf_i+0x146>
 800415c:	6833      	ldr	r3, [r6, #0]
 800415e:	2100      	movs	r1, #0
 8004160:	1d1a      	adds	r2, r3, #4
 8004162:	6032      	str	r2, [r6, #0]
 8004164:	681e      	ldr	r6, [r3, #0]
 8004166:	6862      	ldr	r2, [r4, #4]
 8004168:	4630      	mov	r0, r6
 800416a:	f000 fa46 	bl	80045fa <memchr>
 800416e:	b108      	cbz	r0, 8004174 <_printf_i+0x1e4>
 8004170:	1b80      	subs	r0, r0, r6
 8004172:	6060      	str	r0, [r4, #4]
 8004174:	6863      	ldr	r3, [r4, #4]
 8004176:	6123      	str	r3, [r4, #16]
 8004178:	2300      	movs	r3, #0
 800417a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800417e:	e7aa      	b.n	80040d6 <_printf_i+0x146>
 8004180:	4632      	mov	r2, r6
 8004182:	4649      	mov	r1, r9
 8004184:	4640      	mov	r0, r8
 8004186:	6923      	ldr	r3, [r4, #16]
 8004188:	47d0      	blx	sl
 800418a:	3001      	adds	r0, #1
 800418c:	d0ad      	beq.n	80040ea <_printf_i+0x15a>
 800418e:	6823      	ldr	r3, [r4, #0]
 8004190:	079b      	lsls	r3, r3, #30
 8004192:	d413      	bmi.n	80041bc <_printf_i+0x22c>
 8004194:	68e0      	ldr	r0, [r4, #12]
 8004196:	9b03      	ldr	r3, [sp, #12]
 8004198:	4298      	cmp	r0, r3
 800419a:	bfb8      	it	lt
 800419c:	4618      	movlt	r0, r3
 800419e:	e7a6      	b.n	80040ee <_printf_i+0x15e>
 80041a0:	2301      	movs	r3, #1
 80041a2:	4632      	mov	r2, r6
 80041a4:	4649      	mov	r1, r9
 80041a6:	4640      	mov	r0, r8
 80041a8:	47d0      	blx	sl
 80041aa:	3001      	adds	r0, #1
 80041ac:	d09d      	beq.n	80040ea <_printf_i+0x15a>
 80041ae:	3501      	adds	r5, #1
 80041b0:	68e3      	ldr	r3, [r4, #12]
 80041b2:	9903      	ldr	r1, [sp, #12]
 80041b4:	1a5b      	subs	r3, r3, r1
 80041b6:	42ab      	cmp	r3, r5
 80041b8:	dcf2      	bgt.n	80041a0 <_printf_i+0x210>
 80041ba:	e7eb      	b.n	8004194 <_printf_i+0x204>
 80041bc:	2500      	movs	r5, #0
 80041be:	f104 0619 	add.w	r6, r4, #25
 80041c2:	e7f5      	b.n	80041b0 <_printf_i+0x220>
 80041c4:	0800726c 	.word	0x0800726c
 80041c8:	0800727d 	.word	0x0800727d

080041cc <std>:
 80041cc:	2300      	movs	r3, #0
 80041ce:	b510      	push	{r4, lr}
 80041d0:	4604      	mov	r4, r0
 80041d2:	e9c0 3300 	strd	r3, r3, [r0]
 80041d6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80041da:	6083      	str	r3, [r0, #8]
 80041dc:	8181      	strh	r1, [r0, #12]
 80041de:	6643      	str	r3, [r0, #100]	@ 0x64
 80041e0:	81c2      	strh	r2, [r0, #14]
 80041e2:	6183      	str	r3, [r0, #24]
 80041e4:	4619      	mov	r1, r3
 80041e6:	2208      	movs	r2, #8
 80041e8:	305c      	adds	r0, #92	@ 0x5c
 80041ea:	f000 f92a 	bl	8004442 <memset>
 80041ee:	4b0d      	ldr	r3, [pc, #52]	@ (8004224 <std+0x58>)
 80041f0:	6224      	str	r4, [r4, #32]
 80041f2:	6263      	str	r3, [r4, #36]	@ 0x24
 80041f4:	4b0c      	ldr	r3, [pc, #48]	@ (8004228 <std+0x5c>)
 80041f6:	62a3      	str	r3, [r4, #40]	@ 0x28
 80041f8:	4b0c      	ldr	r3, [pc, #48]	@ (800422c <std+0x60>)
 80041fa:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80041fc:	4b0c      	ldr	r3, [pc, #48]	@ (8004230 <std+0x64>)
 80041fe:	6323      	str	r3, [r4, #48]	@ 0x30
 8004200:	4b0c      	ldr	r3, [pc, #48]	@ (8004234 <std+0x68>)
 8004202:	429c      	cmp	r4, r3
 8004204:	d006      	beq.n	8004214 <std+0x48>
 8004206:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800420a:	4294      	cmp	r4, r2
 800420c:	d002      	beq.n	8004214 <std+0x48>
 800420e:	33d0      	adds	r3, #208	@ 0xd0
 8004210:	429c      	cmp	r4, r3
 8004212:	d105      	bne.n	8004220 <std+0x54>
 8004214:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8004218:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800421c:	f000 b9ea 	b.w	80045f4 <__retarget_lock_init_recursive>
 8004220:	bd10      	pop	{r4, pc}
 8004222:	bf00      	nop
 8004224:	080043bd 	.word	0x080043bd
 8004228:	080043df 	.word	0x080043df
 800422c:	08004417 	.word	0x08004417
 8004230:	0800443b 	.word	0x0800443b
 8004234:	20000404 	.word	0x20000404

08004238 <stdio_exit_handler>:
 8004238:	4a02      	ldr	r2, [pc, #8]	@ (8004244 <stdio_exit_handler+0xc>)
 800423a:	4903      	ldr	r1, [pc, #12]	@ (8004248 <stdio_exit_handler+0x10>)
 800423c:	4803      	ldr	r0, [pc, #12]	@ (800424c <stdio_exit_handler+0x14>)
 800423e:	f000 b869 	b.w	8004314 <_fwalk_sglue>
 8004242:	bf00      	nop
 8004244:	20000008 	.word	0x20000008
 8004248:	08006895 	.word	0x08006895
 800424c:	20000184 	.word	0x20000184

08004250 <cleanup_stdio>:
 8004250:	6841      	ldr	r1, [r0, #4]
 8004252:	4b0c      	ldr	r3, [pc, #48]	@ (8004284 <cleanup_stdio+0x34>)
 8004254:	b510      	push	{r4, lr}
 8004256:	4299      	cmp	r1, r3
 8004258:	4604      	mov	r4, r0
 800425a:	d001      	beq.n	8004260 <cleanup_stdio+0x10>
 800425c:	f002 fb1a 	bl	8006894 <_fflush_r>
 8004260:	68a1      	ldr	r1, [r4, #8]
 8004262:	4b09      	ldr	r3, [pc, #36]	@ (8004288 <cleanup_stdio+0x38>)
 8004264:	4299      	cmp	r1, r3
 8004266:	d002      	beq.n	800426e <cleanup_stdio+0x1e>
 8004268:	4620      	mov	r0, r4
 800426a:	f002 fb13 	bl	8006894 <_fflush_r>
 800426e:	68e1      	ldr	r1, [r4, #12]
 8004270:	4b06      	ldr	r3, [pc, #24]	@ (800428c <cleanup_stdio+0x3c>)
 8004272:	4299      	cmp	r1, r3
 8004274:	d004      	beq.n	8004280 <cleanup_stdio+0x30>
 8004276:	4620      	mov	r0, r4
 8004278:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800427c:	f002 bb0a 	b.w	8006894 <_fflush_r>
 8004280:	bd10      	pop	{r4, pc}
 8004282:	bf00      	nop
 8004284:	20000404 	.word	0x20000404
 8004288:	2000046c 	.word	0x2000046c
 800428c:	200004d4 	.word	0x200004d4

08004290 <global_stdio_init.part.0>:
 8004290:	b510      	push	{r4, lr}
 8004292:	4b0b      	ldr	r3, [pc, #44]	@ (80042c0 <global_stdio_init.part.0+0x30>)
 8004294:	4c0b      	ldr	r4, [pc, #44]	@ (80042c4 <global_stdio_init.part.0+0x34>)
 8004296:	4a0c      	ldr	r2, [pc, #48]	@ (80042c8 <global_stdio_init.part.0+0x38>)
 8004298:	4620      	mov	r0, r4
 800429a:	601a      	str	r2, [r3, #0]
 800429c:	2104      	movs	r1, #4
 800429e:	2200      	movs	r2, #0
 80042a0:	f7ff ff94 	bl	80041cc <std>
 80042a4:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80042a8:	2201      	movs	r2, #1
 80042aa:	2109      	movs	r1, #9
 80042ac:	f7ff ff8e 	bl	80041cc <std>
 80042b0:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80042b4:	2202      	movs	r2, #2
 80042b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80042ba:	2112      	movs	r1, #18
 80042bc:	f7ff bf86 	b.w	80041cc <std>
 80042c0:	2000053c 	.word	0x2000053c
 80042c4:	20000404 	.word	0x20000404
 80042c8:	08004239 	.word	0x08004239

080042cc <__sfp_lock_acquire>:
 80042cc:	4801      	ldr	r0, [pc, #4]	@ (80042d4 <__sfp_lock_acquire+0x8>)
 80042ce:	f000 b992 	b.w	80045f6 <__retarget_lock_acquire_recursive>
 80042d2:	bf00      	nop
 80042d4:	20000545 	.word	0x20000545

080042d8 <__sfp_lock_release>:
 80042d8:	4801      	ldr	r0, [pc, #4]	@ (80042e0 <__sfp_lock_release+0x8>)
 80042da:	f000 b98d 	b.w	80045f8 <__retarget_lock_release_recursive>
 80042de:	bf00      	nop
 80042e0:	20000545 	.word	0x20000545

080042e4 <__sinit>:
 80042e4:	b510      	push	{r4, lr}
 80042e6:	4604      	mov	r4, r0
 80042e8:	f7ff fff0 	bl	80042cc <__sfp_lock_acquire>
 80042ec:	6a23      	ldr	r3, [r4, #32]
 80042ee:	b11b      	cbz	r3, 80042f8 <__sinit+0x14>
 80042f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80042f4:	f7ff bff0 	b.w	80042d8 <__sfp_lock_release>
 80042f8:	4b04      	ldr	r3, [pc, #16]	@ (800430c <__sinit+0x28>)
 80042fa:	6223      	str	r3, [r4, #32]
 80042fc:	4b04      	ldr	r3, [pc, #16]	@ (8004310 <__sinit+0x2c>)
 80042fe:	681b      	ldr	r3, [r3, #0]
 8004300:	2b00      	cmp	r3, #0
 8004302:	d1f5      	bne.n	80042f0 <__sinit+0xc>
 8004304:	f7ff ffc4 	bl	8004290 <global_stdio_init.part.0>
 8004308:	e7f2      	b.n	80042f0 <__sinit+0xc>
 800430a:	bf00      	nop
 800430c:	08004251 	.word	0x08004251
 8004310:	2000053c 	.word	0x2000053c

08004314 <_fwalk_sglue>:
 8004314:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004318:	4607      	mov	r7, r0
 800431a:	4688      	mov	r8, r1
 800431c:	4614      	mov	r4, r2
 800431e:	2600      	movs	r6, #0
 8004320:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8004324:	f1b9 0901 	subs.w	r9, r9, #1
 8004328:	d505      	bpl.n	8004336 <_fwalk_sglue+0x22>
 800432a:	6824      	ldr	r4, [r4, #0]
 800432c:	2c00      	cmp	r4, #0
 800432e:	d1f7      	bne.n	8004320 <_fwalk_sglue+0xc>
 8004330:	4630      	mov	r0, r6
 8004332:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004336:	89ab      	ldrh	r3, [r5, #12]
 8004338:	2b01      	cmp	r3, #1
 800433a:	d907      	bls.n	800434c <_fwalk_sglue+0x38>
 800433c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8004340:	3301      	adds	r3, #1
 8004342:	d003      	beq.n	800434c <_fwalk_sglue+0x38>
 8004344:	4629      	mov	r1, r5
 8004346:	4638      	mov	r0, r7
 8004348:	47c0      	blx	r8
 800434a:	4306      	orrs	r6, r0
 800434c:	3568      	adds	r5, #104	@ 0x68
 800434e:	e7e9      	b.n	8004324 <_fwalk_sglue+0x10>

08004350 <sniprintf>:
 8004350:	b40c      	push	{r2, r3}
 8004352:	b530      	push	{r4, r5, lr}
 8004354:	4b18      	ldr	r3, [pc, #96]	@ (80043b8 <sniprintf+0x68>)
 8004356:	1e0c      	subs	r4, r1, #0
 8004358:	681d      	ldr	r5, [r3, #0]
 800435a:	b09d      	sub	sp, #116	@ 0x74
 800435c:	da08      	bge.n	8004370 <sniprintf+0x20>
 800435e:	238b      	movs	r3, #139	@ 0x8b
 8004360:	f04f 30ff 	mov.w	r0, #4294967295
 8004364:	602b      	str	r3, [r5, #0]
 8004366:	b01d      	add	sp, #116	@ 0x74
 8004368:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800436c:	b002      	add	sp, #8
 800436e:	4770      	bx	lr
 8004370:	f44f 7302 	mov.w	r3, #520	@ 0x208
 8004374:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004378:	f04f 0300 	mov.w	r3, #0
 800437c:	931b      	str	r3, [sp, #108]	@ 0x6c
 800437e:	bf0c      	ite	eq
 8004380:	4623      	moveq	r3, r4
 8004382:	f104 33ff 	addne.w	r3, r4, #4294967295
 8004386:	9304      	str	r3, [sp, #16]
 8004388:	9307      	str	r3, [sp, #28]
 800438a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800438e:	9002      	str	r0, [sp, #8]
 8004390:	9006      	str	r0, [sp, #24]
 8004392:	f8ad 3016 	strh.w	r3, [sp, #22]
 8004396:	4628      	mov	r0, r5
 8004398:	ab21      	add	r3, sp, #132	@ 0x84
 800439a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800439c:	a902      	add	r1, sp, #8
 800439e:	9301      	str	r3, [sp, #4]
 80043a0:	f002 f8fc 	bl	800659c <_svfiprintf_r>
 80043a4:	1c43      	adds	r3, r0, #1
 80043a6:	bfbc      	itt	lt
 80043a8:	238b      	movlt	r3, #139	@ 0x8b
 80043aa:	602b      	strlt	r3, [r5, #0]
 80043ac:	2c00      	cmp	r4, #0
 80043ae:	d0da      	beq.n	8004366 <sniprintf+0x16>
 80043b0:	2200      	movs	r2, #0
 80043b2:	9b02      	ldr	r3, [sp, #8]
 80043b4:	701a      	strb	r2, [r3, #0]
 80043b6:	e7d6      	b.n	8004366 <sniprintf+0x16>
 80043b8:	20000180 	.word	0x20000180

080043bc <__sread>:
 80043bc:	b510      	push	{r4, lr}
 80043be:	460c      	mov	r4, r1
 80043c0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80043c4:	f000 f8c8 	bl	8004558 <_read_r>
 80043c8:	2800      	cmp	r0, #0
 80043ca:	bfab      	itete	ge
 80043cc:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80043ce:	89a3      	ldrhlt	r3, [r4, #12]
 80043d0:	181b      	addge	r3, r3, r0
 80043d2:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80043d6:	bfac      	ite	ge
 80043d8:	6563      	strge	r3, [r4, #84]	@ 0x54
 80043da:	81a3      	strhlt	r3, [r4, #12]
 80043dc:	bd10      	pop	{r4, pc}

080043de <__swrite>:
 80043de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80043e2:	461f      	mov	r7, r3
 80043e4:	898b      	ldrh	r3, [r1, #12]
 80043e6:	4605      	mov	r5, r0
 80043e8:	05db      	lsls	r3, r3, #23
 80043ea:	460c      	mov	r4, r1
 80043ec:	4616      	mov	r6, r2
 80043ee:	d505      	bpl.n	80043fc <__swrite+0x1e>
 80043f0:	2302      	movs	r3, #2
 80043f2:	2200      	movs	r2, #0
 80043f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80043f8:	f000 f89c 	bl	8004534 <_lseek_r>
 80043fc:	89a3      	ldrh	r3, [r4, #12]
 80043fe:	4632      	mov	r2, r6
 8004400:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8004404:	81a3      	strh	r3, [r4, #12]
 8004406:	4628      	mov	r0, r5
 8004408:	463b      	mov	r3, r7
 800440a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800440e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004412:	f000 b8b3 	b.w	800457c <_write_r>

08004416 <__sseek>:
 8004416:	b510      	push	{r4, lr}
 8004418:	460c      	mov	r4, r1
 800441a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800441e:	f000 f889 	bl	8004534 <_lseek_r>
 8004422:	1c43      	adds	r3, r0, #1
 8004424:	89a3      	ldrh	r3, [r4, #12]
 8004426:	bf15      	itete	ne
 8004428:	6560      	strne	r0, [r4, #84]	@ 0x54
 800442a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800442e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8004432:	81a3      	strheq	r3, [r4, #12]
 8004434:	bf18      	it	ne
 8004436:	81a3      	strhne	r3, [r4, #12]
 8004438:	bd10      	pop	{r4, pc}

0800443a <__sclose>:
 800443a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800443e:	f000 b869 	b.w	8004514 <_close_r>

08004442 <memset>:
 8004442:	4603      	mov	r3, r0
 8004444:	4402      	add	r2, r0
 8004446:	4293      	cmp	r3, r2
 8004448:	d100      	bne.n	800444c <memset+0xa>
 800444a:	4770      	bx	lr
 800444c:	f803 1b01 	strb.w	r1, [r3], #1
 8004450:	e7f9      	b.n	8004446 <memset+0x4>

08004452 <strchr>:
 8004452:	4603      	mov	r3, r0
 8004454:	b2c9      	uxtb	r1, r1
 8004456:	4618      	mov	r0, r3
 8004458:	f813 2b01 	ldrb.w	r2, [r3], #1
 800445c:	b112      	cbz	r2, 8004464 <strchr+0x12>
 800445e:	428a      	cmp	r2, r1
 8004460:	d1f9      	bne.n	8004456 <strchr+0x4>
 8004462:	4770      	bx	lr
 8004464:	2900      	cmp	r1, #0
 8004466:	bf18      	it	ne
 8004468:	2000      	movne	r0, #0
 800446a:	4770      	bx	lr

0800446c <strncmp>:
 800446c:	b510      	push	{r4, lr}
 800446e:	b16a      	cbz	r2, 800448c <strncmp+0x20>
 8004470:	3901      	subs	r1, #1
 8004472:	1884      	adds	r4, r0, r2
 8004474:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004478:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800447c:	429a      	cmp	r2, r3
 800447e:	d103      	bne.n	8004488 <strncmp+0x1c>
 8004480:	42a0      	cmp	r0, r4
 8004482:	d001      	beq.n	8004488 <strncmp+0x1c>
 8004484:	2a00      	cmp	r2, #0
 8004486:	d1f5      	bne.n	8004474 <strncmp+0x8>
 8004488:	1ad0      	subs	r0, r2, r3
 800448a:	bd10      	pop	{r4, pc}
 800448c:	4610      	mov	r0, r2
 800448e:	e7fc      	b.n	800448a <strncmp+0x1e>

08004490 <strncpy>:
 8004490:	4603      	mov	r3, r0
 8004492:	b510      	push	{r4, lr}
 8004494:	3901      	subs	r1, #1
 8004496:	b132      	cbz	r2, 80044a6 <strncpy+0x16>
 8004498:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800449c:	3a01      	subs	r2, #1
 800449e:	f803 4b01 	strb.w	r4, [r3], #1
 80044a2:	2c00      	cmp	r4, #0
 80044a4:	d1f7      	bne.n	8004496 <strncpy+0x6>
 80044a6:	2100      	movs	r1, #0
 80044a8:	441a      	add	r2, r3
 80044aa:	4293      	cmp	r3, r2
 80044ac:	d100      	bne.n	80044b0 <strncpy+0x20>
 80044ae:	bd10      	pop	{r4, pc}
 80044b0:	f803 1b01 	strb.w	r1, [r3], #1
 80044b4:	e7f9      	b.n	80044aa <strncpy+0x1a>

080044b6 <__strtok_r>:
 80044b6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80044b8:	4604      	mov	r4, r0
 80044ba:	b908      	cbnz	r0, 80044c0 <__strtok_r+0xa>
 80044bc:	6814      	ldr	r4, [r2, #0]
 80044be:	b144      	cbz	r4, 80044d2 <__strtok_r+0x1c>
 80044c0:	460f      	mov	r7, r1
 80044c2:	4620      	mov	r0, r4
 80044c4:	f814 5b01 	ldrb.w	r5, [r4], #1
 80044c8:	f817 6b01 	ldrb.w	r6, [r7], #1
 80044cc:	b91e      	cbnz	r6, 80044d6 <__strtok_r+0x20>
 80044ce:	b965      	cbnz	r5, 80044ea <__strtok_r+0x34>
 80044d0:	6015      	str	r5, [r2, #0]
 80044d2:	2000      	movs	r0, #0
 80044d4:	e005      	b.n	80044e2 <__strtok_r+0x2c>
 80044d6:	42b5      	cmp	r5, r6
 80044d8:	d1f6      	bne.n	80044c8 <__strtok_r+0x12>
 80044da:	2b00      	cmp	r3, #0
 80044dc:	d1f0      	bne.n	80044c0 <__strtok_r+0xa>
 80044de:	6014      	str	r4, [r2, #0]
 80044e0:	7003      	strb	r3, [r0, #0]
 80044e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80044e4:	461c      	mov	r4, r3
 80044e6:	e00c      	b.n	8004502 <__strtok_r+0x4c>
 80044e8:	b91d      	cbnz	r5, 80044f2 <__strtok_r+0x3c>
 80044ea:	460e      	mov	r6, r1
 80044ec:	4627      	mov	r7, r4
 80044ee:	f814 3b01 	ldrb.w	r3, [r4], #1
 80044f2:	f816 5b01 	ldrb.w	r5, [r6], #1
 80044f6:	42ab      	cmp	r3, r5
 80044f8:	d1f6      	bne.n	80044e8 <__strtok_r+0x32>
 80044fa:	2b00      	cmp	r3, #0
 80044fc:	d0f2      	beq.n	80044e4 <__strtok_r+0x2e>
 80044fe:	2300      	movs	r3, #0
 8004500:	703b      	strb	r3, [r7, #0]
 8004502:	6014      	str	r4, [r2, #0]
 8004504:	e7ed      	b.n	80044e2 <__strtok_r+0x2c>

08004506 <strtok_r>:
 8004506:	2301      	movs	r3, #1
 8004508:	f7ff bfd5 	b.w	80044b6 <__strtok_r>

0800450c <_localeconv_r>:
 800450c:	4800      	ldr	r0, [pc, #0]	@ (8004510 <_localeconv_r+0x4>)
 800450e:	4770      	bx	lr
 8004510:	20000104 	.word	0x20000104

08004514 <_close_r>:
 8004514:	b538      	push	{r3, r4, r5, lr}
 8004516:	2300      	movs	r3, #0
 8004518:	4d05      	ldr	r5, [pc, #20]	@ (8004530 <_close_r+0x1c>)
 800451a:	4604      	mov	r4, r0
 800451c:	4608      	mov	r0, r1
 800451e:	602b      	str	r3, [r5, #0]
 8004520:	f7fe fa61 	bl	80029e6 <_close>
 8004524:	1c43      	adds	r3, r0, #1
 8004526:	d102      	bne.n	800452e <_close_r+0x1a>
 8004528:	682b      	ldr	r3, [r5, #0]
 800452a:	b103      	cbz	r3, 800452e <_close_r+0x1a>
 800452c:	6023      	str	r3, [r4, #0]
 800452e:	bd38      	pop	{r3, r4, r5, pc}
 8004530:	20000540 	.word	0x20000540

08004534 <_lseek_r>:
 8004534:	b538      	push	{r3, r4, r5, lr}
 8004536:	4604      	mov	r4, r0
 8004538:	4608      	mov	r0, r1
 800453a:	4611      	mov	r1, r2
 800453c:	2200      	movs	r2, #0
 800453e:	4d05      	ldr	r5, [pc, #20]	@ (8004554 <_lseek_r+0x20>)
 8004540:	602a      	str	r2, [r5, #0]
 8004542:	461a      	mov	r2, r3
 8004544:	f7fe fa73 	bl	8002a2e <_lseek>
 8004548:	1c43      	adds	r3, r0, #1
 800454a:	d102      	bne.n	8004552 <_lseek_r+0x1e>
 800454c:	682b      	ldr	r3, [r5, #0]
 800454e:	b103      	cbz	r3, 8004552 <_lseek_r+0x1e>
 8004550:	6023      	str	r3, [r4, #0]
 8004552:	bd38      	pop	{r3, r4, r5, pc}
 8004554:	20000540 	.word	0x20000540

08004558 <_read_r>:
 8004558:	b538      	push	{r3, r4, r5, lr}
 800455a:	4604      	mov	r4, r0
 800455c:	4608      	mov	r0, r1
 800455e:	4611      	mov	r1, r2
 8004560:	2200      	movs	r2, #0
 8004562:	4d05      	ldr	r5, [pc, #20]	@ (8004578 <_read_r+0x20>)
 8004564:	602a      	str	r2, [r5, #0]
 8004566:	461a      	mov	r2, r3
 8004568:	f7fe fa04 	bl	8002974 <_read>
 800456c:	1c43      	adds	r3, r0, #1
 800456e:	d102      	bne.n	8004576 <_read_r+0x1e>
 8004570:	682b      	ldr	r3, [r5, #0]
 8004572:	b103      	cbz	r3, 8004576 <_read_r+0x1e>
 8004574:	6023      	str	r3, [r4, #0]
 8004576:	bd38      	pop	{r3, r4, r5, pc}
 8004578:	20000540 	.word	0x20000540

0800457c <_write_r>:
 800457c:	b538      	push	{r3, r4, r5, lr}
 800457e:	4604      	mov	r4, r0
 8004580:	4608      	mov	r0, r1
 8004582:	4611      	mov	r1, r2
 8004584:	2200      	movs	r2, #0
 8004586:	4d05      	ldr	r5, [pc, #20]	@ (800459c <_write_r+0x20>)
 8004588:	602a      	str	r2, [r5, #0]
 800458a:	461a      	mov	r2, r3
 800458c:	f7fe fa0f 	bl	80029ae <_write>
 8004590:	1c43      	adds	r3, r0, #1
 8004592:	d102      	bne.n	800459a <_write_r+0x1e>
 8004594:	682b      	ldr	r3, [r5, #0]
 8004596:	b103      	cbz	r3, 800459a <_write_r+0x1e>
 8004598:	6023      	str	r3, [r4, #0]
 800459a:	bd38      	pop	{r3, r4, r5, pc}
 800459c:	20000540 	.word	0x20000540

080045a0 <__errno>:
 80045a0:	4b01      	ldr	r3, [pc, #4]	@ (80045a8 <__errno+0x8>)
 80045a2:	6818      	ldr	r0, [r3, #0]
 80045a4:	4770      	bx	lr
 80045a6:	bf00      	nop
 80045a8:	20000180 	.word	0x20000180

080045ac <__libc_init_array>:
 80045ac:	b570      	push	{r4, r5, r6, lr}
 80045ae:	2600      	movs	r6, #0
 80045b0:	4d0c      	ldr	r5, [pc, #48]	@ (80045e4 <__libc_init_array+0x38>)
 80045b2:	4c0d      	ldr	r4, [pc, #52]	@ (80045e8 <__libc_init_array+0x3c>)
 80045b4:	1b64      	subs	r4, r4, r5
 80045b6:	10a4      	asrs	r4, r4, #2
 80045b8:	42a6      	cmp	r6, r4
 80045ba:	d109      	bne.n	80045d0 <__libc_init_array+0x24>
 80045bc:	f002 fcd8 	bl	8006f70 <_init>
 80045c0:	2600      	movs	r6, #0
 80045c2:	4d0a      	ldr	r5, [pc, #40]	@ (80045ec <__libc_init_array+0x40>)
 80045c4:	4c0a      	ldr	r4, [pc, #40]	@ (80045f0 <__libc_init_array+0x44>)
 80045c6:	1b64      	subs	r4, r4, r5
 80045c8:	10a4      	asrs	r4, r4, #2
 80045ca:	42a6      	cmp	r6, r4
 80045cc:	d105      	bne.n	80045da <__libc_init_array+0x2e>
 80045ce:	bd70      	pop	{r4, r5, r6, pc}
 80045d0:	f855 3b04 	ldr.w	r3, [r5], #4
 80045d4:	4798      	blx	r3
 80045d6:	3601      	adds	r6, #1
 80045d8:	e7ee      	b.n	80045b8 <__libc_init_array+0xc>
 80045da:	f855 3b04 	ldr.w	r3, [r5], #4
 80045de:	4798      	blx	r3
 80045e0:	3601      	adds	r6, #1
 80045e2:	e7f2      	b.n	80045ca <__libc_init_array+0x1e>
 80045e4:	08007688 	.word	0x08007688
 80045e8:	08007688 	.word	0x08007688
 80045ec:	08007688 	.word	0x08007688
 80045f0:	0800768c 	.word	0x0800768c

080045f4 <__retarget_lock_init_recursive>:
 80045f4:	4770      	bx	lr

080045f6 <__retarget_lock_acquire_recursive>:
 80045f6:	4770      	bx	lr

080045f8 <__retarget_lock_release_recursive>:
 80045f8:	4770      	bx	lr

080045fa <memchr>:
 80045fa:	4603      	mov	r3, r0
 80045fc:	b510      	push	{r4, lr}
 80045fe:	b2c9      	uxtb	r1, r1
 8004600:	4402      	add	r2, r0
 8004602:	4293      	cmp	r3, r2
 8004604:	4618      	mov	r0, r3
 8004606:	d101      	bne.n	800460c <memchr+0x12>
 8004608:	2000      	movs	r0, #0
 800460a:	e003      	b.n	8004614 <memchr+0x1a>
 800460c:	7804      	ldrb	r4, [r0, #0]
 800460e:	3301      	adds	r3, #1
 8004610:	428c      	cmp	r4, r1
 8004612:	d1f6      	bne.n	8004602 <memchr+0x8>
 8004614:	bd10      	pop	{r4, pc}

08004616 <memcpy>:
 8004616:	440a      	add	r2, r1
 8004618:	4291      	cmp	r1, r2
 800461a:	f100 33ff 	add.w	r3, r0, #4294967295
 800461e:	d100      	bne.n	8004622 <memcpy+0xc>
 8004620:	4770      	bx	lr
 8004622:	b510      	push	{r4, lr}
 8004624:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004628:	4291      	cmp	r1, r2
 800462a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800462e:	d1f9      	bne.n	8004624 <memcpy+0xe>
 8004630:	bd10      	pop	{r4, pc}
	...

08004634 <nan>:
 8004634:	2000      	movs	r0, #0
 8004636:	4901      	ldr	r1, [pc, #4]	@ (800463c <nan+0x8>)
 8004638:	4770      	bx	lr
 800463a:	bf00      	nop
 800463c:	7ff80000 	.word	0x7ff80000

08004640 <quorem>:
 8004640:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004644:	6903      	ldr	r3, [r0, #16]
 8004646:	690c      	ldr	r4, [r1, #16]
 8004648:	4607      	mov	r7, r0
 800464a:	42a3      	cmp	r3, r4
 800464c:	db7e      	blt.n	800474c <quorem+0x10c>
 800464e:	3c01      	subs	r4, #1
 8004650:	00a3      	lsls	r3, r4, #2
 8004652:	f100 0514 	add.w	r5, r0, #20
 8004656:	f101 0814 	add.w	r8, r1, #20
 800465a:	9300      	str	r3, [sp, #0]
 800465c:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8004660:	9301      	str	r3, [sp, #4]
 8004662:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8004666:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800466a:	3301      	adds	r3, #1
 800466c:	429a      	cmp	r2, r3
 800466e:	fbb2 f6f3 	udiv	r6, r2, r3
 8004672:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8004676:	d32e      	bcc.n	80046d6 <quorem+0x96>
 8004678:	f04f 0a00 	mov.w	sl, #0
 800467c:	46c4      	mov	ip, r8
 800467e:	46ae      	mov	lr, r5
 8004680:	46d3      	mov	fp, sl
 8004682:	f85c 3b04 	ldr.w	r3, [ip], #4
 8004686:	b298      	uxth	r0, r3
 8004688:	fb06 a000 	mla	r0, r6, r0, sl
 800468c:	0c1b      	lsrs	r3, r3, #16
 800468e:	0c02      	lsrs	r2, r0, #16
 8004690:	fb06 2303 	mla	r3, r6, r3, r2
 8004694:	f8de 2000 	ldr.w	r2, [lr]
 8004698:	b280      	uxth	r0, r0
 800469a:	b292      	uxth	r2, r2
 800469c:	1a12      	subs	r2, r2, r0
 800469e:	445a      	add	r2, fp
 80046a0:	f8de 0000 	ldr.w	r0, [lr]
 80046a4:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80046a8:	b29b      	uxth	r3, r3
 80046aa:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 80046ae:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 80046b2:	b292      	uxth	r2, r2
 80046b4:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 80046b8:	45e1      	cmp	r9, ip
 80046ba:	ea4f 4b23 	mov.w	fp, r3, asr #16
 80046be:	f84e 2b04 	str.w	r2, [lr], #4
 80046c2:	d2de      	bcs.n	8004682 <quorem+0x42>
 80046c4:	9b00      	ldr	r3, [sp, #0]
 80046c6:	58eb      	ldr	r3, [r5, r3]
 80046c8:	b92b      	cbnz	r3, 80046d6 <quorem+0x96>
 80046ca:	9b01      	ldr	r3, [sp, #4]
 80046cc:	3b04      	subs	r3, #4
 80046ce:	429d      	cmp	r5, r3
 80046d0:	461a      	mov	r2, r3
 80046d2:	d32f      	bcc.n	8004734 <quorem+0xf4>
 80046d4:	613c      	str	r4, [r7, #16]
 80046d6:	4638      	mov	r0, r7
 80046d8:	f001 fd14 	bl	8006104 <__mcmp>
 80046dc:	2800      	cmp	r0, #0
 80046de:	db25      	blt.n	800472c <quorem+0xec>
 80046e0:	4629      	mov	r1, r5
 80046e2:	2000      	movs	r0, #0
 80046e4:	f858 2b04 	ldr.w	r2, [r8], #4
 80046e8:	f8d1 c000 	ldr.w	ip, [r1]
 80046ec:	fa1f fe82 	uxth.w	lr, r2
 80046f0:	fa1f f38c 	uxth.w	r3, ip
 80046f4:	eba3 030e 	sub.w	r3, r3, lr
 80046f8:	4403      	add	r3, r0
 80046fa:	0c12      	lsrs	r2, r2, #16
 80046fc:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8004700:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8004704:	b29b      	uxth	r3, r3
 8004706:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800470a:	45c1      	cmp	r9, r8
 800470c:	ea4f 4022 	mov.w	r0, r2, asr #16
 8004710:	f841 3b04 	str.w	r3, [r1], #4
 8004714:	d2e6      	bcs.n	80046e4 <quorem+0xa4>
 8004716:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800471a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800471e:	b922      	cbnz	r2, 800472a <quorem+0xea>
 8004720:	3b04      	subs	r3, #4
 8004722:	429d      	cmp	r5, r3
 8004724:	461a      	mov	r2, r3
 8004726:	d30b      	bcc.n	8004740 <quorem+0x100>
 8004728:	613c      	str	r4, [r7, #16]
 800472a:	3601      	adds	r6, #1
 800472c:	4630      	mov	r0, r6
 800472e:	b003      	add	sp, #12
 8004730:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004734:	6812      	ldr	r2, [r2, #0]
 8004736:	3b04      	subs	r3, #4
 8004738:	2a00      	cmp	r2, #0
 800473a:	d1cb      	bne.n	80046d4 <quorem+0x94>
 800473c:	3c01      	subs	r4, #1
 800473e:	e7c6      	b.n	80046ce <quorem+0x8e>
 8004740:	6812      	ldr	r2, [r2, #0]
 8004742:	3b04      	subs	r3, #4
 8004744:	2a00      	cmp	r2, #0
 8004746:	d1ef      	bne.n	8004728 <quorem+0xe8>
 8004748:	3c01      	subs	r4, #1
 800474a:	e7ea      	b.n	8004722 <quorem+0xe2>
 800474c:	2000      	movs	r0, #0
 800474e:	e7ee      	b.n	800472e <quorem+0xee>

08004750 <_dtoa_r>:
 8004750:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004754:	4614      	mov	r4, r2
 8004756:	461d      	mov	r5, r3
 8004758:	69c7      	ldr	r7, [r0, #28]
 800475a:	b097      	sub	sp, #92	@ 0x5c
 800475c:	4681      	mov	r9, r0
 800475e:	e9cd 4506 	strd	r4, r5, [sp, #24]
 8004762:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 8004764:	b97f      	cbnz	r7, 8004786 <_dtoa_r+0x36>
 8004766:	2010      	movs	r0, #16
 8004768:	f001 f948 	bl	80059fc <malloc>
 800476c:	4602      	mov	r2, r0
 800476e:	f8c9 001c 	str.w	r0, [r9, #28]
 8004772:	b920      	cbnz	r0, 800477e <_dtoa_r+0x2e>
 8004774:	21ef      	movs	r1, #239	@ 0xef
 8004776:	4bac      	ldr	r3, [pc, #688]	@ (8004a28 <_dtoa_r+0x2d8>)
 8004778:	48ac      	ldr	r0, [pc, #688]	@ (8004a2c <_dtoa_r+0x2dc>)
 800477a:	f002 f8dd 	bl	8006938 <__assert_func>
 800477e:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8004782:	6007      	str	r7, [r0, #0]
 8004784:	60c7      	str	r7, [r0, #12]
 8004786:	f8d9 301c 	ldr.w	r3, [r9, #28]
 800478a:	6819      	ldr	r1, [r3, #0]
 800478c:	b159      	cbz	r1, 80047a6 <_dtoa_r+0x56>
 800478e:	685a      	ldr	r2, [r3, #4]
 8004790:	2301      	movs	r3, #1
 8004792:	4093      	lsls	r3, r2
 8004794:	604a      	str	r2, [r1, #4]
 8004796:	608b      	str	r3, [r1, #8]
 8004798:	4648      	mov	r0, r9
 800479a:	f001 fa37 	bl	8005c0c <_Bfree>
 800479e:	2200      	movs	r2, #0
 80047a0:	f8d9 301c 	ldr.w	r3, [r9, #28]
 80047a4:	601a      	str	r2, [r3, #0]
 80047a6:	1e2b      	subs	r3, r5, #0
 80047a8:	bfaf      	iteee	ge
 80047aa:	2300      	movge	r3, #0
 80047ac:	2201      	movlt	r2, #1
 80047ae:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 80047b2:	9307      	strlt	r3, [sp, #28]
 80047b4:	bfa8      	it	ge
 80047b6:	6033      	strge	r3, [r6, #0]
 80047b8:	f8dd 801c 	ldr.w	r8, [sp, #28]
 80047bc:	4b9c      	ldr	r3, [pc, #624]	@ (8004a30 <_dtoa_r+0x2e0>)
 80047be:	bfb8      	it	lt
 80047c0:	6032      	strlt	r2, [r6, #0]
 80047c2:	ea33 0308 	bics.w	r3, r3, r8
 80047c6:	d112      	bne.n	80047ee <_dtoa_r+0x9e>
 80047c8:	f242 730f 	movw	r3, #9999	@ 0x270f
 80047cc:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80047ce:	6013      	str	r3, [r2, #0]
 80047d0:	f3c8 0313 	ubfx	r3, r8, #0, #20
 80047d4:	4323      	orrs	r3, r4
 80047d6:	f000 855e 	beq.w	8005296 <_dtoa_r+0xb46>
 80047da:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80047dc:	f8df a254 	ldr.w	sl, [pc, #596]	@ 8004a34 <_dtoa_r+0x2e4>
 80047e0:	2b00      	cmp	r3, #0
 80047e2:	f000 8560 	beq.w	80052a6 <_dtoa_r+0xb56>
 80047e6:	f10a 0303 	add.w	r3, sl, #3
 80047ea:	f000 bd5a 	b.w	80052a2 <_dtoa_r+0xb52>
 80047ee:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80047f2:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 80047f6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80047fa:	2200      	movs	r2, #0
 80047fc:	2300      	movs	r3, #0
 80047fe:	f7fc f8d3 	bl	80009a8 <__aeabi_dcmpeq>
 8004802:	4607      	mov	r7, r0
 8004804:	b158      	cbz	r0, 800481e <_dtoa_r+0xce>
 8004806:	2301      	movs	r3, #1
 8004808:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 800480a:	6013      	str	r3, [r2, #0]
 800480c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 800480e:	b113      	cbz	r3, 8004816 <_dtoa_r+0xc6>
 8004810:	4b89      	ldr	r3, [pc, #548]	@ (8004a38 <_dtoa_r+0x2e8>)
 8004812:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8004814:	6013      	str	r3, [r2, #0]
 8004816:	f8df a224 	ldr.w	sl, [pc, #548]	@ 8004a3c <_dtoa_r+0x2ec>
 800481a:	f000 bd44 	b.w	80052a6 <_dtoa_r+0xb56>
 800481e:	ab14      	add	r3, sp, #80	@ 0x50
 8004820:	9301      	str	r3, [sp, #4]
 8004822:	ab15      	add	r3, sp, #84	@ 0x54
 8004824:	9300      	str	r3, [sp, #0]
 8004826:	4648      	mov	r0, r9
 8004828:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 800482c:	f001 fd82 	bl	8006334 <__d2b>
 8004830:	f3c8 560a 	ubfx	r6, r8, #20, #11
 8004834:	9003      	str	r0, [sp, #12]
 8004836:	2e00      	cmp	r6, #0
 8004838:	d078      	beq.n	800492c <_dtoa_r+0x1dc>
 800483a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800483e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8004840:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8004844:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8004848:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 800484c:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8004850:	9712      	str	r7, [sp, #72]	@ 0x48
 8004852:	4619      	mov	r1, r3
 8004854:	2200      	movs	r2, #0
 8004856:	4b7a      	ldr	r3, [pc, #488]	@ (8004a40 <_dtoa_r+0x2f0>)
 8004858:	f7fb fc86 	bl	8000168 <__aeabi_dsub>
 800485c:	a36c      	add	r3, pc, #432	@ (adr r3, 8004a10 <_dtoa_r+0x2c0>)
 800485e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004862:	f7fb fe39 	bl	80004d8 <__aeabi_dmul>
 8004866:	a36c      	add	r3, pc, #432	@ (adr r3, 8004a18 <_dtoa_r+0x2c8>)
 8004868:	e9d3 2300 	ldrd	r2, r3, [r3]
 800486c:	f7fb fc7e 	bl	800016c <__adddf3>
 8004870:	4604      	mov	r4, r0
 8004872:	4630      	mov	r0, r6
 8004874:	460d      	mov	r5, r1
 8004876:	f7fb fdc5 	bl	8000404 <__aeabi_i2d>
 800487a:	a369      	add	r3, pc, #420	@ (adr r3, 8004a20 <_dtoa_r+0x2d0>)
 800487c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004880:	f7fb fe2a 	bl	80004d8 <__aeabi_dmul>
 8004884:	4602      	mov	r2, r0
 8004886:	460b      	mov	r3, r1
 8004888:	4620      	mov	r0, r4
 800488a:	4629      	mov	r1, r5
 800488c:	f7fb fc6e 	bl	800016c <__adddf3>
 8004890:	4604      	mov	r4, r0
 8004892:	460d      	mov	r5, r1
 8004894:	f7fc f8d0 	bl	8000a38 <__aeabi_d2iz>
 8004898:	2200      	movs	r2, #0
 800489a:	4607      	mov	r7, r0
 800489c:	2300      	movs	r3, #0
 800489e:	4620      	mov	r0, r4
 80048a0:	4629      	mov	r1, r5
 80048a2:	f7fc f88b 	bl	80009bc <__aeabi_dcmplt>
 80048a6:	b140      	cbz	r0, 80048ba <_dtoa_r+0x16a>
 80048a8:	4638      	mov	r0, r7
 80048aa:	f7fb fdab 	bl	8000404 <__aeabi_i2d>
 80048ae:	4622      	mov	r2, r4
 80048b0:	462b      	mov	r3, r5
 80048b2:	f7fc f879 	bl	80009a8 <__aeabi_dcmpeq>
 80048b6:	b900      	cbnz	r0, 80048ba <_dtoa_r+0x16a>
 80048b8:	3f01      	subs	r7, #1
 80048ba:	2f16      	cmp	r7, #22
 80048bc:	d854      	bhi.n	8004968 <_dtoa_r+0x218>
 80048be:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80048c2:	4b60      	ldr	r3, [pc, #384]	@ (8004a44 <_dtoa_r+0x2f4>)
 80048c4:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80048c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80048cc:	f7fc f876 	bl	80009bc <__aeabi_dcmplt>
 80048d0:	2800      	cmp	r0, #0
 80048d2:	d04b      	beq.n	800496c <_dtoa_r+0x21c>
 80048d4:	2300      	movs	r3, #0
 80048d6:	3f01      	subs	r7, #1
 80048d8:	930f      	str	r3, [sp, #60]	@ 0x3c
 80048da:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80048dc:	1b9b      	subs	r3, r3, r6
 80048de:	1e5a      	subs	r2, r3, #1
 80048e0:	bf49      	itett	mi
 80048e2:	f1c3 0301 	rsbmi	r3, r3, #1
 80048e6:	2300      	movpl	r3, #0
 80048e8:	9304      	strmi	r3, [sp, #16]
 80048ea:	2300      	movmi	r3, #0
 80048ec:	9209      	str	r2, [sp, #36]	@ 0x24
 80048ee:	bf54      	ite	pl
 80048f0:	9304      	strpl	r3, [sp, #16]
 80048f2:	9309      	strmi	r3, [sp, #36]	@ 0x24
 80048f4:	2f00      	cmp	r7, #0
 80048f6:	db3b      	blt.n	8004970 <_dtoa_r+0x220>
 80048f8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80048fa:	970e      	str	r7, [sp, #56]	@ 0x38
 80048fc:	443b      	add	r3, r7
 80048fe:	9309      	str	r3, [sp, #36]	@ 0x24
 8004900:	2300      	movs	r3, #0
 8004902:	930a      	str	r3, [sp, #40]	@ 0x28
 8004904:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8004906:	2b09      	cmp	r3, #9
 8004908:	d865      	bhi.n	80049d6 <_dtoa_r+0x286>
 800490a:	2b05      	cmp	r3, #5
 800490c:	bfc4      	itt	gt
 800490e:	3b04      	subgt	r3, #4
 8004910:	9320      	strgt	r3, [sp, #128]	@ 0x80
 8004912:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8004914:	bfc8      	it	gt
 8004916:	2400      	movgt	r4, #0
 8004918:	f1a3 0302 	sub.w	r3, r3, #2
 800491c:	bfd8      	it	le
 800491e:	2401      	movle	r4, #1
 8004920:	2b03      	cmp	r3, #3
 8004922:	d864      	bhi.n	80049ee <_dtoa_r+0x29e>
 8004924:	e8df f003 	tbb	[pc, r3]
 8004928:	2c385553 	.word	0x2c385553
 800492c:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 8004930:	441e      	add	r6, r3
 8004932:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8004936:	2b20      	cmp	r3, #32
 8004938:	bfc1      	itttt	gt
 800493a:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 800493e:	fa08 f803 	lslgt.w	r8, r8, r3
 8004942:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8004946:	fa24 f303 	lsrgt.w	r3, r4, r3
 800494a:	bfd6      	itet	le
 800494c:	f1c3 0320 	rsble	r3, r3, #32
 8004950:	ea48 0003 	orrgt.w	r0, r8, r3
 8004954:	fa04 f003 	lslle.w	r0, r4, r3
 8004958:	f7fb fd44 	bl	80003e4 <__aeabi_ui2d>
 800495c:	2201      	movs	r2, #1
 800495e:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8004962:	3e01      	subs	r6, #1
 8004964:	9212      	str	r2, [sp, #72]	@ 0x48
 8004966:	e774      	b.n	8004852 <_dtoa_r+0x102>
 8004968:	2301      	movs	r3, #1
 800496a:	e7b5      	b.n	80048d8 <_dtoa_r+0x188>
 800496c:	900f      	str	r0, [sp, #60]	@ 0x3c
 800496e:	e7b4      	b.n	80048da <_dtoa_r+0x18a>
 8004970:	9b04      	ldr	r3, [sp, #16]
 8004972:	1bdb      	subs	r3, r3, r7
 8004974:	9304      	str	r3, [sp, #16]
 8004976:	427b      	negs	r3, r7
 8004978:	930a      	str	r3, [sp, #40]	@ 0x28
 800497a:	2300      	movs	r3, #0
 800497c:	930e      	str	r3, [sp, #56]	@ 0x38
 800497e:	e7c1      	b.n	8004904 <_dtoa_r+0x1b4>
 8004980:	2301      	movs	r3, #1
 8004982:	930b      	str	r3, [sp, #44]	@ 0x2c
 8004984:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8004986:	eb07 0b03 	add.w	fp, r7, r3
 800498a:	f10b 0301 	add.w	r3, fp, #1
 800498e:	2b01      	cmp	r3, #1
 8004990:	9308      	str	r3, [sp, #32]
 8004992:	bfb8      	it	lt
 8004994:	2301      	movlt	r3, #1
 8004996:	e006      	b.n	80049a6 <_dtoa_r+0x256>
 8004998:	2301      	movs	r3, #1
 800499a:	930b      	str	r3, [sp, #44]	@ 0x2c
 800499c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800499e:	2b00      	cmp	r3, #0
 80049a0:	dd28      	ble.n	80049f4 <_dtoa_r+0x2a4>
 80049a2:	469b      	mov	fp, r3
 80049a4:	9308      	str	r3, [sp, #32]
 80049a6:	2100      	movs	r1, #0
 80049a8:	2204      	movs	r2, #4
 80049aa:	f8d9 001c 	ldr.w	r0, [r9, #28]
 80049ae:	f102 0514 	add.w	r5, r2, #20
 80049b2:	429d      	cmp	r5, r3
 80049b4:	d926      	bls.n	8004a04 <_dtoa_r+0x2b4>
 80049b6:	6041      	str	r1, [r0, #4]
 80049b8:	4648      	mov	r0, r9
 80049ba:	f001 f8e7 	bl	8005b8c <_Balloc>
 80049be:	4682      	mov	sl, r0
 80049c0:	2800      	cmp	r0, #0
 80049c2:	d143      	bne.n	8004a4c <_dtoa_r+0x2fc>
 80049c4:	4602      	mov	r2, r0
 80049c6:	f240 11af 	movw	r1, #431	@ 0x1af
 80049ca:	4b1f      	ldr	r3, [pc, #124]	@ (8004a48 <_dtoa_r+0x2f8>)
 80049cc:	e6d4      	b.n	8004778 <_dtoa_r+0x28>
 80049ce:	2300      	movs	r3, #0
 80049d0:	e7e3      	b.n	800499a <_dtoa_r+0x24a>
 80049d2:	2300      	movs	r3, #0
 80049d4:	e7d5      	b.n	8004982 <_dtoa_r+0x232>
 80049d6:	2401      	movs	r4, #1
 80049d8:	2300      	movs	r3, #0
 80049da:	940b      	str	r4, [sp, #44]	@ 0x2c
 80049dc:	9320      	str	r3, [sp, #128]	@ 0x80
 80049de:	f04f 3bff 	mov.w	fp, #4294967295
 80049e2:	2200      	movs	r2, #0
 80049e4:	2312      	movs	r3, #18
 80049e6:	f8cd b020 	str.w	fp, [sp, #32]
 80049ea:	9221      	str	r2, [sp, #132]	@ 0x84
 80049ec:	e7db      	b.n	80049a6 <_dtoa_r+0x256>
 80049ee:	2301      	movs	r3, #1
 80049f0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80049f2:	e7f4      	b.n	80049de <_dtoa_r+0x28e>
 80049f4:	f04f 0b01 	mov.w	fp, #1
 80049f8:	465b      	mov	r3, fp
 80049fa:	f8cd b020 	str.w	fp, [sp, #32]
 80049fe:	f8cd b084 	str.w	fp, [sp, #132]	@ 0x84
 8004a02:	e7d0      	b.n	80049a6 <_dtoa_r+0x256>
 8004a04:	3101      	adds	r1, #1
 8004a06:	0052      	lsls	r2, r2, #1
 8004a08:	e7d1      	b.n	80049ae <_dtoa_r+0x25e>
 8004a0a:	bf00      	nop
 8004a0c:	f3af 8000 	nop.w
 8004a10:	636f4361 	.word	0x636f4361
 8004a14:	3fd287a7 	.word	0x3fd287a7
 8004a18:	8b60c8b3 	.word	0x8b60c8b3
 8004a1c:	3fc68a28 	.word	0x3fc68a28
 8004a20:	509f79fb 	.word	0x509f79fb
 8004a24:	3fd34413 	.word	0x3fd34413
 8004a28:	080072a3 	.word	0x080072a3
 8004a2c:	080072ba 	.word	0x080072ba
 8004a30:	7ff00000 	.word	0x7ff00000
 8004a34:	0800729f 	.word	0x0800729f
 8004a38:	0800726b 	.word	0x0800726b
 8004a3c:	0800726a 	.word	0x0800726a
 8004a40:	3ff80000 	.word	0x3ff80000
 8004a44:	080075b8 	.word	0x080075b8
 8004a48:	08007312 	.word	0x08007312
 8004a4c:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8004a50:	6018      	str	r0, [r3, #0]
 8004a52:	9b08      	ldr	r3, [sp, #32]
 8004a54:	2b0e      	cmp	r3, #14
 8004a56:	f200 80a1 	bhi.w	8004b9c <_dtoa_r+0x44c>
 8004a5a:	2c00      	cmp	r4, #0
 8004a5c:	f000 809e 	beq.w	8004b9c <_dtoa_r+0x44c>
 8004a60:	2f00      	cmp	r7, #0
 8004a62:	dd33      	ble.n	8004acc <_dtoa_r+0x37c>
 8004a64:	4b9c      	ldr	r3, [pc, #624]	@ (8004cd8 <_dtoa_r+0x588>)
 8004a66:	f007 020f 	and.w	r2, r7, #15
 8004a6a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8004a6e:	05f8      	lsls	r0, r7, #23
 8004a70:	e9d3 3400 	ldrd	r3, r4, [r3]
 8004a74:	e9cd 3410 	strd	r3, r4, [sp, #64]	@ 0x40
 8004a78:	ea4f 1427 	mov.w	r4, r7, asr #4
 8004a7c:	d516      	bpl.n	8004aac <_dtoa_r+0x35c>
 8004a7e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8004a82:	4b96      	ldr	r3, [pc, #600]	@ (8004cdc <_dtoa_r+0x58c>)
 8004a84:	2603      	movs	r6, #3
 8004a86:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8004a8a:	f7fb fe4f 	bl	800072c <__aeabi_ddiv>
 8004a8e:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8004a92:	f004 040f 	and.w	r4, r4, #15
 8004a96:	4d91      	ldr	r5, [pc, #580]	@ (8004cdc <_dtoa_r+0x58c>)
 8004a98:	b954      	cbnz	r4, 8004ab0 <_dtoa_r+0x360>
 8004a9a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8004a9e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8004aa2:	f7fb fe43 	bl	800072c <__aeabi_ddiv>
 8004aa6:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8004aaa:	e028      	b.n	8004afe <_dtoa_r+0x3ae>
 8004aac:	2602      	movs	r6, #2
 8004aae:	e7f2      	b.n	8004a96 <_dtoa_r+0x346>
 8004ab0:	07e1      	lsls	r1, r4, #31
 8004ab2:	d508      	bpl.n	8004ac6 <_dtoa_r+0x376>
 8004ab4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8004ab8:	e9d5 2300 	ldrd	r2, r3, [r5]
 8004abc:	f7fb fd0c 	bl	80004d8 <__aeabi_dmul>
 8004ac0:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8004ac4:	3601      	adds	r6, #1
 8004ac6:	1064      	asrs	r4, r4, #1
 8004ac8:	3508      	adds	r5, #8
 8004aca:	e7e5      	b.n	8004a98 <_dtoa_r+0x348>
 8004acc:	f000 80af 	beq.w	8004c2e <_dtoa_r+0x4de>
 8004ad0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8004ad4:	427c      	negs	r4, r7
 8004ad6:	4b80      	ldr	r3, [pc, #512]	@ (8004cd8 <_dtoa_r+0x588>)
 8004ad8:	f004 020f 	and.w	r2, r4, #15
 8004adc:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8004ae0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004ae4:	f7fb fcf8 	bl	80004d8 <__aeabi_dmul>
 8004ae8:	2602      	movs	r6, #2
 8004aea:	2300      	movs	r3, #0
 8004aec:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8004af0:	4d7a      	ldr	r5, [pc, #488]	@ (8004cdc <_dtoa_r+0x58c>)
 8004af2:	1124      	asrs	r4, r4, #4
 8004af4:	2c00      	cmp	r4, #0
 8004af6:	f040 808f 	bne.w	8004c18 <_dtoa_r+0x4c8>
 8004afa:	2b00      	cmp	r3, #0
 8004afc:	d1d3      	bne.n	8004aa6 <_dtoa_r+0x356>
 8004afe:	e9dd 4506 	ldrd	r4, r5, [sp, #24]
 8004b02:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004b04:	2b00      	cmp	r3, #0
 8004b06:	f000 8094 	beq.w	8004c32 <_dtoa_r+0x4e2>
 8004b0a:	2200      	movs	r2, #0
 8004b0c:	4620      	mov	r0, r4
 8004b0e:	4629      	mov	r1, r5
 8004b10:	4b73      	ldr	r3, [pc, #460]	@ (8004ce0 <_dtoa_r+0x590>)
 8004b12:	f7fb ff53 	bl	80009bc <__aeabi_dcmplt>
 8004b16:	2800      	cmp	r0, #0
 8004b18:	f000 808b 	beq.w	8004c32 <_dtoa_r+0x4e2>
 8004b1c:	9b08      	ldr	r3, [sp, #32]
 8004b1e:	2b00      	cmp	r3, #0
 8004b20:	f000 8087 	beq.w	8004c32 <_dtoa_r+0x4e2>
 8004b24:	f1bb 0f00 	cmp.w	fp, #0
 8004b28:	dd34      	ble.n	8004b94 <_dtoa_r+0x444>
 8004b2a:	4620      	mov	r0, r4
 8004b2c:	2200      	movs	r2, #0
 8004b2e:	4629      	mov	r1, r5
 8004b30:	4b6c      	ldr	r3, [pc, #432]	@ (8004ce4 <_dtoa_r+0x594>)
 8004b32:	f7fb fcd1 	bl	80004d8 <__aeabi_dmul>
 8004b36:	465c      	mov	r4, fp
 8004b38:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8004b3c:	f107 38ff 	add.w	r8, r7, #4294967295
 8004b40:	3601      	adds	r6, #1
 8004b42:	4630      	mov	r0, r6
 8004b44:	f7fb fc5e 	bl	8000404 <__aeabi_i2d>
 8004b48:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004b4c:	f7fb fcc4 	bl	80004d8 <__aeabi_dmul>
 8004b50:	2200      	movs	r2, #0
 8004b52:	4b65      	ldr	r3, [pc, #404]	@ (8004ce8 <_dtoa_r+0x598>)
 8004b54:	f7fb fb0a 	bl	800016c <__adddf3>
 8004b58:	4605      	mov	r5, r0
 8004b5a:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8004b5e:	2c00      	cmp	r4, #0
 8004b60:	d16a      	bne.n	8004c38 <_dtoa_r+0x4e8>
 8004b62:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8004b66:	2200      	movs	r2, #0
 8004b68:	4b60      	ldr	r3, [pc, #384]	@ (8004cec <_dtoa_r+0x59c>)
 8004b6a:	f7fb fafd 	bl	8000168 <__aeabi_dsub>
 8004b6e:	4602      	mov	r2, r0
 8004b70:	460b      	mov	r3, r1
 8004b72:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8004b76:	462a      	mov	r2, r5
 8004b78:	4633      	mov	r3, r6
 8004b7a:	f7fb ff3d 	bl	80009f8 <__aeabi_dcmpgt>
 8004b7e:	2800      	cmp	r0, #0
 8004b80:	f040 8298 	bne.w	80050b4 <_dtoa_r+0x964>
 8004b84:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8004b88:	462a      	mov	r2, r5
 8004b8a:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8004b8e:	f7fb ff15 	bl	80009bc <__aeabi_dcmplt>
 8004b92:	bb38      	cbnz	r0, 8004be4 <_dtoa_r+0x494>
 8004b94:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8004b98:	e9cd 3406 	strd	r3, r4, [sp, #24]
 8004b9c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8004b9e:	2b00      	cmp	r3, #0
 8004ba0:	f2c0 8157 	blt.w	8004e52 <_dtoa_r+0x702>
 8004ba4:	2f0e      	cmp	r7, #14
 8004ba6:	f300 8154 	bgt.w	8004e52 <_dtoa_r+0x702>
 8004baa:	4b4b      	ldr	r3, [pc, #300]	@ (8004cd8 <_dtoa_r+0x588>)
 8004bac:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8004bb0:	e9d3 3400 	ldrd	r3, r4, [r3]
 8004bb4:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8004bb8:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8004bba:	2b00      	cmp	r3, #0
 8004bbc:	f280 80e5 	bge.w	8004d8a <_dtoa_r+0x63a>
 8004bc0:	9b08      	ldr	r3, [sp, #32]
 8004bc2:	2b00      	cmp	r3, #0
 8004bc4:	f300 80e1 	bgt.w	8004d8a <_dtoa_r+0x63a>
 8004bc8:	d10c      	bne.n	8004be4 <_dtoa_r+0x494>
 8004bca:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004bce:	2200      	movs	r2, #0
 8004bd0:	4b46      	ldr	r3, [pc, #280]	@ (8004cec <_dtoa_r+0x59c>)
 8004bd2:	f7fb fc81 	bl	80004d8 <__aeabi_dmul>
 8004bd6:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004bda:	f7fb ff03 	bl	80009e4 <__aeabi_dcmpge>
 8004bde:	2800      	cmp	r0, #0
 8004be0:	f000 8266 	beq.w	80050b0 <_dtoa_r+0x960>
 8004be4:	2400      	movs	r4, #0
 8004be6:	4625      	mov	r5, r4
 8004be8:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8004bea:	4656      	mov	r6, sl
 8004bec:	ea6f 0803 	mvn.w	r8, r3
 8004bf0:	2700      	movs	r7, #0
 8004bf2:	4621      	mov	r1, r4
 8004bf4:	4648      	mov	r0, r9
 8004bf6:	f001 f809 	bl	8005c0c <_Bfree>
 8004bfa:	2d00      	cmp	r5, #0
 8004bfc:	f000 80bd 	beq.w	8004d7a <_dtoa_r+0x62a>
 8004c00:	b12f      	cbz	r7, 8004c0e <_dtoa_r+0x4be>
 8004c02:	42af      	cmp	r7, r5
 8004c04:	d003      	beq.n	8004c0e <_dtoa_r+0x4be>
 8004c06:	4639      	mov	r1, r7
 8004c08:	4648      	mov	r0, r9
 8004c0a:	f000 ffff 	bl	8005c0c <_Bfree>
 8004c0e:	4629      	mov	r1, r5
 8004c10:	4648      	mov	r0, r9
 8004c12:	f000 fffb 	bl	8005c0c <_Bfree>
 8004c16:	e0b0      	b.n	8004d7a <_dtoa_r+0x62a>
 8004c18:	07e2      	lsls	r2, r4, #31
 8004c1a:	d505      	bpl.n	8004c28 <_dtoa_r+0x4d8>
 8004c1c:	e9d5 2300 	ldrd	r2, r3, [r5]
 8004c20:	f7fb fc5a 	bl	80004d8 <__aeabi_dmul>
 8004c24:	2301      	movs	r3, #1
 8004c26:	3601      	adds	r6, #1
 8004c28:	1064      	asrs	r4, r4, #1
 8004c2a:	3508      	adds	r5, #8
 8004c2c:	e762      	b.n	8004af4 <_dtoa_r+0x3a4>
 8004c2e:	2602      	movs	r6, #2
 8004c30:	e765      	b.n	8004afe <_dtoa_r+0x3ae>
 8004c32:	46b8      	mov	r8, r7
 8004c34:	9c08      	ldr	r4, [sp, #32]
 8004c36:	e784      	b.n	8004b42 <_dtoa_r+0x3f2>
 8004c38:	4b27      	ldr	r3, [pc, #156]	@ (8004cd8 <_dtoa_r+0x588>)
 8004c3a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8004c3c:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8004c40:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8004c44:	4454      	add	r4, sl
 8004c46:	2900      	cmp	r1, #0
 8004c48:	d054      	beq.n	8004cf4 <_dtoa_r+0x5a4>
 8004c4a:	2000      	movs	r0, #0
 8004c4c:	4928      	ldr	r1, [pc, #160]	@ (8004cf0 <_dtoa_r+0x5a0>)
 8004c4e:	f7fb fd6d 	bl	800072c <__aeabi_ddiv>
 8004c52:	4633      	mov	r3, r6
 8004c54:	462a      	mov	r2, r5
 8004c56:	f7fb fa87 	bl	8000168 <__aeabi_dsub>
 8004c5a:	4656      	mov	r6, sl
 8004c5c:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8004c60:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8004c64:	f7fb fee8 	bl	8000a38 <__aeabi_d2iz>
 8004c68:	4605      	mov	r5, r0
 8004c6a:	f7fb fbcb 	bl	8000404 <__aeabi_i2d>
 8004c6e:	4602      	mov	r2, r0
 8004c70:	460b      	mov	r3, r1
 8004c72:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8004c76:	f7fb fa77 	bl	8000168 <__aeabi_dsub>
 8004c7a:	4602      	mov	r2, r0
 8004c7c:	460b      	mov	r3, r1
 8004c7e:	3530      	adds	r5, #48	@ 0x30
 8004c80:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8004c84:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8004c88:	f806 5b01 	strb.w	r5, [r6], #1
 8004c8c:	f7fb fe96 	bl	80009bc <__aeabi_dcmplt>
 8004c90:	2800      	cmp	r0, #0
 8004c92:	d172      	bne.n	8004d7a <_dtoa_r+0x62a>
 8004c94:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004c98:	2000      	movs	r0, #0
 8004c9a:	4911      	ldr	r1, [pc, #68]	@ (8004ce0 <_dtoa_r+0x590>)
 8004c9c:	f7fb fa64 	bl	8000168 <__aeabi_dsub>
 8004ca0:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8004ca4:	f7fb fe8a 	bl	80009bc <__aeabi_dcmplt>
 8004ca8:	2800      	cmp	r0, #0
 8004caa:	f040 80b4 	bne.w	8004e16 <_dtoa_r+0x6c6>
 8004cae:	42a6      	cmp	r6, r4
 8004cb0:	f43f af70 	beq.w	8004b94 <_dtoa_r+0x444>
 8004cb4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8004cb8:	2200      	movs	r2, #0
 8004cba:	4b0a      	ldr	r3, [pc, #40]	@ (8004ce4 <_dtoa_r+0x594>)
 8004cbc:	f7fb fc0c 	bl	80004d8 <__aeabi_dmul>
 8004cc0:	2200      	movs	r2, #0
 8004cc2:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8004cc6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8004cca:	4b06      	ldr	r3, [pc, #24]	@ (8004ce4 <_dtoa_r+0x594>)
 8004ccc:	f7fb fc04 	bl	80004d8 <__aeabi_dmul>
 8004cd0:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8004cd4:	e7c4      	b.n	8004c60 <_dtoa_r+0x510>
 8004cd6:	bf00      	nop
 8004cd8:	080075b8 	.word	0x080075b8
 8004cdc:	08007590 	.word	0x08007590
 8004ce0:	3ff00000 	.word	0x3ff00000
 8004ce4:	40240000 	.word	0x40240000
 8004ce8:	401c0000 	.word	0x401c0000
 8004cec:	40140000 	.word	0x40140000
 8004cf0:	3fe00000 	.word	0x3fe00000
 8004cf4:	4631      	mov	r1, r6
 8004cf6:	4628      	mov	r0, r5
 8004cf8:	f7fb fbee 	bl	80004d8 <__aeabi_dmul>
 8004cfc:	4656      	mov	r6, sl
 8004cfe:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8004d02:	9413      	str	r4, [sp, #76]	@ 0x4c
 8004d04:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8004d08:	f7fb fe96 	bl	8000a38 <__aeabi_d2iz>
 8004d0c:	4605      	mov	r5, r0
 8004d0e:	f7fb fb79 	bl	8000404 <__aeabi_i2d>
 8004d12:	4602      	mov	r2, r0
 8004d14:	460b      	mov	r3, r1
 8004d16:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8004d1a:	f7fb fa25 	bl	8000168 <__aeabi_dsub>
 8004d1e:	4602      	mov	r2, r0
 8004d20:	460b      	mov	r3, r1
 8004d22:	3530      	adds	r5, #48	@ 0x30
 8004d24:	f806 5b01 	strb.w	r5, [r6], #1
 8004d28:	42a6      	cmp	r6, r4
 8004d2a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8004d2e:	f04f 0200 	mov.w	r2, #0
 8004d32:	d124      	bne.n	8004d7e <_dtoa_r+0x62e>
 8004d34:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8004d38:	4bae      	ldr	r3, [pc, #696]	@ (8004ff4 <_dtoa_r+0x8a4>)
 8004d3a:	f7fb fa17 	bl	800016c <__adddf3>
 8004d3e:	4602      	mov	r2, r0
 8004d40:	460b      	mov	r3, r1
 8004d42:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8004d46:	f7fb fe57 	bl	80009f8 <__aeabi_dcmpgt>
 8004d4a:	2800      	cmp	r0, #0
 8004d4c:	d163      	bne.n	8004e16 <_dtoa_r+0x6c6>
 8004d4e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8004d52:	2000      	movs	r0, #0
 8004d54:	49a7      	ldr	r1, [pc, #668]	@ (8004ff4 <_dtoa_r+0x8a4>)
 8004d56:	f7fb fa07 	bl	8000168 <__aeabi_dsub>
 8004d5a:	4602      	mov	r2, r0
 8004d5c:	460b      	mov	r3, r1
 8004d5e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8004d62:	f7fb fe2b 	bl	80009bc <__aeabi_dcmplt>
 8004d66:	2800      	cmp	r0, #0
 8004d68:	f43f af14 	beq.w	8004b94 <_dtoa_r+0x444>
 8004d6c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8004d6e:	1e73      	subs	r3, r6, #1
 8004d70:	9313      	str	r3, [sp, #76]	@ 0x4c
 8004d72:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8004d76:	2b30      	cmp	r3, #48	@ 0x30
 8004d78:	d0f8      	beq.n	8004d6c <_dtoa_r+0x61c>
 8004d7a:	4647      	mov	r7, r8
 8004d7c:	e03b      	b.n	8004df6 <_dtoa_r+0x6a6>
 8004d7e:	4b9e      	ldr	r3, [pc, #632]	@ (8004ff8 <_dtoa_r+0x8a8>)
 8004d80:	f7fb fbaa 	bl	80004d8 <__aeabi_dmul>
 8004d84:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8004d88:	e7bc      	b.n	8004d04 <_dtoa_r+0x5b4>
 8004d8a:	4656      	mov	r6, sl
 8004d8c:	e9dd 4506 	ldrd	r4, r5, [sp, #24]
 8004d90:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8004d94:	4620      	mov	r0, r4
 8004d96:	4629      	mov	r1, r5
 8004d98:	f7fb fcc8 	bl	800072c <__aeabi_ddiv>
 8004d9c:	f7fb fe4c 	bl	8000a38 <__aeabi_d2iz>
 8004da0:	4680      	mov	r8, r0
 8004da2:	f7fb fb2f 	bl	8000404 <__aeabi_i2d>
 8004da6:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8004daa:	f7fb fb95 	bl	80004d8 <__aeabi_dmul>
 8004dae:	4602      	mov	r2, r0
 8004db0:	460b      	mov	r3, r1
 8004db2:	4620      	mov	r0, r4
 8004db4:	4629      	mov	r1, r5
 8004db6:	f7fb f9d7 	bl	8000168 <__aeabi_dsub>
 8004dba:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8004dbe:	9d08      	ldr	r5, [sp, #32]
 8004dc0:	f806 4b01 	strb.w	r4, [r6], #1
 8004dc4:	eba6 040a 	sub.w	r4, r6, sl
 8004dc8:	42a5      	cmp	r5, r4
 8004dca:	4602      	mov	r2, r0
 8004dcc:	460b      	mov	r3, r1
 8004dce:	d133      	bne.n	8004e38 <_dtoa_r+0x6e8>
 8004dd0:	f7fb f9cc 	bl	800016c <__adddf3>
 8004dd4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8004dd8:	4604      	mov	r4, r0
 8004dda:	460d      	mov	r5, r1
 8004ddc:	f7fb fe0c 	bl	80009f8 <__aeabi_dcmpgt>
 8004de0:	b9c0      	cbnz	r0, 8004e14 <_dtoa_r+0x6c4>
 8004de2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8004de6:	4620      	mov	r0, r4
 8004de8:	4629      	mov	r1, r5
 8004dea:	f7fb fddd 	bl	80009a8 <__aeabi_dcmpeq>
 8004dee:	b110      	cbz	r0, 8004df6 <_dtoa_r+0x6a6>
 8004df0:	f018 0f01 	tst.w	r8, #1
 8004df4:	d10e      	bne.n	8004e14 <_dtoa_r+0x6c4>
 8004df6:	4648      	mov	r0, r9
 8004df8:	9903      	ldr	r1, [sp, #12]
 8004dfa:	f000 ff07 	bl	8005c0c <_Bfree>
 8004dfe:	2300      	movs	r3, #0
 8004e00:	7033      	strb	r3, [r6, #0]
 8004e02:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8004e04:	3701      	adds	r7, #1
 8004e06:	601f      	str	r7, [r3, #0]
 8004e08:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8004e0a:	2b00      	cmp	r3, #0
 8004e0c:	f000 824b 	beq.w	80052a6 <_dtoa_r+0xb56>
 8004e10:	601e      	str	r6, [r3, #0]
 8004e12:	e248      	b.n	80052a6 <_dtoa_r+0xb56>
 8004e14:	46b8      	mov	r8, r7
 8004e16:	4633      	mov	r3, r6
 8004e18:	461e      	mov	r6, r3
 8004e1a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8004e1e:	2a39      	cmp	r2, #57	@ 0x39
 8004e20:	d106      	bne.n	8004e30 <_dtoa_r+0x6e0>
 8004e22:	459a      	cmp	sl, r3
 8004e24:	d1f8      	bne.n	8004e18 <_dtoa_r+0x6c8>
 8004e26:	2230      	movs	r2, #48	@ 0x30
 8004e28:	f108 0801 	add.w	r8, r8, #1
 8004e2c:	f88a 2000 	strb.w	r2, [sl]
 8004e30:	781a      	ldrb	r2, [r3, #0]
 8004e32:	3201      	adds	r2, #1
 8004e34:	701a      	strb	r2, [r3, #0]
 8004e36:	e7a0      	b.n	8004d7a <_dtoa_r+0x62a>
 8004e38:	2200      	movs	r2, #0
 8004e3a:	4b6f      	ldr	r3, [pc, #444]	@ (8004ff8 <_dtoa_r+0x8a8>)
 8004e3c:	f7fb fb4c 	bl	80004d8 <__aeabi_dmul>
 8004e40:	2200      	movs	r2, #0
 8004e42:	2300      	movs	r3, #0
 8004e44:	4604      	mov	r4, r0
 8004e46:	460d      	mov	r5, r1
 8004e48:	f7fb fdae 	bl	80009a8 <__aeabi_dcmpeq>
 8004e4c:	2800      	cmp	r0, #0
 8004e4e:	d09f      	beq.n	8004d90 <_dtoa_r+0x640>
 8004e50:	e7d1      	b.n	8004df6 <_dtoa_r+0x6a6>
 8004e52:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8004e54:	2a00      	cmp	r2, #0
 8004e56:	f000 80ea 	beq.w	800502e <_dtoa_r+0x8de>
 8004e5a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8004e5c:	2a01      	cmp	r2, #1
 8004e5e:	f300 80cd 	bgt.w	8004ffc <_dtoa_r+0x8ac>
 8004e62:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8004e64:	2a00      	cmp	r2, #0
 8004e66:	f000 80c1 	beq.w	8004fec <_dtoa_r+0x89c>
 8004e6a:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8004e6e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8004e70:	9e04      	ldr	r6, [sp, #16]
 8004e72:	9a04      	ldr	r2, [sp, #16]
 8004e74:	2101      	movs	r1, #1
 8004e76:	441a      	add	r2, r3
 8004e78:	9204      	str	r2, [sp, #16]
 8004e7a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004e7c:	4648      	mov	r0, r9
 8004e7e:	441a      	add	r2, r3
 8004e80:	9209      	str	r2, [sp, #36]	@ 0x24
 8004e82:	f000 ffc1 	bl	8005e08 <__i2b>
 8004e86:	4605      	mov	r5, r0
 8004e88:	b166      	cbz	r6, 8004ea4 <_dtoa_r+0x754>
 8004e8a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004e8c:	2b00      	cmp	r3, #0
 8004e8e:	dd09      	ble.n	8004ea4 <_dtoa_r+0x754>
 8004e90:	42b3      	cmp	r3, r6
 8004e92:	bfa8      	it	ge
 8004e94:	4633      	movge	r3, r6
 8004e96:	9a04      	ldr	r2, [sp, #16]
 8004e98:	1af6      	subs	r6, r6, r3
 8004e9a:	1ad2      	subs	r2, r2, r3
 8004e9c:	9204      	str	r2, [sp, #16]
 8004e9e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004ea0:	1ad3      	subs	r3, r2, r3
 8004ea2:	9309      	str	r3, [sp, #36]	@ 0x24
 8004ea4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004ea6:	b30b      	cbz	r3, 8004eec <_dtoa_r+0x79c>
 8004ea8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004eaa:	2b00      	cmp	r3, #0
 8004eac:	f000 80c6 	beq.w	800503c <_dtoa_r+0x8ec>
 8004eb0:	2c00      	cmp	r4, #0
 8004eb2:	f000 80c0 	beq.w	8005036 <_dtoa_r+0x8e6>
 8004eb6:	4629      	mov	r1, r5
 8004eb8:	4622      	mov	r2, r4
 8004eba:	4648      	mov	r0, r9
 8004ebc:	f001 f85c 	bl	8005f78 <__pow5mult>
 8004ec0:	9a03      	ldr	r2, [sp, #12]
 8004ec2:	4601      	mov	r1, r0
 8004ec4:	4605      	mov	r5, r0
 8004ec6:	4648      	mov	r0, r9
 8004ec8:	f000 ffb4 	bl	8005e34 <__multiply>
 8004ecc:	9903      	ldr	r1, [sp, #12]
 8004ece:	4680      	mov	r8, r0
 8004ed0:	4648      	mov	r0, r9
 8004ed2:	f000 fe9b 	bl	8005c0c <_Bfree>
 8004ed6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004ed8:	1b1b      	subs	r3, r3, r4
 8004eda:	930a      	str	r3, [sp, #40]	@ 0x28
 8004edc:	f000 80b1 	beq.w	8005042 <_dtoa_r+0x8f2>
 8004ee0:	4641      	mov	r1, r8
 8004ee2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8004ee4:	4648      	mov	r0, r9
 8004ee6:	f001 f847 	bl	8005f78 <__pow5mult>
 8004eea:	9003      	str	r0, [sp, #12]
 8004eec:	2101      	movs	r1, #1
 8004eee:	4648      	mov	r0, r9
 8004ef0:	f000 ff8a 	bl	8005e08 <__i2b>
 8004ef4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004ef6:	4604      	mov	r4, r0
 8004ef8:	2b00      	cmp	r3, #0
 8004efa:	f000 81d8 	beq.w	80052ae <_dtoa_r+0xb5e>
 8004efe:	461a      	mov	r2, r3
 8004f00:	4601      	mov	r1, r0
 8004f02:	4648      	mov	r0, r9
 8004f04:	f001 f838 	bl	8005f78 <__pow5mult>
 8004f08:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8004f0a:	4604      	mov	r4, r0
 8004f0c:	2b01      	cmp	r3, #1
 8004f0e:	f300 809f 	bgt.w	8005050 <_dtoa_r+0x900>
 8004f12:	9b06      	ldr	r3, [sp, #24]
 8004f14:	2b00      	cmp	r3, #0
 8004f16:	f040 8097 	bne.w	8005048 <_dtoa_r+0x8f8>
 8004f1a:	9b07      	ldr	r3, [sp, #28]
 8004f1c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8004f20:	2b00      	cmp	r3, #0
 8004f22:	f040 8093 	bne.w	800504c <_dtoa_r+0x8fc>
 8004f26:	9b07      	ldr	r3, [sp, #28]
 8004f28:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8004f2c:	0d1b      	lsrs	r3, r3, #20
 8004f2e:	051b      	lsls	r3, r3, #20
 8004f30:	b133      	cbz	r3, 8004f40 <_dtoa_r+0x7f0>
 8004f32:	9b04      	ldr	r3, [sp, #16]
 8004f34:	3301      	adds	r3, #1
 8004f36:	9304      	str	r3, [sp, #16]
 8004f38:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004f3a:	3301      	adds	r3, #1
 8004f3c:	9309      	str	r3, [sp, #36]	@ 0x24
 8004f3e:	2301      	movs	r3, #1
 8004f40:	930a      	str	r3, [sp, #40]	@ 0x28
 8004f42:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004f44:	2b00      	cmp	r3, #0
 8004f46:	f000 81b8 	beq.w	80052ba <_dtoa_r+0xb6a>
 8004f4a:	6923      	ldr	r3, [r4, #16]
 8004f4c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8004f50:	6918      	ldr	r0, [r3, #16]
 8004f52:	f000 ff0d 	bl	8005d70 <__hi0bits>
 8004f56:	f1c0 0020 	rsb	r0, r0, #32
 8004f5a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004f5c:	4418      	add	r0, r3
 8004f5e:	f010 001f 	ands.w	r0, r0, #31
 8004f62:	f000 8082 	beq.w	800506a <_dtoa_r+0x91a>
 8004f66:	f1c0 0320 	rsb	r3, r0, #32
 8004f6a:	2b04      	cmp	r3, #4
 8004f6c:	dd73      	ble.n	8005056 <_dtoa_r+0x906>
 8004f6e:	9b04      	ldr	r3, [sp, #16]
 8004f70:	f1c0 001c 	rsb	r0, r0, #28
 8004f74:	4403      	add	r3, r0
 8004f76:	9304      	str	r3, [sp, #16]
 8004f78:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004f7a:	4406      	add	r6, r0
 8004f7c:	4403      	add	r3, r0
 8004f7e:	9309      	str	r3, [sp, #36]	@ 0x24
 8004f80:	9b04      	ldr	r3, [sp, #16]
 8004f82:	2b00      	cmp	r3, #0
 8004f84:	dd05      	ble.n	8004f92 <_dtoa_r+0x842>
 8004f86:	461a      	mov	r2, r3
 8004f88:	4648      	mov	r0, r9
 8004f8a:	9903      	ldr	r1, [sp, #12]
 8004f8c:	f001 f84e 	bl	800602c <__lshift>
 8004f90:	9003      	str	r0, [sp, #12]
 8004f92:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004f94:	2b00      	cmp	r3, #0
 8004f96:	dd05      	ble.n	8004fa4 <_dtoa_r+0x854>
 8004f98:	4621      	mov	r1, r4
 8004f9a:	461a      	mov	r2, r3
 8004f9c:	4648      	mov	r0, r9
 8004f9e:	f001 f845 	bl	800602c <__lshift>
 8004fa2:	4604      	mov	r4, r0
 8004fa4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004fa6:	2b00      	cmp	r3, #0
 8004fa8:	d061      	beq.n	800506e <_dtoa_r+0x91e>
 8004faa:	4621      	mov	r1, r4
 8004fac:	9803      	ldr	r0, [sp, #12]
 8004fae:	f001 f8a9 	bl	8006104 <__mcmp>
 8004fb2:	2800      	cmp	r0, #0
 8004fb4:	da5b      	bge.n	800506e <_dtoa_r+0x91e>
 8004fb6:	2300      	movs	r3, #0
 8004fb8:	220a      	movs	r2, #10
 8004fba:	4648      	mov	r0, r9
 8004fbc:	9903      	ldr	r1, [sp, #12]
 8004fbe:	f000 fe47 	bl	8005c50 <__multadd>
 8004fc2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004fc4:	f107 38ff 	add.w	r8, r7, #4294967295
 8004fc8:	9003      	str	r0, [sp, #12]
 8004fca:	2b00      	cmp	r3, #0
 8004fcc:	f000 8177 	beq.w	80052be <_dtoa_r+0xb6e>
 8004fd0:	4629      	mov	r1, r5
 8004fd2:	2300      	movs	r3, #0
 8004fd4:	220a      	movs	r2, #10
 8004fd6:	4648      	mov	r0, r9
 8004fd8:	f000 fe3a 	bl	8005c50 <__multadd>
 8004fdc:	f1bb 0f00 	cmp.w	fp, #0
 8004fe0:	4605      	mov	r5, r0
 8004fe2:	dc6f      	bgt.n	80050c4 <_dtoa_r+0x974>
 8004fe4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8004fe6:	2b02      	cmp	r3, #2
 8004fe8:	dc49      	bgt.n	800507e <_dtoa_r+0x92e>
 8004fea:	e06b      	b.n	80050c4 <_dtoa_r+0x974>
 8004fec:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8004fee:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8004ff2:	e73c      	b.n	8004e6e <_dtoa_r+0x71e>
 8004ff4:	3fe00000 	.word	0x3fe00000
 8004ff8:	40240000 	.word	0x40240000
 8004ffc:	9b08      	ldr	r3, [sp, #32]
 8004ffe:	1e5c      	subs	r4, r3, #1
 8005000:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005002:	42a3      	cmp	r3, r4
 8005004:	db09      	blt.n	800501a <_dtoa_r+0x8ca>
 8005006:	1b1c      	subs	r4, r3, r4
 8005008:	9b08      	ldr	r3, [sp, #32]
 800500a:	2b00      	cmp	r3, #0
 800500c:	f6bf af30 	bge.w	8004e70 <_dtoa_r+0x720>
 8005010:	9b04      	ldr	r3, [sp, #16]
 8005012:	9a08      	ldr	r2, [sp, #32]
 8005014:	1a9e      	subs	r6, r3, r2
 8005016:	2300      	movs	r3, #0
 8005018:	e72b      	b.n	8004e72 <_dtoa_r+0x722>
 800501a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800501c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800501e:	1ae3      	subs	r3, r4, r3
 8005020:	441a      	add	r2, r3
 8005022:	940a      	str	r4, [sp, #40]	@ 0x28
 8005024:	9e04      	ldr	r6, [sp, #16]
 8005026:	2400      	movs	r4, #0
 8005028:	9b08      	ldr	r3, [sp, #32]
 800502a:	920e      	str	r2, [sp, #56]	@ 0x38
 800502c:	e721      	b.n	8004e72 <_dtoa_r+0x722>
 800502e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8005030:	9e04      	ldr	r6, [sp, #16]
 8005032:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8005034:	e728      	b.n	8004e88 <_dtoa_r+0x738>
 8005036:	f8dd 800c 	ldr.w	r8, [sp, #12]
 800503a:	e751      	b.n	8004ee0 <_dtoa_r+0x790>
 800503c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800503e:	9903      	ldr	r1, [sp, #12]
 8005040:	e750      	b.n	8004ee4 <_dtoa_r+0x794>
 8005042:	f8cd 800c 	str.w	r8, [sp, #12]
 8005046:	e751      	b.n	8004eec <_dtoa_r+0x79c>
 8005048:	2300      	movs	r3, #0
 800504a:	e779      	b.n	8004f40 <_dtoa_r+0x7f0>
 800504c:	9b06      	ldr	r3, [sp, #24]
 800504e:	e777      	b.n	8004f40 <_dtoa_r+0x7f0>
 8005050:	2300      	movs	r3, #0
 8005052:	930a      	str	r3, [sp, #40]	@ 0x28
 8005054:	e779      	b.n	8004f4a <_dtoa_r+0x7fa>
 8005056:	d093      	beq.n	8004f80 <_dtoa_r+0x830>
 8005058:	9a04      	ldr	r2, [sp, #16]
 800505a:	331c      	adds	r3, #28
 800505c:	441a      	add	r2, r3
 800505e:	9204      	str	r2, [sp, #16]
 8005060:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005062:	441e      	add	r6, r3
 8005064:	441a      	add	r2, r3
 8005066:	9209      	str	r2, [sp, #36]	@ 0x24
 8005068:	e78a      	b.n	8004f80 <_dtoa_r+0x830>
 800506a:	4603      	mov	r3, r0
 800506c:	e7f4      	b.n	8005058 <_dtoa_r+0x908>
 800506e:	9b08      	ldr	r3, [sp, #32]
 8005070:	46b8      	mov	r8, r7
 8005072:	2b00      	cmp	r3, #0
 8005074:	dc20      	bgt.n	80050b8 <_dtoa_r+0x968>
 8005076:	469b      	mov	fp, r3
 8005078:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800507a:	2b02      	cmp	r3, #2
 800507c:	dd1e      	ble.n	80050bc <_dtoa_r+0x96c>
 800507e:	f1bb 0f00 	cmp.w	fp, #0
 8005082:	f47f adb1 	bne.w	8004be8 <_dtoa_r+0x498>
 8005086:	4621      	mov	r1, r4
 8005088:	465b      	mov	r3, fp
 800508a:	2205      	movs	r2, #5
 800508c:	4648      	mov	r0, r9
 800508e:	f000 fddf 	bl	8005c50 <__multadd>
 8005092:	4601      	mov	r1, r0
 8005094:	4604      	mov	r4, r0
 8005096:	9803      	ldr	r0, [sp, #12]
 8005098:	f001 f834 	bl	8006104 <__mcmp>
 800509c:	2800      	cmp	r0, #0
 800509e:	f77f ada3 	ble.w	8004be8 <_dtoa_r+0x498>
 80050a2:	4656      	mov	r6, sl
 80050a4:	2331      	movs	r3, #49	@ 0x31
 80050a6:	f108 0801 	add.w	r8, r8, #1
 80050aa:	f806 3b01 	strb.w	r3, [r6], #1
 80050ae:	e59f      	b.n	8004bf0 <_dtoa_r+0x4a0>
 80050b0:	46b8      	mov	r8, r7
 80050b2:	9c08      	ldr	r4, [sp, #32]
 80050b4:	4625      	mov	r5, r4
 80050b6:	e7f4      	b.n	80050a2 <_dtoa_r+0x952>
 80050b8:	f8dd b020 	ldr.w	fp, [sp, #32]
 80050bc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80050be:	2b00      	cmp	r3, #0
 80050c0:	f000 8101 	beq.w	80052c6 <_dtoa_r+0xb76>
 80050c4:	2e00      	cmp	r6, #0
 80050c6:	dd05      	ble.n	80050d4 <_dtoa_r+0x984>
 80050c8:	4629      	mov	r1, r5
 80050ca:	4632      	mov	r2, r6
 80050cc:	4648      	mov	r0, r9
 80050ce:	f000 ffad 	bl	800602c <__lshift>
 80050d2:	4605      	mov	r5, r0
 80050d4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80050d6:	2b00      	cmp	r3, #0
 80050d8:	d05c      	beq.n	8005194 <_dtoa_r+0xa44>
 80050da:	4648      	mov	r0, r9
 80050dc:	6869      	ldr	r1, [r5, #4]
 80050de:	f000 fd55 	bl	8005b8c <_Balloc>
 80050e2:	4606      	mov	r6, r0
 80050e4:	b928      	cbnz	r0, 80050f2 <_dtoa_r+0x9a2>
 80050e6:	4602      	mov	r2, r0
 80050e8:	f240 21ef 	movw	r1, #751	@ 0x2ef
 80050ec:	4b80      	ldr	r3, [pc, #512]	@ (80052f0 <_dtoa_r+0xba0>)
 80050ee:	f7ff bb43 	b.w	8004778 <_dtoa_r+0x28>
 80050f2:	692a      	ldr	r2, [r5, #16]
 80050f4:	f105 010c 	add.w	r1, r5, #12
 80050f8:	3202      	adds	r2, #2
 80050fa:	0092      	lsls	r2, r2, #2
 80050fc:	300c      	adds	r0, #12
 80050fe:	f7ff fa8a 	bl	8004616 <memcpy>
 8005102:	2201      	movs	r2, #1
 8005104:	4631      	mov	r1, r6
 8005106:	4648      	mov	r0, r9
 8005108:	f000 ff90 	bl	800602c <__lshift>
 800510c:	462f      	mov	r7, r5
 800510e:	4605      	mov	r5, r0
 8005110:	f10a 0301 	add.w	r3, sl, #1
 8005114:	9304      	str	r3, [sp, #16]
 8005116:	eb0a 030b 	add.w	r3, sl, fp
 800511a:	930a      	str	r3, [sp, #40]	@ 0x28
 800511c:	9b06      	ldr	r3, [sp, #24]
 800511e:	f003 0301 	and.w	r3, r3, #1
 8005122:	9309      	str	r3, [sp, #36]	@ 0x24
 8005124:	9b04      	ldr	r3, [sp, #16]
 8005126:	4621      	mov	r1, r4
 8005128:	9803      	ldr	r0, [sp, #12]
 800512a:	f103 3bff 	add.w	fp, r3, #4294967295
 800512e:	f7ff fa87 	bl	8004640 <quorem>
 8005132:	4603      	mov	r3, r0
 8005134:	4639      	mov	r1, r7
 8005136:	3330      	adds	r3, #48	@ 0x30
 8005138:	9006      	str	r0, [sp, #24]
 800513a:	9803      	ldr	r0, [sp, #12]
 800513c:	930b      	str	r3, [sp, #44]	@ 0x2c
 800513e:	f000 ffe1 	bl	8006104 <__mcmp>
 8005142:	462a      	mov	r2, r5
 8005144:	9008      	str	r0, [sp, #32]
 8005146:	4621      	mov	r1, r4
 8005148:	4648      	mov	r0, r9
 800514a:	f000 fff7 	bl	800613c <__mdiff>
 800514e:	68c2      	ldr	r2, [r0, #12]
 8005150:	4606      	mov	r6, r0
 8005152:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8005154:	bb02      	cbnz	r2, 8005198 <_dtoa_r+0xa48>
 8005156:	4601      	mov	r1, r0
 8005158:	9803      	ldr	r0, [sp, #12]
 800515a:	f000 ffd3 	bl	8006104 <__mcmp>
 800515e:	4602      	mov	r2, r0
 8005160:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8005162:	4631      	mov	r1, r6
 8005164:	4648      	mov	r0, r9
 8005166:	e9cd 320b 	strd	r3, r2, [sp, #44]	@ 0x2c
 800516a:	f000 fd4f 	bl	8005c0c <_Bfree>
 800516e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8005170:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8005172:	9e04      	ldr	r6, [sp, #16]
 8005174:	ea42 0103 	orr.w	r1, r2, r3
 8005178:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800517a:	4319      	orrs	r1, r3
 800517c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800517e:	d10d      	bne.n	800519c <_dtoa_r+0xa4c>
 8005180:	2b39      	cmp	r3, #57	@ 0x39
 8005182:	d027      	beq.n	80051d4 <_dtoa_r+0xa84>
 8005184:	9a08      	ldr	r2, [sp, #32]
 8005186:	2a00      	cmp	r2, #0
 8005188:	dd01      	ble.n	800518e <_dtoa_r+0xa3e>
 800518a:	9b06      	ldr	r3, [sp, #24]
 800518c:	3331      	adds	r3, #49	@ 0x31
 800518e:	f88b 3000 	strb.w	r3, [fp]
 8005192:	e52e      	b.n	8004bf2 <_dtoa_r+0x4a2>
 8005194:	4628      	mov	r0, r5
 8005196:	e7b9      	b.n	800510c <_dtoa_r+0x9bc>
 8005198:	2201      	movs	r2, #1
 800519a:	e7e2      	b.n	8005162 <_dtoa_r+0xa12>
 800519c:	9908      	ldr	r1, [sp, #32]
 800519e:	2900      	cmp	r1, #0
 80051a0:	db04      	blt.n	80051ac <_dtoa_r+0xa5c>
 80051a2:	9820      	ldr	r0, [sp, #128]	@ 0x80
 80051a4:	4301      	orrs	r1, r0
 80051a6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80051a8:	4301      	orrs	r1, r0
 80051aa:	d120      	bne.n	80051ee <_dtoa_r+0xa9e>
 80051ac:	2a00      	cmp	r2, #0
 80051ae:	ddee      	ble.n	800518e <_dtoa_r+0xa3e>
 80051b0:	2201      	movs	r2, #1
 80051b2:	9903      	ldr	r1, [sp, #12]
 80051b4:	4648      	mov	r0, r9
 80051b6:	9304      	str	r3, [sp, #16]
 80051b8:	f000 ff38 	bl	800602c <__lshift>
 80051bc:	4621      	mov	r1, r4
 80051be:	9003      	str	r0, [sp, #12]
 80051c0:	f000 ffa0 	bl	8006104 <__mcmp>
 80051c4:	2800      	cmp	r0, #0
 80051c6:	9b04      	ldr	r3, [sp, #16]
 80051c8:	dc02      	bgt.n	80051d0 <_dtoa_r+0xa80>
 80051ca:	d1e0      	bne.n	800518e <_dtoa_r+0xa3e>
 80051cc:	07da      	lsls	r2, r3, #31
 80051ce:	d5de      	bpl.n	800518e <_dtoa_r+0xa3e>
 80051d0:	2b39      	cmp	r3, #57	@ 0x39
 80051d2:	d1da      	bne.n	800518a <_dtoa_r+0xa3a>
 80051d4:	2339      	movs	r3, #57	@ 0x39
 80051d6:	f88b 3000 	strb.w	r3, [fp]
 80051da:	4633      	mov	r3, r6
 80051dc:	461e      	mov	r6, r3
 80051de:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 80051e2:	3b01      	subs	r3, #1
 80051e4:	2a39      	cmp	r2, #57	@ 0x39
 80051e6:	d04e      	beq.n	8005286 <_dtoa_r+0xb36>
 80051e8:	3201      	adds	r2, #1
 80051ea:	701a      	strb	r2, [r3, #0]
 80051ec:	e501      	b.n	8004bf2 <_dtoa_r+0x4a2>
 80051ee:	2a00      	cmp	r2, #0
 80051f0:	dd03      	ble.n	80051fa <_dtoa_r+0xaaa>
 80051f2:	2b39      	cmp	r3, #57	@ 0x39
 80051f4:	d0ee      	beq.n	80051d4 <_dtoa_r+0xa84>
 80051f6:	3301      	adds	r3, #1
 80051f8:	e7c9      	b.n	800518e <_dtoa_r+0xa3e>
 80051fa:	9a04      	ldr	r2, [sp, #16]
 80051fc:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80051fe:	f802 3c01 	strb.w	r3, [r2, #-1]
 8005202:	428a      	cmp	r2, r1
 8005204:	d028      	beq.n	8005258 <_dtoa_r+0xb08>
 8005206:	2300      	movs	r3, #0
 8005208:	220a      	movs	r2, #10
 800520a:	9903      	ldr	r1, [sp, #12]
 800520c:	4648      	mov	r0, r9
 800520e:	f000 fd1f 	bl	8005c50 <__multadd>
 8005212:	42af      	cmp	r7, r5
 8005214:	9003      	str	r0, [sp, #12]
 8005216:	f04f 0300 	mov.w	r3, #0
 800521a:	f04f 020a 	mov.w	r2, #10
 800521e:	4639      	mov	r1, r7
 8005220:	4648      	mov	r0, r9
 8005222:	d107      	bne.n	8005234 <_dtoa_r+0xae4>
 8005224:	f000 fd14 	bl	8005c50 <__multadd>
 8005228:	4607      	mov	r7, r0
 800522a:	4605      	mov	r5, r0
 800522c:	9b04      	ldr	r3, [sp, #16]
 800522e:	3301      	adds	r3, #1
 8005230:	9304      	str	r3, [sp, #16]
 8005232:	e777      	b.n	8005124 <_dtoa_r+0x9d4>
 8005234:	f000 fd0c 	bl	8005c50 <__multadd>
 8005238:	4629      	mov	r1, r5
 800523a:	4607      	mov	r7, r0
 800523c:	2300      	movs	r3, #0
 800523e:	220a      	movs	r2, #10
 8005240:	4648      	mov	r0, r9
 8005242:	f000 fd05 	bl	8005c50 <__multadd>
 8005246:	4605      	mov	r5, r0
 8005248:	e7f0      	b.n	800522c <_dtoa_r+0xadc>
 800524a:	f1bb 0f00 	cmp.w	fp, #0
 800524e:	bfcc      	ite	gt
 8005250:	465e      	movgt	r6, fp
 8005252:	2601      	movle	r6, #1
 8005254:	2700      	movs	r7, #0
 8005256:	4456      	add	r6, sl
 8005258:	2201      	movs	r2, #1
 800525a:	9903      	ldr	r1, [sp, #12]
 800525c:	4648      	mov	r0, r9
 800525e:	9304      	str	r3, [sp, #16]
 8005260:	f000 fee4 	bl	800602c <__lshift>
 8005264:	4621      	mov	r1, r4
 8005266:	9003      	str	r0, [sp, #12]
 8005268:	f000 ff4c 	bl	8006104 <__mcmp>
 800526c:	2800      	cmp	r0, #0
 800526e:	dcb4      	bgt.n	80051da <_dtoa_r+0xa8a>
 8005270:	d102      	bne.n	8005278 <_dtoa_r+0xb28>
 8005272:	9b04      	ldr	r3, [sp, #16]
 8005274:	07db      	lsls	r3, r3, #31
 8005276:	d4b0      	bmi.n	80051da <_dtoa_r+0xa8a>
 8005278:	4633      	mov	r3, r6
 800527a:	461e      	mov	r6, r3
 800527c:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8005280:	2a30      	cmp	r2, #48	@ 0x30
 8005282:	d0fa      	beq.n	800527a <_dtoa_r+0xb2a>
 8005284:	e4b5      	b.n	8004bf2 <_dtoa_r+0x4a2>
 8005286:	459a      	cmp	sl, r3
 8005288:	d1a8      	bne.n	80051dc <_dtoa_r+0xa8c>
 800528a:	2331      	movs	r3, #49	@ 0x31
 800528c:	f108 0801 	add.w	r8, r8, #1
 8005290:	f88a 3000 	strb.w	r3, [sl]
 8005294:	e4ad      	b.n	8004bf2 <_dtoa_r+0x4a2>
 8005296:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8005298:	f8df a058 	ldr.w	sl, [pc, #88]	@ 80052f4 <_dtoa_r+0xba4>
 800529c:	b11b      	cbz	r3, 80052a6 <_dtoa_r+0xb56>
 800529e:	f10a 0308 	add.w	r3, sl, #8
 80052a2:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 80052a4:	6013      	str	r3, [r2, #0]
 80052a6:	4650      	mov	r0, sl
 80052a8:	b017      	add	sp, #92	@ 0x5c
 80052aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80052ae:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80052b0:	2b01      	cmp	r3, #1
 80052b2:	f77f ae2e 	ble.w	8004f12 <_dtoa_r+0x7c2>
 80052b6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80052b8:	930a      	str	r3, [sp, #40]	@ 0x28
 80052ba:	2001      	movs	r0, #1
 80052bc:	e64d      	b.n	8004f5a <_dtoa_r+0x80a>
 80052be:	f1bb 0f00 	cmp.w	fp, #0
 80052c2:	f77f aed9 	ble.w	8005078 <_dtoa_r+0x928>
 80052c6:	4656      	mov	r6, sl
 80052c8:	4621      	mov	r1, r4
 80052ca:	9803      	ldr	r0, [sp, #12]
 80052cc:	f7ff f9b8 	bl	8004640 <quorem>
 80052d0:	f100 0330 	add.w	r3, r0, #48	@ 0x30
 80052d4:	f806 3b01 	strb.w	r3, [r6], #1
 80052d8:	eba6 020a 	sub.w	r2, r6, sl
 80052dc:	4593      	cmp	fp, r2
 80052de:	ddb4      	ble.n	800524a <_dtoa_r+0xafa>
 80052e0:	2300      	movs	r3, #0
 80052e2:	220a      	movs	r2, #10
 80052e4:	4648      	mov	r0, r9
 80052e6:	9903      	ldr	r1, [sp, #12]
 80052e8:	f000 fcb2 	bl	8005c50 <__multadd>
 80052ec:	9003      	str	r0, [sp, #12]
 80052ee:	e7eb      	b.n	80052c8 <_dtoa_r+0xb78>
 80052f0:	08007312 	.word	0x08007312
 80052f4:	08007296 	.word	0x08007296

080052f8 <_free_r>:
 80052f8:	b538      	push	{r3, r4, r5, lr}
 80052fa:	4605      	mov	r5, r0
 80052fc:	2900      	cmp	r1, #0
 80052fe:	d040      	beq.n	8005382 <_free_r+0x8a>
 8005300:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005304:	1f0c      	subs	r4, r1, #4
 8005306:	2b00      	cmp	r3, #0
 8005308:	bfb8      	it	lt
 800530a:	18e4      	addlt	r4, r4, r3
 800530c:	f000 fc32 	bl	8005b74 <__malloc_lock>
 8005310:	4a1c      	ldr	r2, [pc, #112]	@ (8005384 <_free_r+0x8c>)
 8005312:	6813      	ldr	r3, [r2, #0]
 8005314:	b933      	cbnz	r3, 8005324 <_free_r+0x2c>
 8005316:	6063      	str	r3, [r4, #4]
 8005318:	6014      	str	r4, [r2, #0]
 800531a:	4628      	mov	r0, r5
 800531c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005320:	f000 bc2e 	b.w	8005b80 <__malloc_unlock>
 8005324:	42a3      	cmp	r3, r4
 8005326:	d908      	bls.n	800533a <_free_r+0x42>
 8005328:	6820      	ldr	r0, [r4, #0]
 800532a:	1821      	adds	r1, r4, r0
 800532c:	428b      	cmp	r3, r1
 800532e:	bf01      	itttt	eq
 8005330:	6819      	ldreq	r1, [r3, #0]
 8005332:	685b      	ldreq	r3, [r3, #4]
 8005334:	1809      	addeq	r1, r1, r0
 8005336:	6021      	streq	r1, [r4, #0]
 8005338:	e7ed      	b.n	8005316 <_free_r+0x1e>
 800533a:	461a      	mov	r2, r3
 800533c:	685b      	ldr	r3, [r3, #4]
 800533e:	b10b      	cbz	r3, 8005344 <_free_r+0x4c>
 8005340:	42a3      	cmp	r3, r4
 8005342:	d9fa      	bls.n	800533a <_free_r+0x42>
 8005344:	6811      	ldr	r1, [r2, #0]
 8005346:	1850      	adds	r0, r2, r1
 8005348:	42a0      	cmp	r0, r4
 800534a:	d10b      	bne.n	8005364 <_free_r+0x6c>
 800534c:	6820      	ldr	r0, [r4, #0]
 800534e:	4401      	add	r1, r0
 8005350:	1850      	adds	r0, r2, r1
 8005352:	4283      	cmp	r3, r0
 8005354:	6011      	str	r1, [r2, #0]
 8005356:	d1e0      	bne.n	800531a <_free_r+0x22>
 8005358:	6818      	ldr	r0, [r3, #0]
 800535a:	685b      	ldr	r3, [r3, #4]
 800535c:	4408      	add	r0, r1
 800535e:	6010      	str	r0, [r2, #0]
 8005360:	6053      	str	r3, [r2, #4]
 8005362:	e7da      	b.n	800531a <_free_r+0x22>
 8005364:	d902      	bls.n	800536c <_free_r+0x74>
 8005366:	230c      	movs	r3, #12
 8005368:	602b      	str	r3, [r5, #0]
 800536a:	e7d6      	b.n	800531a <_free_r+0x22>
 800536c:	6820      	ldr	r0, [r4, #0]
 800536e:	1821      	adds	r1, r4, r0
 8005370:	428b      	cmp	r3, r1
 8005372:	bf01      	itttt	eq
 8005374:	6819      	ldreq	r1, [r3, #0]
 8005376:	685b      	ldreq	r3, [r3, #4]
 8005378:	1809      	addeq	r1, r1, r0
 800537a:	6021      	streq	r1, [r4, #0]
 800537c:	6063      	str	r3, [r4, #4]
 800537e:	6054      	str	r4, [r2, #4]
 8005380:	e7cb      	b.n	800531a <_free_r+0x22>
 8005382:	bd38      	pop	{r3, r4, r5, pc}
 8005384:	2000054c 	.word	0x2000054c

08005388 <rshift>:
 8005388:	6903      	ldr	r3, [r0, #16]
 800538a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800538e:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8005392:	f100 0414 	add.w	r4, r0, #20
 8005396:	ea4f 1261 	mov.w	r2, r1, asr #5
 800539a:	dd46      	ble.n	800542a <rshift+0xa2>
 800539c:	f011 011f 	ands.w	r1, r1, #31
 80053a0:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 80053a4:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 80053a8:	d10c      	bne.n	80053c4 <rshift+0x3c>
 80053aa:	4629      	mov	r1, r5
 80053ac:	f100 0710 	add.w	r7, r0, #16
 80053b0:	42b1      	cmp	r1, r6
 80053b2:	d335      	bcc.n	8005420 <rshift+0x98>
 80053b4:	1a9b      	subs	r3, r3, r2
 80053b6:	009b      	lsls	r3, r3, #2
 80053b8:	1eea      	subs	r2, r5, #3
 80053ba:	4296      	cmp	r6, r2
 80053bc:	bf38      	it	cc
 80053be:	2300      	movcc	r3, #0
 80053c0:	4423      	add	r3, r4
 80053c2:	e015      	b.n	80053f0 <rshift+0x68>
 80053c4:	46a1      	mov	r9, r4
 80053c6:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 80053ca:	f1c1 0820 	rsb	r8, r1, #32
 80053ce:	40cf      	lsrs	r7, r1
 80053d0:	f105 0e04 	add.w	lr, r5, #4
 80053d4:	4576      	cmp	r6, lr
 80053d6:	46f4      	mov	ip, lr
 80053d8:	d816      	bhi.n	8005408 <rshift+0x80>
 80053da:	1a9a      	subs	r2, r3, r2
 80053dc:	0092      	lsls	r2, r2, #2
 80053de:	3a04      	subs	r2, #4
 80053e0:	3501      	adds	r5, #1
 80053e2:	42ae      	cmp	r6, r5
 80053e4:	bf38      	it	cc
 80053e6:	2200      	movcc	r2, #0
 80053e8:	18a3      	adds	r3, r4, r2
 80053ea:	50a7      	str	r7, [r4, r2]
 80053ec:	b107      	cbz	r7, 80053f0 <rshift+0x68>
 80053ee:	3304      	adds	r3, #4
 80053f0:	42a3      	cmp	r3, r4
 80053f2:	eba3 0204 	sub.w	r2, r3, r4
 80053f6:	bf08      	it	eq
 80053f8:	2300      	moveq	r3, #0
 80053fa:	ea4f 02a2 	mov.w	r2, r2, asr #2
 80053fe:	6102      	str	r2, [r0, #16]
 8005400:	bf08      	it	eq
 8005402:	6143      	streq	r3, [r0, #20]
 8005404:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005408:	f8dc c000 	ldr.w	ip, [ip]
 800540c:	fa0c fc08 	lsl.w	ip, ip, r8
 8005410:	ea4c 0707 	orr.w	r7, ip, r7
 8005414:	f849 7b04 	str.w	r7, [r9], #4
 8005418:	f85e 7b04 	ldr.w	r7, [lr], #4
 800541c:	40cf      	lsrs	r7, r1
 800541e:	e7d9      	b.n	80053d4 <rshift+0x4c>
 8005420:	f851 cb04 	ldr.w	ip, [r1], #4
 8005424:	f847 cf04 	str.w	ip, [r7, #4]!
 8005428:	e7c2      	b.n	80053b0 <rshift+0x28>
 800542a:	4623      	mov	r3, r4
 800542c:	e7e0      	b.n	80053f0 <rshift+0x68>

0800542e <__hexdig_fun>:
 800542e:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 8005432:	2b09      	cmp	r3, #9
 8005434:	d802      	bhi.n	800543c <__hexdig_fun+0xe>
 8005436:	3820      	subs	r0, #32
 8005438:	b2c0      	uxtb	r0, r0
 800543a:	4770      	bx	lr
 800543c:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 8005440:	2b05      	cmp	r3, #5
 8005442:	d801      	bhi.n	8005448 <__hexdig_fun+0x1a>
 8005444:	3847      	subs	r0, #71	@ 0x47
 8005446:	e7f7      	b.n	8005438 <__hexdig_fun+0xa>
 8005448:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 800544c:	2b05      	cmp	r3, #5
 800544e:	d801      	bhi.n	8005454 <__hexdig_fun+0x26>
 8005450:	3827      	subs	r0, #39	@ 0x27
 8005452:	e7f1      	b.n	8005438 <__hexdig_fun+0xa>
 8005454:	2000      	movs	r0, #0
 8005456:	4770      	bx	lr

08005458 <__gethex>:
 8005458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800545c:	468a      	mov	sl, r1
 800545e:	4690      	mov	r8, r2
 8005460:	b085      	sub	sp, #20
 8005462:	9302      	str	r3, [sp, #8]
 8005464:	680b      	ldr	r3, [r1, #0]
 8005466:	9001      	str	r0, [sp, #4]
 8005468:	1c9c      	adds	r4, r3, #2
 800546a:	46a1      	mov	r9, r4
 800546c:	f814 0b01 	ldrb.w	r0, [r4], #1
 8005470:	2830      	cmp	r0, #48	@ 0x30
 8005472:	d0fa      	beq.n	800546a <__gethex+0x12>
 8005474:	eba9 0303 	sub.w	r3, r9, r3
 8005478:	f1a3 0b02 	sub.w	fp, r3, #2
 800547c:	f7ff ffd7 	bl	800542e <__hexdig_fun>
 8005480:	4605      	mov	r5, r0
 8005482:	2800      	cmp	r0, #0
 8005484:	d168      	bne.n	8005558 <__gethex+0x100>
 8005486:	2201      	movs	r2, #1
 8005488:	4648      	mov	r0, r9
 800548a:	499f      	ldr	r1, [pc, #636]	@ (8005708 <__gethex+0x2b0>)
 800548c:	f7fe ffee 	bl	800446c <strncmp>
 8005490:	4607      	mov	r7, r0
 8005492:	2800      	cmp	r0, #0
 8005494:	d167      	bne.n	8005566 <__gethex+0x10e>
 8005496:	f899 0001 	ldrb.w	r0, [r9, #1]
 800549a:	4626      	mov	r6, r4
 800549c:	f7ff ffc7 	bl	800542e <__hexdig_fun>
 80054a0:	2800      	cmp	r0, #0
 80054a2:	d062      	beq.n	800556a <__gethex+0x112>
 80054a4:	4623      	mov	r3, r4
 80054a6:	7818      	ldrb	r0, [r3, #0]
 80054a8:	4699      	mov	r9, r3
 80054aa:	2830      	cmp	r0, #48	@ 0x30
 80054ac:	f103 0301 	add.w	r3, r3, #1
 80054b0:	d0f9      	beq.n	80054a6 <__gethex+0x4e>
 80054b2:	f7ff ffbc 	bl	800542e <__hexdig_fun>
 80054b6:	fab0 f580 	clz	r5, r0
 80054ba:	f04f 0b01 	mov.w	fp, #1
 80054be:	096d      	lsrs	r5, r5, #5
 80054c0:	464a      	mov	r2, r9
 80054c2:	4616      	mov	r6, r2
 80054c4:	7830      	ldrb	r0, [r6, #0]
 80054c6:	3201      	adds	r2, #1
 80054c8:	f7ff ffb1 	bl	800542e <__hexdig_fun>
 80054cc:	2800      	cmp	r0, #0
 80054ce:	d1f8      	bne.n	80054c2 <__gethex+0x6a>
 80054d0:	2201      	movs	r2, #1
 80054d2:	4630      	mov	r0, r6
 80054d4:	498c      	ldr	r1, [pc, #560]	@ (8005708 <__gethex+0x2b0>)
 80054d6:	f7fe ffc9 	bl	800446c <strncmp>
 80054da:	2800      	cmp	r0, #0
 80054dc:	d13f      	bne.n	800555e <__gethex+0x106>
 80054de:	b944      	cbnz	r4, 80054f2 <__gethex+0x9a>
 80054e0:	1c74      	adds	r4, r6, #1
 80054e2:	4622      	mov	r2, r4
 80054e4:	4616      	mov	r6, r2
 80054e6:	7830      	ldrb	r0, [r6, #0]
 80054e8:	3201      	adds	r2, #1
 80054ea:	f7ff ffa0 	bl	800542e <__hexdig_fun>
 80054ee:	2800      	cmp	r0, #0
 80054f0:	d1f8      	bne.n	80054e4 <__gethex+0x8c>
 80054f2:	1ba4      	subs	r4, r4, r6
 80054f4:	00a7      	lsls	r7, r4, #2
 80054f6:	7833      	ldrb	r3, [r6, #0]
 80054f8:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 80054fc:	2b50      	cmp	r3, #80	@ 0x50
 80054fe:	d13e      	bne.n	800557e <__gethex+0x126>
 8005500:	7873      	ldrb	r3, [r6, #1]
 8005502:	2b2b      	cmp	r3, #43	@ 0x2b
 8005504:	d033      	beq.n	800556e <__gethex+0x116>
 8005506:	2b2d      	cmp	r3, #45	@ 0x2d
 8005508:	d034      	beq.n	8005574 <__gethex+0x11c>
 800550a:	2400      	movs	r4, #0
 800550c:	1c71      	adds	r1, r6, #1
 800550e:	7808      	ldrb	r0, [r1, #0]
 8005510:	f7ff ff8d 	bl	800542e <__hexdig_fun>
 8005514:	1e43      	subs	r3, r0, #1
 8005516:	b2db      	uxtb	r3, r3
 8005518:	2b18      	cmp	r3, #24
 800551a:	d830      	bhi.n	800557e <__gethex+0x126>
 800551c:	f1a0 0210 	sub.w	r2, r0, #16
 8005520:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8005524:	f7ff ff83 	bl	800542e <__hexdig_fun>
 8005528:	f100 3cff 	add.w	ip, r0, #4294967295
 800552c:	fa5f fc8c 	uxtb.w	ip, ip
 8005530:	f1bc 0f18 	cmp.w	ip, #24
 8005534:	f04f 030a 	mov.w	r3, #10
 8005538:	d91e      	bls.n	8005578 <__gethex+0x120>
 800553a:	b104      	cbz	r4, 800553e <__gethex+0xe6>
 800553c:	4252      	negs	r2, r2
 800553e:	4417      	add	r7, r2
 8005540:	f8ca 1000 	str.w	r1, [sl]
 8005544:	b1ed      	cbz	r5, 8005582 <__gethex+0x12a>
 8005546:	f1bb 0f00 	cmp.w	fp, #0
 800554a:	bf0c      	ite	eq
 800554c:	2506      	moveq	r5, #6
 800554e:	2500      	movne	r5, #0
 8005550:	4628      	mov	r0, r5
 8005552:	b005      	add	sp, #20
 8005554:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005558:	2500      	movs	r5, #0
 800555a:	462c      	mov	r4, r5
 800555c:	e7b0      	b.n	80054c0 <__gethex+0x68>
 800555e:	2c00      	cmp	r4, #0
 8005560:	d1c7      	bne.n	80054f2 <__gethex+0x9a>
 8005562:	4627      	mov	r7, r4
 8005564:	e7c7      	b.n	80054f6 <__gethex+0x9e>
 8005566:	464e      	mov	r6, r9
 8005568:	462f      	mov	r7, r5
 800556a:	2501      	movs	r5, #1
 800556c:	e7c3      	b.n	80054f6 <__gethex+0x9e>
 800556e:	2400      	movs	r4, #0
 8005570:	1cb1      	adds	r1, r6, #2
 8005572:	e7cc      	b.n	800550e <__gethex+0xb6>
 8005574:	2401      	movs	r4, #1
 8005576:	e7fb      	b.n	8005570 <__gethex+0x118>
 8005578:	fb03 0002 	mla	r0, r3, r2, r0
 800557c:	e7ce      	b.n	800551c <__gethex+0xc4>
 800557e:	4631      	mov	r1, r6
 8005580:	e7de      	b.n	8005540 <__gethex+0xe8>
 8005582:	4629      	mov	r1, r5
 8005584:	eba6 0309 	sub.w	r3, r6, r9
 8005588:	3b01      	subs	r3, #1
 800558a:	2b07      	cmp	r3, #7
 800558c:	dc0a      	bgt.n	80055a4 <__gethex+0x14c>
 800558e:	9801      	ldr	r0, [sp, #4]
 8005590:	f000 fafc 	bl	8005b8c <_Balloc>
 8005594:	4604      	mov	r4, r0
 8005596:	b940      	cbnz	r0, 80055aa <__gethex+0x152>
 8005598:	4602      	mov	r2, r0
 800559a:	21e4      	movs	r1, #228	@ 0xe4
 800559c:	4b5b      	ldr	r3, [pc, #364]	@ (800570c <__gethex+0x2b4>)
 800559e:	485c      	ldr	r0, [pc, #368]	@ (8005710 <__gethex+0x2b8>)
 80055a0:	f001 f9ca 	bl	8006938 <__assert_func>
 80055a4:	3101      	adds	r1, #1
 80055a6:	105b      	asrs	r3, r3, #1
 80055a8:	e7ef      	b.n	800558a <__gethex+0x132>
 80055aa:	2300      	movs	r3, #0
 80055ac:	f100 0a14 	add.w	sl, r0, #20
 80055b0:	4655      	mov	r5, sl
 80055b2:	469b      	mov	fp, r3
 80055b4:	45b1      	cmp	r9, r6
 80055b6:	d337      	bcc.n	8005628 <__gethex+0x1d0>
 80055b8:	f845 bb04 	str.w	fp, [r5], #4
 80055bc:	eba5 050a 	sub.w	r5, r5, sl
 80055c0:	10ad      	asrs	r5, r5, #2
 80055c2:	6125      	str	r5, [r4, #16]
 80055c4:	4658      	mov	r0, fp
 80055c6:	f000 fbd3 	bl	8005d70 <__hi0bits>
 80055ca:	016d      	lsls	r5, r5, #5
 80055cc:	f8d8 6000 	ldr.w	r6, [r8]
 80055d0:	1a2d      	subs	r5, r5, r0
 80055d2:	42b5      	cmp	r5, r6
 80055d4:	dd54      	ble.n	8005680 <__gethex+0x228>
 80055d6:	1bad      	subs	r5, r5, r6
 80055d8:	4629      	mov	r1, r5
 80055da:	4620      	mov	r0, r4
 80055dc:	f000 ff55 	bl	800648a <__any_on>
 80055e0:	4681      	mov	r9, r0
 80055e2:	b178      	cbz	r0, 8005604 <__gethex+0x1ac>
 80055e4:	f04f 0901 	mov.w	r9, #1
 80055e8:	1e6b      	subs	r3, r5, #1
 80055ea:	1159      	asrs	r1, r3, #5
 80055ec:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 80055f0:	f003 021f 	and.w	r2, r3, #31
 80055f4:	fa09 f202 	lsl.w	r2, r9, r2
 80055f8:	420a      	tst	r2, r1
 80055fa:	d003      	beq.n	8005604 <__gethex+0x1ac>
 80055fc:	454b      	cmp	r3, r9
 80055fe:	dc36      	bgt.n	800566e <__gethex+0x216>
 8005600:	f04f 0902 	mov.w	r9, #2
 8005604:	4629      	mov	r1, r5
 8005606:	4620      	mov	r0, r4
 8005608:	f7ff febe 	bl	8005388 <rshift>
 800560c:	442f      	add	r7, r5
 800560e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005612:	42bb      	cmp	r3, r7
 8005614:	da42      	bge.n	800569c <__gethex+0x244>
 8005616:	4621      	mov	r1, r4
 8005618:	9801      	ldr	r0, [sp, #4]
 800561a:	f000 faf7 	bl	8005c0c <_Bfree>
 800561e:	2300      	movs	r3, #0
 8005620:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8005622:	25a3      	movs	r5, #163	@ 0xa3
 8005624:	6013      	str	r3, [r2, #0]
 8005626:	e793      	b.n	8005550 <__gethex+0xf8>
 8005628:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 800562c:	2a2e      	cmp	r2, #46	@ 0x2e
 800562e:	d012      	beq.n	8005656 <__gethex+0x1fe>
 8005630:	2b20      	cmp	r3, #32
 8005632:	d104      	bne.n	800563e <__gethex+0x1e6>
 8005634:	f845 bb04 	str.w	fp, [r5], #4
 8005638:	f04f 0b00 	mov.w	fp, #0
 800563c:	465b      	mov	r3, fp
 800563e:	7830      	ldrb	r0, [r6, #0]
 8005640:	9303      	str	r3, [sp, #12]
 8005642:	f7ff fef4 	bl	800542e <__hexdig_fun>
 8005646:	9b03      	ldr	r3, [sp, #12]
 8005648:	f000 000f 	and.w	r0, r0, #15
 800564c:	4098      	lsls	r0, r3
 800564e:	ea4b 0b00 	orr.w	fp, fp, r0
 8005652:	3304      	adds	r3, #4
 8005654:	e7ae      	b.n	80055b4 <__gethex+0x15c>
 8005656:	45b1      	cmp	r9, r6
 8005658:	d8ea      	bhi.n	8005630 <__gethex+0x1d8>
 800565a:	2201      	movs	r2, #1
 800565c:	4630      	mov	r0, r6
 800565e:	492a      	ldr	r1, [pc, #168]	@ (8005708 <__gethex+0x2b0>)
 8005660:	9303      	str	r3, [sp, #12]
 8005662:	f7fe ff03 	bl	800446c <strncmp>
 8005666:	9b03      	ldr	r3, [sp, #12]
 8005668:	2800      	cmp	r0, #0
 800566a:	d1e1      	bne.n	8005630 <__gethex+0x1d8>
 800566c:	e7a2      	b.n	80055b4 <__gethex+0x15c>
 800566e:	4620      	mov	r0, r4
 8005670:	1ea9      	subs	r1, r5, #2
 8005672:	f000 ff0a 	bl	800648a <__any_on>
 8005676:	2800      	cmp	r0, #0
 8005678:	d0c2      	beq.n	8005600 <__gethex+0x1a8>
 800567a:	f04f 0903 	mov.w	r9, #3
 800567e:	e7c1      	b.n	8005604 <__gethex+0x1ac>
 8005680:	da09      	bge.n	8005696 <__gethex+0x23e>
 8005682:	1b75      	subs	r5, r6, r5
 8005684:	4621      	mov	r1, r4
 8005686:	462a      	mov	r2, r5
 8005688:	9801      	ldr	r0, [sp, #4]
 800568a:	f000 fccf 	bl	800602c <__lshift>
 800568e:	4604      	mov	r4, r0
 8005690:	1b7f      	subs	r7, r7, r5
 8005692:	f100 0a14 	add.w	sl, r0, #20
 8005696:	f04f 0900 	mov.w	r9, #0
 800569a:	e7b8      	b.n	800560e <__gethex+0x1b6>
 800569c:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80056a0:	42bd      	cmp	r5, r7
 80056a2:	dd6f      	ble.n	8005784 <__gethex+0x32c>
 80056a4:	1bed      	subs	r5, r5, r7
 80056a6:	42ae      	cmp	r6, r5
 80056a8:	dc34      	bgt.n	8005714 <__gethex+0x2bc>
 80056aa:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80056ae:	2b02      	cmp	r3, #2
 80056b0:	d022      	beq.n	80056f8 <__gethex+0x2a0>
 80056b2:	2b03      	cmp	r3, #3
 80056b4:	d024      	beq.n	8005700 <__gethex+0x2a8>
 80056b6:	2b01      	cmp	r3, #1
 80056b8:	d115      	bne.n	80056e6 <__gethex+0x28e>
 80056ba:	42ae      	cmp	r6, r5
 80056bc:	d113      	bne.n	80056e6 <__gethex+0x28e>
 80056be:	2e01      	cmp	r6, #1
 80056c0:	d10b      	bne.n	80056da <__gethex+0x282>
 80056c2:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80056c6:	9a02      	ldr	r2, [sp, #8]
 80056c8:	2562      	movs	r5, #98	@ 0x62
 80056ca:	6013      	str	r3, [r2, #0]
 80056cc:	2301      	movs	r3, #1
 80056ce:	6123      	str	r3, [r4, #16]
 80056d0:	f8ca 3000 	str.w	r3, [sl]
 80056d4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80056d6:	601c      	str	r4, [r3, #0]
 80056d8:	e73a      	b.n	8005550 <__gethex+0xf8>
 80056da:	4620      	mov	r0, r4
 80056dc:	1e71      	subs	r1, r6, #1
 80056de:	f000 fed4 	bl	800648a <__any_on>
 80056e2:	2800      	cmp	r0, #0
 80056e4:	d1ed      	bne.n	80056c2 <__gethex+0x26a>
 80056e6:	4621      	mov	r1, r4
 80056e8:	9801      	ldr	r0, [sp, #4]
 80056ea:	f000 fa8f 	bl	8005c0c <_Bfree>
 80056ee:	2300      	movs	r3, #0
 80056f0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80056f2:	2550      	movs	r5, #80	@ 0x50
 80056f4:	6013      	str	r3, [r2, #0]
 80056f6:	e72b      	b.n	8005550 <__gethex+0xf8>
 80056f8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80056fa:	2b00      	cmp	r3, #0
 80056fc:	d1f3      	bne.n	80056e6 <__gethex+0x28e>
 80056fe:	e7e0      	b.n	80056c2 <__gethex+0x26a>
 8005700:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005702:	2b00      	cmp	r3, #0
 8005704:	d1dd      	bne.n	80056c2 <__gethex+0x26a>
 8005706:	e7ee      	b.n	80056e6 <__gethex+0x28e>
 8005708:	08007258 	.word	0x08007258
 800570c:	08007312 	.word	0x08007312
 8005710:	08007323 	.word	0x08007323
 8005714:	1e6f      	subs	r7, r5, #1
 8005716:	f1b9 0f00 	cmp.w	r9, #0
 800571a:	d130      	bne.n	800577e <__gethex+0x326>
 800571c:	b127      	cbz	r7, 8005728 <__gethex+0x2d0>
 800571e:	4639      	mov	r1, r7
 8005720:	4620      	mov	r0, r4
 8005722:	f000 feb2 	bl	800648a <__any_on>
 8005726:	4681      	mov	r9, r0
 8005728:	2301      	movs	r3, #1
 800572a:	4629      	mov	r1, r5
 800572c:	1b76      	subs	r6, r6, r5
 800572e:	2502      	movs	r5, #2
 8005730:	117a      	asrs	r2, r7, #5
 8005732:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 8005736:	f007 071f 	and.w	r7, r7, #31
 800573a:	40bb      	lsls	r3, r7
 800573c:	4213      	tst	r3, r2
 800573e:	4620      	mov	r0, r4
 8005740:	bf18      	it	ne
 8005742:	f049 0902 	orrne.w	r9, r9, #2
 8005746:	f7ff fe1f 	bl	8005388 <rshift>
 800574a:	f8d8 7004 	ldr.w	r7, [r8, #4]
 800574e:	f1b9 0f00 	cmp.w	r9, #0
 8005752:	d047      	beq.n	80057e4 <__gethex+0x38c>
 8005754:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8005758:	2b02      	cmp	r3, #2
 800575a:	d015      	beq.n	8005788 <__gethex+0x330>
 800575c:	2b03      	cmp	r3, #3
 800575e:	d017      	beq.n	8005790 <__gethex+0x338>
 8005760:	2b01      	cmp	r3, #1
 8005762:	d109      	bne.n	8005778 <__gethex+0x320>
 8005764:	f019 0f02 	tst.w	r9, #2
 8005768:	d006      	beq.n	8005778 <__gethex+0x320>
 800576a:	f8da 3000 	ldr.w	r3, [sl]
 800576e:	ea49 0903 	orr.w	r9, r9, r3
 8005772:	f019 0f01 	tst.w	r9, #1
 8005776:	d10e      	bne.n	8005796 <__gethex+0x33e>
 8005778:	f045 0510 	orr.w	r5, r5, #16
 800577c:	e032      	b.n	80057e4 <__gethex+0x38c>
 800577e:	f04f 0901 	mov.w	r9, #1
 8005782:	e7d1      	b.n	8005728 <__gethex+0x2d0>
 8005784:	2501      	movs	r5, #1
 8005786:	e7e2      	b.n	800574e <__gethex+0x2f6>
 8005788:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800578a:	f1c3 0301 	rsb	r3, r3, #1
 800578e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8005790:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005792:	2b00      	cmp	r3, #0
 8005794:	d0f0      	beq.n	8005778 <__gethex+0x320>
 8005796:	f04f 0c00 	mov.w	ip, #0
 800579a:	f8d4 b010 	ldr.w	fp, [r4, #16]
 800579e:	f104 0314 	add.w	r3, r4, #20
 80057a2:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 80057a6:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 80057aa:	4618      	mov	r0, r3
 80057ac:	f853 2b04 	ldr.w	r2, [r3], #4
 80057b0:	f1b2 3fff 	cmp.w	r2, #4294967295
 80057b4:	d01b      	beq.n	80057ee <__gethex+0x396>
 80057b6:	3201      	adds	r2, #1
 80057b8:	6002      	str	r2, [r0, #0]
 80057ba:	2d02      	cmp	r5, #2
 80057bc:	f104 0314 	add.w	r3, r4, #20
 80057c0:	d13c      	bne.n	800583c <__gethex+0x3e4>
 80057c2:	f8d8 2000 	ldr.w	r2, [r8]
 80057c6:	3a01      	subs	r2, #1
 80057c8:	42b2      	cmp	r2, r6
 80057ca:	d109      	bne.n	80057e0 <__gethex+0x388>
 80057cc:	2201      	movs	r2, #1
 80057ce:	1171      	asrs	r1, r6, #5
 80057d0:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80057d4:	f006 061f 	and.w	r6, r6, #31
 80057d8:	fa02 f606 	lsl.w	r6, r2, r6
 80057dc:	421e      	tst	r6, r3
 80057de:	d13a      	bne.n	8005856 <__gethex+0x3fe>
 80057e0:	f045 0520 	orr.w	r5, r5, #32
 80057e4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80057e6:	601c      	str	r4, [r3, #0]
 80057e8:	9b02      	ldr	r3, [sp, #8]
 80057ea:	601f      	str	r7, [r3, #0]
 80057ec:	e6b0      	b.n	8005550 <__gethex+0xf8>
 80057ee:	4299      	cmp	r1, r3
 80057f0:	f843 cc04 	str.w	ip, [r3, #-4]
 80057f4:	d8d9      	bhi.n	80057aa <__gethex+0x352>
 80057f6:	68a3      	ldr	r3, [r4, #8]
 80057f8:	459b      	cmp	fp, r3
 80057fa:	db17      	blt.n	800582c <__gethex+0x3d4>
 80057fc:	6861      	ldr	r1, [r4, #4]
 80057fe:	9801      	ldr	r0, [sp, #4]
 8005800:	3101      	adds	r1, #1
 8005802:	f000 f9c3 	bl	8005b8c <_Balloc>
 8005806:	4681      	mov	r9, r0
 8005808:	b918      	cbnz	r0, 8005812 <__gethex+0x3ba>
 800580a:	4602      	mov	r2, r0
 800580c:	2184      	movs	r1, #132	@ 0x84
 800580e:	4b19      	ldr	r3, [pc, #100]	@ (8005874 <__gethex+0x41c>)
 8005810:	e6c5      	b.n	800559e <__gethex+0x146>
 8005812:	6922      	ldr	r2, [r4, #16]
 8005814:	f104 010c 	add.w	r1, r4, #12
 8005818:	3202      	adds	r2, #2
 800581a:	0092      	lsls	r2, r2, #2
 800581c:	300c      	adds	r0, #12
 800581e:	f7fe fefa 	bl	8004616 <memcpy>
 8005822:	4621      	mov	r1, r4
 8005824:	9801      	ldr	r0, [sp, #4]
 8005826:	f000 f9f1 	bl	8005c0c <_Bfree>
 800582a:	464c      	mov	r4, r9
 800582c:	6923      	ldr	r3, [r4, #16]
 800582e:	1c5a      	adds	r2, r3, #1
 8005830:	6122      	str	r2, [r4, #16]
 8005832:	2201      	movs	r2, #1
 8005834:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8005838:	615a      	str	r2, [r3, #20]
 800583a:	e7be      	b.n	80057ba <__gethex+0x362>
 800583c:	6922      	ldr	r2, [r4, #16]
 800583e:	455a      	cmp	r2, fp
 8005840:	dd0b      	ble.n	800585a <__gethex+0x402>
 8005842:	2101      	movs	r1, #1
 8005844:	4620      	mov	r0, r4
 8005846:	f7ff fd9f 	bl	8005388 <rshift>
 800584a:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800584e:	3701      	adds	r7, #1
 8005850:	42bb      	cmp	r3, r7
 8005852:	f6ff aee0 	blt.w	8005616 <__gethex+0x1be>
 8005856:	2501      	movs	r5, #1
 8005858:	e7c2      	b.n	80057e0 <__gethex+0x388>
 800585a:	f016 061f 	ands.w	r6, r6, #31
 800585e:	d0fa      	beq.n	8005856 <__gethex+0x3fe>
 8005860:	4453      	add	r3, sl
 8005862:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8005866:	f000 fa83 	bl	8005d70 <__hi0bits>
 800586a:	f1c6 0620 	rsb	r6, r6, #32
 800586e:	42b0      	cmp	r0, r6
 8005870:	dbe7      	blt.n	8005842 <__gethex+0x3ea>
 8005872:	e7f0      	b.n	8005856 <__gethex+0x3fe>
 8005874:	08007312 	.word	0x08007312

08005878 <L_shift>:
 8005878:	f1c2 0208 	rsb	r2, r2, #8
 800587c:	0092      	lsls	r2, r2, #2
 800587e:	b570      	push	{r4, r5, r6, lr}
 8005880:	f1c2 0620 	rsb	r6, r2, #32
 8005884:	6843      	ldr	r3, [r0, #4]
 8005886:	6804      	ldr	r4, [r0, #0]
 8005888:	fa03 f506 	lsl.w	r5, r3, r6
 800588c:	432c      	orrs	r4, r5
 800588e:	40d3      	lsrs	r3, r2
 8005890:	6004      	str	r4, [r0, #0]
 8005892:	f840 3f04 	str.w	r3, [r0, #4]!
 8005896:	4288      	cmp	r0, r1
 8005898:	d3f4      	bcc.n	8005884 <L_shift+0xc>
 800589a:	bd70      	pop	{r4, r5, r6, pc}

0800589c <__match>:
 800589c:	b530      	push	{r4, r5, lr}
 800589e:	6803      	ldr	r3, [r0, #0]
 80058a0:	3301      	adds	r3, #1
 80058a2:	f811 4b01 	ldrb.w	r4, [r1], #1
 80058a6:	b914      	cbnz	r4, 80058ae <__match+0x12>
 80058a8:	6003      	str	r3, [r0, #0]
 80058aa:	2001      	movs	r0, #1
 80058ac:	bd30      	pop	{r4, r5, pc}
 80058ae:	f813 2b01 	ldrb.w	r2, [r3], #1
 80058b2:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 80058b6:	2d19      	cmp	r5, #25
 80058b8:	bf98      	it	ls
 80058ba:	3220      	addls	r2, #32
 80058bc:	42a2      	cmp	r2, r4
 80058be:	d0f0      	beq.n	80058a2 <__match+0x6>
 80058c0:	2000      	movs	r0, #0
 80058c2:	e7f3      	b.n	80058ac <__match+0x10>

080058c4 <__hexnan>:
 80058c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80058c8:	2500      	movs	r5, #0
 80058ca:	680b      	ldr	r3, [r1, #0]
 80058cc:	4682      	mov	sl, r0
 80058ce:	115e      	asrs	r6, r3, #5
 80058d0:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 80058d4:	f013 031f 	ands.w	r3, r3, #31
 80058d8:	bf18      	it	ne
 80058da:	3604      	addne	r6, #4
 80058dc:	1f37      	subs	r7, r6, #4
 80058de:	4690      	mov	r8, r2
 80058e0:	46b9      	mov	r9, r7
 80058e2:	463c      	mov	r4, r7
 80058e4:	46ab      	mov	fp, r5
 80058e6:	b087      	sub	sp, #28
 80058e8:	6801      	ldr	r1, [r0, #0]
 80058ea:	9301      	str	r3, [sp, #4]
 80058ec:	f846 5c04 	str.w	r5, [r6, #-4]
 80058f0:	9502      	str	r5, [sp, #8]
 80058f2:	784a      	ldrb	r2, [r1, #1]
 80058f4:	1c4b      	adds	r3, r1, #1
 80058f6:	9303      	str	r3, [sp, #12]
 80058f8:	b342      	cbz	r2, 800594c <__hexnan+0x88>
 80058fa:	4610      	mov	r0, r2
 80058fc:	9105      	str	r1, [sp, #20]
 80058fe:	9204      	str	r2, [sp, #16]
 8005900:	f7ff fd95 	bl	800542e <__hexdig_fun>
 8005904:	2800      	cmp	r0, #0
 8005906:	d151      	bne.n	80059ac <__hexnan+0xe8>
 8005908:	9a04      	ldr	r2, [sp, #16]
 800590a:	9905      	ldr	r1, [sp, #20]
 800590c:	2a20      	cmp	r2, #32
 800590e:	d818      	bhi.n	8005942 <__hexnan+0x7e>
 8005910:	9b02      	ldr	r3, [sp, #8]
 8005912:	459b      	cmp	fp, r3
 8005914:	dd13      	ble.n	800593e <__hexnan+0x7a>
 8005916:	454c      	cmp	r4, r9
 8005918:	d206      	bcs.n	8005928 <__hexnan+0x64>
 800591a:	2d07      	cmp	r5, #7
 800591c:	dc04      	bgt.n	8005928 <__hexnan+0x64>
 800591e:	462a      	mov	r2, r5
 8005920:	4649      	mov	r1, r9
 8005922:	4620      	mov	r0, r4
 8005924:	f7ff ffa8 	bl	8005878 <L_shift>
 8005928:	4544      	cmp	r4, r8
 800592a:	d952      	bls.n	80059d2 <__hexnan+0x10e>
 800592c:	2300      	movs	r3, #0
 800592e:	f1a4 0904 	sub.w	r9, r4, #4
 8005932:	f844 3c04 	str.w	r3, [r4, #-4]
 8005936:	461d      	mov	r5, r3
 8005938:	464c      	mov	r4, r9
 800593a:	f8cd b008 	str.w	fp, [sp, #8]
 800593e:	9903      	ldr	r1, [sp, #12]
 8005940:	e7d7      	b.n	80058f2 <__hexnan+0x2e>
 8005942:	2a29      	cmp	r2, #41	@ 0x29
 8005944:	d157      	bne.n	80059f6 <__hexnan+0x132>
 8005946:	3102      	adds	r1, #2
 8005948:	f8ca 1000 	str.w	r1, [sl]
 800594c:	f1bb 0f00 	cmp.w	fp, #0
 8005950:	d051      	beq.n	80059f6 <__hexnan+0x132>
 8005952:	454c      	cmp	r4, r9
 8005954:	d206      	bcs.n	8005964 <__hexnan+0xa0>
 8005956:	2d07      	cmp	r5, #7
 8005958:	dc04      	bgt.n	8005964 <__hexnan+0xa0>
 800595a:	462a      	mov	r2, r5
 800595c:	4649      	mov	r1, r9
 800595e:	4620      	mov	r0, r4
 8005960:	f7ff ff8a 	bl	8005878 <L_shift>
 8005964:	4544      	cmp	r4, r8
 8005966:	d936      	bls.n	80059d6 <__hexnan+0x112>
 8005968:	4623      	mov	r3, r4
 800596a:	f1a8 0204 	sub.w	r2, r8, #4
 800596e:	f853 1b04 	ldr.w	r1, [r3], #4
 8005972:	429f      	cmp	r7, r3
 8005974:	f842 1f04 	str.w	r1, [r2, #4]!
 8005978:	d2f9      	bcs.n	800596e <__hexnan+0xaa>
 800597a:	1b3b      	subs	r3, r7, r4
 800597c:	f023 0303 	bic.w	r3, r3, #3
 8005980:	3304      	adds	r3, #4
 8005982:	3401      	adds	r4, #1
 8005984:	3e03      	subs	r6, #3
 8005986:	42b4      	cmp	r4, r6
 8005988:	bf88      	it	hi
 800598a:	2304      	movhi	r3, #4
 800598c:	2200      	movs	r2, #0
 800598e:	4443      	add	r3, r8
 8005990:	f843 2b04 	str.w	r2, [r3], #4
 8005994:	429f      	cmp	r7, r3
 8005996:	d2fb      	bcs.n	8005990 <__hexnan+0xcc>
 8005998:	683b      	ldr	r3, [r7, #0]
 800599a:	b91b      	cbnz	r3, 80059a4 <__hexnan+0xe0>
 800599c:	4547      	cmp	r7, r8
 800599e:	d128      	bne.n	80059f2 <__hexnan+0x12e>
 80059a0:	2301      	movs	r3, #1
 80059a2:	603b      	str	r3, [r7, #0]
 80059a4:	2005      	movs	r0, #5
 80059a6:	b007      	add	sp, #28
 80059a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80059ac:	3501      	adds	r5, #1
 80059ae:	2d08      	cmp	r5, #8
 80059b0:	f10b 0b01 	add.w	fp, fp, #1
 80059b4:	dd06      	ble.n	80059c4 <__hexnan+0x100>
 80059b6:	4544      	cmp	r4, r8
 80059b8:	d9c1      	bls.n	800593e <__hexnan+0x7a>
 80059ba:	2300      	movs	r3, #0
 80059bc:	2501      	movs	r5, #1
 80059be:	f844 3c04 	str.w	r3, [r4, #-4]
 80059c2:	3c04      	subs	r4, #4
 80059c4:	6822      	ldr	r2, [r4, #0]
 80059c6:	f000 000f 	and.w	r0, r0, #15
 80059ca:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 80059ce:	6020      	str	r0, [r4, #0]
 80059d0:	e7b5      	b.n	800593e <__hexnan+0x7a>
 80059d2:	2508      	movs	r5, #8
 80059d4:	e7b3      	b.n	800593e <__hexnan+0x7a>
 80059d6:	9b01      	ldr	r3, [sp, #4]
 80059d8:	2b00      	cmp	r3, #0
 80059da:	d0dd      	beq.n	8005998 <__hexnan+0xd4>
 80059dc:	f04f 32ff 	mov.w	r2, #4294967295
 80059e0:	f1c3 0320 	rsb	r3, r3, #32
 80059e4:	40da      	lsrs	r2, r3
 80059e6:	f856 3c04 	ldr.w	r3, [r6, #-4]
 80059ea:	4013      	ands	r3, r2
 80059ec:	f846 3c04 	str.w	r3, [r6, #-4]
 80059f0:	e7d2      	b.n	8005998 <__hexnan+0xd4>
 80059f2:	3f04      	subs	r7, #4
 80059f4:	e7d0      	b.n	8005998 <__hexnan+0xd4>
 80059f6:	2004      	movs	r0, #4
 80059f8:	e7d5      	b.n	80059a6 <__hexnan+0xe2>
	...

080059fc <malloc>:
 80059fc:	4b02      	ldr	r3, [pc, #8]	@ (8005a08 <malloc+0xc>)
 80059fe:	4601      	mov	r1, r0
 8005a00:	6818      	ldr	r0, [r3, #0]
 8005a02:	f000 b825 	b.w	8005a50 <_malloc_r>
 8005a06:	bf00      	nop
 8005a08:	20000180 	.word	0x20000180

08005a0c <sbrk_aligned>:
 8005a0c:	b570      	push	{r4, r5, r6, lr}
 8005a0e:	4e0f      	ldr	r6, [pc, #60]	@ (8005a4c <sbrk_aligned+0x40>)
 8005a10:	460c      	mov	r4, r1
 8005a12:	6831      	ldr	r1, [r6, #0]
 8005a14:	4605      	mov	r5, r0
 8005a16:	b911      	cbnz	r1, 8005a1e <sbrk_aligned+0x12>
 8005a18:	f000 ff7e 	bl	8006918 <_sbrk_r>
 8005a1c:	6030      	str	r0, [r6, #0]
 8005a1e:	4621      	mov	r1, r4
 8005a20:	4628      	mov	r0, r5
 8005a22:	f000 ff79 	bl	8006918 <_sbrk_r>
 8005a26:	1c43      	adds	r3, r0, #1
 8005a28:	d103      	bne.n	8005a32 <sbrk_aligned+0x26>
 8005a2a:	f04f 34ff 	mov.w	r4, #4294967295
 8005a2e:	4620      	mov	r0, r4
 8005a30:	bd70      	pop	{r4, r5, r6, pc}
 8005a32:	1cc4      	adds	r4, r0, #3
 8005a34:	f024 0403 	bic.w	r4, r4, #3
 8005a38:	42a0      	cmp	r0, r4
 8005a3a:	d0f8      	beq.n	8005a2e <sbrk_aligned+0x22>
 8005a3c:	1a21      	subs	r1, r4, r0
 8005a3e:	4628      	mov	r0, r5
 8005a40:	f000 ff6a 	bl	8006918 <_sbrk_r>
 8005a44:	3001      	adds	r0, #1
 8005a46:	d1f2      	bne.n	8005a2e <sbrk_aligned+0x22>
 8005a48:	e7ef      	b.n	8005a2a <sbrk_aligned+0x1e>
 8005a4a:	bf00      	nop
 8005a4c:	20000548 	.word	0x20000548

08005a50 <_malloc_r>:
 8005a50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005a54:	1ccd      	adds	r5, r1, #3
 8005a56:	f025 0503 	bic.w	r5, r5, #3
 8005a5a:	3508      	adds	r5, #8
 8005a5c:	2d0c      	cmp	r5, #12
 8005a5e:	bf38      	it	cc
 8005a60:	250c      	movcc	r5, #12
 8005a62:	2d00      	cmp	r5, #0
 8005a64:	4606      	mov	r6, r0
 8005a66:	db01      	blt.n	8005a6c <_malloc_r+0x1c>
 8005a68:	42a9      	cmp	r1, r5
 8005a6a:	d904      	bls.n	8005a76 <_malloc_r+0x26>
 8005a6c:	230c      	movs	r3, #12
 8005a6e:	6033      	str	r3, [r6, #0]
 8005a70:	2000      	movs	r0, #0
 8005a72:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005a76:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8005b4c <_malloc_r+0xfc>
 8005a7a:	f000 f87b 	bl	8005b74 <__malloc_lock>
 8005a7e:	f8d8 3000 	ldr.w	r3, [r8]
 8005a82:	461c      	mov	r4, r3
 8005a84:	bb44      	cbnz	r4, 8005ad8 <_malloc_r+0x88>
 8005a86:	4629      	mov	r1, r5
 8005a88:	4630      	mov	r0, r6
 8005a8a:	f7ff ffbf 	bl	8005a0c <sbrk_aligned>
 8005a8e:	1c43      	adds	r3, r0, #1
 8005a90:	4604      	mov	r4, r0
 8005a92:	d158      	bne.n	8005b46 <_malloc_r+0xf6>
 8005a94:	f8d8 4000 	ldr.w	r4, [r8]
 8005a98:	4627      	mov	r7, r4
 8005a9a:	2f00      	cmp	r7, #0
 8005a9c:	d143      	bne.n	8005b26 <_malloc_r+0xd6>
 8005a9e:	2c00      	cmp	r4, #0
 8005aa0:	d04b      	beq.n	8005b3a <_malloc_r+0xea>
 8005aa2:	6823      	ldr	r3, [r4, #0]
 8005aa4:	4639      	mov	r1, r7
 8005aa6:	4630      	mov	r0, r6
 8005aa8:	eb04 0903 	add.w	r9, r4, r3
 8005aac:	f000 ff34 	bl	8006918 <_sbrk_r>
 8005ab0:	4581      	cmp	r9, r0
 8005ab2:	d142      	bne.n	8005b3a <_malloc_r+0xea>
 8005ab4:	6821      	ldr	r1, [r4, #0]
 8005ab6:	4630      	mov	r0, r6
 8005ab8:	1a6d      	subs	r5, r5, r1
 8005aba:	4629      	mov	r1, r5
 8005abc:	f7ff ffa6 	bl	8005a0c <sbrk_aligned>
 8005ac0:	3001      	adds	r0, #1
 8005ac2:	d03a      	beq.n	8005b3a <_malloc_r+0xea>
 8005ac4:	6823      	ldr	r3, [r4, #0]
 8005ac6:	442b      	add	r3, r5
 8005ac8:	6023      	str	r3, [r4, #0]
 8005aca:	f8d8 3000 	ldr.w	r3, [r8]
 8005ace:	685a      	ldr	r2, [r3, #4]
 8005ad0:	bb62      	cbnz	r2, 8005b2c <_malloc_r+0xdc>
 8005ad2:	f8c8 7000 	str.w	r7, [r8]
 8005ad6:	e00f      	b.n	8005af8 <_malloc_r+0xa8>
 8005ad8:	6822      	ldr	r2, [r4, #0]
 8005ada:	1b52      	subs	r2, r2, r5
 8005adc:	d420      	bmi.n	8005b20 <_malloc_r+0xd0>
 8005ade:	2a0b      	cmp	r2, #11
 8005ae0:	d917      	bls.n	8005b12 <_malloc_r+0xc2>
 8005ae2:	1961      	adds	r1, r4, r5
 8005ae4:	42a3      	cmp	r3, r4
 8005ae6:	6025      	str	r5, [r4, #0]
 8005ae8:	bf18      	it	ne
 8005aea:	6059      	strne	r1, [r3, #4]
 8005aec:	6863      	ldr	r3, [r4, #4]
 8005aee:	bf08      	it	eq
 8005af0:	f8c8 1000 	streq.w	r1, [r8]
 8005af4:	5162      	str	r2, [r4, r5]
 8005af6:	604b      	str	r3, [r1, #4]
 8005af8:	4630      	mov	r0, r6
 8005afa:	f000 f841 	bl	8005b80 <__malloc_unlock>
 8005afe:	f104 000b 	add.w	r0, r4, #11
 8005b02:	1d23      	adds	r3, r4, #4
 8005b04:	f020 0007 	bic.w	r0, r0, #7
 8005b08:	1ac2      	subs	r2, r0, r3
 8005b0a:	bf1c      	itt	ne
 8005b0c:	1a1b      	subne	r3, r3, r0
 8005b0e:	50a3      	strne	r3, [r4, r2]
 8005b10:	e7af      	b.n	8005a72 <_malloc_r+0x22>
 8005b12:	6862      	ldr	r2, [r4, #4]
 8005b14:	42a3      	cmp	r3, r4
 8005b16:	bf0c      	ite	eq
 8005b18:	f8c8 2000 	streq.w	r2, [r8]
 8005b1c:	605a      	strne	r2, [r3, #4]
 8005b1e:	e7eb      	b.n	8005af8 <_malloc_r+0xa8>
 8005b20:	4623      	mov	r3, r4
 8005b22:	6864      	ldr	r4, [r4, #4]
 8005b24:	e7ae      	b.n	8005a84 <_malloc_r+0x34>
 8005b26:	463c      	mov	r4, r7
 8005b28:	687f      	ldr	r7, [r7, #4]
 8005b2a:	e7b6      	b.n	8005a9a <_malloc_r+0x4a>
 8005b2c:	461a      	mov	r2, r3
 8005b2e:	685b      	ldr	r3, [r3, #4]
 8005b30:	42a3      	cmp	r3, r4
 8005b32:	d1fb      	bne.n	8005b2c <_malloc_r+0xdc>
 8005b34:	2300      	movs	r3, #0
 8005b36:	6053      	str	r3, [r2, #4]
 8005b38:	e7de      	b.n	8005af8 <_malloc_r+0xa8>
 8005b3a:	230c      	movs	r3, #12
 8005b3c:	4630      	mov	r0, r6
 8005b3e:	6033      	str	r3, [r6, #0]
 8005b40:	f000 f81e 	bl	8005b80 <__malloc_unlock>
 8005b44:	e794      	b.n	8005a70 <_malloc_r+0x20>
 8005b46:	6005      	str	r5, [r0, #0]
 8005b48:	e7d6      	b.n	8005af8 <_malloc_r+0xa8>
 8005b4a:	bf00      	nop
 8005b4c:	2000054c 	.word	0x2000054c

08005b50 <__ascii_mbtowc>:
 8005b50:	b082      	sub	sp, #8
 8005b52:	b901      	cbnz	r1, 8005b56 <__ascii_mbtowc+0x6>
 8005b54:	a901      	add	r1, sp, #4
 8005b56:	b142      	cbz	r2, 8005b6a <__ascii_mbtowc+0x1a>
 8005b58:	b14b      	cbz	r3, 8005b6e <__ascii_mbtowc+0x1e>
 8005b5a:	7813      	ldrb	r3, [r2, #0]
 8005b5c:	600b      	str	r3, [r1, #0]
 8005b5e:	7812      	ldrb	r2, [r2, #0]
 8005b60:	1e10      	subs	r0, r2, #0
 8005b62:	bf18      	it	ne
 8005b64:	2001      	movne	r0, #1
 8005b66:	b002      	add	sp, #8
 8005b68:	4770      	bx	lr
 8005b6a:	4610      	mov	r0, r2
 8005b6c:	e7fb      	b.n	8005b66 <__ascii_mbtowc+0x16>
 8005b6e:	f06f 0001 	mvn.w	r0, #1
 8005b72:	e7f8      	b.n	8005b66 <__ascii_mbtowc+0x16>

08005b74 <__malloc_lock>:
 8005b74:	4801      	ldr	r0, [pc, #4]	@ (8005b7c <__malloc_lock+0x8>)
 8005b76:	f7fe bd3e 	b.w	80045f6 <__retarget_lock_acquire_recursive>
 8005b7a:	bf00      	nop
 8005b7c:	20000544 	.word	0x20000544

08005b80 <__malloc_unlock>:
 8005b80:	4801      	ldr	r0, [pc, #4]	@ (8005b88 <__malloc_unlock+0x8>)
 8005b82:	f7fe bd39 	b.w	80045f8 <__retarget_lock_release_recursive>
 8005b86:	bf00      	nop
 8005b88:	20000544 	.word	0x20000544

08005b8c <_Balloc>:
 8005b8c:	b570      	push	{r4, r5, r6, lr}
 8005b8e:	69c6      	ldr	r6, [r0, #28]
 8005b90:	4604      	mov	r4, r0
 8005b92:	460d      	mov	r5, r1
 8005b94:	b976      	cbnz	r6, 8005bb4 <_Balloc+0x28>
 8005b96:	2010      	movs	r0, #16
 8005b98:	f7ff ff30 	bl	80059fc <malloc>
 8005b9c:	4602      	mov	r2, r0
 8005b9e:	61e0      	str	r0, [r4, #28]
 8005ba0:	b920      	cbnz	r0, 8005bac <_Balloc+0x20>
 8005ba2:	216b      	movs	r1, #107	@ 0x6b
 8005ba4:	4b17      	ldr	r3, [pc, #92]	@ (8005c04 <_Balloc+0x78>)
 8005ba6:	4818      	ldr	r0, [pc, #96]	@ (8005c08 <_Balloc+0x7c>)
 8005ba8:	f000 fec6 	bl	8006938 <__assert_func>
 8005bac:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8005bb0:	6006      	str	r6, [r0, #0]
 8005bb2:	60c6      	str	r6, [r0, #12]
 8005bb4:	69e6      	ldr	r6, [r4, #28]
 8005bb6:	68f3      	ldr	r3, [r6, #12]
 8005bb8:	b183      	cbz	r3, 8005bdc <_Balloc+0x50>
 8005bba:	69e3      	ldr	r3, [r4, #28]
 8005bbc:	68db      	ldr	r3, [r3, #12]
 8005bbe:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8005bc2:	b9b8      	cbnz	r0, 8005bf4 <_Balloc+0x68>
 8005bc4:	2101      	movs	r1, #1
 8005bc6:	fa01 f605 	lsl.w	r6, r1, r5
 8005bca:	1d72      	adds	r2, r6, #5
 8005bcc:	4620      	mov	r0, r4
 8005bce:	0092      	lsls	r2, r2, #2
 8005bd0:	f000 fed0 	bl	8006974 <_calloc_r>
 8005bd4:	b160      	cbz	r0, 8005bf0 <_Balloc+0x64>
 8005bd6:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8005bda:	e00e      	b.n	8005bfa <_Balloc+0x6e>
 8005bdc:	2221      	movs	r2, #33	@ 0x21
 8005bde:	2104      	movs	r1, #4
 8005be0:	4620      	mov	r0, r4
 8005be2:	f000 fec7 	bl	8006974 <_calloc_r>
 8005be6:	69e3      	ldr	r3, [r4, #28]
 8005be8:	60f0      	str	r0, [r6, #12]
 8005bea:	68db      	ldr	r3, [r3, #12]
 8005bec:	2b00      	cmp	r3, #0
 8005bee:	d1e4      	bne.n	8005bba <_Balloc+0x2e>
 8005bf0:	2000      	movs	r0, #0
 8005bf2:	bd70      	pop	{r4, r5, r6, pc}
 8005bf4:	6802      	ldr	r2, [r0, #0]
 8005bf6:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8005bfa:	2300      	movs	r3, #0
 8005bfc:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8005c00:	e7f7      	b.n	8005bf2 <_Balloc+0x66>
 8005c02:	bf00      	nop
 8005c04:	080072a3 	.word	0x080072a3
 8005c08:	08007383 	.word	0x08007383

08005c0c <_Bfree>:
 8005c0c:	b570      	push	{r4, r5, r6, lr}
 8005c0e:	69c6      	ldr	r6, [r0, #28]
 8005c10:	4605      	mov	r5, r0
 8005c12:	460c      	mov	r4, r1
 8005c14:	b976      	cbnz	r6, 8005c34 <_Bfree+0x28>
 8005c16:	2010      	movs	r0, #16
 8005c18:	f7ff fef0 	bl	80059fc <malloc>
 8005c1c:	4602      	mov	r2, r0
 8005c1e:	61e8      	str	r0, [r5, #28]
 8005c20:	b920      	cbnz	r0, 8005c2c <_Bfree+0x20>
 8005c22:	218f      	movs	r1, #143	@ 0x8f
 8005c24:	4b08      	ldr	r3, [pc, #32]	@ (8005c48 <_Bfree+0x3c>)
 8005c26:	4809      	ldr	r0, [pc, #36]	@ (8005c4c <_Bfree+0x40>)
 8005c28:	f000 fe86 	bl	8006938 <__assert_func>
 8005c2c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8005c30:	6006      	str	r6, [r0, #0]
 8005c32:	60c6      	str	r6, [r0, #12]
 8005c34:	b13c      	cbz	r4, 8005c46 <_Bfree+0x3a>
 8005c36:	69eb      	ldr	r3, [r5, #28]
 8005c38:	6862      	ldr	r2, [r4, #4]
 8005c3a:	68db      	ldr	r3, [r3, #12]
 8005c3c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8005c40:	6021      	str	r1, [r4, #0]
 8005c42:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8005c46:	bd70      	pop	{r4, r5, r6, pc}
 8005c48:	080072a3 	.word	0x080072a3
 8005c4c:	08007383 	.word	0x08007383

08005c50 <__multadd>:
 8005c50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005c54:	4607      	mov	r7, r0
 8005c56:	460c      	mov	r4, r1
 8005c58:	461e      	mov	r6, r3
 8005c5a:	2000      	movs	r0, #0
 8005c5c:	690d      	ldr	r5, [r1, #16]
 8005c5e:	f101 0c14 	add.w	ip, r1, #20
 8005c62:	f8dc 3000 	ldr.w	r3, [ip]
 8005c66:	3001      	adds	r0, #1
 8005c68:	b299      	uxth	r1, r3
 8005c6a:	fb02 6101 	mla	r1, r2, r1, r6
 8005c6e:	0c1e      	lsrs	r6, r3, #16
 8005c70:	0c0b      	lsrs	r3, r1, #16
 8005c72:	fb02 3306 	mla	r3, r2, r6, r3
 8005c76:	b289      	uxth	r1, r1
 8005c78:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8005c7c:	4285      	cmp	r5, r0
 8005c7e:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8005c82:	f84c 1b04 	str.w	r1, [ip], #4
 8005c86:	dcec      	bgt.n	8005c62 <__multadd+0x12>
 8005c88:	b30e      	cbz	r6, 8005cce <__multadd+0x7e>
 8005c8a:	68a3      	ldr	r3, [r4, #8]
 8005c8c:	42ab      	cmp	r3, r5
 8005c8e:	dc19      	bgt.n	8005cc4 <__multadd+0x74>
 8005c90:	6861      	ldr	r1, [r4, #4]
 8005c92:	4638      	mov	r0, r7
 8005c94:	3101      	adds	r1, #1
 8005c96:	f7ff ff79 	bl	8005b8c <_Balloc>
 8005c9a:	4680      	mov	r8, r0
 8005c9c:	b928      	cbnz	r0, 8005caa <__multadd+0x5a>
 8005c9e:	4602      	mov	r2, r0
 8005ca0:	21ba      	movs	r1, #186	@ 0xba
 8005ca2:	4b0c      	ldr	r3, [pc, #48]	@ (8005cd4 <__multadd+0x84>)
 8005ca4:	480c      	ldr	r0, [pc, #48]	@ (8005cd8 <__multadd+0x88>)
 8005ca6:	f000 fe47 	bl	8006938 <__assert_func>
 8005caa:	6922      	ldr	r2, [r4, #16]
 8005cac:	f104 010c 	add.w	r1, r4, #12
 8005cb0:	3202      	adds	r2, #2
 8005cb2:	0092      	lsls	r2, r2, #2
 8005cb4:	300c      	adds	r0, #12
 8005cb6:	f7fe fcae 	bl	8004616 <memcpy>
 8005cba:	4621      	mov	r1, r4
 8005cbc:	4638      	mov	r0, r7
 8005cbe:	f7ff ffa5 	bl	8005c0c <_Bfree>
 8005cc2:	4644      	mov	r4, r8
 8005cc4:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8005cc8:	3501      	adds	r5, #1
 8005cca:	615e      	str	r6, [r3, #20]
 8005ccc:	6125      	str	r5, [r4, #16]
 8005cce:	4620      	mov	r0, r4
 8005cd0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005cd4:	08007312 	.word	0x08007312
 8005cd8:	08007383 	.word	0x08007383

08005cdc <__s2b>:
 8005cdc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005ce0:	4615      	mov	r5, r2
 8005ce2:	2209      	movs	r2, #9
 8005ce4:	461f      	mov	r7, r3
 8005ce6:	3308      	adds	r3, #8
 8005ce8:	460c      	mov	r4, r1
 8005cea:	fb93 f3f2 	sdiv	r3, r3, r2
 8005cee:	4606      	mov	r6, r0
 8005cf0:	2201      	movs	r2, #1
 8005cf2:	2100      	movs	r1, #0
 8005cf4:	429a      	cmp	r2, r3
 8005cf6:	db09      	blt.n	8005d0c <__s2b+0x30>
 8005cf8:	4630      	mov	r0, r6
 8005cfa:	f7ff ff47 	bl	8005b8c <_Balloc>
 8005cfe:	b940      	cbnz	r0, 8005d12 <__s2b+0x36>
 8005d00:	4602      	mov	r2, r0
 8005d02:	21d3      	movs	r1, #211	@ 0xd3
 8005d04:	4b18      	ldr	r3, [pc, #96]	@ (8005d68 <__s2b+0x8c>)
 8005d06:	4819      	ldr	r0, [pc, #100]	@ (8005d6c <__s2b+0x90>)
 8005d08:	f000 fe16 	bl	8006938 <__assert_func>
 8005d0c:	0052      	lsls	r2, r2, #1
 8005d0e:	3101      	adds	r1, #1
 8005d10:	e7f0      	b.n	8005cf4 <__s2b+0x18>
 8005d12:	9b08      	ldr	r3, [sp, #32]
 8005d14:	2d09      	cmp	r5, #9
 8005d16:	6143      	str	r3, [r0, #20]
 8005d18:	f04f 0301 	mov.w	r3, #1
 8005d1c:	6103      	str	r3, [r0, #16]
 8005d1e:	dd16      	ble.n	8005d4e <__s2b+0x72>
 8005d20:	f104 0909 	add.w	r9, r4, #9
 8005d24:	46c8      	mov	r8, r9
 8005d26:	442c      	add	r4, r5
 8005d28:	f818 3b01 	ldrb.w	r3, [r8], #1
 8005d2c:	4601      	mov	r1, r0
 8005d2e:	220a      	movs	r2, #10
 8005d30:	4630      	mov	r0, r6
 8005d32:	3b30      	subs	r3, #48	@ 0x30
 8005d34:	f7ff ff8c 	bl	8005c50 <__multadd>
 8005d38:	45a0      	cmp	r8, r4
 8005d3a:	d1f5      	bne.n	8005d28 <__s2b+0x4c>
 8005d3c:	f1a5 0408 	sub.w	r4, r5, #8
 8005d40:	444c      	add	r4, r9
 8005d42:	1b2d      	subs	r5, r5, r4
 8005d44:	1963      	adds	r3, r4, r5
 8005d46:	42bb      	cmp	r3, r7
 8005d48:	db04      	blt.n	8005d54 <__s2b+0x78>
 8005d4a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005d4e:	2509      	movs	r5, #9
 8005d50:	340a      	adds	r4, #10
 8005d52:	e7f6      	b.n	8005d42 <__s2b+0x66>
 8005d54:	f814 3b01 	ldrb.w	r3, [r4], #1
 8005d58:	4601      	mov	r1, r0
 8005d5a:	220a      	movs	r2, #10
 8005d5c:	4630      	mov	r0, r6
 8005d5e:	3b30      	subs	r3, #48	@ 0x30
 8005d60:	f7ff ff76 	bl	8005c50 <__multadd>
 8005d64:	e7ee      	b.n	8005d44 <__s2b+0x68>
 8005d66:	bf00      	nop
 8005d68:	08007312 	.word	0x08007312
 8005d6c:	08007383 	.word	0x08007383

08005d70 <__hi0bits>:
 8005d70:	4603      	mov	r3, r0
 8005d72:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8005d76:	bf3a      	itte	cc
 8005d78:	0403      	lslcc	r3, r0, #16
 8005d7a:	2010      	movcc	r0, #16
 8005d7c:	2000      	movcs	r0, #0
 8005d7e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8005d82:	bf3c      	itt	cc
 8005d84:	021b      	lslcc	r3, r3, #8
 8005d86:	3008      	addcc	r0, #8
 8005d88:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8005d8c:	bf3c      	itt	cc
 8005d8e:	011b      	lslcc	r3, r3, #4
 8005d90:	3004      	addcc	r0, #4
 8005d92:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005d96:	bf3c      	itt	cc
 8005d98:	009b      	lslcc	r3, r3, #2
 8005d9a:	3002      	addcc	r0, #2
 8005d9c:	2b00      	cmp	r3, #0
 8005d9e:	db05      	blt.n	8005dac <__hi0bits+0x3c>
 8005da0:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8005da4:	f100 0001 	add.w	r0, r0, #1
 8005da8:	bf08      	it	eq
 8005daa:	2020      	moveq	r0, #32
 8005dac:	4770      	bx	lr

08005dae <__lo0bits>:
 8005dae:	6803      	ldr	r3, [r0, #0]
 8005db0:	4602      	mov	r2, r0
 8005db2:	f013 0007 	ands.w	r0, r3, #7
 8005db6:	d00b      	beq.n	8005dd0 <__lo0bits+0x22>
 8005db8:	07d9      	lsls	r1, r3, #31
 8005dba:	d421      	bmi.n	8005e00 <__lo0bits+0x52>
 8005dbc:	0798      	lsls	r0, r3, #30
 8005dbe:	bf49      	itett	mi
 8005dc0:	085b      	lsrmi	r3, r3, #1
 8005dc2:	089b      	lsrpl	r3, r3, #2
 8005dc4:	2001      	movmi	r0, #1
 8005dc6:	6013      	strmi	r3, [r2, #0]
 8005dc8:	bf5c      	itt	pl
 8005dca:	2002      	movpl	r0, #2
 8005dcc:	6013      	strpl	r3, [r2, #0]
 8005dce:	4770      	bx	lr
 8005dd0:	b299      	uxth	r1, r3
 8005dd2:	b909      	cbnz	r1, 8005dd8 <__lo0bits+0x2a>
 8005dd4:	2010      	movs	r0, #16
 8005dd6:	0c1b      	lsrs	r3, r3, #16
 8005dd8:	b2d9      	uxtb	r1, r3
 8005dda:	b909      	cbnz	r1, 8005de0 <__lo0bits+0x32>
 8005ddc:	3008      	adds	r0, #8
 8005dde:	0a1b      	lsrs	r3, r3, #8
 8005de0:	0719      	lsls	r1, r3, #28
 8005de2:	bf04      	itt	eq
 8005de4:	091b      	lsreq	r3, r3, #4
 8005de6:	3004      	addeq	r0, #4
 8005de8:	0799      	lsls	r1, r3, #30
 8005dea:	bf04      	itt	eq
 8005dec:	089b      	lsreq	r3, r3, #2
 8005dee:	3002      	addeq	r0, #2
 8005df0:	07d9      	lsls	r1, r3, #31
 8005df2:	d403      	bmi.n	8005dfc <__lo0bits+0x4e>
 8005df4:	085b      	lsrs	r3, r3, #1
 8005df6:	f100 0001 	add.w	r0, r0, #1
 8005dfa:	d003      	beq.n	8005e04 <__lo0bits+0x56>
 8005dfc:	6013      	str	r3, [r2, #0]
 8005dfe:	4770      	bx	lr
 8005e00:	2000      	movs	r0, #0
 8005e02:	4770      	bx	lr
 8005e04:	2020      	movs	r0, #32
 8005e06:	4770      	bx	lr

08005e08 <__i2b>:
 8005e08:	b510      	push	{r4, lr}
 8005e0a:	460c      	mov	r4, r1
 8005e0c:	2101      	movs	r1, #1
 8005e0e:	f7ff febd 	bl	8005b8c <_Balloc>
 8005e12:	4602      	mov	r2, r0
 8005e14:	b928      	cbnz	r0, 8005e22 <__i2b+0x1a>
 8005e16:	f240 1145 	movw	r1, #325	@ 0x145
 8005e1a:	4b04      	ldr	r3, [pc, #16]	@ (8005e2c <__i2b+0x24>)
 8005e1c:	4804      	ldr	r0, [pc, #16]	@ (8005e30 <__i2b+0x28>)
 8005e1e:	f000 fd8b 	bl	8006938 <__assert_func>
 8005e22:	2301      	movs	r3, #1
 8005e24:	6144      	str	r4, [r0, #20]
 8005e26:	6103      	str	r3, [r0, #16]
 8005e28:	bd10      	pop	{r4, pc}
 8005e2a:	bf00      	nop
 8005e2c:	08007312 	.word	0x08007312
 8005e30:	08007383 	.word	0x08007383

08005e34 <__multiply>:
 8005e34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005e38:	4617      	mov	r7, r2
 8005e3a:	690a      	ldr	r2, [r1, #16]
 8005e3c:	693b      	ldr	r3, [r7, #16]
 8005e3e:	4689      	mov	r9, r1
 8005e40:	429a      	cmp	r2, r3
 8005e42:	bfa2      	ittt	ge
 8005e44:	463b      	movge	r3, r7
 8005e46:	460f      	movge	r7, r1
 8005e48:	4699      	movge	r9, r3
 8005e4a:	693d      	ldr	r5, [r7, #16]
 8005e4c:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8005e50:	68bb      	ldr	r3, [r7, #8]
 8005e52:	6879      	ldr	r1, [r7, #4]
 8005e54:	eb05 060a 	add.w	r6, r5, sl
 8005e58:	42b3      	cmp	r3, r6
 8005e5a:	b085      	sub	sp, #20
 8005e5c:	bfb8      	it	lt
 8005e5e:	3101      	addlt	r1, #1
 8005e60:	f7ff fe94 	bl	8005b8c <_Balloc>
 8005e64:	b930      	cbnz	r0, 8005e74 <__multiply+0x40>
 8005e66:	4602      	mov	r2, r0
 8005e68:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8005e6c:	4b40      	ldr	r3, [pc, #256]	@ (8005f70 <__multiply+0x13c>)
 8005e6e:	4841      	ldr	r0, [pc, #260]	@ (8005f74 <__multiply+0x140>)
 8005e70:	f000 fd62 	bl	8006938 <__assert_func>
 8005e74:	f100 0414 	add.w	r4, r0, #20
 8005e78:	4623      	mov	r3, r4
 8005e7a:	2200      	movs	r2, #0
 8005e7c:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 8005e80:	4573      	cmp	r3, lr
 8005e82:	d320      	bcc.n	8005ec6 <__multiply+0x92>
 8005e84:	f107 0814 	add.w	r8, r7, #20
 8005e88:	f109 0114 	add.w	r1, r9, #20
 8005e8c:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 8005e90:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 8005e94:	9302      	str	r3, [sp, #8]
 8005e96:	1beb      	subs	r3, r5, r7
 8005e98:	3b15      	subs	r3, #21
 8005e9a:	f023 0303 	bic.w	r3, r3, #3
 8005e9e:	3304      	adds	r3, #4
 8005ea0:	3715      	adds	r7, #21
 8005ea2:	42bd      	cmp	r5, r7
 8005ea4:	bf38      	it	cc
 8005ea6:	2304      	movcc	r3, #4
 8005ea8:	9301      	str	r3, [sp, #4]
 8005eaa:	9b02      	ldr	r3, [sp, #8]
 8005eac:	9103      	str	r1, [sp, #12]
 8005eae:	428b      	cmp	r3, r1
 8005eb0:	d80c      	bhi.n	8005ecc <__multiply+0x98>
 8005eb2:	2e00      	cmp	r6, #0
 8005eb4:	dd03      	ble.n	8005ebe <__multiply+0x8a>
 8005eb6:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8005eba:	2b00      	cmp	r3, #0
 8005ebc:	d055      	beq.n	8005f6a <__multiply+0x136>
 8005ebe:	6106      	str	r6, [r0, #16]
 8005ec0:	b005      	add	sp, #20
 8005ec2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005ec6:	f843 2b04 	str.w	r2, [r3], #4
 8005eca:	e7d9      	b.n	8005e80 <__multiply+0x4c>
 8005ecc:	f8b1 a000 	ldrh.w	sl, [r1]
 8005ed0:	f1ba 0f00 	cmp.w	sl, #0
 8005ed4:	d01f      	beq.n	8005f16 <__multiply+0xe2>
 8005ed6:	46c4      	mov	ip, r8
 8005ed8:	46a1      	mov	r9, r4
 8005eda:	2700      	movs	r7, #0
 8005edc:	f85c 2b04 	ldr.w	r2, [ip], #4
 8005ee0:	f8d9 3000 	ldr.w	r3, [r9]
 8005ee4:	fa1f fb82 	uxth.w	fp, r2
 8005ee8:	b29b      	uxth	r3, r3
 8005eea:	fb0a 330b 	mla	r3, sl, fp, r3
 8005eee:	443b      	add	r3, r7
 8005ef0:	f8d9 7000 	ldr.w	r7, [r9]
 8005ef4:	0c12      	lsrs	r2, r2, #16
 8005ef6:	0c3f      	lsrs	r7, r7, #16
 8005ef8:	fb0a 7202 	mla	r2, sl, r2, r7
 8005efc:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 8005f00:	b29b      	uxth	r3, r3
 8005f02:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005f06:	4565      	cmp	r5, ip
 8005f08:	ea4f 4712 	mov.w	r7, r2, lsr #16
 8005f0c:	f849 3b04 	str.w	r3, [r9], #4
 8005f10:	d8e4      	bhi.n	8005edc <__multiply+0xa8>
 8005f12:	9b01      	ldr	r3, [sp, #4]
 8005f14:	50e7      	str	r7, [r4, r3]
 8005f16:	9b03      	ldr	r3, [sp, #12]
 8005f18:	3104      	adds	r1, #4
 8005f1a:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8005f1e:	f1b9 0f00 	cmp.w	r9, #0
 8005f22:	d020      	beq.n	8005f66 <__multiply+0x132>
 8005f24:	4647      	mov	r7, r8
 8005f26:	46a4      	mov	ip, r4
 8005f28:	f04f 0a00 	mov.w	sl, #0
 8005f2c:	6823      	ldr	r3, [r4, #0]
 8005f2e:	f8b7 b000 	ldrh.w	fp, [r7]
 8005f32:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 8005f36:	b29b      	uxth	r3, r3
 8005f38:	fb09 220b 	mla	r2, r9, fp, r2
 8005f3c:	4452      	add	r2, sl
 8005f3e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005f42:	f84c 3b04 	str.w	r3, [ip], #4
 8005f46:	f857 3b04 	ldr.w	r3, [r7], #4
 8005f4a:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8005f4e:	f8bc 3000 	ldrh.w	r3, [ip]
 8005f52:	42bd      	cmp	r5, r7
 8005f54:	fb09 330a 	mla	r3, r9, sl, r3
 8005f58:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 8005f5c:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8005f60:	d8e5      	bhi.n	8005f2e <__multiply+0xfa>
 8005f62:	9a01      	ldr	r2, [sp, #4]
 8005f64:	50a3      	str	r3, [r4, r2]
 8005f66:	3404      	adds	r4, #4
 8005f68:	e79f      	b.n	8005eaa <__multiply+0x76>
 8005f6a:	3e01      	subs	r6, #1
 8005f6c:	e7a1      	b.n	8005eb2 <__multiply+0x7e>
 8005f6e:	bf00      	nop
 8005f70:	08007312 	.word	0x08007312
 8005f74:	08007383 	.word	0x08007383

08005f78 <__pow5mult>:
 8005f78:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005f7c:	4615      	mov	r5, r2
 8005f7e:	f012 0203 	ands.w	r2, r2, #3
 8005f82:	4607      	mov	r7, r0
 8005f84:	460e      	mov	r6, r1
 8005f86:	d007      	beq.n	8005f98 <__pow5mult+0x20>
 8005f88:	4c25      	ldr	r4, [pc, #148]	@ (8006020 <__pow5mult+0xa8>)
 8005f8a:	3a01      	subs	r2, #1
 8005f8c:	2300      	movs	r3, #0
 8005f8e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8005f92:	f7ff fe5d 	bl	8005c50 <__multadd>
 8005f96:	4606      	mov	r6, r0
 8005f98:	10ad      	asrs	r5, r5, #2
 8005f9a:	d03d      	beq.n	8006018 <__pow5mult+0xa0>
 8005f9c:	69fc      	ldr	r4, [r7, #28]
 8005f9e:	b97c      	cbnz	r4, 8005fc0 <__pow5mult+0x48>
 8005fa0:	2010      	movs	r0, #16
 8005fa2:	f7ff fd2b 	bl	80059fc <malloc>
 8005fa6:	4602      	mov	r2, r0
 8005fa8:	61f8      	str	r0, [r7, #28]
 8005faa:	b928      	cbnz	r0, 8005fb8 <__pow5mult+0x40>
 8005fac:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8005fb0:	4b1c      	ldr	r3, [pc, #112]	@ (8006024 <__pow5mult+0xac>)
 8005fb2:	481d      	ldr	r0, [pc, #116]	@ (8006028 <__pow5mult+0xb0>)
 8005fb4:	f000 fcc0 	bl	8006938 <__assert_func>
 8005fb8:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8005fbc:	6004      	str	r4, [r0, #0]
 8005fbe:	60c4      	str	r4, [r0, #12]
 8005fc0:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8005fc4:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8005fc8:	b94c      	cbnz	r4, 8005fde <__pow5mult+0x66>
 8005fca:	f240 2171 	movw	r1, #625	@ 0x271
 8005fce:	4638      	mov	r0, r7
 8005fd0:	f7ff ff1a 	bl	8005e08 <__i2b>
 8005fd4:	2300      	movs	r3, #0
 8005fd6:	4604      	mov	r4, r0
 8005fd8:	f8c8 0008 	str.w	r0, [r8, #8]
 8005fdc:	6003      	str	r3, [r0, #0]
 8005fde:	f04f 0900 	mov.w	r9, #0
 8005fe2:	07eb      	lsls	r3, r5, #31
 8005fe4:	d50a      	bpl.n	8005ffc <__pow5mult+0x84>
 8005fe6:	4631      	mov	r1, r6
 8005fe8:	4622      	mov	r2, r4
 8005fea:	4638      	mov	r0, r7
 8005fec:	f7ff ff22 	bl	8005e34 <__multiply>
 8005ff0:	4680      	mov	r8, r0
 8005ff2:	4631      	mov	r1, r6
 8005ff4:	4638      	mov	r0, r7
 8005ff6:	f7ff fe09 	bl	8005c0c <_Bfree>
 8005ffa:	4646      	mov	r6, r8
 8005ffc:	106d      	asrs	r5, r5, #1
 8005ffe:	d00b      	beq.n	8006018 <__pow5mult+0xa0>
 8006000:	6820      	ldr	r0, [r4, #0]
 8006002:	b938      	cbnz	r0, 8006014 <__pow5mult+0x9c>
 8006004:	4622      	mov	r2, r4
 8006006:	4621      	mov	r1, r4
 8006008:	4638      	mov	r0, r7
 800600a:	f7ff ff13 	bl	8005e34 <__multiply>
 800600e:	6020      	str	r0, [r4, #0]
 8006010:	f8c0 9000 	str.w	r9, [r0]
 8006014:	4604      	mov	r4, r0
 8006016:	e7e4      	b.n	8005fe2 <__pow5mult+0x6a>
 8006018:	4630      	mov	r0, r6
 800601a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800601e:	bf00      	nop
 8006020:	08007584 	.word	0x08007584
 8006024:	080072a3 	.word	0x080072a3
 8006028:	08007383 	.word	0x08007383

0800602c <__lshift>:
 800602c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006030:	460c      	mov	r4, r1
 8006032:	4607      	mov	r7, r0
 8006034:	4691      	mov	r9, r2
 8006036:	6923      	ldr	r3, [r4, #16]
 8006038:	6849      	ldr	r1, [r1, #4]
 800603a:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800603e:	68a3      	ldr	r3, [r4, #8]
 8006040:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8006044:	f108 0601 	add.w	r6, r8, #1
 8006048:	42b3      	cmp	r3, r6
 800604a:	db0b      	blt.n	8006064 <__lshift+0x38>
 800604c:	4638      	mov	r0, r7
 800604e:	f7ff fd9d 	bl	8005b8c <_Balloc>
 8006052:	4605      	mov	r5, r0
 8006054:	b948      	cbnz	r0, 800606a <__lshift+0x3e>
 8006056:	4602      	mov	r2, r0
 8006058:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 800605c:	4b27      	ldr	r3, [pc, #156]	@ (80060fc <__lshift+0xd0>)
 800605e:	4828      	ldr	r0, [pc, #160]	@ (8006100 <__lshift+0xd4>)
 8006060:	f000 fc6a 	bl	8006938 <__assert_func>
 8006064:	3101      	adds	r1, #1
 8006066:	005b      	lsls	r3, r3, #1
 8006068:	e7ee      	b.n	8006048 <__lshift+0x1c>
 800606a:	2300      	movs	r3, #0
 800606c:	f100 0114 	add.w	r1, r0, #20
 8006070:	f100 0210 	add.w	r2, r0, #16
 8006074:	4618      	mov	r0, r3
 8006076:	4553      	cmp	r3, sl
 8006078:	db33      	blt.n	80060e2 <__lshift+0xb6>
 800607a:	6920      	ldr	r0, [r4, #16]
 800607c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8006080:	f104 0314 	add.w	r3, r4, #20
 8006084:	f019 091f 	ands.w	r9, r9, #31
 8006088:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800608c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8006090:	d02b      	beq.n	80060ea <__lshift+0xbe>
 8006092:	468a      	mov	sl, r1
 8006094:	2200      	movs	r2, #0
 8006096:	f1c9 0e20 	rsb	lr, r9, #32
 800609a:	6818      	ldr	r0, [r3, #0]
 800609c:	fa00 f009 	lsl.w	r0, r0, r9
 80060a0:	4310      	orrs	r0, r2
 80060a2:	f84a 0b04 	str.w	r0, [sl], #4
 80060a6:	f853 2b04 	ldr.w	r2, [r3], #4
 80060aa:	459c      	cmp	ip, r3
 80060ac:	fa22 f20e 	lsr.w	r2, r2, lr
 80060b0:	d8f3      	bhi.n	800609a <__lshift+0x6e>
 80060b2:	ebac 0304 	sub.w	r3, ip, r4
 80060b6:	3b15      	subs	r3, #21
 80060b8:	f023 0303 	bic.w	r3, r3, #3
 80060bc:	3304      	adds	r3, #4
 80060be:	f104 0015 	add.w	r0, r4, #21
 80060c2:	4560      	cmp	r0, ip
 80060c4:	bf88      	it	hi
 80060c6:	2304      	movhi	r3, #4
 80060c8:	50ca      	str	r2, [r1, r3]
 80060ca:	b10a      	cbz	r2, 80060d0 <__lshift+0xa4>
 80060cc:	f108 0602 	add.w	r6, r8, #2
 80060d0:	3e01      	subs	r6, #1
 80060d2:	4638      	mov	r0, r7
 80060d4:	4621      	mov	r1, r4
 80060d6:	612e      	str	r6, [r5, #16]
 80060d8:	f7ff fd98 	bl	8005c0c <_Bfree>
 80060dc:	4628      	mov	r0, r5
 80060de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80060e2:	f842 0f04 	str.w	r0, [r2, #4]!
 80060e6:	3301      	adds	r3, #1
 80060e8:	e7c5      	b.n	8006076 <__lshift+0x4a>
 80060ea:	3904      	subs	r1, #4
 80060ec:	f853 2b04 	ldr.w	r2, [r3], #4
 80060f0:	459c      	cmp	ip, r3
 80060f2:	f841 2f04 	str.w	r2, [r1, #4]!
 80060f6:	d8f9      	bhi.n	80060ec <__lshift+0xc0>
 80060f8:	e7ea      	b.n	80060d0 <__lshift+0xa4>
 80060fa:	bf00      	nop
 80060fc:	08007312 	.word	0x08007312
 8006100:	08007383 	.word	0x08007383

08006104 <__mcmp>:
 8006104:	4603      	mov	r3, r0
 8006106:	690a      	ldr	r2, [r1, #16]
 8006108:	6900      	ldr	r0, [r0, #16]
 800610a:	b530      	push	{r4, r5, lr}
 800610c:	1a80      	subs	r0, r0, r2
 800610e:	d10e      	bne.n	800612e <__mcmp+0x2a>
 8006110:	3314      	adds	r3, #20
 8006112:	3114      	adds	r1, #20
 8006114:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8006118:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800611c:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8006120:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8006124:	4295      	cmp	r5, r2
 8006126:	d003      	beq.n	8006130 <__mcmp+0x2c>
 8006128:	d205      	bcs.n	8006136 <__mcmp+0x32>
 800612a:	f04f 30ff 	mov.w	r0, #4294967295
 800612e:	bd30      	pop	{r4, r5, pc}
 8006130:	42a3      	cmp	r3, r4
 8006132:	d3f3      	bcc.n	800611c <__mcmp+0x18>
 8006134:	e7fb      	b.n	800612e <__mcmp+0x2a>
 8006136:	2001      	movs	r0, #1
 8006138:	e7f9      	b.n	800612e <__mcmp+0x2a>
	...

0800613c <__mdiff>:
 800613c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006140:	4689      	mov	r9, r1
 8006142:	4606      	mov	r6, r0
 8006144:	4611      	mov	r1, r2
 8006146:	4648      	mov	r0, r9
 8006148:	4614      	mov	r4, r2
 800614a:	f7ff ffdb 	bl	8006104 <__mcmp>
 800614e:	1e05      	subs	r5, r0, #0
 8006150:	d112      	bne.n	8006178 <__mdiff+0x3c>
 8006152:	4629      	mov	r1, r5
 8006154:	4630      	mov	r0, r6
 8006156:	f7ff fd19 	bl	8005b8c <_Balloc>
 800615a:	4602      	mov	r2, r0
 800615c:	b928      	cbnz	r0, 800616a <__mdiff+0x2e>
 800615e:	f240 2137 	movw	r1, #567	@ 0x237
 8006162:	4b3e      	ldr	r3, [pc, #248]	@ (800625c <__mdiff+0x120>)
 8006164:	483e      	ldr	r0, [pc, #248]	@ (8006260 <__mdiff+0x124>)
 8006166:	f000 fbe7 	bl	8006938 <__assert_func>
 800616a:	2301      	movs	r3, #1
 800616c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8006170:	4610      	mov	r0, r2
 8006172:	b003      	add	sp, #12
 8006174:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006178:	bfbc      	itt	lt
 800617a:	464b      	movlt	r3, r9
 800617c:	46a1      	movlt	r9, r4
 800617e:	4630      	mov	r0, r6
 8006180:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8006184:	bfba      	itte	lt
 8006186:	461c      	movlt	r4, r3
 8006188:	2501      	movlt	r5, #1
 800618a:	2500      	movge	r5, #0
 800618c:	f7ff fcfe 	bl	8005b8c <_Balloc>
 8006190:	4602      	mov	r2, r0
 8006192:	b918      	cbnz	r0, 800619c <__mdiff+0x60>
 8006194:	f240 2145 	movw	r1, #581	@ 0x245
 8006198:	4b30      	ldr	r3, [pc, #192]	@ (800625c <__mdiff+0x120>)
 800619a:	e7e3      	b.n	8006164 <__mdiff+0x28>
 800619c:	f100 0b14 	add.w	fp, r0, #20
 80061a0:	f8d9 7010 	ldr.w	r7, [r9, #16]
 80061a4:	f109 0310 	add.w	r3, r9, #16
 80061a8:	60c5      	str	r5, [r0, #12]
 80061aa:	f04f 0c00 	mov.w	ip, #0
 80061ae:	f109 0514 	add.w	r5, r9, #20
 80061b2:	46d9      	mov	r9, fp
 80061b4:	6926      	ldr	r6, [r4, #16]
 80061b6:	f104 0e14 	add.w	lr, r4, #20
 80061ba:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 80061be:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 80061c2:	9301      	str	r3, [sp, #4]
 80061c4:	9b01      	ldr	r3, [sp, #4]
 80061c6:	f85e 0b04 	ldr.w	r0, [lr], #4
 80061ca:	f853 af04 	ldr.w	sl, [r3, #4]!
 80061ce:	b281      	uxth	r1, r0
 80061d0:	9301      	str	r3, [sp, #4]
 80061d2:	fa1f f38a 	uxth.w	r3, sl
 80061d6:	1a5b      	subs	r3, r3, r1
 80061d8:	0c00      	lsrs	r0, r0, #16
 80061da:	4463      	add	r3, ip
 80061dc:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 80061e0:	eb00 4023 	add.w	r0, r0, r3, asr #16
 80061e4:	b29b      	uxth	r3, r3
 80061e6:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 80061ea:	4576      	cmp	r6, lr
 80061ec:	ea4f 4c20 	mov.w	ip, r0, asr #16
 80061f0:	f849 3b04 	str.w	r3, [r9], #4
 80061f4:	d8e6      	bhi.n	80061c4 <__mdiff+0x88>
 80061f6:	1b33      	subs	r3, r6, r4
 80061f8:	3b15      	subs	r3, #21
 80061fa:	f023 0303 	bic.w	r3, r3, #3
 80061fe:	3415      	adds	r4, #21
 8006200:	3304      	adds	r3, #4
 8006202:	42a6      	cmp	r6, r4
 8006204:	bf38      	it	cc
 8006206:	2304      	movcc	r3, #4
 8006208:	441d      	add	r5, r3
 800620a:	445b      	add	r3, fp
 800620c:	461e      	mov	r6, r3
 800620e:	462c      	mov	r4, r5
 8006210:	4544      	cmp	r4, r8
 8006212:	d30e      	bcc.n	8006232 <__mdiff+0xf6>
 8006214:	f108 0103 	add.w	r1, r8, #3
 8006218:	1b49      	subs	r1, r1, r5
 800621a:	f021 0103 	bic.w	r1, r1, #3
 800621e:	3d03      	subs	r5, #3
 8006220:	45a8      	cmp	r8, r5
 8006222:	bf38      	it	cc
 8006224:	2100      	movcc	r1, #0
 8006226:	440b      	add	r3, r1
 8006228:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800622c:	b199      	cbz	r1, 8006256 <__mdiff+0x11a>
 800622e:	6117      	str	r7, [r2, #16]
 8006230:	e79e      	b.n	8006170 <__mdiff+0x34>
 8006232:	46e6      	mov	lr, ip
 8006234:	f854 1b04 	ldr.w	r1, [r4], #4
 8006238:	fa1f fc81 	uxth.w	ip, r1
 800623c:	44f4      	add	ip, lr
 800623e:	0c08      	lsrs	r0, r1, #16
 8006240:	4471      	add	r1, lr
 8006242:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8006246:	b289      	uxth	r1, r1
 8006248:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800624c:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8006250:	f846 1b04 	str.w	r1, [r6], #4
 8006254:	e7dc      	b.n	8006210 <__mdiff+0xd4>
 8006256:	3f01      	subs	r7, #1
 8006258:	e7e6      	b.n	8006228 <__mdiff+0xec>
 800625a:	bf00      	nop
 800625c:	08007312 	.word	0x08007312
 8006260:	08007383 	.word	0x08007383

08006264 <__ulp>:
 8006264:	4b0e      	ldr	r3, [pc, #56]	@ (80062a0 <__ulp+0x3c>)
 8006266:	400b      	ands	r3, r1
 8006268:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 800626c:	2b00      	cmp	r3, #0
 800626e:	dc08      	bgt.n	8006282 <__ulp+0x1e>
 8006270:	425b      	negs	r3, r3
 8006272:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 8006276:	ea4f 5223 	mov.w	r2, r3, asr #20
 800627a:	da04      	bge.n	8006286 <__ulp+0x22>
 800627c:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 8006280:	4113      	asrs	r3, r2
 8006282:	2200      	movs	r2, #0
 8006284:	e008      	b.n	8006298 <__ulp+0x34>
 8006286:	f1a2 0314 	sub.w	r3, r2, #20
 800628a:	2b1e      	cmp	r3, #30
 800628c:	bfd6      	itet	le
 800628e:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 8006292:	2201      	movgt	r2, #1
 8006294:	40da      	lsrle	r2, r3
 8006296:	2300      	movs	r3, #0
 8006298:	4619      	mov	r1, r3
 800629a:	4610      	mov	r0, r2
 800629c:	4770      	bx	lr
 800629e:	bf00      	nop
 80062a0:	7ff00000 	.word	0x7ff00000

080062a4 <__b2d>:
 80062a4:	6902      	ldr	r2, [r0, #16]
 80062a6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80062a8:	f100 0614 	add.w	r6, r0, #20
 80062ac:	eb06 0282 	add.w	r2, r6, r2, lsl #2
 80062b0:	f852 4c04 	ldr.w	r4, [r2, #-4]
 80062b4:	4f1e      	ldr	r7, [pc, #120]	@ (8006330 <__b2d+0x8c>)
 80062b6:	4620      	mov	r0, r4
 80062b8:	f7ff fd5a 	bl	8005d70 <__hi0bits>
 80062bc:	4603      	mov	r3, r0
 80062be:	f1c0 0020 	rsb	r0, r0, #32
 80062c2:	2b0a      	cmp	r3, #10
 80062c4:	f1a2 0504 	sub.w	r5, r2, #4
 80062c8:	6008      	str	r0, [r1, #0]
 80062ca:	dc12      	bgt.n	80062f2 <__b2d+0x4e>
 80062cc:	42ae      	cmp	r6, r5
 80062ce:	bf2c      	ite	cs
 80062d0:	2200      	movcs	r2, #0
 80062d2:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
 80062d6:	f1c3 0c0b 	rsb	ip, r3, #11
 80062da:	3315      	adds	r3, #21
 80062dc:	fa24 fe0c 	lsr.w	lr, r4, ip
 80062e0:	fa04 f303 	lsl.w	r3, r4, r3
 80062e4:	fa22 f20c 	lsr.w	r2, r2, ip
 80062e8:	ea4e 0107 	orr.w	r1, lr, r7
 80062ec:	431a      	orrs	r2, r3
 80062ee:	4610      	mov	r0, r2
 80062f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80062f2:	42ae      	cmp	r6, r5
 80062f4:	bf36      	itet	cc
 80062f6:	f1a2 0508 	subcc.w	r5, r2, #8
 80062fa:	2200      	movcs	r2, #0
 80062fc:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
 8006300:	3b0b      	subs	r3, #11
 8006302:	d012      	beq.n	800632a <__b2d+0x86>
 8006304:	f1c3 0720 	rsb	r7, r3, #32
 8006308:	fa22 f107 	lsr.w	r1, r2, r7
 800630c:	409c      	lsls	r4, r3
 800630e:	430c      	orrs	r4, r1
 8006310:	42b5      	cmp	r5, r6
 8006312:	f044 517f 	orr.w	r1, r4, #1069547520	@ 0x3fc00000
 8006316:	bf94      	ite	ls
 8006318:	2400      	movls	r4, #0
 800631a:	f855 4c04 	ldrhi.w	r4, [r5, #-4]
 800631e:	409a      	lsls	r2, r3
 8006320:	40fc      	lsrs	r4, r7
 8006322:	f441 1140 	orr.w	r1, r1, #3145728	@ 0x300000
 8006326:	4322      	orrs	r2, r4
 8006328:	e7e1      	b.n	80062ee <__b2d+0x4a>
 800632a:	ea44 0107 	orr.w	r1, r4, r7
 800632e:	e7de      	b.n	80062ee <__b2d+0x4a>
 8006330:	3ff00000 	.word	0x3ff00000

08006334 <__d2b>:
 8006334:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
 8006338:	2101      	movs	r1, #1
 800633a:	4690      	mov	r8, r2
 800633c:	4699      	mov	r9, r3
 800633e:	9e08      	ldr	r6, [sp, #32]
 8006340:	f7ff fc24 	bl	8005b8c <_Balloc>
 8006344:	4604      	mov	r4, r0
 8006346:	b930      	cbnz	r0, 8006356 <__d2b+0x22>
 8006348:	4602      	mov	r2, r0
 800634a:	f240 310f 	movw	r1, #783	@ 0x30f
 800634e:	4b23      	ldr	r3, [pc, #140]	@ (80063dc <__d2b+0xa8>)
 8006350:	4823      	ldr	r0, [pc, #140]	@ (80063e0 <__d2b+0xac>)
 8006352:	f000 faf1 	bl	8006938 <__assert_func>
 8006356:	f3c9 550a 	ubfx	r5, r9, #20, #11
 800635a:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800635e:	b10d      	cbz	r5, 8006364 <__d2b+0x30>
 8006360:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8006364:	9301      	str	r3, [sp, #4]
 8006366:	f1b8 0300 	subs.w	r3, r8, #0
 800636a:	d024      	beq.n	80063b6 <__d2b+0x82>
 800636c:	4668      	mov	r0, sp
 800636e:	9300      	str	r3, [sp, #0]
 8006370:	f7ff fd1d 	bl	8005dae <__lo0bits>
 8006374:	e9dd 1200 	ldrd	r1, r2, [sp]
 8006378:	b1d8      	cbz	r0, 80063b2 <__d2b+0x7e>
 800637a:	f1c0 0320 	rsb	r3, r0, #32
 800637e:	fa02 f303 	lsl.w	r3, r2, r3
 8006382:	430b      	orrs	r3, r1
 8006384:	40c2      	lsrs	r2, r0
 8006386:	6163      	str	r3, [r4, #20]
 8006388:	9201      	str	r2, [sp, #4]
 800638a:	9b01      	ldr	r3, [sp, #4]
 800638c:	2b00      	cmp	r3, #0
 800638e:	bf0c      	ite	eq
 8006390:	2201      	moveq	r2, #1
 8006392:	2202      	movne	r2, #2
 8006394:	61a3      	str	r3, [r4, #24]
 8006396:	6122      	str	r2, [r4, #16]
 8006398:	b1ad      	cbz	r5, 80063c6 <__d2b+0x92>
 800639a:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 800639e:	4405      	add	r5, r0
 80063a0:	6035      	str	r5, [r6, #0]
 80063a2:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 80063a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80063a8:	6018      	str	r0, [r3, #0]
 80063aa:	4620      	mov	r0, r4
 80063ac:	b002      	add	sp, #8
 80063ae:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 80063b2:	6161      	str	r1, [r4, #20]
 80063b4:	e7e9      	b.n	800638a <__d2b+0x56>
 80063b6:	a801      	add	r0, sp, #4
 80063b8:	f7ff fcf9 	bl	8005dae <__lo0bits>
 80063bc:	9b01      	ldr	r3, [sp, #4]
 80063be:	2201      	movs	r2, #1
 80063c0:	6163      	str	r3, [r4, #20]
 80063c2:	3020      	adds	r0, #32
 80063c4:	e7e7      	b.n	8006396 <__d2b+0x62>
 80063c6:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 80063ca:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80063ce:	6030      	str	r0, [r6, #0]
 80063d0:	6918      	ldr	r0, [r3, #16]
 80063d2:	f7ff fccd 	bl	8005d70 <__hi0bits>
 80063d6:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 80063da:	e7e4      	b.n	80063a6 <__d2b+0x72>
 80063dc:	08007312 	.word	0x08007312
 80063e0:	08007383 	.word	0x08007383

080063e4 <__ratio>:
 80063e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80063e8:	b085      	sub	sp, #20
 80063ea:	e9cd 1000 	strd	r1, r0, [sp]
 80063ee:	a902      	add	r1, sp, #8
 80063f0:	f7ff ff58 	bl	80062a4 <__b2d>
 80063f4:	468b      	mov	fp, r1
 80063f6:	4606      	mov	r6, r0
 80063f8:	460f      	mov	r7, r1
 80063fa:	9800      	ldr	r0, [sp, #0]
 80063fc:	a903      	add	r1, sp, #12
 80063fe:	f7ff ff51 	bl	80062a4 <__b2d>
 8006402:	460d      	mov	r5, r1
 8006404:	9b01      	ldr	r3, [sp, #4]
 8006406:	4689      	mov	r9, r1
 8006408:	6919      	ldr	r1, [r3, #16]
 800640a:	9b00      	ldr	r3, [sp, #0]
 800640c:	4604      	mov	r4, r0
 800640e:	691b      	ldr	r3, [r3, #16]
 8006410:	4630      	mov	r0, r6
 8006412:	1ac9      	subs	r1, r1, r3
 8006414:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 8006418:	1a9b      	subs	r3, r3, r2
 800641a:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800641e:	2b00      	cmp	r3, #0
 8006420:	bfcd      	iteet	gt
 8006422:	463a      	movgt	r2, r7
 8006424:	462a      	movle	r2, r5
 8006426:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 800642a:	eb02 5b03 	addgt.w	fp, r2, r3, lsl #20
 800642e:	bfd8      	it	le
 8006430:	eb02 5903 	addle.w	r9, r2, r3, lsl #20
 8006434:	464b      	mov	r3, r9
 8006436:	4622      	mov	r2, r4
 8006438:	4659      	mov	r1, fp
 800643a:	f7fa f977 	bl	800072c <__aeabi_ddiv>
 800643e:	b005      	add	sp, #20
 8006440:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08006444 <__copybits>:
 8006444:	3901      	subs	r1, #1
 8006446:	b570      	push	{r4, r5, r6, lr}
 8006448:	1149      	asrs	r1, r1, #5
 800644a:	6914      	ldr	r4, [r2, #16]
 800644c:	3101      	adds	r1, #1
 800644e:	f102 0314 	add.w	r3, r2, #20
 8006452:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8006456:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800645a:	1f05      	subs	r5, r0, #4
 800645c:	42a3      	cmp	r3, r4
 800645e:	d30c      	bcc.n	800647a <__copybits+0x36>
 8006460:	1aa3      	subs	r3, r4, r2
 8006462:	3b11      	subs	r3, #17
 8006464:	f023 0303 	bic.w	r3, r3, #3
 8006468:	3211      	adds	r2, #17
 800646a:	42a2      	cmp	r2, r4
 800646c:	bf88      	it	hi
 800646e:	2300      	movhi	r3, #0
 8006470:	4418      	add	r0, r3
 8006472:	2300      	movs	r3, #0
 8006474:	4288      	cmp	r0, r1
 8006476:	d305      	bcc.n	8006484 <__copybits+0x40>
 8006478:	bd70      	pop	{r4, r5, r6, pc}
 800647a:	f853 6b04 	ldr.w	r6, [r3], #4
 800647e:	f845 6f04 	str.w	r6, [r5, #4]!
 8006482:	e7eb      	b.n	800645c <__copybits+0x18>
 8006484:	f840 3b04 	str.w	r3, [r0], #4
 8006488:	e7f4      	b.n	8006474 <__copybits+0x30>

0800648a <__any_on>:
 800648a:	f100 0214 	add.w	r2, r0, #20
 800648e:	6900      	ldr	r0, [r0, #16]
 8006490:	114b      	asrs	r3, r1, #5
 8006492:	4298      	cmp	r0, r3
 8006494:	b510      	push	{r4, lr}
 8006496:	db11      	blt.n	80064bc <__any_on+0x32>
 8006498:	dd0a      	ble.n	80064b0 <__any_on+0x26>
 800649a:	f011 011f 	ands.w	r1, r1, #31
 800649e:	d007      	beq.n	80064b0 <__any_on+0x26>
 80064a0:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 80064a4:	fa24 f001 	lsr.w	r0, r4, r1
 80064a8:	fa00 f101 	lsl.w	r1, r0, r1
 80064ac:	428c      	cmp	r4, r1
 80064ae:	d10b      	bne.n	80064c8 <__any_on+0x3e>
 80064b0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80064b4:	4293      	cmp	r3, r2
 80064b6:	d803      	bhi.n	80064c0 <__any_on+0x36>
 80064b8:	2000      	movs	r0, #0
 80064ba:	bd10      	pop	{r4, pc}
 80064bc:	4603      	mov	r3, r0
 80064be:	e7f7      	b.n	80064b0 <__any_on+0x26>
 80064c0:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80064c4:	2900      	cmp	r1, #0
 80064c6:	d0f5      	beq.n	80064b4 <__any_on+0x2a>
 80064c8:	2001      	movs	r0, #1
 80064ca:	e7f6      	b.n	80064ba <__any_on+0x30>

080064cc <__ascii_wctomb>:
 80064cc:	4603      	mov	r3, r0
 80064ce:	4608      	mov	r0, r1
 80064d0:	b141      	cbz	r1, 80064e4 <__ascii_wctomb+0x18>
 80064d2:	2aff      	cmp	r2, #255	@ 0xff
 80064d4:	d904      	bls.n	80064e0 <__ascii_wctomb+0x14>
 80064d6:	228a      	movs	r2, #138	@ 0x8a
 80064d8:	f04f 30ff 	mov.w	r0, #4294967295
 80064dc:	601a      	str	r2, [r3, #0]
 80064de:	4770      	bx	lr
 80064e0:	2001      	movs	r0, #1
 80064e2:	700a      	strb	r2, [r1, #0]
 80064e4:	4770      	bx	lr

080064e6 <__ssputs_r>:
 80064e6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80064ea:	461f      	mov	r7, r3
 80064ec:	688e      	ldr	r6, [r1, #8]
 80064ee:	4682      	mov	sl, r0
 80064f0:	42be      	cmp	r6, r7
 80064f2:	460c      	mov	r4, r1
 80064f4:	4690      	mov	r8, r2
 80064f6:	680b      	ldr	r3, [r1, #0]
 80064f8:	d82d      	bhi.n	8006556 <__ssputs_r+0x70>
 80064fa:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80064fe:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8006502:	d026      	beq.n	8006552 <__ssputs_r+0x6c>
 8006504:	6965      	ldr	r5, [r4, #20]
 8006506:	6909      	ldr	r1, [r1, #16]
 8006508:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800650c:	eba3 0901 	sub.w	r9, r3, r1
 8006510:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8006514:	1c7b      	adds	r3, r7, #1
 8006516:	444b      	add	r3, r9
 8006518:	106d      	asrs	r5, r5, #1
 800651a:	429d      	cmp	r5, r3
 800651c:	bf38      	it	cc
 800651e:	461d      	movcc	r5, r3
 8006520:	0553      	lsls	r3, r2, #21
 8006522:	d527      	bpl.n	8006574 <__ssputs_r+0x8e>
 8006524:	4629      	mov	r1, r5
 8006526:	f7ff fa93 	bl	8005a50 <_malloc_r>
 800652a:	4606      	mov	r6, r0
 800652c:	b360      	cbz	r0, 8006588 <__ssputs_r+0xa2>
 800652e:	464a      	mov	r2, r9
 8006530:	6921      	ldr	r1, [r4, #16]
 8006532:	f7fe f870 	bl	8004616 <memcpy>
 8006536:	89a3      	ldrh	r3, [r4, #12]
 8006538:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 800653c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8006540:	81a3      	strh	r3, [r4, #12]
 8006542:	6126      	str	r6, [r4, #16]
 8006544:	444e      	add	r6, r9
 8006546:	6026      	str	r6, [r4, #0]
 8006548:	463e      	mov	r6, r7
 800654a:	6165      	str	r5, [r4, #20]
 800654c:	eba5 0509 	sub.w	r5, r5, r9
 8006550:	60a5      	str	r5, [r4, #8]
 8006552:	42be      	cmp	r6, r7
 8006554:	d900      	bls.n	8006558 <__ssputs_r+0x72>
 8006556:	463e      	mov	r6, r7
 8006558:	4632      	mov	r2, r6
 800655a:	4641      	mov	r1, r8
 800655c:	6820      	ldr	r0, [r4, #0]
 800655e:	f000 f9c1 	bl	80068e4 <memmove>
 8006562:	2000      	movs	r0, #0
 8006564:	68a3      	ldr	r3, [r4, #8]
 8006566:	1b9b      	subs	r3, r3, r6
 8006568:	60a3      	str	r3, [r4, #8]
 800656a:	6823      	ldr	r3, [r4, #0]
 800656c:	4433      	add	r3, r6
 800656e:	6023      	str	r3, [r4, #0]
 8006570:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006574:	462a      	mov	r2, r5
 8006576:	f000 fa11 	bl	800699c <_realloc_r>
 800657a:	4606      	mov	r6, r0
 800657c:	2800      	cmp	r0, #0
 800657e:	d1e0      	bne.n	8006542 <__ssputs_r+0x5c>
 8006580:	4650      	mov	r0, sl
 8006582:	6921      	ldr	r1, [r4, #16]
 8006584:	f7fe feb8 	bl	80052f8 <_free_r>
 8006588:	230c      	movs	r3, #12
 800658a:	f8ca 3000 	str.w	r3, [sl]
 800658e:	89a3      	ldrh	r3, [r4, #12]
 8006590:	f04f 30ff 	mov.w	r0, #4294967295
 8006594:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006598:	81a3      	strh	r3, [r4, #12]
 800659a:	e7e9      	b.n	8006570 <__ssputs_r+0x8a>

0800659c <_svfiprintf_r>:
 800659c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80065a0:	4698      	mov	r8, r3
 80065a2:	898b      	ldrh	r3, [r1, #12]
 80065a4:	4607      	mov	r7, r0
 80065a6:	061b      	lsls	r3, r3, #24
 80065a8:	460d      	mov	r5, r1
 80065aa:	4614      	mov	r4, r2
 80065ac:	b09d      	sub	sp, #116	@ 0x74
 80065ae:	d510      	bpl.n	80065d2 <_svfiprintf_r+0x36>
 80065b0:	690b      	ldr	r3, [r1, #16]
 80065b2:	b973      	cbnz	r3, 80065d2 <_svfiprintf_r+0x36>
 80065b4:	2140      	movs	r1, #64	@ 0x40
 80065b6:	f7ff fa4b 	bl	8005a50 <_malloc_r>
 80065ba:	6028      	str	r0, [r5, #0]
 80065bc:	6128      	str	r0, [r5, #16]
 80065be:	b930      	cbnz	r0, 80065ce <_svfiprintf_r+0x32>
 80065c0:	230c      	movs	r3, #12
 80065c2:	603b      	str	r3, [r7, #0]
 80065c4:	f04f 30ff 	mov.w	r0, #4294967295
 80065c8:	b01d      	add	sp, #116	@ 0x74
 80065ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80065ce:	2340      	movs	r3, #64	@ 0x40
 80065d0:	616b      	str	r3, [r5, #20]
 80065d2:	2300      	movs	r3, #0
 80065d4:	9309      	str	r3, [sp, #36]	@ 0x24
 80065d6:	2320      	movs	r3, #32
 80065d8:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80065dc:	2330      	movs	r3, #48	@ 0x30
 80065de:	f04f 0901 	mov.w	r9, #1
 80065e2:	f8cd 800c 	str.w	r8, [sp, #12]
 80065e6:	f8df 8198 	ldr.w	r8, [pc, #408]	@ 8006780 <_svfiprintf_r+0x1e4>
 80065ea:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80065ee:	4623      	mov	r3, r4
 80065f0:	469a      	mov	sl, r3
 80065f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80065f6:	b10a      	cbz	r2, 80065fc <_svfiprintf_r+0x60>
 80065f8:	2a25      	cmp	r2, #37	@ 0x25
 80065fa:	d1f9      	bne.n	80065f0 <_svfiprintf_r+0x54>
 80065fc:	ebba 0b04 	subs.w	fp, sl, r4
 8006600:	d00b      	beq.n	800661a <_svfiprintf_r+0x7e>
 8006602:	465b      	mov	r3, fp
 8006604:	4622      	mov	r2, r4
 8006606:	4629      	mov	r1, r5
 8006608:	4638      	mov	r0, r7
 800660a:	f7ff ff6c 	bl	80064e6 <__ssputs_r>
 800660e:	3001      	adds	r0, #1
 8006610:	f000 80a7 	beq.w	8006762 <_svfiprintf_r+0x1c6>
 8006614:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8006616:	445a      	add	r2, fp
 8006618:	9209      	str	r2, [sp, #36]	@ 0x24
 800661a:	f89a 3000 	ldrb.w	r3, [sl]
 800661e:	2b00      	cmp	r3, #0
 8006620:	f000 809f 	beq.w	8006762 <_svfiprintf_r+0x1c6>
 8006624:	2300      	movs	r3, #0
 8006626:	f04f 32ff 	mov.w	r2, #4294967295
 800662a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800662e:	f10a 0a01 	add.w	sl, sl, #1
 8006632:	9304      	str	r3, [sp, #16]
 8006634:	9307      	str	r3, [sp, #28]
 8006636:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800663a:	931a      	str	r3, [sp, #104]	@ 0x68
 800663c:	4654      	mov	r4, sl
 800663e:	2205      	movs	r2, #5
 8006640:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006644:	484e      	ldr	r0, [pc, #312]	@ (8006780 <_svfiprintf_r+0x1e4>)
 8006646:	f7fd ffd8 	bl	80045fa <memchr>
 800664a:	9a04      	ldr	r2, [sp, #16]
 800664c:	b9d8      	cbnz	r0, 8006686 <_svfiprintf_r+0xea>
 800664e:	06d0      	lsls	r0, r2, #27
 8006650:	bf44      	itt	mi
 8006652:	2320      	movmi	r3, #32
 8006654:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006658:	0711      	lsls	r1, r2, #28
 800665a:	bf44      	itt	mi
 800665c:	232b      	movmi	r3, #43	@ 0x2b
 800665e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006662:	f89a 3000 	ldrb.w	r3, [sl]
 8006666:	2b2a      	cmp	r3, #42	@ 0x2a
 8006668:	d015      	beq.n	8006696 <_svfiprintf_r+0xfa>
 800666a:	4654      	mov	r4, sl
 800666c:	2000      	movs	r0, #0
 800666e:	f04f 0c0a 	mov.w	ip, #10
 8006672:	9a07      	ldr	r2, [sp, #28]
 8006674:	4621      	mov	r1, r4
 8006676:	f811 3b01 	ldrb.w	r3, [r1], #1
 800667a:	3b30      	subs	r3, #48	@ 0x30
 800667c:	2b09      	cmp	r3, #9
 800667e:	d94b      	bls.n	8006718 <_svfiprintf_r+0x17c>
 8006680:	b1b0      	cbz	r0, 80066b0 <_svfiprintf_r+0x114>
 8006682:	9207      	str	r2, [sp, #28]
 8006684:	e014      	b.n	80066b0 <_svfiprintf_r+0x114>
 8006686:	eba0 0308 	sub.w	r3, r0, r8
 800668a:	fa09 f303 	lsl.w	r3, r9, r3
 800668e:	4313      	orrs	r3, r2
 8006690:	46a2      	mov	sl, r4
 8006692:	9304      	str	r3, [sp, #16]
 8006694:	e7d2      	b.n	800663c <_svfiprintf_r+0xa0>
 8006696:	9b03      	ldr	r3, [sp, #12]
 8006698:	1d19      	adds	r1, r3, #4
 800669a:	681b      	ldr	r3, [r3, #0]
 800669c:	9103      	str	r1, [sp, #12]
 800669e:	2b00      	cmp	r3, #0
 80066a0:	bfbb      	ittet	lt
 80066a2:	425b      	neglt	r3, r3
 80066a4:	f042 0202 	orrlt.w	r2, r2, #2
 80066a8:	9307      	strge	r3, [sp, #28]
 80066aa:	9307      	strlt	r3, [sp, #28]
 80066ac:	bfb8      	it	lt
 80066ae:	9204      	strlt	r2, [sp, #16]
 80066b0:	7823      	ldrb	r3, [r4, #0]
 80066b2:	2b2e      	cmp	r3, #46	@ 0x2e
 80066b4:	d10a      	bne.n	80066cc <_svfiprintf_r+0x130>
 80066b6:	7863      	ldrb	r3, [r4, #1]
 80066b8:	2b2a      	cmp	r3, #42	@ 0x2a
 80066ba:	d132      	bne.n	8006722 <_svfiprintf_r+0x186>
 80066bc:	9b03      	ldr	r3, [sp, #12]
 80066be:	3402      	adds	r4, #2
 80066c0:	1d1a      	adds	r2, r3, #4
 80066c2:	681b      	ldr	r3, [r3, #0]
 80066c4:	9203      	str	r2, [sp, #12]
 80066c6:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80066ca:	9305      	str	r3, [sp, #20]
 80066cc:	f8df a0b4 	ldr.w	sl, [pc, #180]	@ 8006784 <_svfiprintf_r+0x1e8>
 80066d0:	2203      	movs	r2, #3
 80066d2:	4650      	mov	r0, sl
 80066d4:	7821      	ldrb	r1, [r4, #0]
 80066d6:	f7fd ff90 	bl	80045fa <memchr>
 80066da:	b138      	cbz	r0, 80066ec <_svfiprintf_r+0x150>
 80066dc:	2240      	movs	r2, #64	@ 0x40
 80066de:	9b04      	ldr	r3, [sp, #16]
 80066e0:	eba0 000a 	sub.w	r0, r0, sl
 80066e4:	4082      	lsls	r2, r0
 80066e6:	4313      	orrs	r3, r2
 80066e8:	3401      	adds	r4, #1
 80066ea:	9304      	str	r3, [sp, #16]
 80066ec:	f814 1b01 	ldrb.w	r1, [r4], #1
 80066f0:	2206      	movs	r2, #6
 80066f2:	4825      	ldr	r0, [pc, #148]	@ (8006788 <_svfiprintf_r+0x1ec>)
 80066f4:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80066f8:	f7fd ff7f 	bl	80045fa <memchr>
 80066fc:	2800      	cmp	r0, #0
 80066fe:	d036      	beq.n	800676e <_svfiprintf_r+0x1d2>
 8006700:	4b22      	ldr	r3, [pc, #136]	@ (800678c <_svfiprintf_r+0x1f0>)
 8006702:	bb1b      	cbnz	r3, 800674c <_svfiprintf_r+0x1b0>
 8006704:	9b03      	ldr	r3, [sp, #12]
 8006706:	3307      	adds	r3, #7
 8006708:	f023 0307 	bic.w	r3, r3, #7
 800670c:	3308      	adds	r3, #8
 800670e:	9303      	str	r3, [sp, #12]
 8006710:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006712:	4433      	add	r3, r6
 8006714:	9309      	str	r3, [sp, #36]	@ 0x24
 8006716:	e76a      	b.n	80065ee <_svfiprintf_r+0x52>
 8006718:	460c      	mov	r4, r1
 800671a:	2001      	movs	r0, #1
 800671c:	fb0c 3202 	mla	r2, ip, r2, r3
 8006720:	e7a8      	b.n	8006674 <_svfiprintf_r+0xd8>
 8006722:	2300      	movs	r3, #0
 8006724:	f04f 0c0a 	mov.w	ip, #10
 8006728:	4619      	mov	r1, r3
 800672a:	3401      	adds	r4, #1
 800672c:	9305      	str	r3, [sp, #20]
 800672e:	4620      	mov	r0, r4
 8006730:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006734:	3a30      	subs	r2, #48	@ 0x30
 8006736:	2a09      	cmp	r2, #9
 8006738:	d903      	bls.n	8006742 <_svfiprintf_r+0x1a6>
 800673a:	2b00      	cmp	r3, #0
 800673c:	d0c6      	beq.n	80066cc <_svfiprintf_r+0x130>
 800673e:	9105      	str	r1, [sp, #20]
 8006740:	e7c4      	b.n	80066cc <_svfiprintf_r+0x130>
 8006742:	4604      	mov	r4, r0
 8006744:	2301      	movs	r3, #1
 8006746:	fb0c 2101 	mla	r1, ip, r1, r2
 800674a:	e7f0      	b.n	800672e <_svfiprintf_r+0x192>
 800674c:	ab03      	add	r3, sp, #12
 800674e:	9300      	str	r3, [sp, #0]
 8006750:	462a      	mov	r2, r5
 8006752:	4638      	mov	r0, r7
 8006754:	4b0e      	ldr	r3, [pc, #56]	@ (8006790 <_svfiprintf_r+0x1f4>)
 8006756:	a904      	add	r1, sp, #16
 8006758:	f7fd f97c 	bl	8003a54 <_printf_float>
 800675c:	1c42      	adds	r2, r0, #1
 800675e:	4606      	mov	r6, r0
 8006760:	d1d6      	bne.n	8006710 <_svfiprintf_r+0x174>
 8006762:	89ab      	ldrh	r3, [r5, #12]
 8006764:	065b      	lsls	r3, r3, #25
 8006766:	f53f af2d 	bmi.w	80065c4 <_svfiprintf_r+0x28>
 800676a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800676c:	e72c      	b.n	80065c8 <_svfiprintf_r+0x2c>
 800676e:	ab03      	add	r3, sp, #12
 8006770:	9300      	str	r3, [sp, #0]
 8006772:	462a      	mov	r2, r5
 8006774:	4638      	mov	r0, r7
 8006776:	4b06      	ldr	r3, [pc, #24]	@ (8006790 <_svfiprintf_r+0x1f4>)
 8006778:	a904      	add	r1, sp, #16
 800677a:	f7fd fc09 	bl	8003f90 <_printf_i>
 800677e:	e7ed      	b.n	800675c <_svfiprintf_r+0x1c0>
 8006780:	080073dc 	.word	0x080073dc
 8006784:	080073e2 	.word	0x080073e2
 8006788:	080073e6 	.word	0x080073e6
 800678c:	08003a55 	.word	0x08003a55
 8006790:	080064e7 	.word	0x080064e7

08006794 <__sflush_r>:
 8006794:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8006798:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800679a:	0716      	lsls	r6, r2, #28
 800679c:	4605      	mov	r5, r0
 800679e:	460c      	mov	r4, r1
 80067a0:	d454      	bmi.n	800684c <__sflush_r+0xb8>
 80067a2:	684b      	ldr	r3, [r1, #4]
 80067a4:	2b00      	cmp	r3, #0
 80067a6:	dc02      	bgt.n	80067ae <__sflush_r+0x1a>
 80067a8:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80067aa:	2b00      	cmp	r3, #0
 80067ac:	dd48      	ble.n	8006840 <__sflush_r+0xac>
 80067ae:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80067b0:	2e00      	cmp	r6, #0
 80067b2:	d045      	beq.n	8006840 <__sflush_r+0xac>
 80067b4:	2300      	movs	r3, #0
 80067b6:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80067ba:	682f      	ldr	r7, [r5, #0]
 80067bc:	6a21      	ldr	r1, [r4, #32]
 80067be:	602b      	str	r3, [r5, #0]
 80067c0:	d030      	beq.n	8006824 <__sflush_r+0x90>
 80067c2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80067c4:	89a3      	ldrh	r3, [r4, #12]
 80067c6:	0759      	lsls	r1, r3, #29
 80067c8:	d505      	bpl.n	80067d6 <__sflush_r+0x42>
 80067ca:	6863      	ldr	r3, [r4, #4]
 80067cc:	1ad2      	subs	r2, r2, r3
 80067ce:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80067d0:	b10b      	cbz	r3, 80067d6 <__sflush_r+0x42>
 80067d2:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80067d4:	1ad2      	subs	r2, r2, r3
 80067d6:	2300      	movs	r3, #0
 80067d8:	4628      	mov	r0, r5
 80067da:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80067dc:	6a21      	ldr	r1, [r4, #32]
 80067de:	47b0      	blx	r6
 80067e0:	1c43      	adds	r3, r0, #1
 80067e2:	89a3      	ldrh	r3, [r4, #12]
 80067e4:	d106      	bne.n	80067f4 <__sflush_r+0x60>
 80067e6:	6829      	ldr	r1, [r5, #0]
 80067e8:	291d      	cmp	r1, #29
 80067ea:	d82b      	bhi.n	8006844 <__sflush_r+0xb0>
 80067ec:	4a28      	ldr	r2, [pc, #160]	@ (8006890 <__sflush_r+0xfc>)
 80067ee:	40ca      	lsrs	r2, r1
 80067f0:	07d6      	lsls	r6, r2, #31
 80067f2:	d527      	bpl.n	8006844 <__sflush_r+0xb0>
 80067f4:	2200      	movs	r2, #0
 80067f6:	6062      	str	r2, [r4, #4]
 80067f8:	6922      	ldr	r2, [r4, #16]
 80067fa:	04d9      	lsls	r1, r3, #19
 80067fc:	6022      	str	r2, [r4, #0]
 80067fe:	d504      	bpl.n	800680a <__sflush_r+0x76>
 8006800:	1c42      	adds	r2, r0, #1
 8006802:	d101      	bne.n	8006808 <__sflush_r+0x74>
 8006804:	682b      	ldr	r3, [r5, #0]
 8006806:	b903      	cbnz	r3, 800680a <__sflush_r+0x76>
 8006808:	6560      	str	r0, [r4, #84]	@ 0x54
 800680a:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800680c:	602f      	str	r7, [r5, #0]
 800680e:	b1b9      	cbz	r1, 8006840 <__sflush_r+0xac>
 8006810:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8006814:	4299      	cmp	r1, r3
 8006816:	d002      	beq.n	800681e <__sflush_r+0x8a>
 8006818:	4628      	mov	r0, r5
 800681a:	f7fe fd6d 	bl	80052f8 <_free_r>
 800681e:	2300      	movs	r3, #0
 8006820:	6363      	str	r3, [r4, #52]	@ 0x34
 8006822:	e00d      	b.n	8006840 <__sflush_r+0xac>
 8006824:	2301      	movs	r3, #1
 8006826:	4628      	mov	r0, r5
 8006828:	47b0      	blx	r6
 800682a:	4602      	mov	r2, r0
 800682c:	1c50      	adds	r0, r2, #1
 800682e:	d1c9      	bne.n	80067c4 <__sflush_r+0x30>
 8006830:	682b      	ldr	r3, [r5, #0]
 8006832:	2b00      	cmp	r3, #0
 8006834:	d0c6      	beq.n	80067c4 <__sflush_r+0x30>
 8006836:	2b1d      	cmp	r3, #29
 8006838:	d001      	beq.n	800683e <__sflush_r+0xaa>
 800683a:	2b16      	cmp	r3, #22
 800683c:	d11d      	bne.n	800687a <__sflush_r+0xe6>
 800683e:	602f      	str	r7, [r5, #0]
 8006840:	2000      	movs	r0, #0
 8006842:	e021      	b.n	8006888 <__sflush_r+0xf4>
 8006844:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006848:	b21b      	sxth	r3, r3
 800684a:	e01a      	b.n	8006882 <__sflush_r+0xee>
 800684c:	690f      	ldr	r7, [r1, #16]
 800684e:	2f00      	cmp	r7, #0
 8006850:	d0f6      	beq.n	8006840 <__sflush_r+0xac>
 8006852:	0793      	lsls	r3, r2, #30
 8006854:	bf18      	it	ne
 8006856:	2300      	movne	r3, #0
 8006858:	680e      	ldr	r6, [r1, #0]
 800685a:	bf08      	it	eq
 800685c:	694b      	ldreq	r3, [r1, #20]
 800685e:	1bf6      	subs	r6, r6, r7
 8006860:	600f      	str	r7, [r1, #0]
 8006862:	608b      	str	r3, [r1, #8]
 8006864:	2e00      	cmp	r6, #0
 8006866:	ddeb      	ble.n	8006840 <__sflush_r+0xac>
 8006868:	4633      	mov	r3, r6
 800686a:	463a      	mov	r2, r7
 800686c:	4628      	mov	r0, r5
 800686e:	6a21      	ldr	r1, [r4, #32]
 8006870:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8006874:	47e0      	blx	ip
 8006876:	2800      	cmp	r0, #0
 8006878:	dc07      	bgt.n	800688a <__sflush_r+0xf6>
 800687a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800687e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006882:	f04f 30ff 	mov.w	r0, #4294967295
 8006886:	81a3      	strh	r3, [r4, #12]
 8006888:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800688a:	4407      	add	r7, r0
 800688c:	1a36      	subs	r6, r6, r0
 800688e:	e7e9      	b.n	8006864 <__sflush_r+0xd0>
 8006890:	20400001 	.word	0x20400001

08006894 <_fflush_r>:
 8006894:	b538      	push	{r3, r4, r5, lr}
 8006896:	690b      	ldr	r3, [r1, #16]
 8006898:	4605      	mov	r5, r0
 800689a:	460c      	mov	r4, r1
 800689c:	b913      	cbnz	r3, 80068a4 <_fflush_r+0x10>
 800689e:	2500      	movs	r5, #0
 80068a0:	4628      	mov	r0, r5
 80068a2:	bd38      	pop	{r3, r4, r5, pc}
 80068a4:	b118      	cbz	r0, 80068ae <_fflush_r+0x1a>
 80068a6:	6a03      	ldr	r3, [r0, #32]
 80068a8:	b90b      	cbnz	r3, 80068ae <_fflush_r+0x1a>
 80068aa:	f7fd fd1b 	bl	80042e4 <__sinit>
 80068ae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80068b2:	2b00      	cmp	r3, #0
 80068b4:	d0f3      	beq.n	800689e <_fflush_r+0xa>
 80068b6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80068b8:	07d0      	lsls	r0, r2, #31
 80068ba:	d404      	bmi.n	80068c6 <_fflush_r+0x32>
 80068bc:	0599      	lsls	r1, r3, #22
 80068be:	d402      	bmi.n	80068c6 <_fflush_r+0x32>
 80068c0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80068c2:	f7fd fe98 	bl	80045f6 <__retarget_lock_acquire_recursive>
 80068c6:	4628      	mov	r0, r5
 80068c8:	4621      	mov	r1, r4
 80068ca:	f7ff ff63 	bl	8006794 <__sflush_r>
 80068ce:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80068d0:	4605      	mov	r5, r0
 80068d2:	07da      	lsls	r2, r3, #31
 80068d4:	d4e4      	bmi.n	80068a0 <_fflush_r+0xc>
 80068d6:	89a3      	ldrh	r3, [r4, #12]
 80068d8:	059b      	lsls	r3, r3, #22
 80068da:	d4e1      	bmi.n	80068a0 <_fflush_r+0xc>
 80068dc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80068de:	f7fd fe8b 	bl	80045f8 <__retarget_lock_release_recursive>
 80068e2:	e7dd      	b.n	80068a0 <_fflush_r+0xc>

080068e4 <memmove>:
 80068e4:	4288      	cmp	r0, r1
 80068e6:	b510      	push	{r4, lr}
 80068e8:	eb01 0402 	add.w	r4, r1, r2
 80068ec:	d902      	bls.n	80068f4 <memmove+0x10>
 80068ee:	4284      	cmp	r4, r0
 80068f0:	4623      	mov	r3, r4
 80068f2:	d807      	bhi.n	8006904 <memmove+0x20>
 80068f4:	1e43      	subs	r3, r0, #1
 80068f6:	42a1      	cmp	r1, r4
 80068f8:	d008      	beq.n	800690c <memmove+0x28>
 80068fa:	f811 2b01 	ldrb.w	r2, [r1], #1
 80068fe:	f803 2f01 	strb.w	r2, [r3, #1]!
 8006902:	e7f8      	b.n	80068f6 <memmove+0x12>
 8006904:	4601      	mov	r1, r0
 8006906:	4402      	add	r2, r0
 8006908:	428a      	cmp	r2, r1
 800690a:	d100      	bne.n	800690e <memmove+0x2a>
 800690c:	bd10      	pop	{r4, pc}
 800690e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8006912:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8006916:	e7f7      	b.n	8006908 <memmove+0x24>

08006918 <_sbrk_r>:
 8006918:	b538      	push	{r3, r4, r5, lr}
 800691a:	2300      	movs	r3, #0
 800691c:	4d05      	ldr	r5, [pc, #20]	@ (8006934 <_sbrk_r+0x1c>)
 800691e:	4604      	mov	r4, r0
 8006920:	4608      	mov	r0, r1
 8006922:	602b      	str	r3, [r5, #0]
 8006924:	f7fc f890 	bl	8002a48 <_sbrk>
 8006928:	1c43      	adds	r3, r0, #1
 800692a:	d102      	bne.n	8006932 <_sbrk_r+0x1a>
 800692c:	682b      	ldr	r3, [r5, #0]
 800692e:	b103      	cbz	r3, 8006932 <_sbrk_r+0x1a>
 8006930:	6023      	str	r3, [r4, #0]
 8006932:	bd38      	pop	{r3, r4, r5, pc}
 8006934:	20000540 	.word	0x20000540

08006938 <__assert_func>:
 8006938:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800693a:	4614      	mov	r4, r2
 800693c:	461a      	mov	r2, r3
 800693e:	4b09      	ldr	r3, [pc, #36]	@ (8006964 <__assert_func+0x2c>)
 8006940:	4605      	mov	r5, r0
 8006942:	681b      	ldr	r3, [r3, #0]
 8006944:	68d8      	ldr	r0, [r3, #12]
 8006946:	b14c      	cbz	r4, 800695c <__assert_func+0x24>
 8006948:	4b07      	ldr	r3, [pc, #28]	@ (8006968 <__assert_func+0x30>)
 800694a:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800694e:	9100      	str	r1, [sp, #0]
 8006950:	462b      	mov	r3, r5
 8006952:	4906      	ldr	r1, [pc, #24]	@ (800696c <__assert_func+0x34>)
 8006954:	f000 f850 	bl	80069f8 <fiprintf>
 8006958:	f000 f860 	bl	8006a1c <abort>
 800695c:	4b04      	ldr	r3, [pc, #16]	@ (8006970 <__assert_func+0x38>)
 800695e:	461c      	mov	r4, r3
 8006960:	e7f3      	b.n	800694a <__assert_func+0x12>
 8006962:	bf00      	nop
 8006964:	20000180 	.word	0x20000180
 8006968:	080073ed 	.word	0x080073ed
 800696c:	080073fa 	.word	0x080073fa
 8006970:	08007428 	.word	0x08007428

08006974 <_calloc_r>:
 8006974:	b570      	push	{r4, r5, r6, lr}
 8006976:	fba1 5402 	umull	r5, r4, r1, r2
 800697a:	b934      	cbnz	r4, 800698a <_calloc_r+0x16>
 800697c:	4629      	mov	r1, r5
 800697e:	f7ff f867 	bl	8005a50 <_malloc_r>
 8006982:	4606      	mov	r6, r0
 8006984:	b928      	cbnz	r0, 8006992 <_calloc_r+0x1e>
 8006986:	4630      	mov	r0, r6
 8006988:	bd70      	pop	{r4, r5, r6, pc}
 800698a:	220c      	movs	r2, #12
 800698c:	2600      	movs	r6, #0
 800698e:	6002      	str	r2, [r0, #0]
 8006990:	e7f9      	b.n	8006986 <_calloc_r+0x12>
 8006992:	462a      	mov	r2, r5
 8006994:	4621      	mov	r1, r4
 8006996:	f7fd fd54 	bl	8004442 <memset>
 800699a:	e7f4      	b.n	8006986 <_calloc_r+0x12>

0800699c <_realloc_r>:
 800699c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80069a0:	4607      	mov	r7, r0
 80069a2:	4614      	mov	r4, r2
 80069a4:	460d      	mov	r5, r1
 80069a6:	b921      	cbnz	r1, 80069b2 <_realloc_r+0x16>
 80069a8:	4611      	mov	r1, r2
 80069aa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80069ae:	f7ff b84f 	b.w	8005a50 <_malloc_r>
 80069b2:	b92a      	cbnz	r2, 80069c0 <_realloc_r+0x24>
 80069b4:	f7fe fca0 	bl	80052f8 <_free_r>
 80069b8:	4625      	mov	r5, r4
 80069ba:	4628      	mov	r0, r5
 80069bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80069c0:	f000 f833 	bl	8006a2a <_malloc_usable_size_r>
 80069c4:	4284      	cmp	r4, r0
 80069c6:	4606      	mov	r6, r0
 80069c8:	d802      	bhi.n	80069d0 <_realloc_r+0x34>
 80069ca:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80069ce:	d8f4      	bhi.n	80069ba <_realloc_r+0x1e>
 80069d0:	4621      	mov	r1, r4
 80069d2:	4638      	mov	r0, r7
 80069d4:	f7ff f83c 	bl	8005a50 <_malloc_r>
 80069d8:	4680      	mov	r8, r0
 80069da:	b908      	cbnz	r0, 80069e0 <_realloc_r+0x44>
 80069dc:	4645      	mov	r5, r8
 80069de:	e7ec      	b.n	80069ba <_realloc_r+0x1e>
 80069e0:	42b4      	cmp	r4, r6
 80069e2:	4622      	mov	r2, r4
 80069e4:	4629      	mov	r1, r5
 80069e6:	bf28      	it	cs
 80069e8:	4632      	movcs	r2, r6
 80069ea:	f7fd fe14 	bl	8004616 <memcpy>
 80069ee:	4629      	mov	r1, r5
 80069f0:	4638      	mov	r0, r7
 80069f2:	f7fe fc81 	bl	80052f8 <_free_r>
 80069f6:	e7f1      	b.n	80069dc <_realloc_r+0x40>

080069f8 <fiprintf>:
 80069f8:	b40e      	push	{r1, r2, r3}
 80069fa:	b503      	push	{r0, r1, lr}
 80069fc:	4601      	mov	r1, r0
 80069fe:	ab03      	add	r3, sp, #12
 8006a00:	4805      	ldr	r0, [pc, #20]	@ (8006a18 <fiprintf+0x20>)
 8006a02:	f853 2b04 	ldr.w	r2, [r3], #4
 8006a06:	6800      	ldr	r0, [r0, #0]
 8006a08:	9301      	str	r3, [sp, #4]
 8006a0a:	f000 f83d 	bl	8006a88 <_vfiprintf_r>
 8006a0e:	b002      	add	sp, #8
 8006a10:	f85d eb04 	ldr.w	lr, [sp], #4
 8006a14:	b003      	add	sp, #12
 8006a16:	4770      	bx	lr
 8006a18:	20000180 	.word	0x20000180

08006a1c <abort>:
 8006a1c:	2006      	movs	r0, #6
 8006a1e:	b508      	push	{r3, lr}
 8006a20:	f000 fa06 	bl	8006e30 <raise>
 8006a24:	2001      	movs	r0, #1
 8006a26:	f7fb ff9a 	bl	800295e <_exit>

08006a2a <_malloc_usable_size_r>:
 8006a2a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006a2e:	1f18      	subs	r0, r3, #4
 8006a30:	2b00      	cmp	r3, #0
 8006a32:	bfbc      	itt	lt
 8006a34:	580b      	ldrlt	r3, [r1, r0]
 8006a36:	18c0      	addlt	r0, r0, r3
 8006a38:	4770      	bx	lr

08006a3a <__sfputc_r>:
 8006a3a:	6893      	ldr	r3, [r2, #8]
 8006a3c:	b410      	push	{r4}
 8006a3e:	3b01      	subs	r3, #1
 8006a40:	2b00      	cmp	r3, #0
 8006a42:	6093      	str	r3, [r2, #8]
 8006a44:	da07      	bge.n	8006a56 <__sfputc_r+0x1c>
 8006a46:	6994      	ldr	r4, [r2, #24]
 8006a48:	42a3      	cmp	r3, r4
 8006a4a:	db01      	blt.n	8006a50 <__sfputc_r+0x16>
 8006a4c:	290a      	cmp	r1, #10
 8006a4e:	d102      	bne.n	8006a56 <__sfputc_r+0x1c>
 8006a50:	bc10      	pop	{r4}
 8006a52:	f000 b931 	b.w	8006cb8 <__swbuf_r>
 8006a56:	6813      	ldr	r3, [r2, #0]
 8006a58:	1c58      	adds	r0, r3, #1
 8006a5a:	6010      	str	r0, [r2, #0]
 8006a5c:	7019      	strb	r1, [r3, #0]
 8006a5e:	4608      	mov	r0, r1
 8006a60:	bc10      	pop	{r4}
 8006a62:	4770      	bx	lr

08006a64 <__sfputs_r>:
 8006a64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006a66:	4606      	mov	r6, r0
 8006a68:	460f      	mov	r7, r1
 8006a6a:	4614      	mov	r4, r2
 8006a6c:	18d5      	adds	r5, r2, r3
 8006a6e:	42ac      	cmp	r4, r5
 8006a70:	d101      	bne.n	8006a76 <__sfputs_r+0x12>
 8006a72:	2000      	movs	r0, #0
 8006a74:	e007      	b.n	8006a86 <__sfputs_r+0x22>
 8006a76:	463a      	mov	r2, r7
 8006a78:	4630      	mov	r0, r6
 8006a7a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006a7e:	f7ff ffdc 	bl	8006a3a <__sfputc_r>
 8006a82:	1c43      	adds	r3, r0, #1
 8006a84:	d1f3      	bne.n	8006a6e <__sfputs_r+0xa>
 8006a86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08006a88 <_vfiprintf_r>:
 8006a88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006a8c:	460d      	mov	r5, r1
 8006a8e:	4614      	mov	r4, r2
 8006a90:	4698      	mov	r8, r3
 8006a92:	4606      	mov	r6, r0
 8006a94:	b09d      	sub	sp, #116	@ 0x74
 8006a96:	b118      	cbz	r0, 8006aa0 <_vfiprintf_r+0x18>
 8006a98:	6a03      	ldr	r3, [r0, #32]
 8006a9a:	b90b      	cbnz	r3, 8006aa0 <_vfiprintf_r+0x18>
 8006a9c:	f7fd fc22 	bl	80042e4 <__sinit>
 8006aa0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8006aa2:	07d9      	lsls	r1, r3, #31
 8006aa4:	d405      	bmi.n	8006ab2 <_vfiprintf_r+0x2a>
 8006aa6:	89ab      	ldrh	r3, [r5, #12]
 8006aa8:	059a      	lsls	r2, r3, #22
 8006aaa:	d402      	bmi.n	8006ab2 <_vfiprintf_r+0x2a>
 8006aac:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8006aae:	f7fd fda2 	bl	80045f6 <__retarget_lock_acquire_recursive>
 8006ab2:	89ab      	ldrh	r3, [r5, #12]
 8006ab4:	071b      	lsls	r3, r3, #28
 8006ab6:	d501      	bpl.n	8006abc <_vfiprintf_r+0x34>
 8006ab8:	692b      	ldr	r3, [r5, #16]
 8006aba:	b99b      	cbnz	r3, 8006ae4 <_vfiprintf_r+0x5c>
 8006abc:	4629      	mov	r1, r5
 8006abe:	4630      	mov	r0, r6
 8006ac0:	f000 f938 	bl	8006d34 <__swsetup_r>
 8006ac4:	b170      	cbz	r0, 8006ae4 <_vfiprintf_r+0x5c>
 8006ac6:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8006ac8:	07dc      	lsls	r4, r3, #31
 8006aca:	d504      	bpl.n	8006ad6 <_vfiprintf_r+0x4e>
 8006acc:	f04f 30ff 	mov.w	r0, #4294967295
 8006ad0:	b01d      	add	sp, #116	@ 0x74
 8006ad2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006ad6:	89ab      	ldrh	r3, [r5, #12]
 8006ad8:	0598      	lsls	r0, r3, #22
 8006ada:	d4f7      	bmi.n	8006acc <_vfiprintf_r+0x44>
 8006adc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8006ade:	f7fd fd8b 	bl	80045f8 <__retarget_lock_release_recursive>
 8006ae2:	e7f3      	b.n	8006acc <_vfiprintf_r+0x44>
 8006ae4:	2300      	movs	r3, #0
 8006ae6:	9309      	str	r3, [sp, #36]	@ 0x24
 8006ae8:	2320      	movs	r3, #32
 8006aea:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8006aee:	2330      	movs	r3, #48	@ 0x30
 8006af0:	f04f 0901 	mov.w	r9, #1
 8006af4:	f8cd 800c 	str.w	r8, [sp, #12]
 8006af8:	f8df 81a8 	ldr.w	r8, [pc, #424]	@ 8006ca4 <_vfiprintf_r+0x21c>
 8006afc:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8006b00:	4623      	mov	r3, r4
 8006b02:	469a      	mov	sl, r3
 8006b04:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006b08:	b10a      	cbz	r2, 8006b0e <_vfiprintf_r+0x86>
 8006b0a:	2a25      	cmp	r2, #37	@ 0x25
 8006b0c:	d1f9      	bne.n	8006b02 <_vfiprintf_r+0x7a>
 8006b0e:	ebba 0b04 	subs.w	fp, sl, r4
 8006b12:	d00b      	beq.n	8006b2c <_vfiprintf_r+0xa4>
 8006b14:	465b      	mov	r3, fp
 8006b16:	4622      	mov	r2, r4
 8006b18:	4629      	mov	r1, r5
 8006b1a:	4630      	mov	r0, r6
 8006b1c:	f7ff ffa2 	bl	8006a64 <__sfputs_r>
 8006b20:	3001      	adds	r0, #1
 8006b22:	f000 80a7 	beq.w	8006c74 <_vfiprintf_r+0x1ec>
 8006b26:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8006b28:	445a      	add	r2, fp
 8006b2a:	9209      	str	r2, [sp, #36]	@ 0x24
 8006b2c:	f89a 3000 	ldrb.w	r3, [sl]
 8006b30:	2b00      	cmp	r3, #0
 8006b32:	f000 809f 	beq.w	8006c74 <_vfiprintf_r+0x1ec>
 8006b36:	2300      	movs	r3, #0
 8006b38:	f04f 32ff 	mov.w	r2, #4294967295
 8006b3c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8006b40:	f10a 0a01 	add.w	sl, sl, #1
 8006b44:	9304      	str	r3, [sp, #16]
 8006b46:	9307      	str	r3, [sp, #28]
 8006b48:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8006b4c:	931a      	str	r3, [sp, #104]	@ 0x68
 8006b4e:	4654      	mov	r4, sl
 8006b50:	2205      	movs	r2, #5
 8006b52:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006b56:	4853      	ldr	r0, [pc, #332]	@ (8006ca4 <_vfiprintf_r+0x21c>)
 8006b58:	f7fd fd4f 	bl	80045fa <memchr>
 8006b5c:	9a04      	ldr	r2, [sp, #16]
 8006b5e:	b9d8      	cbnz	r0, 8006b98 <_vfiprintf_r+0x110>
 8006b60:	06d1      	lsls	r1, r2, #27
 8006b62:	bf44      	itt	mi
 8006b64:	2320      	movmi	r3, #32
 8006b66:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006b6a:	0713      	lsls	r3, r2, #28
 8006b6c:	bf44      	itt	mi
 8006b6e:	232b      	movmi	r3, #43	@ 0x2b
 8006b70:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006b74:	f89a 3000 	ldrb.w	r3, [sl]
 8006b78:	2b2a      	cmp	r3, #42	@ 0x2a
 8006b7a:	d015      	beq.n	8006ba8 <_vfiprintf_r+0x120>
 8006b7c:	4654      	mov	r4, sl
 8006b7e:	2000      	movs	r0, #0
 8006b80:	f04f 0c0a 	mov.w	ip, #10
 8006b84:	9a07      	ldr	r2, [sp, #28]
 8006b86:	4621      	mov	r1, r4
 8006b88:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006b8c:	3b30      	subs	r3, #48	@ 0x30
 8006b8e:	2b09      	cmp	r3, #9
 8006b90:	d94b      	bls.n	8006c2a <_vfiprintf_r+0x1a2>
 8006b92:	b1b0      	cbz	r0, 8006bc2 <_vfiprintf_r+0x13a>
 8006b94:	9207      	str	r2, [sp, #28]
 8006b96:	e014      	b.n	8006bc2 <_vfiprintf_r+0x13a>
 8006b98:	eba0 0308 	sub.w	r3, r0, r8
 8006b9c:	fa09 f303 	lsl.w	r3, r9, r3
 8006ba0:	4313      	orrs	r3, r2
 8006ba2:	46a2      	mov	sl, r4
 8006ba4:	9304      	str	r3, [sp, #16]
 8006ba6:	e7d2      	b.n	8006b4e <_vfiprintf_r+0xc6>
 8006ba8:	9b03      	ldr	r3, [sp, #12]
 8006baa:	1d19      	adds	r1, r3, #4
 8006bac:	681b      	ldr	r3, [r3, #0]
 8006bae:	9103      	str	r1, [sp, #12]
 8006bb0:	2b00      	cmp	r3, #0
 8006bb2:	bfbb      	ittet	lt
 8006bb4:	425b      	neglt	r3, r3
 8006bb6:	f042 0202 	orrlt.w	r2, r2, #2
 8006bba:	9307      	strge	r3, [sp, #28]
 8006bbc:	9307      	strlt	r3, [sp, #28]
 8006bbe:	bfb8      	it	lt
 8006bc0:	9204      	strlt	r2, [sp, #16]
 8006bc2:	7823      	ldrb	r3, [r4, #0]
 8006bc4:	2b2e      	cmp	r3, #46	@ 0x2e
 8006bc6:	d10a      	bne.n	8006bde <_vfiprintf_r+0x156>
 8006bc8:	7863      	ldrb	r3, [r4, #1]
 8006bca:	2b2a      	cmp	r3, #42	@ 0x2a
 8006bcc:	d132      	bne.n	8006c34 <_vfiprintf_r+0x1ac>
 8006bce:	9b03      	ldr	r3, [sp, #12]
 8006bd0:	3402      	adds	r4, #2
 8006bd2:	1d1a      	adds	r2, r3, #4
 8006bd4:	681b      	ldr	r3, [r3, #0]
 8006bd6:	9203      	str	r2, [sp, #12]
 8006bd8:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8006bdc:	9305      	str	r3, [sp, #20]
 8006bde:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8006ca8 <_vfiprintf_r+0x220>
 8006be2:	2203      	movs	r2, #3
 8006be4:	4650      	mov	r0, sl
 8006be6:	7821      	ldrb	r1, [r4, #0]
 8006be8:	f7fd fd07 	bl	80045fa <memchr>
 8006bec:	b138      	cbz	r0, 8006bfe <_vfiprintf_r+0x176>
 8006bee:	2240      	movs	r2, #64	@ 0x40
 8006bf0:	9b04      	ldr	r3, [sp, #16]
 8006bf2:	eba0 000a 	sub.w	r0, r0, sl
 8006bf6:	4082      	lsls	r2, r0
 8006bf8:	4313      	orrs	r3, r2
 8006bfa:	3401      	adds	r4, #1
 8006bfc:	9304      	str	r3, [sp, #16]
 8006bfe:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006c02:	2206      	movs	r2, #6
 8006c04:	4829      	ldr	r0, [pc, #164]	@ (8006cac <_vfiprintf_r+0x224>)
 8006c06:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8006c0a:	f7fd fcf6 	bl	80045fa <memchr>
 8006c0e:	2800      	cmp	r0, #0
 8006c10:	d03f      	beq.n	8006c92 <_vfiprintf_r+0x20a>
 8006c12:	4b27      	ldr	r3, [pc, #156]	@ (8006cb0 <_vfiprintf_r+0x228>)
 8006c14:	bb1b      	cbnz	r3, 8006c5e <_vfiprintf_r+0x1d6>
 8006c16:	9b03      	ldr	r3, [sp, #12]
 8006c18:	3307      	adds	r3, #7
 8006c1a:	f023 0307 	bic.w	r3, r3, #7
 8006c1e:	3308      	adds	r3, #8
 8006c20:	9303      	str	r3, [sp, #12]
 8006c22:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006c24:	443b      	add	r3, r7
 8006c26:	9309      	str	r3, [sp, #36]	@ 0x24
 8006c28:	e76a      	b.n	8006b00 <_vfiprintf_r+0x78>
 8006c2a:	460c      	mov	r4, r1
 8006c2c:	2001      	movs	r0, #1
 8006c2e:	fb0c 3202 	mla	r2, ip, r2, r3
 8006c32:	e7a8      	b.n	8006b86 <_vfiprintf_r+0xfe>
 8006c34:	2300      	movs	r3, #0
 8006c36:	f04f 0c0a 	mov.w	ip, #10
 8006c3a:	4619      	mov	r1, r3
 8006c3c:	3401      	adds	r4, #1
 8006c3e:	9305      	str	r3, [sp, #20]
 8006c40:	4620      	mov	r0, r4
 8006c42:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006c46:	3a30      	subs	r2, #48	@ 0x30
 8006c48:	2a09      	cmp	r2, #9
 8006c4a:	d903      	bls.n	8006c54 <_vfiprintf_r+0x1cc>
 8006c4c:	2b00      	cmp	r3, #0
 8006c4e:	d0c6      	beq.n	8006bde <_vfiprintf_r+0x156>
 8006c50:	9105      	str	r1, [sp, #20]
 8006c52:	e7c4      	b.n	8006bde <_vfiprintf_r+0x156>
 8006c54:	4604      	mov	r4, r0
 8006c56:	2301      	movs	r3, #1
 8006c58:	fb0c 2101 	mla	r1, ip, r1, r2
 8006c5c:	e7f0      	b.n	8006c40 <_vfiprintf_r+0x1b8>
 8006c5e:	ab03      	add	r3, sp, #12
 8006c60:	9300      	str	r3, [sp, #0]
 8006c62:	462a      	mov	r2, r5
 8006c64:	4630      	mov	r0, r6
 8006c66:	4b13      	ldr	r3, [pc, #76]	@ (8006cb4 <_vfiprintf_r+0x22c>)
 8006c68:	a904      	add	r1, sp, #16
 8006c6a:	f7fc fef3 	bl	8003a54 <_printf_float>
 8006c6e:	4607      	mov	r7, r0
 8006c70:	1c78      	adds	r0, r7, #1
 8006c72:	d1d6      	bne.n	8006c22 <_vfiprintf_r+0x19a>
 8006c74:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8006c76:	07d9      	lsls	r1, r3, #31
 8006c78:	d405      	bmi.n	8006c86 <_vfiprintf_r+0x1fe>
 8006c7a:	89ab      	ldrh	r3, [r5, #12]
 8006c7c:	059a      	lsls	r2, r3, #22
 8006c7e:	d402      	bmi.n	8006c86 <_vfiprintf_r+0x1fe>
 8006c80:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8006c82:	f7fd fcb9 	bl	80045f8 <__retarget_lock_release_recursive>
 8006c86:	89ab      	ldrh	r3, [r5, #12]
 8006c88:	065b      	lsls	r3, r3, #25
 8006c8a:	f53f af1f 	bmi.w	8006acc <_vfiprintf_r+0x44>
 8006c8e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006c90:	e71e      	b.n	8006ad0 <_vfiprintf_r+0x48>
 8006c92:	ab03      	add	r3, sp, #12
 8006c94:	9300      	str	r3, [sp, #0]
 8006c96:	462a      	mov	r2, r5
 8006c98:	4630      	mov	r0, r6
 8006c9a:	4b06      	ldr	r3, [pc, #24]	@ (8006cb4 <_vfiprintf_r+0x22c>)
 8006c9c:	a904      	add	r1, sp, #16
 8006c9e:	f7fd f977 	bl	8003f90 <_printf_i>
 8006ca2:	e7e4      	b.n	8006c6e <_vfiprintf_r+0x1e6>
 8006ca4:	080073dc 	.word	0x080073dc
 8006ca8:	080073e2 	.word	0x080073e2
 8006cac:	080073e6 	.word	0x080073e6
 8006cb0:	08003a55 	.word	0x08003a55
 8006cb4:	08006a65 	.word	0x08006a65

08006cb8 <__swbuf_r>:
 8006cb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006cba:	460e      	mov	r6, r1
 8006cbc:	4614      	mov	r4, r2
 8006cbe:	4605      	mov	r5, r0
 8006cc0:	b118      	cbz	r0, 8006cca <__swbuf_r+0x12>
 8006cc2:	6a03      	ldr	r3, [r0, #32]
 8006cc4:	b90b      	cbnz	r3, 8006cca <__swbuf_r+0x12>
 8006cc6:	f7fd fb0d 	bl	80042e4 <__sinit>
 8006cca:	69a3      	ldr	r3, [r4, #24]
 8006ccc:	60a3      	str	r3, [r4, #8]
 8006cce:	89a3      	ldrh	r3, [r4, #12]
 8006cd0:	071a      	lsls	r2, r3, #28
 8006cd2:	d501      	bpl.n	8006cd8 <__swbuf_r+0x20>
 8006cd4:	6923      	ldr	r3, [r4, #16]
 8006cd6:	b943      	cbnz	r3, 8006cea <__swbuf_r+0x32>
 8006cd8:	4621      	mov	r1, r4
 8006cda:	4628      	mov	r0, r5
 8006cdc:	f000 f82a 	bl	8006d34 <__swsetup_r>
 8006ce0:	b118      	cbz	r0, 8006cea <__swbuf_r+0x32>
 8006ce2:	f04f 37ff 	mov.w	r7, #4294967295
 8006ce6:	4638      	mov	r0, r7
 8006ce8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006cea:	6823      	ldr	r3, [r4, #0]
 8006cec:	6922      	ldr	r2, [r4, #16]
 8006cee:	b2f6      	uxtb	r6, r6
 8006cf0:	1a98      	subs	r0, r3, r2
 8006cf2:	6963      	ldr	r3, [r4, #20]
 8006cf4:	4637      	mov	r7, r6
 8006cf6:	4283      	cmp	r3, r0
 8006cf8:	dc05      	bgt.n	8006d06 <__swbuf_r+0x4e>
 8006cfa:	4621      	mov	r1, r4
 8006cfc:	4628      	mov	r0, r5
 8006cfe:	f7ff fdc9 	bl	8006894 <_fflush_r>
 8006d02:	2800      	cmp	r0, #0
 8006d04:	d1ed      	bne.n	8006ce2 <__swbuf_r+0x2a>
 8006d06:	68a3      	ldr	r3, [r4, #8]
 8006d08:	3b01      	subs	r3, #1
 8006d0a:	60a3      	str	r3, [r4, #8]
 8006d0c:	6823      	ldr	r3, [r4, #0]
 8006d0e:	1c5a      	adds	r2, r3, #1
 8006d10:	6022      	str	r2, [r4, #0]
 8006d12:	701e      	strb	r6, [r3, #0]
 8006d14:	6962      	ldr	r2, [r4, #20]
 8006d16:	1c43      	adds	r3, r0, #1
 8006d18:	429a      	cmp	r2, r3
 8006d1a:	d004      	beq.n	8006d26 <__swbuf_r+0x6e>
 8006d1c:	89a3      	ldrh	r3, [r4, #12]
 8006d1e:	07db      	lsls	r3, r3, #31
 8006d20:	d5e1      	bpl.n	8006ce6 <__swbuf_r+0x2e>
 8006d22:	2e0a      	cmp	r6, #10
 8006d24:	d1df      	bne.n	8006ce6 <__swbuf_r+0x2e>
 8006d26:	4621      	mov	r1, r4
 8006d28:	4628      	mov	r0, r5
 8006d2a:	f7ff fdb3 	bl	8006894 <_fflush_r>
 8006d2e:	2800      	cmp	r0, #0
 8006d30:	d0d9      	beq.n	8006ce6 <__swbuf_r+0x2e>
 8006d32:	e7d6      	b.n	8006ce2 <__swbuf_r+0x2a>

08006d34 <__swsetup_r>:
 8006d34:	b538      	push	{r3, r4, r5, lr}
 8006d36:	4b29      	ldr	r3, [pc, #164]	@ (8006ddc <__swsetup_r+0xa8>)
 8006d38:	4605      	mov	r5, r0
 8006d3a:	6818      	ldr	r0, [r3, #0]
 8006d3c:	460c      	mov	r4, r1
 8006d3e:	b118      	cbz	r0, 8006d48 <__swsetup_r+0x14>
 8006d40:	6a03      	ldr	r3, [r0, #32]
 8006d42:	b90b      	cbnz	r3, 8006d48 <__swsetup_r+0x14>
 8006d44:	f7fd face 	bl	80042e4 <__sinit>
 8006d48:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006d4c:	0719      	lsls	r1, r3, #28
 8006d4e:	d422      	bmi.n	8006d96 <__swsetup_r+0x62>
 8006d50:	06da      	lsls	r2, r3, #27
 8006d52:	d407      	bmi.n	8006d64 <__swsetup_r+0x30>
 8006d54:	2209      	movs	r2, #9
 8006d56:	602a      	str	r2, [r5, #0]
 8006d58:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006d5c:	f04f 30ff 	mov.w	r0, #4294967295
 8006d60:	81a3      	strh	r3, [r4, #12]
 8006d62:	e033      	b.n	8006dcc <__swsetup_r+0x98>
 8006d64:	0758      	lsls	r0, r3, #29
 8006d66:	d512      	bpl.n	8006d8e <__swsetup_r+0x5a>
 8006d68:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8006d6a:	b141      	cbz	r1, 8006d7e <__swsetup_r+0x4a>
 8006d6c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8006d70:	4299      	cmp	r1, r3
 8006d72:	d002      	beq.n	8006d7a <__swsetup_r+0x46>
 8006d74:	4628      	mov	r0, r5
 8006d76:	f7fe fabf 	bl	80052f8 <_free_r>
 8006d7a:	2300      	movs	r3, #0
 8006d7c:	6363      	str	r3, [r4, #52]	@ 0x34
 8006d7e:	89a3      	ldrh	r3, [r4, #12]
 8006d80:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8006d84:	81a3      	strh	r3, [r4, #12]
 8006d86:	2300      	movs	r3, #0
 8006d88:	6063      	str	r3, [r4, #4]
 8006d8a:	6923      	ldr	r3, [r4, #16]
 8006d8c:	6023      	str	r3, [r4, #0]
 8006d8e:	89a3      	ldrh	r3, [r4, #12]
 8006d90:	f043 0308 	orr.w	r3, r3, #8
 8006d94:	81a3      	strh	r3, [r4, #12]
 8006d96:	6923      	ldr	r3, [r4, #16]
 8006d98:	b94b      	cbnz	r3, 8006dae <__swsetup_r+0x7a>
 8006d9a:	89a3      	ldrh	r3, [r4, #12]
 8006d9c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8006da0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8006da4:	d003      	beq.n	8006dae <__swsetup_r+0x7a>
 8006da6:	4621      	mov	r1, r4
 8006da8:	4628      	mov	r0, r5
 8006daa:	f000 f882 	bl	8006eb2 <__smakebuf_r>
 8006dae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006db2:	f013 0201 	ands.w	r2, r3, #1
 8006db6:	d00a      	beq.n	8006dce <__swsetup_r+0x9a>
 8006db8:	2200      	movs	r2, #0
 8006dba:	60a2      	str	r2, [r4, #8]
 8006dbc:	6962      	ldr	r2, [r4, #20]
 8006dbe:	4252      	negs	r2, r2
 8006dc0:	61a2      	str	r2, [r4, #24]
 8006dc2:	6922      	ldr	r2, [r4, #16]
 8006dc4:	b942      	cbnz	r2, 8006dd8 <__swsetup_r+0xa4>
 8006dc6:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8006dca:	d1c5      	bne.n	8006d58 <__swsetup_r+0x24>
 8006dcc:	bd38      	pop	{r3, r4, r5, pc}
 8006dce:	0799      	lsls	r1, r3, #30
 8006dd0:	bf58      	it	pl
 8006dd2:	6962      	ldrpl	r2, [r4, #20]
 8006dd4:	60a2      	str	r2, [r4, #8]
 8006dd6:	e7f4      	b.n	8006dc2 <__swsetup_r+0x8e>
 8006dd8:	2000      	movs	r0, #0
 8006dda:	e7f7      	b.n	8006dcc <__swsetup_r+0x98>
 8006ddc:	20000180 	.word	0x20000180

08006de0 <_raise_r>:
 8006de0:	291f      	cmp	r1, #31
 8006de2:	b538      	push	{r3, r4, r5, lr}
 8006de4:	4605      	mov	r5, r0
 8006de6:	460c      	mov	r4, r1
 8006de8:	d904      	bls.n	8006df4 <_raise_r+0x14>
 8006dea:	2316      	movs	r3, #22
 8006dec:	6003      	str	r3, [r0, #0]
 8006dee:	f04f 30ff 	mov.w	r0, #4294967295
 8006df2:	bd38      	pop	{r3, r4, r5, pc}
 8006df4:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8006df6:	b112      	cbz	r2, 8006dfe <_raise_r+0x1e>
 8006df8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8006dfc:	b94b      	cbnz	r3, 8006e12 <_raise_r+0x32>
 8006dfe:	4628      	mov	r0, r5
 8006e00:	f000 f830 	bl	8006e64 <_getpid_r>
 8006e04:	4622      	mov	r2, r4
 8006e06:	4601      	mov	r1, r0
 8006e08:	4628      	mov	r0, r5
 8006e0a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006e0e:	f000 b817 	b.w	8006e40 <_kill_r>
 8006e12:	2b01      	cmp	r3, #1
 8006e14:	d00a      	beq.n	8006e2c <_raise_r+0x4c>
 8006e16:	1c59      	adds	r1, r3, #1
 8006e18:	d103      	bne.n	8006e22 <_raise_r+0x42>
 8006e1a:	2316      	movs	r3, #22
 8006e1c:	6003      	str	r3, [r0, #0]
 8006e1e:	2001      	movs	r0, #1
 8006e20:	e7e7      	b.n	8006df2 <_raise_r+0x12>
 8006e22:	2100      	movs	r1, #0
 8006e24:	4620      	mov	r0, r4
 8006e26:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8006e2a:	4798      	blx	r3
 8006e2c:	2000      	movs	r0, #0
 8006e2e:	e7e0      	b.n	8006df2 <_raise_r+0x12>

08006e30 <raise>:
 8006e30:	4b02      	ldr	r3, [pc, #8]	@ (8006e3c <raise+0xc>)
 8006e32:	4601      	mov	r1, r0
 8006e34:	6818      	ldr	r0, [r3, #0]
 8006e36:	f7ff bfd3 	b.w	8006de0 <_raise_r>
 8006e3a:	bf00      	nop
 8006e3c:	20000180 	.word	0x20000180

08006e40 <_kill_r>:
 8006e40:	b538      	push	{r3, r4, r5, lr}
 8006e42:	2300      	movs	r3, #0
 8006e44:	4d06      	ldr	r5, [pc, #24]	@ (8006e60 <_kill_r+0x20>)
 8006e46:	4604      	mov	r4, r0
 8006e48:	4608      	mov	r0, r1
 8006e4a:	4611      	mov	r1, r2
 8006e4c:	602b      	str	r3, [r5, #0]
 8006e4e:	f7fb fd76 	bl	800293e <_kill>
 8006e52:	1c43      	adds	r3, r0, #1
 8006e54:	d102      	bne.n	8006e5c <_kill_r+0x1c>
 8006e56:	682b      	ldr	r3, [r5, #0]
 8006e58:	b103      	cbz	r3, 8006e5c <_kill_r+0x1c>
 8006e5a:	6023      	str	r3, [r4, #0]
 8006e5c:	bd38      	pop	{r3, r4, r5, pc}
 8006e5e:	bf00      	nop
 8006e60:	20000540 	.word	0x20000540

08006e64 <_getpid_r>:
 8006e64:	f7fb bd64 	b.w	8002930 <_getpid>

08006e68 <__swhatbuf_r>:
 8006e68:	b570      	push	{r4, r5, r6, lr}
 8006e6a:	460c      	mov	r4, r1
 8006e6c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006e70:	4615      	mov	r5, r2
 8006e72:	2900      	cmp	r1, #0
 8006e74:	461e      	mov	r6, r3
 8006e76:	b096      	sub	sp, #88	@ 0x58
 8006e78:	da0c      	bge.n	8006e94 <__swhatbuf_r+0x2c>
 8006e7a:	89a3      	ldrh	r3, [r4, #12]
 8006e7c:	2100      	movs	r1, #0
 8006e7e:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8006e82:	bf14      	ite	ne
 8006e84:	2340      	movne	r3, #64	@ 0x40
 8006e86:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8006e8a:	2000      	movs	r0, #0
 8006e8c:	6031      	str	r1, [r6, #0]
 8006e8e:	602b      	str	r3, [r5, #0]
 8006e90:	b016      	add	sp, #88	@ 0x58
 8006e92:	bd70      	pop	{r4, r5, r6, pc}
 8006e94:	466a      	mov	r2, sp
 8006e96:	f000 f849 	bl	8006f2c <_fstat_r>
 8006e9a:	2800      	cmp	r0, #0
 8006e9c:	dbed      	blt.n	8006e7a <__swhatbuf_r+0x12>
 8006e9e:	9901      	ldr	r1, [sp, #4]
 8006ea0:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8006ea4:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8006ea8:	4259      	negs	r1, r3
 8006eaa:	4159      	adcs	r1, r3
 8006eac:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8006eb0:	e7eb      	b.n	8006e8a <__swhatbuf_r+0x22>

08006eb2 <__smakebuf_r>:
 8006eb2:	898b      	ldrh	r3, [r1, #12]
 8006eb4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006eb6:	079d      	lsls	r5, r3, #30
 8006eb8:	4606      	mov	r6, r0
 8006eba:	460c      	mov	r4, r1
 8006ebc:	d507      	bpl.n	8006ece <__smakebuf_r+0x1c>
 8006ebe:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8006ec2:	6023      	str	r3, [r4, #0]
 8006ec4:	6123      	str	r3, [r4, #16]
 8006ec6:	2301      	movs	r3, #1
 8006ec8:	6163      	str	r3, [r4, #20]
 8006eca:	b003      	add	sp, #12
 8006ecc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006ece:	466a      	mov	r2, sp
 8006ed0:	ab01      	add	r3, sp, #4
 8006ed2:	f7ff ffc9 	bl	8006e68 <__swhatbuf_r>
 8006ed6:	9f00      	ldr	r7, [sp, #0]
 8006ed8:	4605      	mov	r5, r0
 8006eda:	4639      	mov	r1, r7
 8006edc:	4630      	mov	r0, r6
 8006ede:	f7fe fdb7 	bl	8005a50 <_malloc_r>
 8006ee2:	b948      	cbnz	r0, 8006ef8 <__smakebuf_r+0x46>
 8006ee4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006ee8:	059a      	lsls	r2, r3, #22
 8006eea:	d4ee      	bmi.n	8006eca <__smakebuf_r+0x18>
 8006eec:	f023 0303 	bic.w	r3, r3, #3
 8006ef0:	f043 0302 	orr.w	r3, r3, #2
 8006ef4:	81a3      	strh	r3, [r4, #12]
 8006ef6:	e7e2      	b.n	8006ebe <__smakebuf_r+0xc>
 8006ef8:	89a3      	ldrh	r3, [r4, #12]
 8006efa:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8006efe:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8006f02:	81a3      	strh	r3, [r4, #12]
 8006f04:	9b01      	ldr	r3, [sp, #4]
 8006f06:	6020      	str	r0, [r4, #0]
 8006f08:	b15b      	cbz	r3, 8006f22 <__smakebuf_r+0x70>
 8006f0a:	4630      	mov	r0, r6
 8006f0c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006f10:	f000 f81e 	bl	8006f50 <_isatty_r>
 8006f14:	b128      	cbz	r0, 8006f22 <__smakebuf_r+0x70>
 8006f16:	89a3      	ldrh	r3, [r4, #12]
 8006f18:	f023 0303 	bic.w	r3, r3, #3
 8006f1c:	f043 0301 	orr.w	r3, r3, #1
 8006f20:	81a3      	strh	r3, [r4, #12]
 8006f22:	89a3      	ldrh	r3, [r4, #12]
 8006f24:	431d      	orrs	r5, r3
 8006f26:	81a5      	strh	r5, [r4, #12]
 8006f28:	e7cf      	b.n	8006eca <__smakebuf_r+0x18>
	...

08006f2c <_fstat_r>:
 8006f2c:	b538      	push	{r3, r4, r5, lr}
 8006f2e:	2300      	movs	r3, #0
 8006f30:	4d06      	ldr	r5, [pc, #24]	@ (8006f4c <_fstat_r+0x20>)
 8006f32:	4604      	mov	r4, r0
 8006f34:	4608      	mov	r0, r1
 8006f36:	4611      	mov	r1, r2
 8006f38:	602b      	str	r3, [r5, #0]
 8006f3a:	f7fb fd5f 	bl	80029fc <_fstat>
 8006f3e:	1c43      	adds	r3, r0, #1
 8006f40:	d102      	bne.n	8006f48 <_fstat_r+0x1c>
 8006f42:	682b      	ldr	r3, [r5, #0]
 8006f44:	b103      	cbz	r3, 8006f48 <_fstat_r+0x1c>
 8006f46:	6023      	str	r3, [r4, #0]
 8006f48:	bd38      	pop	{r3, r4, r5, pc}
 8006f4a:	bf00      	nop
 8006f4c:	20000540 	.word	0x20000540

08006f50 <_isatty_r>:
 8006f50:	b538      	push	{r3, r4, r5, lr}
 8006f52:	2300      	movs	r3, #0
 8006f54:	4d05      	ldr	r5, [pc, #20]	@ (8006f6c <_isatty_r+0x1c>)
 8006f56:	4604      	mov	r4, r0
 8006f58:	4608      	mov	r0, r1
 8006f5a:	602b      	str	r3, [r5, #0]
 8006f5c:	f7fb fd5d 	bl	8002a1a <_isatty>
 8006f60:	1c43      	adds	r3, r0, #1
 8006f62:	d102      	bne.n	8006f6a <_isatty_r+0x1a>
 8006f64:	682b      	ldr	r3, [r5, #0]
 8006f66:	b103      	cbz	r3, 8006f6a <_isatty_r+0x1a>
 8006f68:	6023      	str	r3, [r4, #0]
 8006f6a:	bd38      	pop	{r3, r4, r5, pc}
 8006f6c:	20000540 	.word	0x20000540

08006f70 <_init>:
 8006f70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006f72:	bf00      	nop
 8006f74:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006f76:	bc08      	pop	{r3}
 8006f78:	469e      	mov	lr, r3
 8006f7a:	4770      	bx	lr

08006f7c <_fini>:
 8006f7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006f7e:	bf00      	nop
 8006f80:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006f82:	bc08      	pop	{r3}
 8006f84:	469e      	mov	lr, r3
 8006f86:	4770      	bx	lr
